    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* baltzo_localtimeoffsetutil.t/assume @ 0x412bd0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::baltzo::TimeZoneUtil.convertLocalToLocalTime_BloombergLP::baltzo::LocalDatetime__char_const__BloombergLP::bdlt::Datetime_const__char_const__BloombergLP::baltzo::DstPolicy::Enum_ ()         | int64_t method_BloombergLP::baltzo::TimeZoneUtil_convertLocalToLocalTime_BloombergLP::baltzo::LocalDatetime_char_const_BloombergLP::bdlt::Datetime_const_char_const_BloombergLP::baltzo::DstPolicy::Enum_ (int64_t arg5, int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     char * var_8h;
                                                                                                                                                                                                                             |     char * var_10h;
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     char * var_20h;
                                                                                                                                                                                                                             |     uint32_t var_28h;
                                                                                                                                                                                                                             |     int64_t var_30h;
                                                                                                                                                                                                                             |     int64_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     r8 = arg5;
                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* BloombergLP::baltzo::TimeZoneUtil::convertLocalToLocalTime(BloombergLP::baltzo::LocalDatetime*, char const*, BloombergLP::bdlt::Datetime const&, char const*, BloombergLP::baltzo::DstPolicy::Enum) */
    0x00412bd0 push rbp                                                                                                                                                                                                      |     
    0x00412bd1 push r15                                                                                                                                                                                                      |     
    0x00412bd3 push r14                                                                                                                                                                                                      |     
    0x00412bd5 push rbx                                                                                                                                                                                                      |     
    0x00412bd6 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x00412bda mov rbp, rsi                                                                                                                                                                                                  |     
    0x00412bdd mov rbx, rdi                                                                                                                                                                                                  |     rbx = rdi;
    0x00412be0 movabs rax, 0x800000141dd76000                                                                                                                                                                                |     rax = 0x800000141dd76000;
    0x00412bea mov qword [rsp + 0x38], rax                                                                                                                                                                                   |     *((rsp + 0x38)) = rax;
    0x00412bef mov dword [rsp + 0x40], 0                                                                                                                                                                                     |     *((rsp + 0x40)) = 0;
    0x00412bf7 lea rdi, [rsp + 0x38]                                                                                                                                                                                         |     
    0x00412bfc call 0x412d50                                                                                                                                                                                                 |     eax = BloombergLP::baltzo::TimeZoneUtil::convertLocalToLocalTime(BloombergLP::bdlt::DatetimeTz*,char const*,BloombergLP::bdlt::Datetimeconst&,char const*,BloombergLP::baltzo::DstPolicy::Enum) (rsp + 0x38, rsi, rdx, rcx, r8);
    0x00412c01 mov r14d, eax                                                                                                                                                                                                 |     r14d = eax;
    0x00412c04 test eax, eax                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (eax != 0) {
    0x00412c06 jne 0x412c92                                                                                                                                                                                                  |         goto label_0;
                                                                                                                                                                                                                             |     }
    0x00412c0c mov rax, qword [rsp + 0x38]                                                                                                                                                                                   |     rax = *((rsp + 0x38));
    0x00412c11 mov qword [rbx], rax                                                                                                                                                                                          |     *(rbx) = rax;
    0x00412c14 test rax, rax                                                                                                                                                                                                 |     
    0x00412c17 jns 0x412ca0                                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     while (1) {
    0x00412c1d mov qword [rbx], rax                                                                                                                                                                                          |         *(rbx) = rax;
    0x00412c20 mov eax, dword [rsp + 0x40]                                                                                                                                                                                   |         eax = *((rsp + 0x40));
    0x00412c24 mov dword [rbx + 8], eax                                                                                                                                                                                      |         *((rbx + 8)) = eax;
    0x00412c27 mov rax, qword [rbx + 0x38]                                                                                                                                                                                   |         rax = *((rbx + 0x38));
    0x00412c2b add rbx, 0x10                                                                                                                                                                                                 |         rbx += 0x10;
    0x00412c2f mov qword [rsp + 8], 0                                                                                                                                                                                        |         *((rsp + 8)) = 0;
    0x00412c38 mov qword [rsp + 0x28], 0x17                                                                                                                                                                                  |         *((rsp + 0x28)) = 0x17;
    0x00412c41 mov qword [rsp + 0x30], rax                                                                                                                                                                                   |         *((rsp + 0x30)) = rax;
    0x00412c46 mov rdi, rbp                                                                                                                                                                                                  |         
    0x00412c49 call 0x4066d0                                                                                                                                                                                                 |         rax = strlen (rbp);
    0x00412c4e mov qword [rsp + 0x20], 0                                                                                                                                                                                     |         *((rsp + 0x20)) = 0;
    0x00412c57 lea r15, [rsp + 8]                                                                                                                                                                                            |         r15 = rsp + 8;
    0x00412c5c mov ecx, 0x459b80                                                                                                                                                                                             |         
    0x00412c61 mov rdi, r15                                                                                                                                                                                                  |         
    0x00412c64 mov rsi, rbp                                                                                                                                                                                                  |         
    0x00412c67 mov rdx, rax                                                                                                                                                                                                  |         
    0x00412c6a call 0x4350b0                                                                                                                                                                                                 |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (r15, rbp, rax, "string<...>::assign(char*...): string too long");
    0x00412c6f mov rdi, r15                                                                                                                                                                                                  |         
    0x00412c72 mov rsi, rbx                                                                                                                                                                                                  |         
    0x00412c75 call 0x437640                                                                                                                                                                                                 |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::swap(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&) (r15, rbx);
    0x00412c7a cmp qword [rsp + 0x28], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rsp + 0x28)) != 0x17) {
    0x00412c80 je 0x412c92                                                                                                                                                                                                   |             
    0x00412c82 mov rsi, qword [rsp + 8]                                                                                                                                                                                      |             rsi = *((rsp + 8));
    0x00412c87 mov rdi, qword [rsp + 0x30]                                                                                                                                                                                   |             rdi = *((rsp + 0x30));
    0x00412c8c mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x00412c8f call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
                                                                                                                                                                                                                             | label_0:
    0x00412c92 mov eax, r14d                                                                                                                                                                                                 |         eax = r14d;
    0x00412c95 add rsp, 0x48                                                                                                                                                                                                 |         
    0x00412c99 pop rbx                                                                                                                                                                                                       |         
    0x00412c9a pop r14                                                                                                                                                                                                       |         
    0x00412c9c pop r15                                                                                                                                                                                                       |         
    0x00412c9e pop rbp                                                                                                                                                                                                       |         
    0x00412c9f ret                                                                                                                                                                                                           |         return rax;
    0x00412ca0 mov edi, 0x694844                                                                                                                                                                                             |         
    0x00412ca5 call 0x4324c0                                                                                                                                                                                                 |         eax = BloombergLP::bsls::Review::updateCount(BloombergLP::bsls::Atomic_TypeTraits<BloombergLP::bsls::AtomicOperations_ALL_ALL_ClangIntrinsics>::Int*) (method.BloombergLP::bdlt::Datetime.validateAndTraceLogRepresentation___const::lambda__1::operator_____const::count);
    0x00412caa mov qword [rsp + 8], 0x459aab                                                                                                                                                                                 |         *((rsp + 8)) = "detected invalid 'bdlt::Datetime'; see TEAM 579660115";
    0x00412cb3 mov qword [rsp + 0x10], 0x459ae1                                                                                                                                                                              |         *((rsp + 0x10)) = "/home/parsa/experiments/assumptions/crush/ccm-assume/groups/bdl/bdlt/bdlt_datetime.h";
    0x00412cbc mov dword [rsp + 0x18], 0x466                                                                                                                                                                                 |         *((rsp + 0x18)) = 0x466;
    0x00412cc4 mov qword [rsp + 0x20], 0x47543a                                                                                                                                                                              |         *((rsp + 0x20)) = "R-INV";
    0x00412ccd mov dword [rsp + 0x28], eax                                                                                                                                                                                   |         *((rsp + 0x28)) = eax;
    0x00412cd1 lea rdi, [rsp + 8]                                                                                                                                                                                            |         rdi = rsp + 8;
    0x00412cd6 call 0x4324e0                                                                                                                                                                                                 |         BloombergLP::bsls::Review::invokeHandler(BloombergLP::bsls::ReviewViolationconst&) ();
    0x00412cdb mov rax, qword [rbx]                                                                                                                                                                                          |         rax = *(rbx);
    0x00412cde mov rcx, rax                                                                                                                                                                                                  |         rcx = *(rbx);
    0x00412ce1 shr rcx, 0x20                                                                                                                                                                                                 |         rcx >>= 0x20;
    0x00412ce5 shl rax, 0x25                                                                                                                                                                                                 |         rax <<= 0x25;
    0x00412ce9 movabs rdx, 0x7fffffe000000000                                                                                                                                                                                |         rdx = 0x7fffffe000000000;
    0x00412cf3 add rdx, rax                                                                                                                                                                                                  |         rdx += rax;
    0x00412cf6 imul rcx, rcx, 0x3e8                                                                                                                                                                                          |         rcx *= 0x3e8;
    0x00412cfd movabs rax, 0x8000000000000000                                                                                                                                                                                |         rax = 0x8000000000000000;
    0x00412d07 or rax, rdx                                                                                                                                                                                                   |         rax |= rdx;
    0x00412d0a or rax, rcx                                                                                                                                                                                                   |         rax |= rcx;
    0x00412d0d jmp 0x412c1d                                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                             | }
