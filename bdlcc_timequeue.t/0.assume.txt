    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlcc_timequeue.t/assume @ 0x42da20 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::TimeQueue_int___int__int__int__int___BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int___int ()           | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::TimeQueue_int_int_int_int_int_BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int_int (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int), BloombergLP::bdlf::Bind_BoundTuple5<BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int), BloombergLP::bdlf::Bind_BoundTuple5<BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int> > const&, BloombergLP::bslma::Allocator*) */
    0x0042da20 push rbp                                                                                                                                                                                                                                                              |     
    0x0042da21 push r15                                                                                                                                                                                                                                                              |     
    0x0042da23 push r14                                                                                                                                                                                                                                                              |     
    0x0042da25 push rbx                                                                                                                                                                                                                                                              |     
    0x0042da26 sub rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x0042da2a mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0042da2d mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x0042da30 mov r15, rdi                                                                                                                                                                                                                                                          |     r15 = rdi;
    0x0042da33 mov rax, qword [rdx]                                                                                                                                                                                                                                                  |     rax = *(rdx);
    0x0042da36 mov esi, 0x58                                                                                                                                                                                                                                                         |     esi = 0x58;
    0x0042da3b mov rdi, rdx                                                                                                                                                                                                                                                          |     rdi = rdx;
    0x0042da3e call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x0042da41 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x0042da44 mov qword [rax], 0x42dbb0                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::TimeQueue_int___int__int__int__int___BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int___int__int__int_;
    0x0042da4b mov rax, qword [rbp]                                                                                                                                                                                                                                                  |     rax = *(rbp);
    0x0042da4f mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x0042da53 mov rax, qword [rbp + 8]                                                                                                                                                                                                                                              |     rax = *((rbp + 8));
    0x0042da57 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x0042da5b mov eax, dword [rbp + 0x10]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x10));
    0x0042da5e mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                           |     *((rbx + 0x18)) = eax;
    0x0042da61 mov eax, dword [rbp + 0x14]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x14));
    0x0042da64 mov dword [rbx + 0x1c], eax                                                                                                                                                                                                                                           |     *((rbx + 0x1c)) = eax;
    0x0042da67 mov eax, dword [rbp + 0x18]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x18));
    0x0042da6a mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                           |     *((rbx + 0x20)) = eax;
    0x0042da6d mov eax, dword [rbp + 0x1c]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x1c));
    0x0042da70 mov dword [rbx + 0x24], eax                                                                                                                                                                                                                                           |     *((rbx + 0x24)) = eax;
    0x0042da73 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                                 |     
    0x0042da77 mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                             |     *((rbx + 0x28)) = 0;
    0x0042da7f mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                           |     *((rbx + 0x50)) = r14;
    0x0042da83 movaps xmm0, xmmword [rip + 0x2f146]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x0042da8a movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x0042da8e mov ecx, 0x45eefd                                                                                                                                                                                                                                                     |     
    0x0042da93 xor esi, esi                                                                                                                                                                                                                                                          |     
    0x0042da95 xor edx, edx                                                                                                                                                                                                                                                          |     
    0x0042da97 call 0x439930                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0042da9c mov rdi, rsp                                                                                                                                                                                                                                                          |     
    0x0042da9f call 0x436360                                                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0042daa4 mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x0042daa7 mov edx, 0x435ec0                                                                                                                                                                                                                                                     |     
    0x0042daac mov rdi, r15                                                                                                                                                                                                                                                          |     
    0x0042daaf mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x0042dab2 call 0x4369c0                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0042dab7 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0042dab9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x0042dabf je 0x42dad1                                                                                                                                                                                                                                                           |         
    0x0042dac1 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x0042dac6 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x0042dacb mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0042dace call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0042dad1 test ebp, ebp                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x0042dad3 je 0x42dafe                                                                                                                                                                                                                                                           |         
    0x0042dad5 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x48)) != 0x17) {
    0x0042dada je 0x42daea                                                                                                                                                                                                                                                           |             
    0x0042dadc mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x28));
    0x0042dae0 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x50));
    0x0042dae4 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x0042dae7 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x0042daea mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x0042daf2 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x0042daf5 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x0042daf8 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0042dafb call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0042dafe mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x0042db00 add rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x0042db04 pop rbx                                                                                                                                                                                                                                                               |     
    0x0042db05 pop r14                                                                                                                                                                                                                                                               |     
    0x0042db07 pop r15                                                                                                                                                                                                                                                               |     
    0x0042db09 pop rbp                                                                                                                                                                                                                                                               |     
    0x0042db0a ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
