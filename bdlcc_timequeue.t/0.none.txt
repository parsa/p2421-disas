    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlcc_timequeue.t/none @ 0x42da30 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::TimeQueue_int___int__int__int__int___BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int___int ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::TimeQueue_int_int_int_int_int_BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int_int (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int), BloombergLP::bdlf::Bind_BoundTuple5<BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int), BloombergLP::bdlf::Bind_BoundTuple5<BloombergLP::bdlcc::TimeQueue<int>*, int, int, int, int> > const&, BloombergLP::bslma::Allocator*) */
    0x0042da30 push rbp                                                                                                                                                                                                                                                              |     
    0x0042da31 push r15                                                                                                                                                                                                                                                              |     
    0x0042da33 push r14                                                                                                                                                                                                                                                              |     
    0x0042da35 push rbx                                                                                                                                                                                                                                                              |     
    0x0042da36 sub rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x0042da3a mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0042da3d mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x0042da40 mov r15, rdi                                                                                                                                                                                                                                                          |     r15 = rdi;
    0x0042da43 test rdx, rdx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rdx == 0) {
    0x0042da46 jne 0x42da5c                                                                                                                                                                                                                                                          |         
    0x0042da48 mov r14, qword [rip + 0x26b051]                                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0042da4f test r14, r14                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x0042da52 jne 0x42da5c                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x0042da54 call 0x434e10                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0042da59 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x0042da5c mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x0042da5f mov esi, 0x58                                                                                                                                                                                                                                                         |     esi = 0x58;
    0x0042da64 mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x0042da67 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x0042da6a mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x0042da6d mov qword [rax], 0x42dbe0                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::TimeQueue_int___int__int__int__int___BloombergLP::bdlf::Bind_BoundTuple5_BloombergLP::bdlcc::TimeQueue_int___int__int__int_;
    0x0042da74 mov rax, qword [rbp]                                                                                                                                                                                                                                                  |     rax = *(rbp);
    0x0042da78 mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x0042da7c mov rax, qword [rbp + 8]                                                                                                                                                                                                                                              |     rax = *((rbp + 8));
    0x0042da80 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x0042da84 mov eax, dword [rbp + 0x10]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x10));
    0x0042da87 mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                           |     *((rbx + 0x18)) = eax;
    0x0042da8a mov eax, dword [rbp + 0x14]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x14));
    0x0042da8d mov dword [rbx + 0x1c], eax                                                                                                                                                                                                                                           |     *((rbx + 0x1c)) = eax;
    0x0042da90 mov eax, dword [rbp + 0x18]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x18));
    0x0042da93 mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                           |     *((rbx + 0x20)) = eax;
    0x0042da96 mov eax, dword [rbp + 0x1c]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x1c));
    0x0042da99 mov dword [rbx + 0x24], eax                                                                                                                                                                                                                                           |     *((rbx + 0x24)) = eax;
    0x0042da9c lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                                 |     
    0x0042daa0 mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                             |     *((rbx + 0x28)) = 0;
    0x0042daa8 mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                           |     *((rbx + 0x50)) = r14;
    0x0042daac movaps xmm0, xmmword [rip + 0x2f1bd]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x0042dab3 movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x0042dab7 mov ecx, 0x45ef99                                                                                                                                                                                                                                                     |     
    0x0042dabc xor esi, esi                                                                                                                                                                                                                                                          |     
    0x0042dabe xor edx, edx                                                                                                                                                                                                                                                          |     
    0x0042dac0 call 0x4399e0                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0042dac5 mov rdi, rsp                                                                                                                                                                                                                                                          |     
    0x0042dac8 call 0x4363f0                                                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0042dacd mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x0042dad0 mov edx, 0x435f50                                                                                                                                                                                                                                                     |     
    0x0042dad5 mov rdi, r15                                                                                                                                                                                                                                                          |     
    0x0042dad8 mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x0042dadb call 0x436a50                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0042dae0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0042dae2 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x0042dae8 je 0x42dafa                                                                                                                                                                                                                                                           |         
    0x0042daea mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x0042daef mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x0042daf4 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0042daf7 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0042dafa test ebp, ebp                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x0042dafc je 0x42db27                                                                                                                                                                                                                                                           |         
    0x0042dafe cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x48)) != 0x17) {
    0x0042db03 je 0x42db13                                                                                                                                                                                                                                                           |             
    0x0042db05 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x28));
    0x0042db09 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x50));
    0x0042db0d mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x0042db10 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x0042db13 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x0042db1b mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x0042db1e mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x0042db21 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0042db24 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0042db27 mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x0042db29 add rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x0042db2d pop rbx                                                                                                                                                                                                                                                               |     
    0x0042db2e pop r14                                                                                                                                                                                                                                                               |     
    0x0042db30 pop r15                                                                                                                                                                                                                                                               |     
    0x0042db32 pop rbp                                                                                                                                                                                                                                                               |     
    0x0042db33 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
