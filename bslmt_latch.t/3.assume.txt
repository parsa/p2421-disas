    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_latch.t/assume @ 0x4095d0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Latch__HalfClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::Latch__std::__1::chrono::time_point_HalfClock__std::__1::chrono::dur ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Latch_HalfClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::Latch_std::_1::chrono::time_point_HalfClock_std::_1::chrono::dur (uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::Latch, HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::Latch*, std::__1::chrono::time_point<HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x004095d0 push rbp                                                                                                                                                                                                                                                              |     
    0x004095d1 push r15                                                                                                                                                                                                                                                              |     
    0x004095d3 push r14                                                                                                                                                                                                                                                              |     
    0x004095d5 push r13                                                                                                                                                                                                                                                              |     
    0x004095d7 push r12                                                                                                                                                                                                                                                              |     
    0x004095d9 push rbx                                                                                                                                                                                                                                                              |     
    0x004095da sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x004095de mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x004095e1 mov r14, rdi                                                                                                                                                                                                                                                          |     r14 = rdi;
    0x004095e4 call 0x403d30                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x004095e9 mov r15, rax                                                                                                                                                                                                                                                          |     r15 = rax;
    0x004095ec shr r15, 0x3f                                                                                                                                                                                                                                                         |     r15 >>= 0x3f;
    0x004095f0 add r15, rax                                                                                                                                                                                                                                                          |     r15 += rax;
    0x004095f3 sar r15, 1                                                                                                                                                                                                                                                            |     r15 >>= 1;
    0x004095f6 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x004095fb cmp r15, qword [rbx]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (r15 >= *(rbx)) {
    0x004095fe jge 0x4096a0                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00409604 movabs r13, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r13 = 0x112e0be826d694b3;
    0x0040960e mov r12, rsp                                                                                                                                                                                                                                                          |     r12 = rsp;
    0x00409611 lea rbp, [rsp + 0x10]                                                                                                                                                                                                                                                 |     rbp = rsp + 0x10;
    0x00409616 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00409620 cmp dword [r14 + 0x58], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((r14 + 0x58)) == 1) {
    0x00409625 jne 0x409630                                                                                                                                                                                                                                                          |             
    0x00409627 call 0x430f80                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x0040962c jmp 0x409635                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00409630 call 0x431010                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00409635 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x00409639 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x0040963d mov rcx, qword [rbx]                                                                                                                                                                                                                                                  |         rcx = *(rbx);
    0x00409640 sub rcx, r15                                                                                                                                                                                                                                                          |         rcx -= r15;
    0x00409643 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x00409646 imul r13                                                                                                                                                                                                                                                              |         rdx:rax = rax * r13;
    0x00409649 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x0040964c shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00409650 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x00409654 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00409657 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x0040965d add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x0040965f mov rdi, r12                                                                                                                                                                                                                                                          |         
    0x00409662 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x00409665 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x00409667 call 0x431130                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r12, rdx, ecx);
    0x0040966c movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x0040966f movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x00409674 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x00409677 mov rsi, rbp                                                                                                                                                                                                                                                          |         
    0x0040967a call 0x409bc0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::Latch::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r14, rbp);
    0x0040967f cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x00409682 jne 0x4096a0                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00409684 call 0x403d30                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x00409689 mov r15, rax                                                                                                                                                                                                                                                          |         r15 = rax;
    0x0040968c shr r15, 0x3f                                                                                                                                                                                                                                                         |         r15 >>= 0x3f;
    0x00409690 add r15, rax                                                                                                                                                                                                                                                          |         r15 += rax;
    0x00409693 sar r15, 1                                                                                                                                                                                                                                                            |         r15 >>= 1;
    0x00409696 cmp r15, qword [rbx]                                                                                                                                                                                                                                                  |         
    0x00409699 jl 0x409620                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (r15 < *(rbx));
    0x0040969b mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                     | label_0:
    0x004096a0 add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x004096a4 pop rbx                                                                                                                                                                                                                                                               |     
    0x004096a5 pop r12                                                                                                                                                                                                                                                               |     
    0x004096a7 pop r13                                                                                                                                                                                                                                                               |     
    0x004096a9 pop r14                                                                                                                                                                                                                                                               |     
    0x004096ab pop r15                                                                                                                                                                                                                                                               |     
    0x004096ad pop rbp                                                                                                                                                                                                                                                               |     
    0x004096ae ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
