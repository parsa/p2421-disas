    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_latch.t/assume @ 0x4096b0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Latch__AnotherClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::Latch__std::__1::chrono::time_point_AnotherClock__std::__1::chron ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Latch_AnotherClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::Latch_std::_1::chrono::time_point_AnotherClock_std::_1::chron (uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::Latch, AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::Latch*, std::__1::chrono::time_point<AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x004096b0 push rbp                                                                                                                                                                                                                                                              |     
    0x004096b1 push r15                                                                                                                                                                                                                                                              |     
    0x004096b3 push r14                                                                                                                                                                                                                                                              |     
    0x004096b5 push r13                                                                                                                                                                                                                                                              |     
    0x004096b7 push r12                                                                                                                                                                                                                                                              |     
    0x004096b9 push rbx                                                                                                                                                                                                                                                              |     
    0x004096ba sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x004096be mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x004096c1 mov r13, rdi                                                                                                                                                                                                                                                          |     r13 = rdi;
    0x004096c4 call 0x403d30                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x004096c9 mov rbp, rax                                                                                                                                                                                                                                                          |     
    0x004096cc add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |     rbp += 0xffffffffffffd8f0;
    0x004096d3 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x004096d8 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (rbp >= *(rbx)) {
    0x004096db jge 0x40977d                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x004096e1 movabs r14, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r14 = 0x112e0be826d694b3;
    0x004096eb mov r15, rsp                                                                                                                                                                                                                                                          |     r15 = rsp;
    0x004096ee lea r12, [rsp + 0x10]                                                                                                                                                                                                                                                 |     r12 = rsp + 0x10;
    0x004096f3 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x004096fd nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00409700 cmp dword [r13 + 0x58], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((r13 + 0x58)) == 1) {
    0x00409705 jne 0x409710                                                                                                                                                                                                                                                          |             
    0x00409707 call 0x430f80                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x0040970c jmp 0x409715                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00409710 call 0x431010                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00409715 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x00409719 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x0040971d mov rcx, qword [rbx]                                                                                                                                                                                                                                                  |         rcx = *(rbx);
    0x00409720 sub rcx, rbp                                                                                                                                                                                                                                                          |         rcx -= rbp;
    0x00409723 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x00409726 imul r14                                                                                                                                                                                                                                                              |         rdx:rax = rax * r14;
    0x00409729 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x0040972c shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00409730 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x00409734 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00409737 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x0040973d add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x0040973f mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x00409742 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x00409745 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x00409747 call 0x431130                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r15, rdx, ecx);
    0x0040974c movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x0040974f movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x00409754 mov rdi, r13                                                                                                                                                                                                                                                          |         
    0x00409757 mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x0040975a call 0x409bc0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::Latch::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r13, r12);
    0x0040975f cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x00409762 jne 0x40977d                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00409764 call 0x403d30                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x00409769 mov rbp, rax                                                                                                                                                                                                                                                          |         
    0x0040976c add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |         rbp += 0xffffffffffffd8f0;
    0x00409773 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |         
    0x00409776 jl 0x409700                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rbp < *(rbx));
    0x00409778 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                     | label_0:
    0x0040977d add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00409781 pop rbx                                                                                                                                                                                                                                                               |     
    0x00409782 pop r12                                                                                                                                                                                                                                                               |     
    0x00409784 pop r13                                                                                                                                                                                                                                                               |     
    0x00409786 pop r14                                                                                                                                                                                                                                                               |     
    0x00409788 pop r15                                                                                                                                                                                                                                                               |     
    0x0040978a pop rbp                                                                                                                                                                                                                                                               |     
    0x0040978b ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
