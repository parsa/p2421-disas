    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_singleproducerqueue.t/none @ 0x411da0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SingleProducerQueue_my_WorkRequest____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::SingleProducerQueue ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::SingleProducerQueue_my_WorkRequest_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::SingleProducerQueue (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SingleProducerQueue<my_WorkRequest>*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlcc::SingleProducerQueue<my_WorkRequest>*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SingleProducerQueue<my_WorkRequest>*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlcc::SingleProducerQueue<my_WorkRequest>*> > const&, BloombergLP::bslma::Allocator*) */
    0x00411da0 push rbp                                                                                                                                                                                                                                                          |     
    0x00411da1 push r15                                                                                                                                                                                                                                                          |     
    0x00411da3 push r14                                                                                                                                                                                                                                                          |     
    0x00411da5 push r13                                                                                                                                                                                                                                                          |     
    0x00411da7 push r12                                                                                                                                                                                                                                                          |     
    0x00411da9 push rbx                                                                                                                                                                                                                                                          |     
    0x00411daa push rax                                                                                                                                                                                                                                                          |     
    0x00411dab mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x00411dae mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00411db1 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00411db4 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00411db8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00411dbd je 0x411dc5                                                                                                                                                                                                                                                       |         
    0x00411dbf mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x00411dc3 jmp 0x411dc9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00411dc5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00411dc9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x00411dcd test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x00411dd0 jne 0x411de6                                                                                                                                                                                                                                                      |         
    0x00411dd2 mov r14, qword [rip + 0x245d2f]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00411dd9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x00411ddc jne 0x411de6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x00411dde call 0x4149e0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00411de3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00411de6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00411de9 mov esi, 0x48                                                                                                                                                                                                                                                     |     esi = 0x48;
    0x00411dee mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00411df1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00411df4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00411df7 mov qword [rax], 0x411f10                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SingleProducerQueue_my_WorkRequest____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::SingleProducerQueue_my_WorkReq;
    0x00411dfe mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00411e02 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00411e06 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x00411e0b mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00411e0f lea rdi, [rbx + 0x18]                                                                                                                                                                                                                                             |     
    0x00411e13 mov qword [rbx + 0x18], 0                                                                                                                                                                                                                                         |     *((rbx + 0x18)) = 0;
    0x00411e1b mov qword [rbx + 0x40], r14                                                                                                                                                                                                                                       |     *((rbx + 0x40)) = r14;
    0x00411e1f movaps xmm0, xmmword [rip + 0x2ab5a]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00411e26 movups xmmword [rbx + 0x30], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x30], xmm0");
    0x00411e2a mov ecx, 0x43dae3                                                                                                                                                                                                                                                 |     
    0x00411e2f mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x00411e32 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00411e35 call 0x4189c0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x18, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00411e3a mov edx, 0x415900                                                                                                                                                                                                                                                 |     
    0x00411e3f mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x00411e43 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00411e46 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00411e49 call 0x415fd0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00411e4e mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00411e50 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00411e52 je 0x411e7d                                                                                                                                                                                                                                                       |         
    0x00411e54 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x38)) != 0x17) {
    0x00411e59 je 0x411e69                                                                                                                                                                                                                                                       |             
    0x00411e5b mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x18));
    0x00411e5f mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x40));
    0x00411e63 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00411e66 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00411e69 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x00411e71 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00411e74 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00411e77 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00411e7a call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00411e7d mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00411e7f add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00411e83 pop rbx                                                                                                                                                                                                                                                           |     
    0x00411e84 pop r12                                                                                                                                                                                                                                                           |     
    0x00411e86 pop r13                                                                                                                                                                                                                                                           |     
    0x00411e88 pop r14                                                                                                                                                                                                                                                           |     
    0x00411e8a pop r15                                                                                                                                                                                                                                                           |     
    0x00411e8c pop rbp                                                                                                                                                                                                                                                           |     
    0x00411e8d ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
