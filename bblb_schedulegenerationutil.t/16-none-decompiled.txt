    ; assembly                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                             | /* bblb_schedulegenerationutil.t/none @ 0x41eac0 */
                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlc::PackedIntArrayImp_BloombergLP::bdlc::PackedIntArrayImp_Unsigned_.replaceImp_unsigned_long__unsigned_long_ ()           | int64_t method_BloombergLP::bdlc::PackedIntArrayImp_BloombergLP::bdlc::PackedIntArrayImp_Unsigned_replaceImp_unsigned_long_unsigned_long_ (int64_t arg3, int64_t arg1) {
                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                             |     /* BloombergLP::bdlc::PackedIntArrayImp<BloombergLP::bdlc::PackedIntArrayImp_Unsigned>::replaceImp(unsigned long, unsigned long) */
    0x0041eac0 mov eax, dword [rdi + 0x10]                                                                                                                   |     eax = *((rdi + 0x10));
    0x0041eac3 dec eax                                                                                                                                       |     eax--;
    0x0041eac5 cmp eax, 7                                                                                                                                    |     
                                                                                                                                                             |     if (eax <= 7) {
    0x0041eac8 ja 0x41eaee                                                                                                                                   |         
                                                                                                                                                             |         /* switch table (8 cases) at 0x460530 */
    0x0041eaca jmp qword [rax*8 + 0x460530]                                                                                                                  |         
    0x0041ead1 mov rax, qword [rdi]                                                                                                                          |         rax = *(rdi);
    0x0041ead4 mov byte [rax + rsi], dl                                                                                                                      |         *((rax + rsi)) = dl;
    0x0041ead7 ret                                                                                                                                           |         return rax;
    0x0041ead8 mov rax, qword [rdi]                                                                                                                          |         rax = *(rdi);
    0x0041eadb mov word [rax + rsi*2], dx                                                                                                                    |         *((rax + rsi*2)) = dx;
    0x0041eadf ret                                                                                                                                           |         return rax;
    0x0041eae0 mov rax, qword [rdi]                                                                                                                          |         rax = *(rdi);
    0x0041eae3 mov dword [rax + rsi*4], edx                                                                                                                  |         *((rax + rsi*4)) = edx;
    0x0041eae6 ret                                                                                                                                           |         return rax;
    0x0041eae7 mov rax, qword [rdi]                                                                                                                          |         rax = *(rdi);
    0x0041eaea mov qword [rax + rsi*8], rdx                                                                                                                  |         *((rax + rsi*8)) = rdx;
                                                                                                                                                             |     }
    0x0041eaee ret                                                                                                                                           |     return rax;
                                                                                                                                                             | }
