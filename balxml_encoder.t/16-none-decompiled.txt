    ; assembly                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                             | /* balxml_encoder.t/none @ 0x4eff80 */
                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlat_TypeName_Imp.xsdName_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const__int_ ()        | int64_t method_BloombergLP::bdlat_TypeName_Imp_xsdName_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_int_ (uint32_t arg2) {
                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                             |     /* BloombergLP::bdlat_TypeName_Imp::xsdName(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const*, int) */
    0x004eff80 and esi, 7                                                                                                                                    |     esi &= 7;
    0x004eff83 cmp esi, 4                                                                                                                                    |     
                                                                                                                                                             |     if (esi <= 4) {
    0x004eff86 ja 0x4eff93                                                                                                                                   |         
    0x004eff88 mov eax, esi                                                                                                                                  |         eax = esi;
    0x004eff8a mov rax, qword [rax*8 + 0x561178]                                                                                                             |         rax = *((rax*8 + 0x561178));
    0x004eff92 ret                                                                                                                                           |         return rax;
                                                                                                                                                             |     }
    0x004eff93 xor eax, eax                                                                                                                                  |     eax = 0;
    0x004eff95 ret                                                                                                                                           |     return rax;
                                                                                                                                                             | }
