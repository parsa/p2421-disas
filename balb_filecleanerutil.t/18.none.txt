    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* balb_filecleanerutil.t/none @ 0x40b980 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdlma::BufferedSequentialPool.BufferedSequentialPool_char__unsigned_long__unsigned_long__BloombergLP::bsls::BlockGrowth::Strategy__BloombergLP::bsls::Alignment::Strategy__BloombergLP::bslma::Allocator_ ()         | int64_t method_BloombergLP::bdlma::BufferedSequentialPool_BufferedSequentialPool_char_unsigned_long_unsigned_long_BloombergLP::bsls::BlockGrowth::Strategy_BloombergLP::bsls::Alignment::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg_10h, uint32_t arg6, int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     r9 = arg6;
                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*, unsigned long, unsigned long, BloombergLP::bsls::BlockGrowth::Strategy, BloombergLP::bsls::Alignment::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040b980 push rbx                                                                                                                                                                                                                              |     
    0x0040b981 mov rbx, rdi                                                                                                                                                                                                                          |     rbx = rdi;
    0x0040b984 mov rax, qword [rsp + 0x10]                                                                                                                                                                                                           |     rax = *((rsp + 0x10));
    0x0040b989 mov qword [rdi], rsi                                                                                                                                                                                                                  |     *(rdi) = rsi;
    0x0040b98c mov qword [rdi + 8], rdx                                                                                                                                                                                                              |     *((rdi + 8)) = rdx;
    0x0040b990 test r9d, r9d                                                                                                                                                                                                                         |     
    0x0040b993 mov edx, 0xf                                                                                                                                                                                                                          |     edx = 0xf;
                                                                                                                                                                                                                                                     |     if (r9d == 0) {
    0x0040b998 cmove edx, r9d                                                                                                                                                                                                                        |         edx = r9d;
                                                                                                                                                                                                                                                     |     }
    0x0040b99c mov qword [rdi + 0x10], 0                                                                                                                                                                                                             |     *((rdi + 0x10)) = 0;
    0x0040b9a4 mov byte [rdi + 0x18], dl                                                                                                                                                                                                             |     *((rdi + 0x18)) = dl;
    0x0040b9a7 cmp r9d, 2                                                                                                                                                                                                                            |     
    0x0040b9ab mov edx, 1                                                                                                                                                                                                                            |     edx = 1;
    0x0040b9b0 mov esi, 0x10                                                                                                                                                                                                                         |     esi = 0x10;
                                                                                                                                                                                                                                                     |     if (r9d == 2) {
    0x0040b9b5 cmove esi, edx                                                                                                                                                                                                                        |         esi = edx;
                                                                                                                                                                                                                                                     |     }
    0x0040b9b8 mov byte [rdi + 0x19], sil                                                                                                                                                                                                            |     *((rdi + 0x19)) = sil;
    0x0040b9bc mov qword [rdi + 0x20], rcx                                                                                                                                                                                                           |     *((rdi + 0x20)) = rcx;
    0x0040b9c0 mov byte [rdi + 0x28], r8b                                                                                                                                                                                                            |     *((rdi + 0x28)) = r8b;
    0x0040b9c4 mov byte [rdi + 0x29], 0                                                                                                                                                                                                              |     *((rdi + 0x29)) = 0;
    0x0040b9c8 test rax, rax                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (rax == 0) {
    0x0040b9cb jne 0x40b9de                                                                                                                                                                                                                          |         
    0x0040b9cd mov rax, qword [rip + 0x2622fc]                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b9d4 test rax, rax                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                     |         if (rax != 0) {
    0x0040b9d7 jne 0x40b9de                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                     |         }
    0x0040b9d9 call 0x4173a0                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                     | label_0:
    0x0040b9de mov qword [rbx + 0x30], rax                                                                                                                                                                                                           |     *((rbx + 0x30)) = rax;
    0x0040b9e2 pop rbx                                                                                                                                                                                                                               |     
    0x0040b9e3 ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
