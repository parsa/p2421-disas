    ; assembly                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                 | /* balb_filecleanerutil.t/assume @ 0x40bd90 */
                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::bdlma::SequentialPool.SequentialPool_BloombergLP::bsls::BlockGrowth::Strategy__BloombergLP::bsls::Alignment::Strategy__BloombergLP::bslma::Allocator_ ()         | int64_t method_BloombergLP::bdlma::SequentialPool_SequentialPool_BloombergLP::bsls::BlockGrowth::Strategy_BloombergLP::bsls::Alignment::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                 |     /* BloombergLP::bdlma::SequentialPool::SequentialPool(BloombergLP::bsls::BlockGrowth::Strategy, BloombergLP::bsls::Alignment::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040bd90 push rbx                                                                                                                                                                          |     
    0x0040bd91 xor eax, eax                                                                                                                                                                      |     eax = 0;
    0x0040bd93 test esi, esi                                                                                                                                                                     |     
    0x0040bd95 setne al                                                                                                                                                                          |     al = (esi != 0) ? 1 : 0;
    0x0040bd98 test edx, edx                                                                                                                                                                     |     
    0x0040bd9a mov esi, 0xf                                                                                                                                                                      |     esi = 0xf;
                                                                                                                                                                                                 |     if (edx == 0) {
    0x0040bd9f cmove esi, edx                                                                                                                                                                    |         esi = edx;
                                                                                                                                                                                                 |     }
    0x0040bda2 mov rbx, rdi                                                                                                                                                                      |     rbx = rdi;
    0x0040bda5 xorps xmm0, xmm0                                                                                                                                                                  |     __asm ("xorps xmm0, xmm0");
    0x0040bda8 movups xmmword [rdi], xmm0                                                                                                                                                        |     __asm ("movups xmmword [rdi], xmm0");
    0x0040bdab mov qword [rdi + 0x10], 0                                                                                                                                                         |     *((rdi + 0x10)) = 0;
    0x0040bdb3 mov byte [rdi + 0x18], sil                                                                                                                                                        |     *((rdi + 0x18)) = sil;
    0x0040bdb7 cmp edx, 2                                                                                                                                                                        |     
    0x0040bdba mov edx, 1                                                                                                                                                                        |     edx = 1;
    0x0040bdbf mov esi, 0x10                                                                                                                                                                     |     esi = 0x10;
                                                                                                                                                                                                 |     if (edx == 2) {
    0x0040bdc4 cmove esi, edx                                                                                                                                                                    |         esi = edx;
                                                                                                                                                                                                 |     }
    0x0040bdc7 mov byte [rdi + 0x19], sil                                                                                                                                                        |     *((rdi + 0x19)) = sil;
    0x0040bdcb lea rdx, [rdi + 0x20]                                                                                                                                                             |     rdx = rdi + 0x20;
    0x0040bdcf mov qword [rdi + 0x20], 0                                                                                                                                                         |     *((rdi + 0x20)) = 0;
    0x0040bdd7 mov qword [rdi + 0x28], rdx                                                                                                                                                       |     *((rdi + 0x28)) = rdx;
    0x0040bddb movaps xmm1, xmmword [rip + 0x30f5e]                                                                                                                                              |     xmm1 = *(0x0043cd40);
    0x0040bde2 movups xmmword [rdi + 0x1f0], xmm1                                                                                                                                                |     __asm ("movups xmmword [rdi + 0x1f0], xmm1");
    0x0040bde9 shl rax, 8                                                                                                                                                                        |     rax <<= 8;
    0x0040bded movups xmmword [rdi + 0x200], xmm0                                                                                                                                                |     __asm ("movups xmmword [rdi + 0x200], xmm0");
    0x0040bdf4 mov qword [rdi + 0x210], rax                                                                                                                                                      |     *((rdi + 0x210)) = rax;
    0x0040bdfb test rcx, rcx                                                                                                                                                                     |     
                                                                                                                                                                                                 |     if (rcx == 0) {
    0x0040bdfe jne 0x40be14                                                                                                                                                                      |         
    0x0040be00 mov rcx, qword [rip + 0x261ec9]                                                                                                                                                   |         rcx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040be07 test rcx, rcx                                                                                                                                                                     |         
                                                                                                                                                                                                 |         if (rcx != 0) {
    0x0040be0a jne 0x40be14                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                 |         }
    0x0040be0c call 0x4171b0                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040be11 mov rcx, rax                                                                                                                                                                      |         rcx = rax;
                                                                                                                                                                                                 |     }
                                                                                                                                                                                                 | label_0:
    0x0040be14 mov qword [rbx + 0x218], rcx                                                                                                                                                      |     *((rbx + 0x218)) = rcx;
    0x0040be1b pop rbx                                                                                                                                                                           |     
    0x0040be1c ret                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                 | }
