    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* balb_filecleanerutil.t/assume @ 0x40b8a0 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdlma::BufferedSequentialPool.BufferedSequentialPool_char__unsigned_long__unsigned_long__BloombergLP::bslma::Allocator_ ()           | uint64_t method_BloombergLP::bdlma::BufferedSequentialPool_BufferedSequentialPool_char_unsigned_long_unsigned_long_BloombergLP::bslma::Allocator_ (int64_t arg5, int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                     |     r8 = arg5;
                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*, unsigned long, unsigned long, BloombergLP::bslma::Allocator*) */
    0x0040b8a0 push rbx                                                                                                                                              |     
    0x0040b8a1 mov rbx, rdi                                                                                                                                          |     rbx = rdi;
    0x0040b8a4 mov qword [rdi], rsi                                                                                                                                  |     *(rdi) = rsi;
    0x0040b8a7 mov qword [rdi + 8], rdx                                                                                                                              |     *((rdi + 8)) = rdx;
    0x0040b8ab mov qword [rdi + 0x10], 0                                                                                                                             |     *((rdi + 0x10)) = 0;
    0x0040b8b3 mov word [rdi + 0x18], 0x100f                                                                                                                         |     *((rdi + 0x18)) = 0x100f;
    0x0040b8b9 mov qword [rdi + 0x20], rcx                                                                                                                           |     *((rdi + 0x20)) = rcx;
    0x0040b8bd mov word [rdi + 0x28], 0                                                                                                                              |     *((rdi + 0x28)) = 0;
    0x0040b8c3 test r8, r8                                                                                                                                           |     
                                                                                                                                                                     |     if (r8 == 0) {
    0x0040b8c6 jne 0x40b8dc                                                                                                                                          |         
    0x0040b8c8 mov r8, qword [rip + 0x262401]                                                                                                                        |         r8 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b8cf test r8, r8                                                                                                                                           |         
                                                                                                                                                                     |         if (r8 != 0) {
    0x0040b8d2 jne 0x40b8dc                                                                                                                                          |             goto label_0;
                                                                                                                                                                     |         }
    0x0040b8d4 call 0x4171b0                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040b8d9 mov r8, rax                                                                                                                                           |         r8 = rax;
                                                                                                                                                                     |     }
                                                                                                                                                                     | label_0:
    0x0040b8dc mov qword [rbx + 0x30], r8                                                                                                                            |     *((rbx + 0x30)) = r8;
    0x0040b8e0 pop rbx                                                                                                                                               |     
    0x0040b8e1 ret                                                                                                                                                   |     return rax;
                                                                                                                                                                     | }
