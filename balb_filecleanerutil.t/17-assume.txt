    ; assembly                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                             | /* balb_filecleanerutil.t/assume @ 0x40b8f0 */
                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlma::BufferedSequentialPool.BufferedSequentialPool_char__unsigned_long__unsigned_long__BloombergLP::bsls::BlockGrowth::Strategy__BloombergLP::bslma::Allocator_ ()         | uint64_t method_BloombergLP::bdlma::BufferedSequentialPool_BufferedSequentialPool_char_unsigned_long_unsigned_long_BloombergLP::bsls::BlockGrowth::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg6, int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                             |     r9 = arg6;
                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                             |     /* BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*, unsigned long, unsigned long, BloombergLP::bsls::BlockGrowth::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040b8f0 push rbx                                                                                                                                                                                      |     
    0x0040b8f1 mov rbx, rdi                                                                                                                                                                                  |     rbx = rdi;
    0x0040b8f4 mov qword [rdi], rsi                                                                                                                                                                          |     *(rdi) = rsi;
    0x0040b8f7 mov qword [rdi + 8], rdx                                                                                                                                                                      |     *((rdi + 8)) = rdx;
    0x0040b8fb mov qword [rdi + 0x10], 0                                                                                                                                                                     |     *((rdi + 0x10)) = 0;
    0x0040b903 mov word [rdi + 0x18], 0x100f                                                                                                                                                                 |     *((rdi + 0x18)) = 0x100f;
    0x0040b909 mov qword [rdi + 0x20], rcx                                                                                                                                                                   |     *((rdi + 0x20)) = rcx;
    0x0040b90d mov byte [rdi + 0x28], r8b                                                                                                                                                                    |     *((rdi + 0x28)) = r8b;
    0x0040b911 mov byte [rdi + 0x29], 0                                                                                                                                                                      |     *((rdi + 0x29)) = 0;
    0x0040b915 test r9, r9                                                                                                                                                                                   |     
                                                                                                                                                                                                             |     if (r9 == 0) {
    0x0040b918 jne 0x40b92e                                                                                                                                                                                  |         
    0x0040b91a mov r9, qword [rip + 0x2623af]                                                                                                                                                                |         r9 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b921 test r9, r9                                                                                                                                                                                   |         
                                                                                                                                                                                                             |         if (r9 != 0) {
    0x0040b924 jne 0x40b92e                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                             |         }
    0x0040b926 call 0x4171b0                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040b92b mov r9, rax                                                                                                                                                                                   |         r9 = rax;
                                                                                                                                                                                                             |     }
                                                                                                                                                                                                             | label_0:
    0x0040b92e mov qword [rbx + 0x30], r9                                                                                                                                                                    |     *((rbx + 0x30)) = r9;
    0x0040b932 pop rbx                                                                                                                                                                                       |     
    0x0040b933 ret                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                             | }
