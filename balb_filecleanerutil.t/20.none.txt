    ; assembly                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                         | /* balb_filecleanerutil.t/none @ 0x40bc40 */
                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::bdlma::SequentialPool.SequentialPool_BloombergLP::bsls::BlockGrowth::Strategy__BloombergLP::bslma::Allocator_ ()         | int64_t method_BloombergLP::bdlma::SequentialPool_SequentialPool_BloombergLP::bsls::BlockGrowth::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                         |     /* BloombergLP::bdlma::SequentialPool::SequentialPool(BloombergLP::bsls::BlockGrowth::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040bc40 push rbx                                                                                                                                  |     
    0x0040bc41 mov rbx, rdi                                                                                                                              |     rbx = rdi;
    0x0040bc44 xor eax, eax                                                                                                                              |     eax = 0;
    0x0040bc46 test esi, esi                                                                                                                             |     
    0x0040bc48 setne al                                                                                                                                  |     al = (esi != 0) ? 1 : 0;
    0x0040bc4b xorps xmm0, xmm0                                                                                                                          |     __asm ("xorps xmm0, xmm0");
    0x0040bc4e movups xmmword [rdi], xmm0                                                                                                                |     __asm ("movups xmmword [rdi], xmm0");
    0x0040bc51 mov qword [rdi + 0x10], 0                                                                                                                 |     *((rdi + 0x10)) = 0;
    0x0040bc59 mov word [rdi + 0x18], 0x100f                                                                                                             |     *((rdi + 0x18)) = 0x100f;
    0x0040bc5f lea rcx, [rdi + 0x20]                                                                                                                     |     rcx = rdi + 0x20;
    0x0040bc63 mov qword [rdi + 0x20], 0                                                                                                                 |     *((rdi + 0x20)) = 0;
    0x0040bc6b mov qword [rdi + 0x28], rcx                                                                                                               |     *((rdi + 0x28)) = rcx;
    0x0040bc6f movaps xmm1, xmmword [rip + 0x312fa]                                                                                                      |     xmm1 = *(0x0043cf70);
    0x0040bc76 movups xmmword [rdi + 0x1f0], xmm1                                                                                                        |     __asm ("movups xmmword [rdi + 0x1f0], xmm1");
    0x0040bc7d shl rax, 8                                                                                                                                |     rax <<= 8;
    0x0040bc81 movups xmmword [rdi + 0x200], xmm0                                                                                                        |     __asm ("movups xmmword [rdi + 0x200], xmm0");
    0x0040bc88 mov qword [rdi + 0x210], rax                                                                                                              |     *((rdi + 0x210)) = rax;
    0x0040bc8f test rdx, rdx                                                                                                                             |     
                                                                                                                                                         |     if (rdx == 0) {
    0x0040bc92 jne 0x40bca8                                                                                                                              |         
    0x0040bc94 mov rdx, qword [rip + 0x262035]                                                                                                           |         rdx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040bc9b test rdx, rdx                                                                                                                             |         
                                                                                                                                                         |         if (rdx != 0) {
    0x0040bc9e jne 0x40bca8                                                                                                                              |             goto label_0;
                                                                                                                                                         |         }
    0x0040bca0 call 0x4173a0                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040bca5 mov rdx, rax                                                                                                                              |         rdx = rax;
                                                                                                                                                         |     }
                                                                                                                                                         | label_0:
    0x0040bca8 mov qword [rbx + 0x218], rdx                                                                                                              |     *((rbx + 0x218)) = rdx;
    0x0040bcaf pop rbx                                                                                                                                   |     
    0x0040bcb0 ret                                                                                                                                       |     return rax;
                                                                                                                                                         | }
