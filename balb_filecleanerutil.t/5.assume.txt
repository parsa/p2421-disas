    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* balb_filecleanerutil.t/assume @ 0x40b7c0 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlma::BufferedSequentialPool.BufferedSequentialPool_char__unsigned_long__BloombergLP::bsls::Alignment::Strategy__BloombergLP::bslma::Allocator_ ()          | uint64_t method_BloombergLP::bdlma::BufferedSequentialPool_BufferedSequentialPool_char_unsigned_long_BloombergLP::bsls::Alignment::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg5, uint32_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                             |     r8 = arg5;
                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*, unsigned long, BloombergLP::bsls::Alignment::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040b7c0 push rbx                                                                                                                                                                      |     
    0x0040b7c1 mov rbx, rdi                                                                                                                                                                  |     rbx = rdi;
    0x0040b7c4 mov qword [rdi], rsi                                                                                                                                                          |     *(rdi) = rsi;
    0x0040b7c7 mov qword [rdi + 8], rdx                                                                                                                                                      |     *((rdi + 8)) = rdx;
    0x0040b7cb mov qword [rdi + 0x10], 0                                                                                                                                                     |     *((rdi + 0x10)) = 0;
    0x0040b7d3 test ecx, ecx                                                                                                                                                                 |     
    0x0040b7d5 mov eax, 0xf                                                                                                                                                                  |     eax = 0xf;
                                                                                                                                                                                             |     if (ecx == 0) {
    0x0040b7da cmove eax, ecx                                                                                                                                                                |         eax = ecx;
                                                                                                                                                                                             |     }
    0x0040b7dd mov byte [rdi + 0x18], al                                                                                                                                                     |     *((rdi + 0x18)) = al;
    0x0040b7e0 cmp ecx, 2                                                                                                                                                                    |     
    0x0040b7e3 mov eax, 1                                                                                                                                                                    |     eax = 1;
    0x0040b7e8 mov ecx, 0x10                                                                                                                                                                 |     ecx = 0x10;
                                                                                                                                                                                             |     if (ecx == 2) {
    0x0040b7ed cmove ecx, eax                                                                                                                                                                |         ecx = eax;
                                                                                                                                                                                             |     }
    0x0040b7f0 mov byte [rdi + 0x19], cl                                                                                                                                                     |     *((rdi + 0x19)) = cl;
    0x0040b7f3 mov qword [rdi + 0x20], 0xffffffffffffffff                                                                                                                                    |     *((rdi + 0x20)) = 0xffffffffffffffff;
    0x0040b7fb mov word [rdi + 0x28], 0                                                                                                                                                      |     *((rdi + 0x28)) = 0;
    0x0040b801 test r8, r8                                                                                                                                                                   |     
                                                                                                                                                                                             |     if (r8 == 0) {
    0x0040b804 jne 0x40b81a                                                                                                                                                                  |         
    0x0040b806 mov r8, qword [rip + 0x2624c3]                                                                                                                                                |         r8 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b80d test r8, r8                                                                                                                                                                   |         
                                                                                                                                                                                             |         if (r8 != 0) {
    0x0040b810 jne 0x40b81a                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                             |         }
    0x0040b812 call 0x4171b0                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040b817 mov r8, rax                                                                                                                                                                   |         r8 = rax;
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_0:
    0x0040b81a mov qword [rbx + 0x30], r8                                                                                                                                                    |     *((rbx + 0x30)) = r8;
    0x0040b81e pop rbx                                                                                                                                                                       |     
    0x0040b81f ret                                                                                                                                                                           |     return rax;
                                                                                                                                                                                             | }
