    ; assembly                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                     | /* balb_filecleanerutil.t/assume @ 0x40b830 */
                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdlma::BufferedSequentialPool.BufferedSequentialPool_char__unsigned_long__BloombergLP::bsls::BlockGrowth::Strategy__BloombergLP::bsls::Alignment::Strategy__BloombergLP::bslma::Allocator_ ()        | uint64_t method_BloombergLP::bdlma::BufferedSequentialPool_BufferedSequentialPool_char_unsigned_long_BloombergLP::bsls::BlockGrowth::Strategy_BloombergLP::bsls::Alignment::Strategy_BloombergLP::bslma::Allocator_ (int64_t arg6, uint32_t arg5, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                     |     r9 = arg6;
                                                                                                                                                                                                                                     |     r8 = arg5;
                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                     |     /* BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*, unsigned long, BloombergLP::bsls::BlockGrowth::Strategy, BloombergLP::bsls::Alignment::Strategy, BloombergLP::bslma::Allocator*) */
    0x0040b830 push rbx                                                                                                                                                                                                              |     
    0x0040b831 mov rbx, rdi                                                                                                                                                                                                          |     rbx = rdi;
    0x0040b834 mov qword [rdi], rsi                                                                                                                                                                                                  |     *(rdi) = rsi;
    0x0040b837 mov qword [rdi + 8], rdx                                                                                                                                                                                              |     *((rdi + 8)) = rdx;
    0x0040b83b test r8d, r8d                                                                                                                                                                                                         |     
    0x0040b83e mov eax, 0xf                                                                                                                                                                                                          |     eax = 0xf;
                                                                                                                                                                                                                                     |     if (r8d == 0) {
    0x0040b843 cmove eax, r8d                                                                                                                                                                                                        |         eax = r8d;
                                                                                                                                                                                                                                     |     }
    0x0040b847 mov qword [rdi + 0x10], 0                                                                                                                                                                                             |     *((rdi + 0x10)) = 0;
    0x0040b84f mov byte [rdi + 0x18], al                                                                                                                                                                                             |     *((rdi + 0x18)) = al;
    0x0040b852 cmp r8d, 2                                                                                                                                                                                                            |     
    0x0040b856 mov eax, 1                                                                                                                                                                                                            |     eax = 1;
    0x0040b85b mov edx, 0x10                                                                                                                                                                                                         |     edx = 0x10;
                                                                                                                                                                                                                                     |     if (r8d == 2) {
    0x0040b860 cmove edx, eax                                                                                                                                                                                                        |         edx = eax;
                                                                                                                                                                                                                                     |     }
    0x0040b863 mov byte [rdi + 0x19], dl                                                                                                                                                                                             |     *((rdi + 0x19)) = dl;
    0x0040b866 mov qword [rdi + 0x20], 0xffffffffffffffff                                                                                                                                                                            |     *((rdi + 0x20)) = 0xffffffffffffffff;
    0x0040b86e mov byte [rdi + 0x28], cl                                                                                                                                                                                             |     *((rdi + 0x28)) = cl;
    0x0040b871 mov byte [rdi + 0x29], 0                                                                                                                                                                                              |     *((rdi + 0x29)) = 0;
    0x0040b875 test r9, r9                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                     |     if (r9 == 0) {
    0x0040b878 jne 0x40b88e                                                                                                                                                                                                          |         
    0x0040b87a mov r9, qword [rip + 0x26244f]                                                                                                                                                                                        |         r9 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b881 test r9, r9                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                     |         if (r9 != 0) {
    0x0040b884 jne 0x40b88e                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                     |         }
    0x0040b886 call 0x4171b0                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040b88b mov r9, rax                                                                                                                                                                                                           |         r9 = rax;
                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                     | label_0:
    0x0040b88e mov qword [rbx + 0x30], r9                                                                                                                                                                                            |     *((rbx + 0x30)) = r9;
    0x0040b892 pop rbx                                                                                                                                                                                                               |     
    0x0040b893 ret                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                     | }
