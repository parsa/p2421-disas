    ; assembly                                                   | /* r2dec pseudo code output */
                                                                 | /* bdld_datum.t/assume @ 0x405ef0 */
                                                                 | #include <stdint.h>
                                                                 |  
    ; (fcn) method.BenchmarkSuite.run_int__int__char_ ()         | uint64_t method_BenchmarkSuite_run_int_int_char_ (int64_t arg_30h, int64_t arg_38h, int64_t arg_40h, int64_t arg_48h, int64_t arg_50h, int64_t arg_58h, int64_t arg_60h, int64_t arg_68h, int64_t arg_70h, int64_t arg_78h, int64_t arg_80h, int64_t arg_a0h, int64_t arg_a8h, int64_t arg_b0h, int64_t arg_b8h, int64_t arg_c0h, int64_t arg_c8h, int64_t arg_e8h, int64_t arg_f0h, int64_t arg_f2h, int64_t arg_f8h, int64_t arg_fah, int64_t arg_100h, int64_t arg_101h, int64_t arg_108h, int64_t arg_10eh, int64_t arg4, signed int64_t arg3, int64_t arg2, char * arg1, int64_t arg7) {
                                                                 |     int64_t var_8h;
                                                                 |     int64_t var_10h;
                                                                 |     int64_t var_18h;
                                                                 |     int64_t var_20h;
                                                                 |     int64_t var_28h;
                                                                 |     rcx = arg4;
                                                                 |     rdx = arg3;
                                                                 |     rsi = arg2;
                                                                 |     rdi = arg1;
                                                                 |     xmm0 = arg7;
                                                                 |     /* BenchmarkSuite::run(int, int, char**) */
    0x00405ef0 push rbp                                          |     
    0x00405ef1 push r15                                          |     
    0x00405ef3 push r14                                          |     
    0x00405ef5 push r13                                          |     
    0x00405ef7 push r12                                          |     
    0x00405ef9 push rbx                                          |     
    0x00405efa sub rsp, 0x3f88                                   |     
    0x00405f01 mov r14, rcx                                      |     r14 = rcx;
    0x00405f04 mov ebp, edx                                      |     
    0x00405f06 mov r13, rdi                                      |     r13 = rdi;
    0x00405f09 mov dword [rdi + 0x20], esi                       |     *((rdi + 0x20)) = esi;
    0x00405f0c cvtsi2sd xmm0, esi                                |     __asm ("cvtsi2sd xmm0, esi");
    0x00405f10 mulsd xmm0, qword [rip + 0xbf250]                 |     __asm ("mulsd xmm0, qword [0x004c5168]");
    0x00405f18 divsd xmm0, qword [rip + 0xbf230]                 |     __asm ("divsd xmm0, qword [0x004c5150]");
    0x00405f20 movsd qword [rdi + 0x28], xmm0                    |     *((rdi + 0x28)) = xmm0;
    0x00405f25 mov dword [rdi + 0x24], 0xffffffff                |     *((rdi + 0x24)) = 0xffffffff;
    0x00405f2c xor esi, esi                                      |     
    0x00405f2e call 0x483bd0                                     |     bsl::vector<bool,bsl::allocator<bool>>::resize(unsigned long) (rdi, 0);
    0x00405f33 lea rdi, [r13 + 0x100]                            |     
    0x00405f3a mov esi, 0x186a0                                  |     
    0x00405f3f mov qword [rsp + 0x58], rdi                       |     *((rsp + 0x58)) = rdi;
    0x00405f44 call 0x484dc0                                     |     bsl::vector<char,bsl::allocator<char>>::resize(unsigned long) (r13 + 0x100, 0x186a0);
    0x00405f49 test ebp, ebp                                     |     
                                                                 |     if (ebp <= 0) {
    0x00405f4b jle 0x405fb4                                      |         goto label_49;
                                                                 |     }
    0x00405f4d mov r15d, ebp                                     |     r15d = ebp;
    0x00405f50 xor ebx, ebx                                      |     ebx = 0;
    0x00405f52 jmp 0x405f70                                      |     
                                                                 |     while (eax < edx) {
                                                                 | label_0:
    0x00405f60 sar rbp, 0x20                                     |         rbp >>= 0x20;
    0x00405f64 mov byte [rcx + rbp], 1                           |         *((rcx + rbp)) = 1;
    0x00405f68 inc rbx                                           |         rbx++;
    0x00405f6b cmp r15, rbx                                      |         
                                                                 |         if (r15 == rbx) {
    0x00405f6e je 0x405fb4                                       |             goto label_49;
                                                                 |         }
    0x00405f70 mov rdi, qword [r14 + rbx*8]                      |         
    0x00405f74 xor esi, esi                                      |         
    0x00405f76 mov edx, 0xa                                      |         
    0x00405f7b call 0x404520                                     |         rax = strtol (*((r14 + rbx*8)), 0, 0xa);
    0x00405f80 mov edx, dword [r13 + 8]                          |         edx = *((r13 + 8));
    0x00405f84 mov rcx, qword [r13]                              |         rcx = *(r13);
    0x00405f88 sub edx, ecx                                      |         edx -= ecx;
    0x00405f8a mov rbp, rax                                      |         
    0x00405f8d shl rbp, 0x20                                     |         rbp <<= 0x20;
    0x00405f91 cmp eax, edx                                      |         
    0x00405f93 jl 0x405f60                                       |         
                                                                 |     }
    0x00405f95 mov eax, 0xd693a400                               |     eax = 0xd693a400;
    0x00405f9a lea rsi, [rax + rbp + 0x296c5c00]                 |     
    0x00405fa2 sar rsi, 0x20                                     |     rsi >>= 0x20;
    0x00405fa6 mov rdi, r13                                      |     
    0x00405fa9 call 0x483bd0                                     |     bsl::vector<bool,bsl::allocator<bool>>::resize(unsigned long) (r13, rax + rbp + 0x296c5c00);
    0x00405fae mov rcx, qword [r13]                              |     rcx = *(r13);
    0x00405fb2 jmp 0x405f60                                      |     goto label_0;
                                                                 | label_49:
    0x00405fb4 lea rax, [r13 + 0x20]                             |     rax = r13 + 0x20;
    0x00405fb8 mov qword [rsp + 0x30], rax                       |     *((rsp + 0x30)) = rax;
    0x00405fbd lea rbx, [r13 + 0x24]                             |     rbx = r13 + 0x24;
    0x00405fc1 mov edi, 0x717f30                                 |     
    0x00405fc6 mov esi, 0x4c5dee                                 |     
    0x00405fcb mov edx, 0x15                                     |     
    0x00405fd0 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "/// BEGIN BENCHMARK: ", 0x15);
    0x00405fd5 mov edi, 0x717f30                                 |     
    0x00405fda mov esi, 0x4c5e04                                 |     
    0x00405fdf mov edx, 5                                        |     
    0x00405fe4 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Linux", 5);
    0x00405fe9 mov edi, 0x717f30                                 |     
    0x00405fee mov esi, 0x4c5e0a                                 |     
    0x00405ff3 mov edx, 0x11                                     |     
    0x00405ff8 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, " - 64-bit variant", 0x11);
    0x00405ffd mov edi, 0x717f30                                 |     
    0x00406002 mov esi, 0x4c5e1c                                 |     
    0x00406007 mov edx, 3                                        |     
    0x0040600c call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c5e1c, 3);
    0x00406011 mov esi, dword [r13 + 0x20]                       |     esi = *((r13 + 0x20));
    0x00406015 mov rdi, rax                                      |     rdi = rax;
    0x00406018 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040601d mov esi, 0x4c5e20                                 |     
    0x00406022 mov edx, 0xc                                      |     
    0x00406027 mov rdi, rax                                      |     
    0x0040602a call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " iterations\n", 0xc);
    0x0040602f mov rax, qword [rip + 0x311efa]                   |     rax = std::__1::cout;
    0x00406036 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040603a or dword [rax + 0x717f38], 4                      |     *((rax + 0x717f38)) |= 4;
    0x00406041 mov rax, qword [rip + 0x311ee8]                   |     rax = std::__1::cout;
    0x00406048 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040604c mov qword [rax + 0x717f40], 1                     |     *((rax + 0x717f40)) = 1;
    0x00406057 movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x0040605b inc rsi                                           |     rsi++;
    0x0040605e mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x00406062 mov rax, qword [r13]                              |     rax = *(r13);
    0x00406066 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
    0x0040606a cmp rcx, rax                                      |     
    0x0040606d mov qword [rsp + 0x48], rbx                       |     *((rsp + 0x48)) = rbx;
                                                                 |     if (rcx != rax) {
    0x00406072 je 0x40608a                                       |         
    0x00406074 mov edx, ecx                                      |         edx = ecx;
    0x00406076 sub edx, eax                                      |         edx -= eax;
    0x00406078 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040607a jge 0x4064a3                                      |             goto label_50;
                                                                 |         }
    0x00406080 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406084 je 0x4064a3                                       |             goto label_50;
                                                                 |         }
                                                                 |     }
    0x0040608a mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040608f cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00406092 jle 0x406240                                      |         goto label_51;
                                                                 |     }
    0x00406098 movabs rbx, 0x2000000000000                       |     rbx = 0x2000000000000;
    0x004060a2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060a6 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004060ac xor r15d, r15d                                    |     r15d = 0;
    0x004060af lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004060b4 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x004060b9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060bd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004060c3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060c7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004060cd xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060d1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004060d7 nop word [rax + rax]                              |     
                                                                 | label_1:
    0x004060e0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004060e5 mov rsi, qword [rax]                              |     
    0x004060e8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004060f1 mov edx, 0x186a0                                  |     
    0x004060f6 mov rdi, r14                                      |     
    0x004060f9 xor ecx, ecx                                      |     
    0x004060fb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406100 mov ebp, 0x78                                     |     
    0x00406105 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040610a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406110 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406118 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x00406120 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x00406128 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x00406130 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x00406138 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x00406140 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x00406148 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x00406150 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x00406154 cmp rbp, 0x3ef8                                   |         
    0x0040615b jne 0x406110                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x0040615d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406162 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406168 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x0040616e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406172 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00406178 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040617d movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406183 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406188 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040618e movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406194 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406198 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x0040619e call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061a3 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004061a9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061ae subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004061b4 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004061ba addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004061be movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004061c4 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061c9 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004061cf xor ebp, ebp                                      |     ebp = 0;
    0x004061d1 nop word cs:[rax + rax]                           |     
    0x004061db nop dword [rax + rax]                             |     
                                                                 |     do {
    0x004061e0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004061e8 mov rsi, r12                                      |         
    0x004061eb call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x004061f0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004061f4 cmp rbp, 0x3e80                                   |         
    0x004061fb jne 0x4061e0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004061fd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406202 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406208 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040620e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406212 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406218 mov rdi, r12                                      |     
    0x0040621b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406220 inc r15d                                          |     r15d++;
    0x00406223 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406228 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040622b jl 0x4060e0                                       |         goto label_1;
                                                                 |     }
    0x00406231 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406236 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406238 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040623e jmp 0x406262                                      |     goto label_52;
                                                                 | label_51:
    0x00406240 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406244 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040624a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040624e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406254 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406258 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040625e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_52:
    0x00406262 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406268 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040626e mov rax, qword [rip + 0x311cbb]                   |     rax = std::__1::cout;
    0x00406275 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406279 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406284 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406289 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040628e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406293 lea rsi, [rsp + 0x60]                             |     
    0x00406298 mov edx, 1                                        |     
    0x0040629d mov rdi, rax                                      |     
    0x004062a0 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004062a5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004062a8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004062ac mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004062b5 mov esi, 0x4c5e2d                                 |     
    0x004062ba mov edx, 0xc                                      |     
    0x004062bf mov rdi, rax                                      |     
    0x004062c2 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createNull()", 0xc);
    0x004062c7 mov esi, 0x4e4950                                 |     
    0x004062cc mov edx, 1                                        |     
    0x004062d1 mov rdi, rax                                      |     
    0x004062d4 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004062d9 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004062dc mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004062e0 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004062e9 mov rdi, rax                                      |     rdi = rax;
    0x004062ec movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004062f2 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004062f7 mov esi, 0x4e488d                                 |     
    0x004062fc mov edx, 1                                        |     
    0x00406301 mov rdi, rax                                      |     
    0x00406304 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406309 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040630f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406315 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040631b mov rax, qword [rip + 0x311c0e]                   |     rax = std::__1::cout;
    0x00406322 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406326 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406331 mov edi, 0x717f30                                 |     
    0x00406336 mov esi, 0x4c8f3c                                 |     
    0x0040633b mov edx, 8                                        |     
    0x00406340 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8f3c, 8);
    0x00406345 mov esi, 0x4e4950                                 |     
    0x0040634a mov edx, 1                                        |     
    0x0040634f mov rdi, rax                                      |     
    0x00406352 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406357 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040635a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040635e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406367 mov rdi, rax                                      |     rdi = rax;
    0x0040636a movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406370 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406375 mov esi, 0x4e488d                                 |     
    0x0040637a mov edx, 1                                        |     
    0x0040637f mov rdi, rax                                      |     
    0x00406382 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406387 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040638d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406393 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406399 mov rax, qword [rip + 0x311b90]                   |     rax = std::__1::cout;
    0x004063a0 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004063a4 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004063af mov edi, 0x717f30                                 |     
    0x004063b4 mov esi, 0x4c8f3c                                 |     
    0x004063b9 mov edx, 8                                        |     
    0x004063be call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8f3c, 8);
    0x004063c3 mov esi, 0x4e4950                                 |     
    0x004063c8 mov edx, 1                                        |     
    0x004063cd mov rdi, rax                                      |     
    0x004063d0 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004063d5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004063d8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004063dc mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004063e5 mov rdi, rax                                      |     rdi = rax;
    0x004063e8 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004063ee call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004063f3 mov esi, 0x4e488d                                 |     
    0x004063f8 mov edx, 1                                        |     
    0x004063fd mov rdi, rax                                      |     
    0x00406400 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406405 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040640b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406411 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406417 mov rax, qword [rip + 0x311b12]                   |     rax = std::__1::cout;
    0x0040641e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406422 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040642d mov edi, 0x717f30                                 |     
    0x00406432 mov esi, 0x4c5e3a                                 |     
    0x00406437 mov edx, 9                                        |     
    0x0040643c call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406441 mov esi, 0x4e4950                                 |     
    0x00406446 mov edx, 1                                        |     
    0x0040644b mov rdi, rax                                      |     
    0x0040644e call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406453 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406456 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040645a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406463 mov rdi, rax                                      |     rdi = rax;
    0x00406466 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040646c call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406471 mov esi, 0x4e488d                                 |     
    0x00406476 mov edx, 1                                        |     
    0x0040647b mov rdi, rax                                      |     
    0x0040647e call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406483 mov edi, 0x717f30                                 |     
    0x00406488 mov esi, 0x4e488d                                 |     
    0x0040648d mov edx, 1                                        |     
    0x00406492 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00406497 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040649b mov rax, qword [r13]                              |     rax = *(r13);
    0x0040649f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_50:
    0x004064a3 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004064a6 inc rsi                                           |     rsi++;
    0x004064a9 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x004064ab cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004064ae je 0x4064c6                                       |         
    0x004064b0 mov edx, ecx                                      |         edx = ecx;
    0x004064b2 sub edx, eax                                      |         edx -= eax;
    0x004064b4 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004064b6 jge 0x4068e3                                      |             goto label_53;
                                                                 |         }
    0x004064bc cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004064c0 je 0x4068e3                                       |             goto label_53;
                                                                 |         }
                                                                 |     }
    0x004064c6 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004064cb cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004064ce jle 0x406680                                      |         goto label_54;
                                                                 |     }
    0x004064d4 movabs rbx, 0x3000000000001                       |     rbx = 0x3000000000001;
    0x004064de xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004064e2 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004064e8 xor r15d, r15d                                    |     r15d = 0;
    0x004064eb lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004064f0 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x004064f5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004064f9 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004064ff xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406503 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406509 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040650d movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406513 nop word cs:[rax + rax]                           |     
    0x0040651d nop dword [rax]                                   |     
                                                                 | label_2:
    0x00406520 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406525 mov rsi, qword [rax]                              |     
    0x00406528 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406531 mov edx, 0x186a0                                  |     
    0x00406536 mov rdi, r14                                      |     
    0x00406539 xor ecx, ecx                                      |     
    0x0040653b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406540 mov ebp, 0x78                                     |     
    0x00406545 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040654a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406550 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406558 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x00406560 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x00406568 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x00406570 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x00406578 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x00406580 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x00406588 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x00406590 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x00406594 cmp rbp, 0x3ef8                                   |         
    0x0040659b jne 0x406550                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x0040659d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065a2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065a8 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x004065ae addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065b2 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x004065b8 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065bd movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004065c3 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065c8 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065ce movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x004065d4 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065d8 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x004065de call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065e3 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004065e9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065ee subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065f4 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004065fa addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065fe movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406604 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406609 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040660f xor ebp, ebp                                      |     ebp = 0;
    0x00406611 nop word cs:[rax + rax]                           |     
    0x0040661b nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406620 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00406628 mov rsi, r12                                      |         
    0x0040662b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x00406630 add rbp, 0x10                                     |         rbp += 0x10;
    0x00406634 cmp rbp, 0x3e80                                   |         
    0x0040663b jne 0x406620                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040663d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406642 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406648 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040664e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406652 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406658 mov rdi, r12                                      |     
    0x0040665b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406660 inc r15d                                          |     r15d++;
    0x00406663 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406668 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040666b jl 0x406520                                       |         goto label_2;
                                                                 |     }
    0x00406671 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406676 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406678 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040667e jmp 0x4066a2                                      |     goto label_55;
                                                                 | label_54:
    0x00406680 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406684 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040668a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040668e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406694 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406698 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040669e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_55:
    0x004066a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004066a8 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004066ae mov rax, qword [rip + 0x31187b]                   |     rax = std::__1::cout;
    0x004066b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004066b9 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x004066c4 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x004066c9 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004066ce mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004066d3 lea rsi, [rsp + 0x60]                             |     
    0x004066d8 mov edx, 1                                        |     
    0x004066dd mov rdi, rax                                      |     
    0x004066e0 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004066e5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004066e8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004066ec mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004066f5 mov esi, 0x4c5e44                                 |     
    0x004066fa mov edx, 0x13                                     |     
    0x004066ff mov rdi, rax                                      |     
    0x00406702 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createBoolean(true)", 0x13);
    0x00406707 mov esi, 0x4e4950                                 |     
    0x0040670c mov edx, 1                                        |     
    0x00406711 mov rdi, rax                                      |     
    0x00406714 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406719 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040671c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406720 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406729 mov rdi, rax                                      |     rdi = rax;
    0x0040672c movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406732 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406737 mov esi, 0x4e488d                                 |     
    0x0040673c mov edx, 1                                        |     
    0x00406741 mov rdi, rax                                      |     
    0x00406744 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406749 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040674f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406755 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040675b mov rax, qword [rip + 0x3117ce]                   |     rax = std::__1::cout;
    0x00406762 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406766 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406771 mov edi, 0x717f30                                 |     
    0x00406776 mov esi, 0x4c8959                                 |     
    0x0040677b mov edx, 0xb                                      |     
    0x00406780 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8959, 0xb);
    0x00406785 mov esi, 0x4e4950                                 |     
    0x0040678a mov edx, 1                                        |     
    0x0040678f mov rdi, rax                                      |     
    0x00406792 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406797 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040679a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040679e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004067a7 mov rdi, rax                                      |     rdi = rax;
    0x004067aa movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004067b0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004067b5 mov esi, 0x4e488d                                 |     
    0x004067ba mov edx, 1                                        |     
    0x004067bf mov rdi, rax                                      |     
    0x004067c2 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004067c7 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004067cd divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004067d3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004067d9 mov rax, qword [rip + 0x311750]                   |     rax = std::__1::cout;
    0x004067e0 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004067e4 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004067ef mov edi, 0x717f30                                 |     
    0x004067f4 mov esi, 0x4c8971                                 |     
    0x004067f9 mov edx, 0xc                                      |     
    0x004067fe call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8971, 0xc);
    0x00406803 mov esi, 0x4e4950                                 |     
    0x00406808 mov edx, 1                                        |     
    0x0040680d mov rdi, rax                                      |     
    0x00406810 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406815 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406818 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040681c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406825 mov rdi, rax                                      |     rdi = rax;
    0x00406828 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040682e call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406833 mov esi, 0x4e488d                                 |     
    0x00406838 mov edx, 1                                        |     
    0x0040683d mov rdi, rax                                      |     
    0x00406840 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406845 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040684b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406851 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406857 mov rax, qword [rip + 0x3116d2]                   |     rax = std::__1::cout;
    0x0040685e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406862 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040686d mov edi, 0x717f30                                 |     
    0x00406872 mov esi, 0x4c5e3a                                 |     
    0x00406877 mov edx, 9                                        |     
    0x0040687c call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406881 mov esi, 0x4e4950                                 |     
    0x00406886 mov edx, 1                                        |     
    0x0040688b mov rdi, rax                                      |     
    0x0040688e call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406893 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406896 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040689a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004068a3 mov rdi, rax                                      |     rdi = rax;
    0x004068a6 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004068ac call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004068b1 mov esi, 0x4e488d                                 |     
    0x004068b6 mov edx, 1                                        |     
    0x004068bb mov rdi, rax                                      |     
    0x004068be call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004068c3 mov edi, 0x717f30                                 |     
    0x004068c8 mov esi, 0x4e488d                                 |     
    0x004068cd mov edx, 1                                        |     
    0x004068d2 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x004068d7 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004068db mov rax, qword [r13]                              |     rax = *(r13);
    0x004068df mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_53:
    0x004068e3 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004068e6 inc rsi                                           |     rsi++;
    0x004068e9 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x004068eb cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004068ee je 0x406906                                       |         
    0x004068f0 mov edx, ecx                                      |         edx = ecx;
    0x004068f2 sub edx, eax                                      |         edx -= eax;
    0x004068f4 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004068f6 jge 0x406d23                                      |             goto label_56;
                                                                 |         }
    0x004068fc cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406900 je 0x406d23                                       |             goto label_56;
                                                                 |         }
                                                                 |     }
    0x00406906 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040690b cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040690e jle 0x406ac0                                      |         goto label_57;
                                                                 |     }
    0x00406914 movabs rbx, 0xa000000000001                       |     rbx = 0xa000000000001;
    0x0040691e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406922 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406928 xor r15d, r15d                                    |     r15d = 0;
    0x0040692b lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x00406930 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x00406935 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406939 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040693f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406943 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406949 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040694d movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406953 nop word cs:[rax + rax]                           |     
    0x0040695d nop dword [rax]                                   |     
                                                                 | label_3:
    0x00406960 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406965 mov rsi, qword [rax]                              |     
    0x00406968 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406971 mov edx, 0x186a0                                  |     
    0x00406976 mov rdi, r14                                      |     
    0x00406979 xor ecx, ecx                                      |     
    0x0040697b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406980 mov ebp, 0x78                                     |     
    0x00406985 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040698a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406990 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406998 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x004069a0 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x004069a8 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x004069b0 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x004069b8 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x004069c0 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x004069c8 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x004069d0 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x004069d4 cmp rbp, 0x3ef8                                   |         
    0x004069db jne 0x406990                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x004069dd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004069e2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004069e8 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x004069ee addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004069f2 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x004069f8 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004069fd movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a03 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a08 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a0e movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406a14 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a18 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x00406a1e call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a23 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a29 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a2e subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a34 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00406a3a addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a3e movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406a44 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a49 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a4f xor ebp, ebp                                      |     ebp = 0;
    0x00406a51 nop word cs:[rax + rax]                           |     
    0x00406a5b nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406a60 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00406a68 mov rsi, r12                                      |         
    0x00406a6b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x00406a70 add rbp, 0x10                                     |         rbp += 0x10;
    0x00406a74 cmp rbp, 0x3e80                                   |         
    0x00406a7b jne 0x406a60                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00406a7d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a82 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a88 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00406a8e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a92 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406a98 mov rdi, r12                                      |     
    0x00406a9b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406aa0 inc r15d                                          |     r15d++;
    0x00406aa3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406aa8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00406aab jl 0x406960                                       |         goto label_3;
                                                                 |     }
    0x00406ab1 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406ab6 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406ab8 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406abe jmp 0x406ae2                                      |     goto label_58;
                                                                 | label_57:
    0x00406ac0 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ac4 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406aca xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ace movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406ad4 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ad8 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406ade xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_58:
    0x00406ae2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406ae8 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406aee mov rax, qword [rip + 0x31143b]                   |     rax = std::__1::cout;
    0x00406af5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406af9 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406b04 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406b09 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406b0e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406b13 lea rsi, [rsp + 0x60]                             |     
    0x00406b18 mov edx, 1                                        |     
    0x00406b1d mov rdi, rax                                      |     
    0x00406b20 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00406b25 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406b28 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406b2c mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00406b35 mov esi, 0x4c5e58                                 |     
    0x00406b3a mov edx, 0x10                                     |     
    0x00406b3f mov rdi, rax                                      |     
    0x00406b42 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createInteger(1)", 0x10);
    0x00406b47 mov esi, 0x4e4950                                 |     
    0x00406b4c mov edx, 1                                        |     
    0x00406b51 mov rdi, rax                                      |     
    0x00406b54 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406b59 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406b5c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406b60 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406b69 mov rdi, rax                                      |     rdi = rax;
    0x00406b6c movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406b72 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406b77 mov esi, 0x4e488d                                 |     
    0x00406b7c mov edx, 1                                        |     
    0x00406b81 mov rdi, rax                                      |     
    0x00406b84 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406b89 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406b8f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406b95 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406b9b mov rax, qword [rip + 0x31138e]                   |     rax = std::__1::cout;
    0x00406ba2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406ba6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406bb1 mov edi, 0x717f30                                 |     
    0x00406bb6 mov esi, 0x4c8e47                                 |     
    0x00406bbb mov edx, 0xb                                      |     
    0x00406bc0 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8e47, 0xb);
    0x00406bc5 mov esi, 0x4e4950                                 |     
    0x00406bca mov edx, 1                                        |     
    0x00406bcf mov rdi, rax                                      |     
    0x00406bd2 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406bd7 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406bda mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406bde mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406be7 mov rdi, rax                                      |     rdi = rax;
    0x00406bea movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406bf0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406bf5 mov esi, 0x4e488d                                 |     
    0x00406bfa mov edx, 1                                        |     
    0x00406bff mov rdi, rax                                      |     
    0x00406c02 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406c07 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00406c0d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406c13 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406c19 mov rax, qword [rip + 0x311310]                   |     rax = std::__1::cout;
    0x00406c20 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406c24 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406c2f mov edi, 0x717f30                                 |     
    0x00406c34 mov esi, 0x4c8e5f                                 |     
    0x00406c39 mov edx, 0xc                                      |     
    0x00406c3e call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8e5f, 0xc);
    0x00406c43 mov esi, 0x4e4950                                 |     
    0x00406c48 mov edx, 1                                        |     
    0x00406c4d mov rdi, rax                                      |     
    0x00406c50 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406c55 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406c58 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406c5c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406c65 mov rdi, rax                                      |     rdi = rax;
    0x00406c68 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00406c6e call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406c73 mov esi, 0x4e488d                                 |     
    0x00406c78 mov edx, 1                                        |     
    0x00406c7d mov rdi, rax                                      |     
    0x00406c80 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406c85 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00406c8b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406c91 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406c97 mov rax, qword [rip + 0x311292]                   |     rax = std::__1::cout;
    0x00406c9e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406ca2 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406cad mov edi, 0x717f30                                 |     
    0x00406cb2 mov esi, 0x4c5e3a                                 |     
    0x00406cb7 mov edx, 9                                        |     
    0x00406cbc call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406cc1 mov esi, 0x4e4950                                 |     
    0x00406cc6 mov edx, 1                                        |     
    0x00406ccb mov rdi, rax                                      |     
    0x00406cce call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406cd3 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406cd6 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406cda mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406ce3 mov rdi, rax                                      |     rdi = rax;
    0x00406ce6 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00406cec call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406cf1 mov esi, 0x4e488d                                 |     
    0x00406cf6 mov edx, 1                                        |     
    0x00406cfb mov rdi, rax                                      |     
    0x00406cfe call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406d03 mov edi, 0x717f30                                 |     
    0x00406d08 mov esi, 0x4e488d                                 |     
    0x00406d0d mov edx, 1                                        |     
    0x00406d12 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00406d17 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00406d1b mov rax, qword [r13]                              |     rax = *(r13);
    0x00406d1f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_56:
    0x00406d23 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00406d26 inc rsi                                           |     rsi++;
    0x00406d29 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x00406d2b cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00406d2e je 0x406d46                                       |         
    0x00406d30 mov edx, ecx                                      |         edx = ecx;
    0x00406d32 sub edx, eax                                      |         edx -= eax;
    0x00406d34 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00406d36 jge 0x407163                                      |             goto label_59;
                                                                 |         }
    0x00406d3c cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406d40 je 0x407163                                       |             goto label_59;
                                                                 |         }
                                                                 |     }
    0x00406d46 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406d4b cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00406d4e jle 0x406f00                                      |         goto label_60;
                                                                 |     }
    0x00406d54 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d58 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406d5e xor r15d, r15d                                    |     r15d = 0;
    0x00406d61 lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x00406d66 lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x00406d6b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d6f movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406d75 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d79 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406d7f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d83 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406d89 nop dword [rax]                                   |     
                                                                 | label_4:
    0x00406d90 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406d95 mov rsi, qword [rax]                              |     
    0x00406d98 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406da1 mov edx, 0x186a0                                  |     
    0x00406da6 mov rdi, r14                                      |     
    0x00406da9 xor ecx, ecx                                      |     
    0x00406dab call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406db0 mov ebx, 0x70                                     |     ebx = 0x70;
    0x00406db5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406dba movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406dc0 movapd xmm0, xmmword [rip + 0xbdfb8]              |     __asm ("movapd xmm0, xmmword [0x004c4d80]");
    0x00406dc8 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406dd0 movapd xmmword [rsp + rbx + 0x90], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0x90], xmm0");
    0x00406dd9 movapd xmmword [rsp + rbx + 0xa0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xa0], xmm0");
    0x00406de2 movapd xmmword [rsp + rbx + 0xb0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xb0], xmm0");
    0x00406deb movapd xmmword [rsp + rbx + 0xc0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xc0], xmm0");
    0x00406df4 movapd xmmword [rsp + rbx + 0xd0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xd0], xmm0");
    0x00406dfd movapd xmmword [rsp + rbx + 0xe0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xe0], xmm0");
    0x00406e06 movapd xmmword [rsp + rbx + 0xf0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xf0], xmm0");
    0x00406e0f movapd xmmword [rsp + rbx + 0x100], xmm0          |         __asm ("movapd xmmword [rsp + rbx + 0x100], xmm0");
    0x00406e18 sub rbx, 0xffffffffffffff80                       |         rbx -= 0xffffffffffffff80;
    0x00406e1c cmp rbx, 0x3ef0                                   |         
    0x00406e23 jne 0x406dd0                                      |         
                                                                 |     } while (rbx != 0x3ef0);
    0x00406e25 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e2a subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e30 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x00406e36 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e3a movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00406e40 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e45 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e4b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e50 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e56 movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406e5c addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e60 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x00406e66 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e6b movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e71 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e76 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e7c movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00406e82 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e86 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406e8c call 0x405b40                                     |     rax = Stopwatch::getCPUTime() ();
    0x00406e91 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e97 xor ebx, ebx                                      |     ebx = 0;
    0x00406e99 nop dword [rax]                                   |     
                                                                 |     do {
    0x00406ea0 lea rdi, [rsp + rbx + 0x100]                      |         
    0x00406ea8 mov rsi, rbp                                      |         
    0x00406eab call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x00406eb0 add rbx, 0x10                                     |         rbx += 0x10;
    0x00406eb4 cmp rbx, 0x3e80                                   |         
    0x00406ebb jne 0x406ea0                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x00406ebd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406ec2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406ec8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00406ece addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406ed2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406ed8 mov rdi, rbp                                      |     
    0x00406edb call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00406ee0 inc r15d                                          |     r15d++;
    0x00406ee3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406ee8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00406eeb jl 0x406d90                                       |         goto label_4;
                                                                 |     }
    0x00406ef1 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406ef6 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406ef8 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406efe jmp 0x406f22                                      |     goto label_61;
                                                                 | label_60:
    0x00406f00 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f04 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406f0a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f0e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406f14 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f18 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406f1e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_61:
    0x00406f22 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406f28 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406f2e mov rax, qword [rip + 0x310ffb]                   |     rax = std::__1::cout;
    0x00406f35 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406f39 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406f44 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406f49 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406f4e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406f53 lea rsi, [rsp + 0x60]                             |     
    0x00406f58 mov edx, 1                                        |     
    0x00406f5d mov rdi, rax                                      |     
    0x00406f60 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00406f65 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406f68 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406f6c mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00406f75 mov esi, 0x4c5e69                                 |     
    0x00406f7a mov edx, 0x1c                                     |     
    0x00406f7f mov rdi, rax                                      |     
    0x00406f82 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createInteger64(1LL, &alloc)", 0x1c);
    0x00406f87 mov esi, 0x4e4950                                 |     
    0x00406f8c mov edx, 1                                        |     
    0x00406f91 mov rdi, rax                                      |     
    0x00406f94 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00406f99 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406f9c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406fa0 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406fa9 mov rdi, rax                                      |     rdi = rax;
    0x00406fac movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406fb2 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406fb7 mov esi, 0x4e488d                                 |     
    0x00406fbc mov edx, 1                                        |     
    0x00406fc1 mov rdi, rax                                      |     
    0x00406fc4 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00406fc9 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406fcf divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406fd5 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406fdb mov rax, qword [rip + 0x310f4e]                   |     rax = std::__1::cout;
    0x00406fe2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406fe6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406ff1 mov edi, 0x717f30                                 |     
    0x00406ff6 mov esi, 0x4c8ed8                                 |     
    0x00406ffb mov edx, 0xd                                      |     
    0x00407000 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8ed8, 0xd);
    0x00407005 mov esi, 0x4e4950                                 |     
    0x0040700a mov edx, 1                                        |     
    0x0040700f mov rdi, rax                                      |     
    0x00407012 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407017 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040701a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040701e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407027 mov rdi, rax                                      |     rdi = rax;
    0x0040702a movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407030 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407035 mov esi, 0x4e488d                                 |     
    0x0040703a mov edx, 1                                        |     
    0x0040703f mov rdi, rax                                      |     
    0x00407042 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407047 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040704d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407053 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407059 mov rax, qword [rip + 0x310ed0]                   |     rax = std::__1::cout;
    0x00407060 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407064 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040706f mov edi, 0x717f30                                 |     
    0x00407074 mov esi, 0x4c8ef2                                 |     
    0x00407079 mov edx, 0xe                                      |     
    0x0040707e call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8ef2, 0xe);
    0x00407083 mov esi, 0x4e4950                                 |     
    0x00407088 mov edx, 1                                        |     
    0x0040708d mov rdi, rax                                      |     
    0x00407090 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407095 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407098 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040709c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004070a5 mov rdi, rax                                      |     rdi = rax;
    0x004070a8 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004070ae call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004070b3 mov esi, 0x4e488d                                 |     
    0x004070b8 mov edx, 1                                        |     
    0x004070bd mov rdi, rax                                      |     
    0x004070c0 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004070c5 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004070cb divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004070d1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004070d7 mov rax, qword [rip + 0x310e52]                   |     rax = std::__1::cout;
    0x004070de mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004070e2 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004070ed mov edi, 0x717f30                                 |     
    0x004070f2 mov esi, 0x4c5e3a                                 |     
    0x004070f7 mov edx, 9                                        |     
    0x004070fc call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407101 mov esi, 0x4e4950                                 |     
    0x00407106 mov edx, 1                                        |     
    0x0040710b mov rdi, rax                                      |     
    0x0040710e call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407113 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407116 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040711a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407123 mov rdi, rax                                      |     rdi = rax;
    0x00407126 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040712c call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407131 mov esi, 0x4e488d                                 |     
    0x00407136 mov edx, 1                                        |     
    0x0040713b mov rdi, rax                                      |     
    0x0040713e call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407143 mov edi, 0x717f30                                 |     
    0x00407148 mov esi, 0x4e488d                                 |     
    0x0040714d mov edx, 1                                        |     
    0x00407152 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00407157 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040715b mov rax, qword [r13]                              |     rax = *(r13);
    0x0040715f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_59:
    0x00407163 lea rdx, [r13 + 0x28]                             |     rdx = r13 + 0x28;
    0x00407167 mov qword [rsp + 0x50], rdx                       |     *((rsp + 0x50)) = rdx;
    0x0040716c movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040716f inc rsi                                           |     rsi++;
    0x00407172 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x00407174 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407177 je 0x40718d                                       |         
    0x00407179 sub ecx, eax                                      |         ecx -= eax;
    0x0040717b cmp esi, ecx                                      |         
                                                                 |         if (esi >= ecx) {
    0x0040717d jge 0x40759a                                      |             goto label_62;
                                                                 |         }
    0x00407183 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407187 je 0x40759a                                       |             goto label_62;
                                                                 |         }
                                                                 |     }
    0x0040718d mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407192 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407195 jle 0x407340                                      |         goto label_63;
                                                                 |     }
    0x0040719b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040719f movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004071a5 xor r15d, r15d                                    |     r15d = 0;
    0x004071a8 lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004071ad lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x004071b2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071b6 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004071bc xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071c0 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004071c6 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071ca movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
                                                                 | label_5:
    0x004071d0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004071d5 mov rsi, qword [rax]                              |     
    0x004071d8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004071e1 mov edx, 0x186a0                                  |     
    0x004071e6 mov rdi, r14                                      |     
    0x004071e9 xor ecx, ecx                                      |     
    0x004071eb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x004071f0 mov ebx, 0x70                                     |     ebx = 0x70;
    0x004071f5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004071fa movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407200 movapd xmm0, xmmword [rip + 0xbdc48]              |     __asm ("movapd xmm0, xmmword [0x004c4e50]");
    0x00407208 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00407210 movapd xmmword [rsp + rbx + 0x90], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0x90], xmm0");
    0x00407219 movapd xmmword [rsp + rbx + 0xa0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xa0], xmm0");
    0x00407222 movapd xmmword [rsp + rbx + 0xb0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xb0], xmm0");
    0x0040722b movapd xmmword [rsp + rbx + 0xc0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xc0], xmm0");
    0x00407234 movapd xmmword [rsp + rbx + 0xd0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xd0], xmm0");
    0x0040723d movapd xmmword [rsp + rbx + 0xe0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xe0], xmm0");
    0x00407246 movapd xmmword [rsp + rbx + 0xf0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xf0], xmm0");
    0x0040724f movapd xmmword [rsp + rbx + 0x100], xmm0          |         __asm ("movapd xmmword [rsp + rbx + 0x100], xmm0");
    0x00407258 sub rbx, 0xffffffffffffff80                       |         rbx -= 0xffffffffffffff80;
    0x0040725c cmp rbx, 0x3ef0                                   |         
    0x00407263 jne 0x407210                                      |         
                                                                 |     } while (rbx != 0x3ef0);
    0x00407265 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040726a subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407270 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x00407276 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040727a movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00407280 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407285 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040728b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407290 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407296 movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x0040729c addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004072a0 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x004072a6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004072ab movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004072b1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004072b6 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004072bc movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004072c2 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004072c6 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004072cc call 0x405b40                                     |     rax = Stopwatch::getCPUTime() ();
    0x004072d1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004072d7 xor ebx, ebx                                      |     ebx = 0;
    0x004072d9 nop dword [rax]                                   |     
                                                                 |     do {
    0x004072e0 lea rdi, [rsp + rbx + 0x100]                      |         
    0x004072e8 mov rsi, rbp                                      |         
    0x004072eb call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x004072f0 add rbx, 0x10                                     |         rbx += 0x10;
    0x004072f4 cmp rbx, 0x3e80                                   |         
    0x004072fb jne 0x4072e0                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x004072fd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407302 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407308 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040730e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407312 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407318 mov rdi, rbp                                      |     
    0x0040731b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00407320 inc r15d                                          |     r15d++;
    0x00407323 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407328 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040732b jl 0x4071d0                                       |         goto label_5;
                                                                 |     }
    0x00407331 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00407336 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00407338 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040733e jmp 0x407362                                      |     goto label_64;
                                                                 | label_63:
    0x00407340 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407344 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040734a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040734e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407354 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407358 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040735e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_64:
    0x00407362 mov rbp, qword [rsp + 0x50]                       |     rbp = *((rsp + 0x50));
    0x00407367 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x0040736c movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407372 mov rax, qword [rip + 0x310bb7]                   |     rax = std::__1::cout;
    0x00407379 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040737d mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407388 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040738d call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407392 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407397 lea rsi, [rsp + 0x60]                             |     
    0x0040739c mov edx, 1                                        |     
    0x004073a1 mov rdi, rax                                      |     
    0x004073a4 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004073a9 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004073ac mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004073b0 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004073b9 mov esi, 0x4c5e86                                 |     
    0x004073be mov edx, 0x12                                     |     
    0x004073c3 mov rdi, rax                                      |     
    0x004073c6 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createDouble(1.23)", 0x12);
    0x004073cb mov esi, 0x4e4950                                 |     
    0x004073d0 mov edx, 1                                        |     
    0x004073d5 mov rdi, rax                                      |     
    0x004073d8 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004073dd mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004073e0 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004073e4 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004073ed mov rdi, rax                                      |     rdi = rax;
    0x004073f0 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004073f6 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004073fb mov esi, 0x4e488d                                 |     
    0x00407400 mov edx, 1                                        |     
    0x00407405 mov rdi, rax                                      |     
    0x00407408 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040740d movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407413 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407418 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040741e mov rax, qword [rip + 0x310b0b]                   |     rax = std::__1::cout;
    0x00407425 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407429 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407434 mov edi, 0x717f30                                 |     
    0x00407439 mov esi, 0x4c8c7d                                 |     
    0x0040743e mov edx, 0xa                                      |     
    0x00407443 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8c7d, 0xa);
    0x00407448 mov esi, 0x4e4950                                 |     
    0x0040744d mov edx, 1                                        |     
    0x00407452 mov rdi, rax                                      |     
    0x00407455 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040745a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040745d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407461 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040746a mov rdi, rax                                      |     rdi = rax;
    0x0040746d movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407473 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407478 mov esi, 0x4e488d                                 |     
    0x0040747d mov edx, 1                                        |     
    0x00407482 mov rdi, rax                                      |     
    0x00407485 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040748a movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407490 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407495 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040749b mov rax, qword [rip + 0x310a8e]                   |     rax = std::__1::cout;
    0x004074a2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004074a6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004074b1 mov edi, 0x717f30                                 |     
    0x004074b6 mov esi, 0x4c8cac                                 |     
    0x004074bb mov edx, 0xb                                      |     
    0x004074c0 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cac, 0xb);
    0x004074c5 mov esi, 0x4e4950                                 |     
    0x004074ca mov edx, 1                                        |     
    0x004074cf mov rdi, rax                                      |     
    0x004074d2 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004074d7 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004074da mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004074de mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004074e7 mov rdi, rax                                      |     rdi = rax;
    0x004074ea movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004074f0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004074f5 mov esi, 0x4e488d                                 |     
    0x004074fa mov edx, 1                                        |     
    0x004074ff mov rdi, rax                                      |     
    0x00407502 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407507 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040750d divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407512 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407518 mov rax, qword [rip + 0x310a11]                   |     rax = std::__1::cout;
    0x0040751f mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407523 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040752e mov edi, 0x717f30                                 |     
    0x00407533 mov esi, 0x4c5e3a                                 |     
    0x00407538 mov edx, 9                                        |     
    0x0040753d call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407542 mov esi, 0x4e4950                                 |     
    0x00407547 mov edx, 1                                        |     
    0x0040754c mov rdi, rax                                      |     
    0x0040754f call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407554 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407557 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040755b mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407564 mov rdi, rax                                      |     rdi = rax;
    0x00407567 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040756d call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407572 mov esi, 0x4e488d                                 |     
    0x00407577 mov edx, 1                                        |     
    0x0040757c mov rdi, rax                                      |     
    0x0040757f call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407584 mov edi, 0x717f30                                 |     
    0x00407589 mov esi, 0x4e488d                                 |     
    0x0040758e mov edx, 1                                        |     
    0x00407593 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00407598 mov esi, dword [rbx]                              |     esi = *(rbx);
                                                                 | label_62:
    0x0040759a inc esi                                           |     esi++;
    0x0040759c mov dword [rbx], esi                              |     *(rbx) = esi;
    0x0040759e mov dword [rsp + 0x60], 0                         |     *((rsp + 0x60)) = 0;
    0x004075a6 lea rsi, [rsp + 0x60]                             |     rsi = rsp + 0x60;
    0x004075ab mov edi, 0x4c5e99                                 |     edi = "1.23456789";
    0x004075b0 call 0x4a4700                                     |     rax = _bid64_from_string ();
    0x004075b5 mov r15, rax                                      |     r15 = rax;
    0x004075b8 test byte [rsp + 0x60], 0x18                      |     
                                                                 |     if ((*((rsp + 0x60)) & 0x18) != 0) {
    0x004075bd je 0x4075ca                                       |         
    0x004075bf call 0x404630                                     |         errno_location ();
    0x004075c4 mov dword [rax], 0x22                             |         *(rax) = 0x22;
                                                                 |     }
    0x004075ca movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x004075ce inc rsi                                           |     rsi++;
    0x004075d1 mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x004075d5 mov rax, qword [r13]                              |     rax = *(r13);
    0x004075d9 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
    0x004075dd cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004075e0 je 0x4075f8                                       |         
    0x004075e2 mov edx, ecx                                      |         edx = ecx;
    0x004075e4 sub edx, eax                                      |         edx -= eax;
    0x004075e6 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004075e8 jge 0x4077b4                                      |             goto label_65;
                                                                 |         }
    0x004075ee cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004075f2 je 0x4077b4                                       |             goto label_65;
                                                                 |         }
                                                                 |     }
    0x004075f8 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004075fd cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407600 jle 0x4077ce                                      |         goto label_66;
                                                                 |     }
    0x00407606 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040760a movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407610 xor r14d, r14d                                    |     r14d = 0;
    0x00407613 lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407618 lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x0040761d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407621 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407627 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040762b movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407631 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407635 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040763b nop dword [rax + rax]                             |     
                                                                 | label_6:
    0x00407640 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407645 mov rsi, qword [rax]                              |     
    0x00407648 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407651 mov edx, 0x186a0                                  |     
    0x00407656 mov rdi, r12                                      |     
    0x00407659 xor ecx, ecx                                      |     
    0x0040765b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407660 mov ebx, 8                                        |     ebx = 8;
    0x00407665 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040766a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407670 mov rdi, r15                                      |         
    0x00407673 mov rsi, rbp                                      |         rsi = rbp;
    0x00407676 call 0x461b30                                     |         rax = BloombergLP::bdld::Datum::createDecimal64(BloombergLP::bdldfp::Decimal_Type64,BloombergLP::bslma::Allocator*) (r15);
    0x0040767b mov qword [rsp + rbx + 0xf8], rax                 |         *((rsp + rbx + 0xf8)) = rax;
    0x00407683 mov qword [rsp + rbx + 0x100], rdx                |         *((rsp + rbx + 0x100)) = rdx;
    0x0040768b add rbx, 0x10                                     |         rbx += 0x10;
    0x0040768f cmp rbx, 0x3e88                                   |         
    0x00407696 jne 0x407670                                      |         
                                                                 |     } while (rbx != 0x3e88);
    0x00407698 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040769d subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004076a3 movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004076a9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076ae movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004076b4 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076b9 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004076bf movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004076c5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076ca movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004076d0 mov al, byte [rip + 0x310942]                     |     al = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004076d6 test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004076d8 je 0x407793                                       |         goto label_67;
                                                                 |     }
                                                                 | label_7:
    0x004076de movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004076e4 addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004076ea movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004076f0 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004076f6 addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004076fc movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407702 mov eax, 0x3e8                                    |     eax = 0x3e8;
    0x00407707 nop word [rax + rax]                              |     
                                                                 |     do {
    0x00407710 add rax, 0xffffffffffffffe7                       |         rax += 0xffffffffffffffe7;
    0x00407714 jne 0x407710                                      |         
                                                                 |     } while (rax != 0);
    0x00407716 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040771b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407721 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00407727 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040772b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00407731 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407736 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040773c xor ebx, ebx                                      |     ebx = 0;
    0x0040773e nop                                               |     
                                                                 |     do {
    0x00407740 lea rdi, [rsp + rbx + 0x100]                      |         
    0x00407748 mov rsi, rbp                                      |         
    0x0040774b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x00407750 add rbx, 0x10                                     |         rbx += 0x10;
    0x00407754 cmp rbx, 0x3e80                                   |         
    0x0040775b jne 0x407740                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x0040775d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407762 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407768 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040776e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407772 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407778 mov rdi, rbp                                      |     
    0x0040777b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00407780 inc r14d                                          |     r14d++;
    0x00407783 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407788 cmp r14d, dword [rax]                             |     
                                                                 |     if (r14d < *(rax)) {
    0x0040778b jl 0x407640                                       |         goto label_6;
                                                                 |     }
    0x00407791 jmp 0x4077be                                      |     goto label_68;
                                                                 | label_67:
    0x00407793 mov edi, 0x718018                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407798 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040779d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040779f je 0x4076de                                       |         goto label_7;
                                                                 |     }
    0x004077a5 mov edi, 0x718018                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004077aa call 0x4042d0                                     |     cxa_guard_release ();
    0x004077af jmp 0x4076de                                      |     goto label_7;
                                                                 | label_65:
    0x004077b4 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x004077b9 jmp 0x407a36                                      |     goto label_69;
                                                                 | label_68:
    0x004077be mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x004077c3 mov esi, dword [r15]                              |     esi = *(r15);
    0x004077c6 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004077cc jmp 0x4077f5                                      |     goto label_70;
                                                                 | label_66:
    0x004077ce xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077d2 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004077d8 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077dc movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004077e2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077e6 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004077ec xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077f0 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
                                                                 | label_70:
    0x004077f5 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004077fb movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407801 mov rax, qword [rip + 0x310728]                   |     rax = std::__1::cout;
    0x00407808 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040780c mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407817 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040781c call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407821 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407826 lea rsi, [rsp + 0x60]                             |     
    0x0040782b mov edx, 1                                        |     
    0x00407830 mov rdi, rax                                      |     
    0x00407833 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00407838 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040783b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040783f mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00407848 mov esi, 0x4c5ea4                                 |     
    0x0040784d mov edx, 0x23                                     |     
    0x00407852 mov rdi, rax                                      |     
    0x00407855 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createDecimal64(aDecimal64, &alloc)", 0x23);
    0x0040785a mov esi, 0x4e4950                                 |     
    0x0040785f mov edx, 1                                        |     
    0x00407864 mov rdi, rax                                      |     
    0x00407867 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040786c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040786f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407873 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040787c mov rdi, rax                                      |     rdi = rax;
    0x0040787f movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407885 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040788a mov esi, 0x4e488d                                 |     
    0x0040788f mov edx, 1                                        |     
    0x00407894 mov rdi, rax                                      |     
    0x00407897 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040789c movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004078a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004078a8 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004078ae mov rax, qword [rip + 0x31067b]                   |     rax = std::__1::cout;
    0x004078b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004078b9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004078c4 mov edi, 0x717f30                                 |     
    0x004078c9 mov esi, 0x4c8b96                                 |     
    0x004078ce mov edx, 0xd                                      |     
    0x004078d3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8b96, 0xd);
    0x004078d8 mov esi, 0x4e4950                                 |     
    0x004078dd mov edx, 1                                        |     
    0x004078e2 mov rdi, rax                                      |     
    0x004078e5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004078ea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004078ed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004078f1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004078fa mov rdi, rax                                      |     rdi = rax;
    0x004078fd movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407903 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407908 mov esi, 0x4e488d                                 |     
    0x0040790d mov edx, 1                                        |     
    0x00407912 mov rdi, rax                                      |     
    0x00407915 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040791a movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407920 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407926 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040792c mov rax, qword [rip + 0x3105fd]                   |     rax = std::__1::cout;
    0x00407933 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407937 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407942 mov edi, 0x717f30                                 |     
    0x00407947 mov esi, 0x4c8bcb                                 |     
    0x0040794c mov edx, 0xe                                      |     
    0x00407951 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8bcb, 0xe);
    0x00407956 mov esi, 0x4e4950                                 |     
    0x0040795b mov edx, 1                                        |     
    0x00407960 mov rdi, rax                                      |     
    0x00407963 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407968 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040796b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040796f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407978 mov rdi, rax                                      |     rdi = rax;
    0x0040797b movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407981 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407986 mov esi, 0x4e488d                                 |     
    0x0040798b mov edx, 1                                        |     
    0x00407990 mov rdi, rax                                      |     
    0x00407993 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407998 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040799e divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004079a4 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004079aa mov rax, qword [rip + 0x31057f]                   |     rax = std::__1::cout;
    0x004079b1 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004079b5 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004079c0 mov edi, 0x717f30                                 |     
    0x004079c5 mov esi, 0x4c5e3a                                 |     
    0x004079ca mov edx, 9                                        |     
    0x004079cf call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x004079d4 mov esi, 0x4e4950                                 |     
    0x004079d9 mov edx, 1                                        |     
    0x004079de mov rdi, rax                                      |     
    0x004079e1 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004079e6 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004079e9 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004079ed mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004079f6 mov rdi, rax                                      |     rdi = rax;
    0x004079f9 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004079ff call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407a04 mov esi, 0x4e488d                                 |     
    0x00407a09 mov edx, 1                                        |     
    0x00407a0e mov rdi, rax                                      |     
    0x00407a11 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407a16 mov edi, 0x717f30                                 |     
    0x00407a1b mov esi, 0x4e488d                                 |     
    0x00407a20 mov edx, 1                                        |     
    0x00407a25 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00407a2a mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00407a2e mov rax, qword [r13]                              |     rax = *(r13);
    0x00407a32 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_69:
    0x00407a36 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00407a39 inc rsi                                           |     rsi++;
    0x00407a3c mov dword [r15], esi                              |     *(r15) = esi;
    0x00407a3f cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407a42 je 0x407a5a                                       |         
    0x00407a44 mov edx, ecx                                      |         edx = ecx;
    0x00407a46 sub edx, eax                                      |         edx -= eax;
    0x00407a48 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00407a4a jge 0x407ef8                                      |             goto label_71;
                                                                 |         }
    0x00407a50 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407a54 je 0x407ef8                                       |             goto label_71;
                                                                 |         }
                                                                 |     }
    0x00407a5a mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407a5f cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407a62 jle 0x407c95                                      |         goto label_72;
                                                                 |     }
    0x00407a68 lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407a6d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a71 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407a77 xor r15d, r15d                                    |     r15d = 0;
    0x00407a7a lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00407a82 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00407a87 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a8b movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407a91 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a95 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407a9b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a9f movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407aa5 nop word cs:[rax + rax]                           |     
    0x00407aaf nop                                               |     
                                                                 | label_10:
    0x00407ab0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407ab5 mov rsi, qword [rax]                              |     
    0x00407ab8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407ac1 mov edx, 0x186a0                                  |     
    0x00407ac6 mov rdi, r12                                      |     
    0x00407ac9 xor ecx, ecx                                      |     
    0x00407acb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407ad0 mov ebp, 8                                        |     
    0x00407ad5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407ada movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407ae0 mov edi, 0x4cba9e                                 |         
    0x00407ae5 mov esi, 1                                        |         
    0x00407aea mov rdx, rbx                                      |         
    0x00407aed call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4cba9e, 1, rbx);
    0x00407af2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00407afa mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00407b02 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407b06 cmp rbp, 0x3e88                                   |         
    0x00407b0d jne 0x407ae0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00407b0f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b14 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407b1a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00407b20 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b25 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407b2b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b30 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407b36 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00407b3c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b41 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407b47 mov al, byte [rip + 0x314353]                     |     al = .comment;
    0x00407b4d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00407b4f je 0x407c53                                       |         goto label_73;
                                                                 |     }
                                                                 | label_11:
    0x00407b55 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407b5b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00407b61 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407b67 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407b6d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00407b73 xor eax, eax                                      |     eax = 0;
    0x00407b75 jmp 0x407baa                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_8:
    0x00407b80 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00407b88 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_9:
    0x00407b90 mov qword [rax + 0x718020], rcx                   |         *((rax + method.BenchmarkSuite.run_int__int__char_::results)) = rcx;
    0x00407b97 mov qword [rax + 0x718028], rdx                   |         *((rax + 0x718028)) = rdx;
    0x00407b9e add rax, 0x10                                     |         rax += 0x10;
    0x00407ba2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00407ba8 je 0x407bd0                                       |             goto label_74;
                                                                 |         }
    0x00407baa movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00407bb2 cmp ecx, 0xe                                      |         
    0x00407bb5 je 0x407b80                                       |         
                                                                 |     }
    0x00407bb7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x00407bba je 0x407b80                                       |         goto label_8;
                                                                 |     }
    0x00407bbc lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00407bc0 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00407bc9 jmp 0x407b90                                      |     goto label_9;
                                                                 | label_74:
    0x00407bd0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407bd6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407bdb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407be1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00407be7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407beb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00407bf1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407bf6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407bfc xor ebp, ebp                                      |     ebp = 0;
    0x00407bfe nop                                               |     
                                                                 |     do {
    0x00407c00 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00407c08 mov rsi, rbx                                      |         
    0x00407c0b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00407c10 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407c14 cmp rbp, 0x3e80                                   |         
    0x00407c1b jne 0x407c00                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00407c1d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407c22 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407c28 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00407c2e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407c32 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407c38 mov rdi, rbx                                      |     
    0x00407c3b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00407c40 inc r15d                                          |     r15d++;
    0x00407c43 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407c48 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00407c4b jl 0x407ab0                                       |         goto label_10;
                                                                 |     }
    0x00407c51 jmp 0x407c85                                      |     goto label_75;
                                                                 | label_73:
    0x00407c53 mov edi, 0x71bea0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407c58 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00407c5d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00407c5f je 0x407b55                                       |         goto label_11;
                                                                 |     }
    0x00407c65 mov edi, 0x718020                                 |     
    0x00407c6a mov edx, 0x3e80                                   |     
    0x00407c6f xor esi, esi                                      |     
    0x00407c71 call 0x404140                                     |     memset (method.BenchmarkSuite.run_int__int__char_::results, 0, 0x3e80);
    0x00407c76 mov edi, 0x71bea0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407c7b call 0x4042d0                                     |     cxa_guard_release ();
    0x00407c80 jmp 0x407b55                                      |     goto label_11;
                                                                 | label_75:
    0x00407c85 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00407c8a mov esi, dword [r15]                              |     esi = *(r15);
    0x00407c8d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407c93 jmp 0x407cb7                                      |     goto label_76;
                                                                 | label_72:
    0x00407c95 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407c99 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407c9f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407ca3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407ca9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407cad movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407cb3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_76:
    0x00407cb7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407cbd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407cc3 mov rax, qword [rip + 0x310266]                   |     rax = std::__1::cout;
    0x00407cca mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407cce mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407cd9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00407cde call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407ce3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407ce8 lea rsi, [rsp + 0x60]                             |     
    0x00407ced mov edx, 1                                        |     
    0x00407cf2 mov rdi, rax                                      |     
    0x00407cf5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00407cfa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407cfd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407d01 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00407d0a mov esi, 0x4c5ec8                                 |     
    0x00407d0f mov edx, 0x17                                     |     
    0x00407d14 mov rdi, rax                                      |     
    0x00407d17 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1\", &alloc)", 0x17);
    0x00407d1c mov esi, 0x4e4950                                 |     
    0x00407d21 mov edx, 1                                        |     
    0x00407d26 mov rdi, rax                                      |     
    0x00407d29 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407d2e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407d31 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407d35 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407d3e mov rdi, rax                                      |     rdi = rax;
    0x00407d41 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407d47 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407d4c mov esi, 0x4e488d                                 |     
    0x00407d51 mov edx, 1                                        |     
    0x00407d56 mov rdi, rax                                      |     
    0x00407d59 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407d5e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407d64 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407d6a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407d70 mov rax, qword [rip + 0x3101b9]                   |     rax = std::__1::cout;
    0x00407d77 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407d7b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407d86 mov edi, 0x717f30                                 |     
    0x00407d8b mov esi, 0x4c8852                                 |     
    0x00407d90 mov edx, 0xa                                      |     
    0x00407d95 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x00407d9a mov esi, 0x4e4950                                 |     
    0x00407d9f mov edx, 1                                        |     
    0x00407da4 mov rdi, rax                                      |     
    0x00407da7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407dac mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407daf mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407db3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407dbc mov rdi, rax                                      |     rdi = rax;
    0x00407dbf movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407dc5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407dca mov esi, 0x4e488d                                 |     
    0x00407dcf mov edx, 1                                        |     
    0x00407dd4 mov rdi, rax                                      |     
    0x00407dd7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407ddc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407de2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407de8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407dee mov rax, qword [rip + 0x31013b]                   |     rax = std::__1::cout;
    0x00407df5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407df9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407e04 mov edi, 0x717f30                                 |     
    0x00407e09 mov esi, 0x4c91f7                                 |     
    0x00407e0e mov edx, 0xb                                      |     
    0x00407e13 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00407e18 mov esi, 0x4e4950                                 |     
    0x00407e1d mov edx, 1                                        |     
    0x00407e22 mov rdi, rax                                      |     
    0x00407e25 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407e2a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407e2d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407e31 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407e3a mov rdi, rax                                      |     rdi = rax;
    0x00407e3d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407e43 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407e48 mov esi, 0x4e488d                                 |     
    0x00407e4d mov edx, 1                                        |     
    0x00407e52 mov rdi, rax                                      |     
    0x00407e55 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407e5a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00407e60 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407e66 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407e6c mov rax, qword [rip + 0x3100bd]                   |     rax = std::__1::cout;
    0x00407e73 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407e77 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407e82 mov edi, 0x717f30                                 |     
    0x00407e87 mov esi, 0x4c5e3a                                 |     
    0x00407e8c mov edx, 9                                        |     
    0x00407e91 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407e96 mov esi, 0x4e4950                                 |     
    0x00407e9b mov edx, 1                                        |     
    0x00407ea0 mov rdi, rax                                      |     
    0x00407ea3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00407ea8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407eab mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407eaf mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407eb8 mov rdi, rax                                      |     rdi = rax;
    0x00407ebb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00407ec1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407ec6 mov esi, 0x4e488d                                 |     
    0x00407ecb mov edx, 1                                        |     
    0x00407ed0 mov rdi, rax                                      |     
    0x00407ed3 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00407ed8 mov edi, 0x717f30                                 |     
    0x00407edd mov esi, 0x4e488d                                 |     
    0x00407ee2 mov edx, 1                                        |     
    0x00407ee7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00407eec mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00407ef0 mov rax, qword [r13]                              |     rax = *(r13);
    0x00407ef4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_71:
    0x00407ef8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00407efb inc rsi                                           |     rsi++;
    0x00407efe mov dword [r15], esi                              |     *(r15) = esi;
    0x00407f01 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407f04 je 0x407f1c                                       |         
    0x00407f06 mov edx, ecx                                      |         edx = ecx;
    0x00407f08 sub edx, eax                                      |         edx -= eax;
    0x00407f0a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00407f0c jge 0x4083b8                                      |             goto label_77;
                                                                 |         }
    0x00407f12 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407f16 je 0x4083b8                                       |             goto label_77;
                                                                 |         }
                                                                 |     }
    0x00407f1c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407f21 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407f24 jle 0x408155                                      |         goto label_78;
                                                                 |     }
    0x00407f2a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407f2f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f33 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407f39 xor r15d, r15d                                    |     r15d = 0;
    0x00407f3c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00407f44 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00407f49 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f4d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407f53 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f57 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407f5d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f61 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407f67 nop word [rax + rax]                              |     
                                                                 | label_14:
    0x00407f70 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407f75 mov rsi, qword [rax]                              |     
    0x00407f78 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407f81 mov edx, 0x186a0                                  |     
    0x00407f86 mov rdi, r12                                      |     
    0x00407f89 xor ecx, ecx                                      |     
    0x00407f8b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407f90 mov ebp, 8                                        |     
    0x00407f95 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407f9a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407fa0 mov edi, 0x4cba9e                                 |         
    0x00407fa5 mov esi, 1                                        |         
    0x00407faa mov rdx, rbx                                      |         
    0x00407fad call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4cba9e, 1, rbx);
    0x00407fb2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00407fba mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00407fc2 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407fc6 cmp rbp, 0x3e88                                   |         
    0x00407fcd jne 0x407fa0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00407fcf call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407fd4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407fda movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00407fe0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407fe5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407feb call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407ff0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407ff6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00407ffc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408001 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408007 mov al, byte [rip + 0x317d23]                     |     al = .comment;
    0x0040800d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040800f je 0x408113                                       |         goto label_79;
                                                                 |     }
                                                                 | label_15:
    0x00408015 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040801b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00408021 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408027 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040802d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00408033 xor eax, eax                                      |     eax = 0;
    0x00408035 jmp 0x40806a                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_12:
    0x00408040 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408048 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_13:
    0x00408050 mov qword [rax + 0x71beb0], rcx                   |         *((rax + 0x71beb0)) = rcx;
    0x00408057 mov qword [rax + 0x71beb8], rdx                   |         *((rax + 0x71beb8)) = rdx;
    0x0040805e add rax, 0x10                                     |         rax += 0x10;
    0x00408062 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408068 je 0x408090                                       |             goto label_80;
                                                                 |         }
    0x0040806a movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00408072 cmp ecx, 0xe                                      |         
    0x00408075 je 0x408040                                       |         
                                                                 |     }
    0x00408077 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040807a je 0x408040                                       |         goto label_12;
                                                                 |     }
    0x0040807c lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408080 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408089 jmp 0x408050                                      |     goto label_13;
                                                                 | label_80:
    0x00408090 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408096 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040809b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004080a1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004080a7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004080ab movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004080b1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004080b6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004080bc xor ebp, ebp                                      |     ebp = 0;
    0x004080be nop                                               |     
                                                                 |     do {
    0x004080c0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004080c8 mov rsi, rbx                                      |         
    0x004080cb call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x004080d0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004080d4 cmp rbp, 0x3e80                                   |         
    0x004080db jne 0x4080c0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004080dd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004080e2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004080e8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x004080ee addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004080f2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x004080f8 mov rdi, rbx                                      |     
    0x004080fb call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408100 inc r15d                                          |     r15d++;
    0x00408103 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408108 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040810b jl 0x407f70                                       |         goto label_14;
                                                                 |     }
    0x00408111 jmp 0x408145                                      |     goto label_81;
                                                                 | label_79:
    0x00408113 mov edi, 0x71fd30                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408118 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040811d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040811f je 0x408015                                       |         goto label_15;
                                                                 |     }
    0x00408125 mov edi, 0x71beb0                                 |     
    0x0040812a mov edx, 0x3e80                                   |     
    0x0040812f xor esi, esi                                      |     
    0x00408131 call 0x404140                                     |     memset (0x71beb0, 0, 0x3e80);
    0x00408136 mov edi, 0x71fd30                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040813b call 0x4042d0                                     |     cxa_guard_release ();
    0x00408140 jmp 0x408015                                      |     goto label_15;
                                                                 | label_81:
    0x00408145 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040814a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040814d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408153 jmp 0x408177                                      |     goto label_82;
                                                                 | label_78:
    0x00408155 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408159 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040815f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408163 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408169 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040816d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408173 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_82:
    0x00408177 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040817d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408183 mov rax, qword [rip + 0x30fda6]                   |     rax = std::__1::cout;
    0x0040818a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040818e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408199 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040819e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004081a3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004081a8 lea rsi, [rsp + 0x60]                             |     
    0x004081ad mov edx, 1                                        |     
    0x004081b2 mov rdi, rax                                      |     
    0x004081b5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004081ba mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004081bd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004081c1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004081ca mov esi, 0x4c5ec8                                 |     
    0x004081cf mov edx, 0x17                                     |     
    0x004081d4 mov rdi, rax                                      |     
    0x004081d7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1\", &alloc)", 0x17);
    0x004081dc mov esi, 0x4e4950                                 |     
    0x004081e1 mov edx, 1                                        |     
    0x004081e6 mov rdi, rax                                      |     
    0x004081e9 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004081ee mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004081f1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004081f5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004081fe mov rdi, rax                                      |     rdi = rax;
    0x00408201 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408207 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040820c mov esi, 0x4e488d                                 |     
    0x00408211 mov edx, 1                                        |     
    0x00408216 mov rdi, rax                                      |     
    0x00408219 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040821e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408224 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040822a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408230 mov rax, qword [rip + 0x30fcf9]                   |     rax = std::__1::cout;
    0x00408237 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040823b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408246 mov edi, 0x717f30                                 |     
    0x0040824b mov esi, 0x4c8852                                 |     
    0x00408250 mov edx, 0xa                                      |     
    0x00408255 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040825a mov esi, 0x4e4950                                 |     
    0x0040825f mov edx, 1                                        |     
    0x00408264 mov rdi, rax                                      |     
    0x00408267 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040826c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040826f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408273 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040827c mov rdi, rax                                      |     rdi = rax;
    0x0040827f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408285 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040828a mov esi, 0x4e488d                                 |     
    0x0040828f mov edx, 1                                        |     
    0x00408294 mov rdi, rax                                      |     
    0x00408297 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040829c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004082a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004082a8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004082ae mov rax, qword [rip + 0x30fc7b]                   |     rax = std::__1::cout;
    0x004082b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004082b9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004082c4 mov edi, 0x717f30                                 |     
    0x004082c9 mov esi, 0x4c91f7                                 |     
    0x004082ce mov edx, 0xb                                      |     
    0x004082d3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x004082d8 mov esi, 0x4e4950                                 |     
    0x004082dd mov edx, 1                                        |     
    0x004082e2 mov rdi, rax                                      |     
    0x004082e5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004082ea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004082ed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004082f1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004082fa mov rdi, rax                                      |     rdi = rax;
    0x004082fd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408303 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408308 mov esi, 0x4e488d                                 |     
    0x0040830d mov edx, 1                                        |     
    0x00408312 mov rdi, rax                                      |     
    0x00408315 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040831a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408320 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408326 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040832c mov rax, qword [rip + 0x30fbfd]                   |     rax = std::__1::cout;
    0x00408333 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408337 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408342 mov edi, 0x717f30                                 |     
    0x00408347 mov esi, 0x4c5e3a                                 |     
    0x0040834c mov edx, 9                                        |     
    0x00408351 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408356 mov esi, 0x4e4950                                 |     
    0x0040835b mov edx, 1                                        |     
    0x00408360 mov rdi, rax                                      |     
    0x00408363 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408368 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040836b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040836f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408378 mov rdi, rax                                      |     rdi = rax;
    0x0040837b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408381 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408386 mov esi, 0x4e488d                                 |     
    0x0040838b mov edx, 1                                        |     
    0x00408390 mov rdi, rax                                      |     
    0x00408393 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408398 mov edi, 0x717f30                                 |     
    0x0040839d mov esi, 0x4e488d                                 |     
    0x004083a2 mov edx, 1                                        |     
    0x004083a7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x004083ac mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004083b0 mov rax, qword [r13]                              |     rax = *(r13);
    0x004083b4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_77:
    0x004083b8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004083bb inc rsi                                           |     rsi++;
    0x004083be mov dword [r15], esi                              |     *(r15) = esi;
    0x004083c1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004083c4 je 0x4083dc                                       |         
    0x004083c6 mov edx, ecx                                      |         edx = ecx;
    0x004083c8 sub edx, eax                                      |         edx -= eax;
    0x004083ca cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004083cc jge 0x408878                                      |             goto label_83;
                                                                 |         }
    0x004083d2 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004083d6 je 0x408878                                       |             goto label_83;
                                                                 |         }
                                                                 |     }
    0x004083dc mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004083e1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004083e4 jle 0x408615                                      |         goto label_84;
                                                                 |     }
    0x004083ea lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x004083ef xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004083f3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004083f9 xor r15d, r15d                                    |     r15d = 0;
    0x004083fc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00408404 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00408409 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040840d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408413 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408417 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040841d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408421 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408427 nop word [rax + rax]                              |     
                                                                 | label_18:
    0x00408430 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00408435 mov rsi, qword [rax]                              |     
    0x00408438 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408441 mov edx, 0x186a0                                  |     
    0x00408446 mov rdi, r12                                      |     
    0x00408449 xor ecx, ecx                                      |     
    0x0040844b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408450 mov ebp, 8                                        |     
    0x00408455 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040845a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408460 mov edi, 0x4c5db2                                 |         
    0x00408465 mov esi, 2                                        |         
    0x0040846a mov rdx, rbx                                      |         
    0x0040846d call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4c5db2, 2, rbx);
    0x00408472 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040847a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00408482 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408486 cmp rbp, 0x3e88                                   |         
    0x0040848d jne 0x408460                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040848f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408494 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040849a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004084a0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084a5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004084ab call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084b0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004084b6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004084bc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084c1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004084c7 mov al, byte [rip + 0x31b6f3]                     |     al = .comment;
    0x004084cd test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004084cf je 0x4085d3                                       |         goto label_85;
                                                                 |     }
                                                                 | label_19:
    0x004084d5 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004084db addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004084e1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004084e7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004084ed addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004084f3 xor eax, eax                                      |     eax = 0;
    0x004084f5 jmp 0x40852a                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_16:
    0x00408500 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408508 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_17:
    0x00408510 mov qword [rax + 0x71fd40], rcx                   |         *((rax + 0x71fd40)) = rcx;
    0x00408517 mov qword [rax + 0x71fd48], rdx                   |         *((rax + 0x71fd48)) = rdx;
    0x0040851e add rax, 0x10                                     |         rax += 0x10;
    0x00408522 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408528 je 0x408550                                       |             goto label_86;
                                                                 |         }
    0x0040852a movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00408532 cmp ecx, 0xe                                      |         
    0x00408535 je 0x408500                                       |         
                                                                 |     }
    0x00408537 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040853a je 0x408500                                       |         goto label_16;
                                                                 |     }
    0x0040853c lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408540 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408549 jmp 0x408510                                      |     goto label_17;
                                                                 | label_86:
    0x00408550 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408556 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040855b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408561 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408567 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040856b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00408571 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408576 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040857c xor ebp, ebp                                      |     ebp = 0;
    0x0040857e nop                                               |     
                                                                 |     do {
    0x00408580 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00408588 mov rsi, rbx                                      |         
    0x0040858b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00408590 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408594 cmp rbp, 0x3e80                                   |         
    0x0040859b jne 0x408580                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040859d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004085a2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004085a8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x004085ae addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004085b2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x004085b8 mov rdi, rbx                                      |     
    0x004085bb call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x004085c0 inc r15d                                          |     r15d++;
    0x004085c3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004085c8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x004085cb jl 0x408430                                       |         goto label_18;
                                                                 |     }
    0x004085d1 jmp 0x408605                                      |     goto label_87;
                                                                 | label_85:
    0x004085d3 mov edi, 0x723bc0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004085d8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x004085dd test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x004085df je 0x4084d5                                       |         goto label_19;
                                                                 |     }
    0x004085e5 mov edi, 0x71fd40                                 |     
    0x004085ea mov edx, 0x3e80                                   |     
    0x004085ef xor esi, esi                                      |     
    0x004085f1 call 0x404140                                     |     memset (0x71fd40, 0, 0x3e80);
    0x004085f6 mov edi, 0x723bc0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004085fb call 0x4042d0                                     |     cxa_guard_release ();
    0x00408600 jmp 0x4084d5                                      |     goto label_19;
                                                                 | label_87:
    0x00408605 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040860a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040860d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408613 jmp 0x408637                                      |     goto label_88;
                                                                 | label_84:
    0x00408615 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408619 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040861f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408623 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408629 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040862d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408633 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_88:
    0x00408637 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040863d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408643 mov rax, qword [rip + 0x30f8e6]                   |     rax = std::__1::cout;
    0x0040864a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040864e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408659 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040865e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408663 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00408668 lea rsi, [rsp + 0x60]                             |     
    0x0040866d mov edx, 1                                        |     
    0x00408672 mov rdi, rax                                      |     
    0x00408675 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040867a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040867d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408681 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040868a mov esi, 0x4c5ee0                                 |     
    0x0040868f mov edx, 0x18                                     |     
    0x00408694 mov rdi, rax                                      |     
    0x00408697 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"12\", &alloc)", 0x18);
    0x0040869c mov esi, 0x4e4950                                 |     
    0x004086a1 mov edx, 1                                        |     
    0x004086a6 mov rdi, rax                                      |     
    0x004086a9 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004086ae mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004086b1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004086b5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004086be mov rdi, rax                                      |     rdi = rax;
    0x004086c1 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004086c7 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004086cc mov esi, 0x4e488d                                 |     
    0x004086d1 mov edx, 1                                        |     
    0x004086d6 mov rdi, rax                                      |     
    0x004086d9 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004086de movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004086e4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004086ea movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004086f0 mov rax, qword [rip + 0x30f839]                   |     rax = std::__1::cout;
    0x004086f7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004086fb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408706 mov edi, 0x717f30                                 |     
    0x0040870b mov esi, 0x4c8852                                 |     
    0x00408710 mov edx, 0xa                                      |     
    0x00408715 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040871a mov esi, 0x4e4950                                 |     
    0x0040871f mov edx, 1                                        |     
    0x00408724 mov rdi, rax                                      |     
    0x00408727 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040872c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040872f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408733 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040873c mov rdi, rax                                      |     rdi = rax;
    0x0040873f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408745 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040874a mov esi, 0x4e488d                                 |     
    0x0040874f mov edx, 1                                        |     
    0x00408754 mov rdi, rax                                      |     
    0x00408757 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040875c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408762 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408768 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040876e mov rax, qword [rip + 0x30f7bb]                   |     rax = std::__1::cout;
    0x00408775 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408779 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408784 mov edi, 0x717f30                                 |     
    0x00408789 mov esi, 0x4c91f7                                 |     
    0x0040878e mov edx, 0xb                                      |     
    0x00408793 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00408798 mov esi, 0x4e4950                                 |     
    0x0040879d mov edx, 1                                        |     
    0x004087a2 mov rdi, rax                                      |     
    0x004087a5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004087aa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004087ad mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004087b1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004087ba mov rdi, rax                                      |     rdi = rax;
    0x004087bd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004087c3 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004087c8 mov esi, 0x4e488d                                 |     
    0x004087cd mov edx, 1                                        |     
    0x004087d2 mov rdi, rax                                      |     
    0x004087d5 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004087da movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004087e0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004087e6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004087ec mov rax, qword [rip + 0x30f73d]                   |     rax = std::__1::cout;
    0x004087f3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004087f7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408802 mov edi, 0x717f30                                 |     
    0x00408807 mov esi, 0x4c5e3a                                 |     
    0x0040880c mov edx, 9                                        |     
    0x00408811 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408816 mov esi, 0x4e4950                                 |     
    0x0040881b mov edx, 1                                        |     
    0x00408820 mov rdi, rax                                      |     
    0x00408823 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408828 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040882b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040882f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408838 mov rdi, rax                                      |     rdi = rax;
    0x0040883b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408841 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408846 mov esi, 0x4e488d                                 |     
    0x0040884b mov edx, 1                                        |     
    0x00408850 mov rdi, rax                                      |     
    0x00408853 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408858 mov edi, 0x717f30                                 |     
    0x0040885d mov esi, 0x4e488d                                 |     
    0x00408862 mov edx, 1                                        |     
    0x00408867 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x0040886c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00408870 mov rax, qword [r13]                              |     rax = *(r13);
    0x00408874 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_83:
    0x00408878 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040887b inc rsi                                           |     rsi++;
    0x0040887e mov dword [r15], esi                              |     *(r15) = esi;
    0x00408881 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00408884 je 0x40889c                                       |         
    0x00408886 mov edx, ecx                                      |         edx = ecx;
    0x00408888 sub edx, eax                                      |         edx -= eax;
    0x0040888a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040888c jge 0x408d38                                      |             goto label_89;
                                                                 |         }
    0x00408892 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00408896 je 0x408d38                                       |             goto label_89;
                                                                 |         }
                                                                 |     }
    0x0040889c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004088a1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004088a4 jle 0x408ad5                                      |         goto label_90;
                                                                 |     }
    0x004088aa lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x004088af xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088b3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004088b9 xor r15d, r15d                                    |     r15d = 0;
    0x004088bc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x004088c4 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x004088c9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088cd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004088d3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088d7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004088dd xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088e1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004088e7 nop word [rax + rax]                              |     
                                                                 | label_22:
    0x004088f0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004088f5 mov rsi, qword [rax]                              |     
    0x004088f8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408901 mov edx, 0x186a0                                  |     
    0x00408906 mov rdi, r12                                      |     
    0x00408909 xor ecx, ecx                                      |     
    0x0040890b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408910 mov ebp, 8                                        |     
    0x00408915 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040891a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408920 mov edi, 0x4c5db5                                 |         
    0x00408925 mov esi, 3                                        |         
    0x0040892a mov rdx, rbx                                      |         
    0x0040892d call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4c5db5, 3, rbx);
    0x00408932 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040893a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00408942 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408946 cmp rbp, 0x3e88                                   |         
    0x0040894d jne 0x408920                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040894f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408954 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040895a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00408960 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408965 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040896b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408970 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408976 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040897c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408981 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408987 mov al, byte [rip + 0x31f0c3]                     |     al = .comment;
    0x0040898d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040898f je 0x408a93                                       |         goto label_91;
                                                                 |     }
                                                                 | label_23:
    0x00408995 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040899b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004089a1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004089a7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004089ad addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004089b3 xor eax, eax                                      |     eax = 0;
    0x004089b5 jmp 0x4089ea                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_20:
    0x004089c0 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x004089c8 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_21:
    0x004089d0 mov qword [rax + 0x723bd0], rcx                   |         *((rax + 0x723bd0)) = rcx;
    0x004089d7 mov qword [rax + 0x723bd8], rdx                   |         *((rax + 0x723bd8)) = rdx;
    0x004089de add rax, 0x10                                     |         rax += 0x10;
    0x004089e2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x004089e8 je 0x408a10                                       |             goto label_92;
                                                                 |         }
    0x004089ea movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x004089f2 cmp ecx, 0xe                                      |         
    0x004089f5 je 0x4089c0                                       |         
                                                                 |     }
    0x004089f7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x004089fa je 0x4089c0                                       |         goto label_20;
                                                                 |     }
    0x004089fc lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408a00 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408a09 jmp 0x4089d0                                      |     goto label_21;
                                                                 | label_92:
    0x00408a10 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408a16 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408a1b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408a21 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408a27 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408a2b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00408a31 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408a36 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408a3c xor ebp, ebp                                      |     ebp = 0;
    0x00408a3e nop                                               |     
                                                                 |     do {
    0x00408a40 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00408a48 mov rsi, rbx                                      |         
    0x00408a4b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00408a50 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408a54 cmp rbp, 0x3e80                                   |         
    0x00408a5b jne 0x408a40                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00408a5d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408a62 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408a68 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00408a6e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408a72 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00408a78 mov rdi, rbx                                      |     
    0x00408a7b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408a80 inc r15d                                          |     r15d++;
    0x00408a83 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408a88 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00408a8b jl 0x4088f0                                       |         goto label_22;
                                                                 |     }
    0x00408a91 jmp 0x408ac5                                      |     goto label_93;
                                                                 | label_91:
    0x00408a93 mov edi, 0x727a50                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408a98 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00408a9d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00408a9f je 0x408995                                       |         goto label_23;
                                                                 |     }
    0x00408aa5 mov edi, 0x723bd0                                 |     
    0x00408aaa mov edx, 0x3e80                                   |     
    0x00408aaf xor esi, esi                                      |     
    0x00408ab1 call 0x404140                                     |     memset (0x723bd0, 0, 0x3e80);
    0x00408ab6 mov edi, 0x727a50                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408abb call 0x4042d0                                     |     cxa_guard_release ();
    0x00408ac0 jmp 0x408995                                      |     goto label_23;
                                                                 | label_93:
    0x00408ac5 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00408aca mov esi, dword [r15]                              |     esi = *(r15);
    0x00408acd movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408ad3 jmp 0x408af7                                      |     goto label_94;
                                                                 | label_90:
    0x00408ad5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408ad9 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408adf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408ae3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408ae9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408aed movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408af3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_94:
    0x00408af7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408afd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408b03 mov rax, qword [rip + 0x30f426]                   |     rax = std::__1::cout;
    0x00408b0a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408b0e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408b19 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00408b1e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408b23 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00408b28 lea rsi, [rsp + 0x60]                             |     
    0x00408b2d mov edx, 1                                        |     
    0x00408b32 mov rdi, rax                                      |     
    0x00408b35 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00408b3a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408b3d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408b41 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00408b4a mov esi, 0x4c5ef9                                 |     
    0x00408b4f mov edx, 0x19                                     |     
    0x00408b54 mov rdi, rax                                      |     
    0x00408b57 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"123\", &alloc)", 0x19);
    0x00408b5c mov esi, 0x4e4950                                 |     
    0x00408b61 mov edx, 1                                        |     
    0x00408b66 mov rdi, rax                                      |     
    0x00408b69 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408b6e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408b71 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408b75 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408b7e mov rdi, rax                                      |     rdi = rax;
    0x00408b81 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408b87 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408b8c mov esi, 0x4e488d                                 |     
    0x00408b91 mov edx, 1                                        |     
    0x00408b96 mov rdi, rax                                      |     
    0x00408b99 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408b9e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408ba4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408baa movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408bb0 mov rax, qword [rip + 0x30f379]                   |     rax = std::__1::cout;
    0x00408bb7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408bbb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408bc6 mov edi, 0x717f30                                 |     
    0x00408bcb mov esi, 0x4c8852                                 |     
    0x00408bd0 mov edx, 0xa                                      |     
    0x00408bd5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x00408bda mov esi, 0x4e4950                                 |     
    0x00408bdf mov edx, 1                                        |     
    0x00408be4 mov rdi, rax                                      |     
    0x00408be7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408bec mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408bef mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408bf3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408bfc mov rdi, rax                                      |     rdi = rax;
    0x00408bff movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408c05 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408c0a mov esi, 0x4e488d                                 |     
    0x00408c0f mov edx, 1                                        |     
    0x00408c14 mov rdi, rax                                      |     
    0x00408c17 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408c1c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408c22 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408c28 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408c2e mov rax, qword [rip + 0x30f2fb]                   |     rax = std::__1::cout;
    0x00408c35 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408c39 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408c44 mov edi, 0x717f30                                 |     
    0x00408c49 mov esi, 0x4c91f7                                 |     
    0x00408c4e mov edx, 0xb                                      |     
    0x00408c53 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00408c58 mov esi, 0x4e4950                                 |     
    0x00408c5d mov edx, 1                                        |     
    0x00408c62 mov rdi, rax                                      |     
    0x00408c65 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408c6a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408c6d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408c71 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408c7a mov rdi, rax                                      |     rdi = rax;
    0x00408c7d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408c83 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408c88 mov esi, 0x4e488d                                 |     
    0x00408c8d mov edx, 1                                        |     
    0x00408c92 mov rdi, rax                                      |     
    0x00408c95 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408c9a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408ca0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408ca6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408cac mov rax, qword [rip + 0x30f27d]                   |     rax = std::__1::cout;
    0x00408cb3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408cb7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408cc2 mov edi, 0x717f30                                 |     
    0x00408cc7 mov esi, 0x4c5e3a                                 |     
    0x00408ccc mov edx, 9                                        |     
    0x00408cd1 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408cd6 mov esi, 0x4e4950                                 |     
    0x00408cdb mov edx, 1                                        |     
    0x00408ce0 mov rdi, rax                                      |     
    0x00408ce3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00408ce8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408ceb mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408cef mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408cf8 mov rdi, rax                                      |     rdi = rax;
    0x00408cfb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408d01 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408d06 mov esi, 0x4e488d                                 |     
    0x00408d0b mov edx, 1                                        |     
    0x00408d10 mov rdi, rax                                      |     
    0x00408d13 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00408d18 mov edi, 0x717f30                                 |     
    0x00408d1d mov esi, 0x4e488d                                 |     
    0x00408d22 mov edx, 1                                        |     
    0x00408d27 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00408d2c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00408d30 mov rax, qword [r13]                              |     rax = *(r13);
    0x00408d34 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_89:
    0x00408d38 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00408d3b inc rsi                                           |     rsi++;
    0x00408d3e mov dword [r15], esi                              |     *(r15) = esi;
    0x00408d41 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00408d44 je 0x408d5c                                       |         
    0x00408d46 mov edx, ecx                                      |         edx = ecx;
    0x00408d48 sub edx, eax                                      |         edx -= eax;
    0x00408d4a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00408d4c jge 0x4091f8                                      |             goto label_95;
                                                                 |         }
    0x00408d52 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00408d56 je 0x4091f8                                       |             goto label_95;
                                                                 |         }
                                                                 |     }
    0x00408d5c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408d61 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00408d64 jle 0x408f95                                      |         goto label_96;
                                                                 |     }
    0x00408d6a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00408d6f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408d73 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408d79 xor r15d, r15d                                    |     r15d = 0;
    0x00408d7c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00408d84 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00408d89 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408d8d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408d93 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408d97 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408d9d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408da1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408da7 nop word [rax + rax]                              |     
                                                                 | label_26:
    0x00408db0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00408db5 mov rsi, qword [rax]                              |     
    0x00408db8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408dc1 mov edx, 0x186a0                                  |     
    0x00408dc6 mov rdi, r12                                      |     
    0x00408dc9 xor ecx, ecx                                      |     
    0x00408dcb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408dd0 mov ebp, 8                                        |     
    0x00408dd5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408dda movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408de0 mov edi, 0x4c5db9                                 |         
    0x00408de5 mov esi, 4                                        |         
    0x00408dea mov rdx, rbx                                      |         
    0x00408ded call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("1234", 4, rbx);
    0x00408df2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00408dfa mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00408e02 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408e06 cmp rbp, 0x3e88                                   |         
    0x00408e0d jne 0x408de0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00408e0f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e14 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408e1a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00408e20 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e25 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408e2b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e30 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408e36 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00408e3c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e41 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408e47 mov al, byte [rip + 0x322a93]                     |     al = .comment;
    0x00408e4d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00408e4f je 0x408f53                                       |         goto label_97;
                                                                 |     }
                                                                 | label_27:
    0x00408e55 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408e5b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00408e61 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408e67 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408e6d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00408e73 xor eax, eax                                      |     eax = 0;
    0x00408e75 jmp 0x408eaa                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_24:
    0x00408e80 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408e88 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_25:
    0x00408e90 mov qword [rax + 0x727a60], rcx                   |         *((rax + 0x727a60)) = rcx;
    0x00408e97 mov qword [rax + 0x727a68], rdx                   |         *((rax + 0x727a68)) = rdx;
    0x00408e9e add rax, 0x10                                     |         rax += 0x10;
    0x00408ea2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408ea8 je 0x408ed0                                       |             goto label_98;
                                                                 |         }
    0x00408eaa movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00408eb2 cmp ecx, 0xe                                      |         
    0x00408eb5 je 0x408e80                                       |         
                                                                 |     }
    0x00408eb7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x00408eba je 0x408e80                                       |         goto label_24;
                                                                 |     }
    0x00408ebc lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408ec0 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408ec9 jmp 0x408e90                                      |     goto label_25;
                                                                 | label_98:
    0x00408ed0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408ed6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408edb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408ee1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408ee7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408eeb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00408ef1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408ef6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408efc xor ebp, ebp                                      |     ebp = 0;
    0x00408efe nop                                               |     
                                                                 |     do {
    0x00408f00 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00408f08 mov rsi, rbx                                      |         
    0x00408f0b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00408f10 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408f14 cmp rbp, 0x3e80                                   |         
    0x00408f1b jne 0x408f00                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00408f1d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408f22 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408f28 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00408f2e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408f32 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00408f38 mov rdi, rbx                                      |     
    0x00408f3b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408f40 inc r15d                                          |     r15d++;
    0x00408f43 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408f48 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00408f4b jl 0x408db0                                       |         goto label_26;
                                                                 |     }
    0x00408f51 jmp 0x408f85                                      |     goto label_99;
                                                                 | label_97:
    0x00408f53 mov edi, 0x72b8e0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408f58 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00408f5d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00408f5f je 0x408e55                                       |         goto label_27;
                                                                 |     }
    0x00408f65 mov edi, 0x727a60                                 |     
    0x00408f6a mov edx, 0x3e80                                   |     
    0x00408f6f xor esi, esi                                      |     
    0x00408f71 call 0x404140                                     |     memset (0x727a60, 0, 0x3e80);
    0x00408f76 mov edi, 0x72b8e0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408f7b call 0x4042d0                                     |     cxa_guard_release ();
    0x00408f80 jmp 0x408e55                                      |     goto label_27;
                                                                 | label_99:
    0x00408f85 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00408f8a mov esi, dword [r15]                              |     esi = *(r15);
    0x00408f8d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408f93 jmp 0x408fb7                                      |     goto label_100;
                                                                 | label_96:
    0x00408f95 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408f99 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408f9f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408fa3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408fa9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408fad movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408fb3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_100:
    0x00408fb7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408fbd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408fc3 mov rax, qword [rip + 0x30ef66]                   |     rax = std::__1::cout;
    0x00408fca mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408fce mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408fd9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00408fde call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408fe3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00408fe8 lea rsi, [rsp + 0x60]                             |     
    0x00408fed mov edx, 1                                        |     
    0x00408ff2 mov rdi, rax                                      |     
    0x00408ff5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00408ffa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408ffd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409001 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040900a mov esi, 0x4c5f13                                 |     
    0x0040900f mov edx, 0x1a                                     |     
    0x00409014 mov rdi, rax                                      |     
    0x00409017 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1234\", &alloc)", 0x1a);
    0x0040901c mov esi, 0x4e4950                                 |     
    0x00409021 mov edx, 1                                        |     
    0x00409026 mov rdi, rax                                      |     
    0x00409029 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040902e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409031 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409035 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040903e mov rdi, rax                                      |     rdi = rax;
    0x00409041 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409047 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040904c mov esi, 0x4e488d                                 |     
    0x00409051 mov edx, 1                                        |     
    0x00409056 mov rdi, rax                                      |     
    0x00409059 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040905e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409064 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040906a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409070 mov rax, qword [rip + 0x30eeb9]                   |     rax = std::__1::cout;
    0x00409077 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040907b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409086 mov edi, 0x717f30                                 |     
    0x0040908b mov esi, 0x4c8852                                 |     
    0x00409090 mov edx, 0xa                                      |     
    0x00409095 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040909a mov esi, 0x4e4950                                 |     
    0x0040909f mov edx, 1                                        |     
    0x004090a4 mov rdi, rax                                      |     
    0x004090a7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004090ac mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004090af mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004090b3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004090bc mov rdi, rax                                      |     rdi = rax;
    0x004090bf movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004090c5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004090ca mov esi, 0x4e488d                                 |     
    0x004090cf mov edx, 1                                        |     
    0x004090d4 mov rdi, rax                                      |     
    0x004090d7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004090dc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004090e2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004090e8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004090ee mov rax, qword [rip + 0x30ee3b]                   |     rax = std::__1::cout;
    0x004090f5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004090f9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409104 mov edi, 0x717f30                                 |     
    0x00409109 mov esi, 0x4c91f7                                 |     
    0x0040910e mov edx, 0xb                                      |     
    0x00409113 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00409118 mov esi, 0x4e4950                                 |     
    0x0040911d mov edx, 1                                        |     
    0x00409122 mov rdi, rax                                      |     
    0x00409125 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040912a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040912d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409131 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040913a mov rdi, rax                                      |     rdi = rax;
    0x0040913d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409143 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409148 mov esi, 0x4e488d                                 |     
    0x0040914d mov edx, 1                                        |     
    0x00409152 mov rdi, rax                                      |     
    0x00409155 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040915a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409160 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409166 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040916c mov rax, qword [rip + 0x30edbd]                   |     rax = std::__1::cout;
    0x00409173 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409177 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409182 mov edi, 0x717f30                                 |     
    0x00409187 mov esi, 0x4c5e3a                                 |     
    0x0040918c mov edx, 9                                        |     
    0x00409191 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00409196 mov esi, 0x4e4950                                 |     
    0x0040919b mov edx, 1                                        |     
    0x004091a0 mov rdi, rax                                      |     
    0x004091a3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004091a8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004091ab mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004091af mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004091b8 mov rdi, rax                                      |     rdi = rax;
    0x004091bb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004091c1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004091c6 mov esi, 0x4e488d                                 |     
    0x004091cb mov edx, 1                                        |     
    0x004091d0 mov rdi, rax                                      |     
    0x004091d3 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004091d8 mov edi, 0x717f30                                 |     
    0x004091dd mov esi, 0x4e488d                                 |     
    0x004091e2 mov edx, 1                                        |     
    0x004091e7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x004091ec mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004091f0 mov rax, qword [r13]                              |     rax = *(r13);
    0x004091f4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_95:
    0x004091f8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004091fb inc rsi                                           |     rsi++;
    0x004091fe mov dword [r15], esi                              |     *(r15) = esi;
    0x00409201 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00409204 je 0x40921c                                       |         
    0x00409206 mov edx, ecx                                      |         edx = ecx;
    0x00409208 sub edx, eax                                      |         edx -= eax;
    0x0040920a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040920c jge 0x4096b8                                      |             goto label_101;
                                                                 |         }
    0x00409212 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00409216 je 0x4096b8                                       |             goto label_101;
                                                                 |         }
                                                                 |     }
    0x0040921c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409221 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00409224 jle 0x409455                                      |         goto label_102;
                                                                 |     }
    0x0040922a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040922f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409233 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409239 xor r15d, r15d                                    |     r15d = 0;
    0x0040923c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409244 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409249 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040924d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409253 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409257 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040925d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409261 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409267 nop word [rax + rax]                              |     
                                                                 | label_30:
    0x00409270 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00409275 mov rsi, qword [rax]                              |     
    0x00409278 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00409281 mov edx, 0x186a0                                  |     
    0x00409286 mov rdi, r12                                      |     
    0x00409289 xor ecx, ecx                                      |     
    0x0040928b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00409290 mov ebp, 8                                        |     
    0x00409295 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040929a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x004092a0 mov edi, 0x4cbbad                                 |         
    0x004092a5 mov esi, 5                                        |         
    0x004092aa mov rdx, rbx                                      |         
    0x004092ad call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("12345", 5, rbx);
    0x004092b2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x004092ba mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x004092c2 add rbp, 0x10                                     |         rbp += 0x10;
    0x004092c6 cmp rbp, 0x3e88                                   |         
    0x004092cd jne 0x4092a0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x004092cf call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004092d4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004092da movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004092e0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004092e5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004092eb call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004092f0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004092f6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004092fc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409301 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409307 mov al, byte [rip + 0x326463]                     |     al = .comment;
    0x0040930d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040930f je 0x409413                                       |         goto label_103;
                                                                 |     }
                                                                 | label_31:
    0x00409315 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040931b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00409321 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409327 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040932d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00409333 xor eax, eax                                      |     eax = 0;
    0x00409335 jmp 0x40936a                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_28:
    0x00409340 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409348 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_29:
    0x00409350 mov qword [rax + 0x72b8f0], rcx                   |         *((rax + 0x72b8f0)) = rcx;
    0x00409357 mov qword [rax + 0x72b8f8], rdx                   |         *((rax + 0x72b8f8)) = rdx;
    0x0040935e add rax, 0x10                                     |         rax += 0x10;
    0x00409362 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00409368 je 0x409390                                       |             goto label_104;
                                                                 |         }
    0x0040936a movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00409372 cmp ecx, 0xe                                      |         
    0x00409375 je 0x409340                                       |         
                                                                 |     }
    0x00409377 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040937a je 0x409340                                       |         goto label_28;
                                                                 |     }
    0x0040937c lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00409380 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00409389 jmp 0x409350                                      |     goto label_29;
                                                                 | label_104:
    0x00409390 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409396 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040939b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004093a1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004093a7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004093ab movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004093b1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004093b6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004093bc xor ebp, ebp                                      |     ebp = 0;
    0x004093be nop                                               |     
                                                                 |     do {
    0x004093c0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004093c8 mov rsi, rbx                                      |         
    0x004093cb call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x004093d0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004093d4 cmp rbp, 0x3e80                                   |         
    0x004093db jne 0x4093c0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004093dd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004093e2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004093e8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x004093ee addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004093f2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x004093f8 mov rdi, rbx                                      |     
    0x004093fb call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00409400 inc r15d                                          |     r15d++;
    0x00409403 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409408 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040940b jl 0x409270                                       |         goto label_30;
                                                                 |     }
    0x00409411 jmp 0x409445                                      |     goto label_105;
                                                                 | label_103:
    0x00409413 mov edi, 0x72f770                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409418 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040941d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040941f je 0x409315                                       |         goto label_31;
                                                                 |     }
    0x00409425 mov edi, 0x72b8f0                                 |     
    0x0040942a mov edx, 0x3e80                                   |     
    0x0040942f xor esi, esi                                      |     
    0x00409431 call 0x404140                                     |     memset (0x72b8f0, 0, 0x3e80);
    0x00409436 mov edi, 0x72f770                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040943b call 0x4042d0                                     |     cxa_guard_release ();
    0x00409440 jmp 0x409315                                      |     goto label_31;
                                                                 | label_105:
    0x00409445 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040944a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040944d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409453 jmp 0x409477                                      |     goto label_106;
                                                                 | label_102:
    0x00409455 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409459 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040945f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409463 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409469 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040946d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409473 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_106:
    0x00409477 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040947d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409483 mov rax, qword [rip + 0x30eaa6]                   |     rax = std::__1::cout;
    0x0040948a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040948e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00409499 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040949e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004094a3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004094a8 lea rsi, [rsp + 0x60]                             |     
    0x004094ad mov edx, 1                                        |     
    0x004094b2 mov rdi, rax                                      |     
    0x004094b5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004094ba mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004094bd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004094c1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004094ca mov esi, 0x4c5f2e                                 |     
    0x004094cf mov edx, 0x1b                                     |     
    0x004094d4 mov rdi, rax                                      |     
    0x004094d7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"12345\", &alloc)", 0x1b);
    0x004094dc mov esi, 0x4e4950                                 |     
    0x004094e1 mov edx, 1                                        |     
    0x004094e6 mov rdi, rax                                      |     
    0x004094e9 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004094ee mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004094f1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004094f5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004094fe mov rdi, rax                                      |     rdi = rax;
    0x00409501 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409507 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040950c mov esi, 0x4e488d                                 |     
    0x00409511 mov edx, 1                                        |     
    0x00409516 mov rdi, rax                                      |     
    0x00409519 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040951e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409524 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040952a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409530 mov rax, qword [rip + 0x30e9f9]                   |     rax = std::__1::cout;
    0x00409537 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040953b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409546 mov edi, 0x717f30                                 |     
    0x0040954b mov esi, 0x4c8852                                 |     
    0x00409550 mov edx, 0xa                                      |     
    0x00409555 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040955a mov esi, 0x4e4950                                 |     
    0x0040955f mov edx, 1                                        |     
    0x00409564 mov rdi, rax                                      |     
    0x00409567 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040956c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040956f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409573 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040957c mov rdi, rax                                      |     rdi = rax;
    0x0040957f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409585 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040958a mov esi, 0x4e488d                                 |     
    0x0040958f mov edx, 1                                        |     
    0x00409594 mov rdi, rax                                      |     
    0x00409597 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040959c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004095a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004095a8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004095ae mov rax, qword [rip + 0x30e97b]                   |     rax = std::__1::cout;
    0x004095b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004095b9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004095c4 mov edi, 0x717f30                                 |     
    0x004095c9 mov esi, 0x4c91f7                                 |     
    0x004095ce mov edx, 0xb                                      |     
    0x004095d3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x004095d8 mov esi, 0x4e4950                                 |     
    0x004095dd mov edx, 1                                        |     
    0x004095e2 mov rdi, rax                                      |     
    0x004095e5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004095ea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004095ed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004095f1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004095fa mov rdi, rax                                      |     rdi = rax;
    0x004095fd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409603 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409608 mov esi, 0x4e488d                                 |     
    0x0040960d mov edx, 1                                        |     
    0x00409612 mov rdi, rax                                      |     
    0x00409615 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040961a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409620 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409626 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040962c mov rax, qword [rip + 0x30e8fd]                   |     rax = std::__1::cout;
    0x00409633 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409637 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409642 mov edi, 0x717f30                                 |     
    0x00409647 mov esi, 0x4c5e3a                                 |     
    0x0040964c mov edx, 9                                        |     
    0x00409651 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00409656 mov esi, 0x4e4950                                 |     
    0x0040965b mov edx, 1                                        |     
    0x00409660 mov rdi, rax                                      |     
    0x00409663 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409668 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040966b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040966f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409678 mov rdi, rax                                      |     rdi = rax;
    0x0040967b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409681 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409686 mov esi, 0x4e488d                                 |     
    0x0040968b mov edx, 1                                        |     
    0x00409690 mov rdi, rax                                      |     
    0x00409693 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409698 mov edi, 0x717f30                                 |     
    0x0040969d mov esi, 0x4e488d                                 |     
    0x004096a2 mov edx, 1                                        |     
    0x004096a7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x004096ac mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004096b0 mov rax, qword [r13]                              |     rax = *(r13);
    0x004096b4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_101:
    0x004096b8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004096bb inc rsi                                           |     rsi++;
    0x004096be mov dword [r15], esi                              |     *(r15) = esi;
    0x004096c1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004096c4 je 0x4096dc                                       |         
    0x004096c6 mov edx, ecx                                      |         edx = ecx;
    0x004096c8 sub edx, eax                                      |         edx -= eax;
    0x004096ca cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004096cc jge 0x409b78                                      |             goto label_107;
                                                                 |         }
    0x004096d2 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004096d6 je 0x409b78                                       |             goto label_107;
                                                                 |         }
                                                                 |     }
    0x004096dc mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004096e1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004096e4 jle 0x409915                                      |         goto label_108;
                                                                 |     }
    0x004096ea lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x004096ef xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004096f3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004096f9 xor r15d, r15d                                    |     r15d = 0;
    0x004096fc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409704 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409709 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040970d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409713 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409717 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040971d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409721 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409727 nop word [rax + rax]                              |     
                                                                 | label_34:
    0x00409730 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00409735 mov rsi, qword [rax]                              |     
    0x00409738 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00409741 mov edx, 0x186a0                                  |     
    0x00409746 mov rdi, r12                                      |     
    0x00409749 xor ecx, ecx                                      |     
    0x0040974b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00409750 mov ebp, 8                                        |     
    0x00409755 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040975a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00409760 mov edi, 0x4c5dbe                                 |         
    0x00409765 mov esi, 6                                        |         
    0x0040976a mov rdx, rbx                                      |         
    0x0040976d call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("123456", 6, rbx);
    0x00409772 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040977a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00409782 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409786 cmp rbp, 0x3e88                                   |         
    0x0040978d jne 0x409760                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040978f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409794 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040979a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004097a0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004097a5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004097ab call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004097b0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004097b6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004097bc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004097c1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004097c7 mov al, byte [rip + 0x329e33]                     |     al = .comment;
    0x004097cd test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004097cf je 0x4098d3                                       |         goto label_109;
                                                                 |     }
                                                                 | label_35:
    0x004097d5 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004097db addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004097e1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004097e7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004097ed addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004097f3 xor eax, eax                                      |     eax = 0;
    0x004097f5 jmp 0x40982a                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_32:
    0x00409800 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409808 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_33:
    0x00409810 mov qword [rax + 0x72f780], rcx                   |         *((rax + 0x72f780)) = rcx;
    0x00409817 mov qword [rax + 0x72f788], rdx                   |         *((rax + 0x72f788)) = rdx;
    0x0040981e add rax, 0x10                                     |         rax += 0x10;
    0x00409822 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00409828 je 0x409850                                       |             goto label_110;
                                                                 |         }
    0x0040982a movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00409832 cmp ecx, 0xe                                      |         
    0x00409835 je 0x409800                                       |         
                                                                 |     }
    0x00409837 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040983a je 0x409800                                       |         goto label_32;
                                                                 |     }
    0x0040983c lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00409840 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00409849 jmp 0x409810                                      |     goto label_33;
                                                                 | label_110:
    0x00409850 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409856 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040985b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409861 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00409867 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040986b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00409871 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409876 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040987c xor ebp, ebp                                      |     ebp = 0;
    0x0040987e nop                                               |     
                                                                 |     do {
    0x00409880 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00409888 mov rsi, rbx                                      |         
    0x0040988b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00409890 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409894 cmp rbp, 0x3e80                                   |         
    0x0040989b jne 0x409880                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040989d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004098a2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004098a8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x004098ae addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004098b2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x004098b8 mov rdi, rbx                                      |     
    0x004098bb call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x004098c0 inc r15d                                          |     r15d++;
    0x004098c3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004098c8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x004098cb jl 0x409730                                       |         goto label_34;
                                                                 |     }
    0x004098d1 jmp 0x409905                                      |     goto label_111;
                                                                 | label_109:
    0x004098d3 mov edi, 0x733600                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004098d8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x004098dd test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x004098df je 0x4097d5                                       |         goto label_35;
                                                                 |     }
    0x004098e5 mov edi, 0x72f780                                 |     
    0x004098ea mov edx, 0x3e80                                   |     
    0x004098ef xor esi, esi                                      |     
    0x004098f1 call 0x404140                                     |     memset (0x72f780, 0, 0x3e80);
    0x004098f6 mov edi, 0x733600                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004098fb call 0x4042d0                                     |     cxa_guard_release ();
    0x00409900 jmp 0x4097d5                                      |     goto label_35;
                                                                 | label_111:
    0x00409905 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040990a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040990d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409913 jmp 0x409937                                      |     goto label_112;
                                                                 | label_108:
    0x00409915 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409919 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040991f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409923 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409929 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040992d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409933 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_112:
    0x00409937 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040993d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409943 mov rax, qword [rip + 0x30e5e6]                   |     rax = std::__1::cout;
    0x0040994a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040994e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00409959 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040995e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409963 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00409968 lea rsi, [rsp + 0x60]                             |     
    0x0040996d mov edx, 1                                        |     
    0x00409972 mov rdi, rax                                      |     
    0x00409975 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040997a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040997d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409981 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040998a mov esi, 0x4c5f4a                                 |     
    0x0040998f mov edx, 0x1c                                     |     
    0x00409994 mov rdi, rax                                      |     
    0x00409997 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"123456\", &alloc)", 0x1c);
    0x0040999c mov esi, 0x4e4950                                 |     
    0x004099a1 mov edx, 1                                        |     
    0x004099a6 mov rdi, rax                                      |     
    0x004099a9 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x004099ae mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004099b1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004099b5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004099be mov rdi, rax                                      |     rdi = rax;
    0x004099c1 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004099c7 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004099cc mov esi, 0x4e488d                                 |     
    0x004099d1 mov edx, 1                                        |     
    0x004099d6 mov rdi, rax                                      |     
    0x004099d9 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x004099de movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004099e4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004099ea movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004099f0 mov rax, qword [rip + 0x30e539]                   |     rax = std::__1::cout;
    0x004099f7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004099fb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409a06 mov edi, 0x717f30                                 |     
    0x00409a0b mov esi, 0x4c8852                                 |     
    0x00409a10 mov edx, 0xa                                      |     
    0x00409a15 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x00409a1a mov esi, 0x4e4950                                 |     
    0x00409a1f mov edx, 1                                        |     
    0x00409a24 mov rdi, rax                                      |     
    0x00409a27 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409a2c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409a2f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409a33 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409a3c mov rdi, rax                                      |     rdi = rax;
    0x00409a3f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409a45 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409a4a mov esi, 0x4e488d                                 |     
    0x00409a4f mov edx, 1                                        |     
    0x00409a54 mov rdi, rax                                      |     
    0x00409a57 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409a5c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409a62 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409a68 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409a6e mov rax, qword [rip + 0x30e4bb]                   |     rax = std::__1::cout;
    0x00409a75 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409a79 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409a84 mov edi, 0x717f30                                 |     
    0x00409a89 mov esi, 0x4c91f7                                 |     
    0x00409a8e mov edx, 0xb                                      |     
    0x00409a93 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00409a98 mov esi, 0x4e4950                                 |     
    0x00409a9d mov edx, 1                                        |     
    0x00409aa2 mov rdi, rax                                      |     
    0x00409aa5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409aaa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409aad mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409ab1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409aba mov rdi, rax                                      |     rdi = rax;
    0x00409abd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409ac3 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409ac8 mov esi, 0x4e488d                                 |     
    0x00409acd mov edx, 1                                        |     
    0x00409ad2 mov rdi, rax                                      |     
    0x00409ad5 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409ada movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409ae0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409ae6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409aec mov rax, qword [rip + 0x30e43d]                   |     rax = std::__1::cout;
    0x00409af3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409af7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409b02 mov edi, 0x717f30                                 |     
    0x00409b07 mov esi, 0x4c5e3a                                 |     
    0x00409b0c mov edx, 9                                        |     
    0x00409b11 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00409b16 mov esi, 0x4e4950                                 |     
    0x00409b1b mov edx, 1                                        |     
    0x00409b20 mov rdi, rax                                      |     
    0x00409b23 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409b28 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409b2b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409b2f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409b38 mov rdi, rax                                      |     rdi = rax;
    0x00409b3b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409b41 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409b46 mov esi, 0x4e488d                                 |     
    0x00409b4b mov edx, 1                                        |     
    0x00409b50 mov rdi, rax                                      |     
    0x00409b53 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409b58 mov edi, 0x717f30                                 |     
    0x00409b5d mov esi, 0x4e488d                                 |     
    0x00409b62 mov edx, 1                                        |     
    0x00409b67 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x00409b6c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00409b70 mov rax, qword [r13]                              |     rax = *(r13);
    0x00409b74 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_107:
    0x00409b78 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00409b7b inc rsi                                           |     rsi++;
    0x00409b7e mov dword [r15], esi                              |     *(r15) = esi;
    0x00409b81 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00409b84 je 0x409b9c                                       |         
    0x00409b86 mov edx, ecx                                      |         edx = ecx;
    0x00409b88 sub edx, eax                                      |         edx -= eax;
    0x00409b8a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00409b8c jge 0x40a038                                      |             goto label_113;
                                                                 |         }
    0x00409b92 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00409b96 je 0x40a038                                       |             goto label_113;
                                                                 |         }
                                                                 |     }
    0x00409b9c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409ba1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00409ba4 jle 0x409dd5                                      |         goto label_114;
                                                                 |     }
    0x00409baa lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00409baf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409bb3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409bb9 xor r15d, r15d                                    |     r15d = 0;
    0x00409bbc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409bc4 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409bc9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409bcd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409bd3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409bd7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409bdd xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409be1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409be7 nop word [rax + rax]                              |     
                                                                 | label_38:
    0x00409bf0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00409bf5 mov rsi, qword [rax]                              |     
    0x00409bf8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00409c01 mov edx, 0x186a0                                  |     
    0x00409c06 mov rdi, r12                                      |     
    0x00409c09 xor ecx, ecx                                      |     
    0x00409c0b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00409c10 mov ebp, 8                                        |     
    0x00409c15 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c1a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00409c20 mov edi, 0x4c5d81                                 |         
    0x00409c25 mov esi, 0xf                                      |         
    0x00409c2a mov rdx, rbx                                      |         
    0x00409c2d call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("0123456789abcde", 0xf, rbx);
    0x00409c32 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00409c3a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00409c42 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409c46 cmp rbp, 0x3e88                                   |         
    0x00409c4d jne 0x409c20                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00409c4f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c54 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409c5a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00409c60 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c65 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409c6b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c70 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409c76 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00409c7c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c81 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409c87 mov al, byte [rip + 0x32d803]                     |     al = .comment;
    0x00409c8d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00409c8f je 0x409d93                                       |         goto label_115;
                                                                 |     }
                                                                 | label_39:
    0x00409c95 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409c9b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00409ca1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409ca7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409cad addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00409cb3 xor eax, eax                                      |     eax = 0;
    0x00409cb5 jmp 0x409cea                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_36:
    0x00409cc0 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409cc8 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_37:
    0x00409cd0 mov qword [rax + 0x733610], rcx                   |         *((rax + 0x733610)) = rcx;
    0x00409cd7 mov qword [rax + 0x733618], rdx                   |         *((rax + 0x733618)) = rdx;
    0x00409cde add rax, 0x10                                     |         rax += 0x10;
    0x00409ce2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00409ce8 je 0x409d10                                       |             goto label_116;
                                                                 |         }
    0x00409cea movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x00409cf2 cmp ecx, 0xe                                      |         
    0x00409cf5 je 0x409cc0                                       |         
                                                                 |     }
    0x00409cf7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x00409cfa je 0x409cc0                                       |         goto label_36;
                                                                 |     }
    0x00409cfc lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00409d00 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00409d09 jmp 0x409cd0                                      |     goto label_37;
                                                                 | label_116:
    0x00409d10 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409d16 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409d1b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409d21 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00409d27 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409d2b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00409d31 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409d36 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409d3c xor ebp, ebp                                      |     ebp = 0;
    0x00409d3e nop                                               |     
                                                                 |     do {
    0x00409d40 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00409d48 mov rsi, rbx                                      |         
    0x00409d4b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00409d50 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409d54 cmp rbp, 0x3e80                                   |         
    0x00409d5b jne 0x409d40                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00409d5d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409d62 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409d68 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00409d6e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409d72 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00409d78 mov rdi, rbx                                      |     
    0x00409d7b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00409d80 inc r15d                                          |     r15d++;
    0x00409d83 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409d88 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00409d8b jl 0x409bf0                                       |         goto label_38;
                                                                 |     }
    0x00409d91 jmp 0x409dc5                                      |     goto label_117;
                                                                 | label_115:
    0x00409d93 mov edi, 0x737490                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409d98 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00409d9d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00409d9f je 0x409c95                                       |         goto label_39;
                                                                 |     }
    0x00409da5 mov edi, 0x733610                                 |     
    0x00409daa mov edx, 0x3e80                                   |     
    0x00409daf xor esi, esi                                      |     
    0x00409db1 call 0x404140                                     |     memset (0x733610, 0, 0x3e80);
    0x00409db6 mov edi, 0x737490                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409dbb call 0x4042d0                                     |     cxa_guard_release ();
    0x00409dc0 jmp 0x409c95                                      |     goto label_39;
                                                                 | label_117:
    0x00409dc5 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00409dca mov esi, dword [r15]                              |     esi = *(r15);
    0x00409dcd movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409dd3 jmp 0x409df7                                      |     goto label_118;
                                                                 | label_114:
    0x00409dd5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409dd9 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409ddf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409de3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409de9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409ded movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409df3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_118:
    0x00409df7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409dfd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409e03 mov rax, qword [rip + 0x30e126]                   |     rax = std::__1::cout;
    0x00409e0a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409e0e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00409e19 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00409e1e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409e23 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00409e28 lea rsi, [rsp + 0x60]                             |     
    0x00409e2d mov edx, 1                                        |     
    0x00409e32 mov rdi, rax                                      |     
    0x00409e35 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00409e3a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409e3d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409e41 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00409e4a mov esi, 0x4c5f67                                 |     
    0x00409e4f mov edx, 0x25                                     |     
    0x00409e54 mov rdi, rax                                      |     
    0x00409e57 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"0123456789abcde\", &alloc)", 0x25);
    0x00409e5c mov esi, 0x4e4950                                 |     
    0x00409e61 mov edx, 1                                        |     
    0x00409e66 mov rdi, rax                                      |     
    0x00409e69 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409e6e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409e71 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409e75 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409e7e mov rdi, rax                                      |     rdi = rax;
    0x00409e81 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409e87 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409e8c mov esi, 0x4e488d                                 |     
    0x00409e91 mov edx, 1                                        |     
    0x00409e96 mov rdi, rax                                      |     
    0x00409e99 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409e9e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409ea4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409eaa movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409eb0 mov rax, qword [rip + 0x30e079]                   |     rax = std::__1::cout;
    0x00409eb7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409ebb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409ec6 mov edi, 0x717f30                                 |     
    0x00409ecb mov esi, 0x4c8852                                 |     
    0x00409ed0 mov edx, 0xa                                      |     
    0x00409ed5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x00409eda mov esi, 0x4e4950                                 |     
    0x00409edf mov edx, 1                                        |     
    0x00409ee4 mov rdi, rax                                      |     
    0x00409ee7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409eec mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409eef mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409ef3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409efc mov rdi, rax                                      |     rdi = rax;
    0x00409eff movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409f05 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409f0a mov esi, 0x4e488d                                 |     
    0x00409f0f mov edx, 1                                        |     
    0x00409f14 mov rdi, rax                                      |     
    0x00409f17 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409f1c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409f22 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409f28 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409f2e mov rax, qword [rip + 0x30dffb]                   |     rax = std::__1::cout;
    0x00409f35 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409f39 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409f44 mov edi, 0x717f30                                 |     
    0x00409f49 mov esi, 0x4c91f7                                 |     
    0x00409f4e mov edx, 0xb                                      |     
    0x00409f53 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x00409f58 mov esi, 0x4e4950                                 |     
    0x00409f5d mov edx, 1                                        |     
    0x00409f62 mov rdi, rax                                      |     
    0x00409f65 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409f6a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409f6d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409f71 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409f7a mov rdi, rax                                      |     rdi = rax;
    0x00409f7d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409f83 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409f88 mov esi, 0x4e488d                                 |     
    0x00409f8d mov edx, 1                                        |     
    0x00409f92 mov rdi, rax                                      |     
    0x00409f95 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x00409f9a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409fa0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409fa6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409fac mov rax, qword [rip + 0x30df7d]                   |     rax = std::__1::cout;
    0x00409fb3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409fb7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409fc2 mov edi, 0x717f30                                 |     
    0x00409fc7 mov esi, 0x4c5e3a                                 |     
    0x00409fcc mov edx, 9                                        |     
    0x00409fd1 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00409fd6 mov esi, 0x4e4950                                 |     
    0x00409fdb mov edx, 1                                        |     
    0x00409fe0 mov rdi, rax                                      |     
    0x00409fe3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x00409fe8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409feb mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409fef mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409ff8 mov rdi, rax                                      |     rdi = rax;
    0x00409ffb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a001 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a006 mov esi, 0x4e488d                                 |     
    0x0040a00b mov edx, 1                                        |     
    0x0040a010 mov rdi, rax                                      |     
    0x0040a013 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a018 mov edi, 0x717f30                                 |     
    0x0040a01d mov esi, 0x4e488d                                 |     
    0x0040a022 mov edx, 1                                        |     
    0x0040a027 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x0040a02c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040a030 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040a034 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_113:
    0x0040a038 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040a03b inc rsi                                           |     rsi++;
    0x0040a03e mov dword [r15], esi                              |     *(r15) = esi;
    0x0040a041 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x0040a044 je 0x40a05c                                       |         
    0x0040a046 mov edx, ecx                                      |         edx = ecx;
    0x0040a048 sub edx, eax                                      |         edx -= eax;
    0x0040a04a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040a04c jge 0x40a4f8                                      |             goto label_119;
                                                                 |         }
    0x0040a052 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x0040a056 je 0x40a4f8                                       |             goto label_119;
                                                                 |         }
                                                                 |     }
    0x0040a05c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a061 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040a064 jle 0x40a295                                      |         goto label_120;
                                                                 |     }
    0x0040a06a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040a06f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a073 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a074 movups xmmword [rsp + 0x28], xmm0                 |     __asm ("movups xmmword [rsp + 0x28], xmm0");
    0x0040a079 xor r15d, r15d                                    |     r15d = 0;
    0x0040a07c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x0040a084 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x0040a089 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a08d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a093 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a097 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a09d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a0a1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a0a7 nop word [rax + rax]                              |     
                                                                 | label_42:
    0x0040a0b0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040a0b5 mov rsi, qword [rax]                              |     
    0x0040a0b8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040a0c1 mov edx, 0x186a0                                  |     
    0x0040a0c6 mov rdi, r12                                      |     
    0x0040a0c9 xor ecx, ecx                                      |     
    0x0040a0cb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x0040a0d0 mov ebp, 8                                        |     
    0x0040a0d5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a0da movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x0040a0e0 mov edi, 0x4c5f8d                                 |         
    0x0040a0e5 mov esi, 0x1a                                     |         
    0x0040a0ea mov rdx, rbx                                      |         
    0x0040a0ed call 0x461c30                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("abcdefghijklmnopqrstuvwxyz", 0x1a, rbx);
    0x0040a0f2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040a0fa mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x0040a102 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a106 cmp rbp, 0x3e88                                   |         
    0x0040a10d jne 0x40a0e0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040a10f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a114 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a11a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x0040a120 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a125 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a12b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a130 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a136 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040a13c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a141 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a147 mov al, byte [rip + 0x3311d3]                     |     al = .comment;
    0x0040a14d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040a14f je 0x40a253                                       |         goto label_121;
                                                                 |     }
                                                                 | label_43:
    0x0040a155 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a15b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x0040a161 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a167 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a16d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x0040a173 xor eax, eax                                      |     eax = 0;
    0x0040a175 jmp 0x40a1aa                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_40:
    0x0040a180 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x0040a188 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_41:
    0x0040a190 mov qword [rax + 0x7374a0], rcx                   |         *((rax + 0x7374a0)) = rcx;
    0x0040a197 mov qword [rax + 0x7374a8], rdx                   |         *((rax + 0x7374a8)) = rdx;
    0x0040a19e add rax, 0x10                                     |         rax += 0x10;
    0x0040a1a2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x0040a1a8 je 0x40a1d0                                       |             goto label_122;
                                                                 |         }
    0x0040a1aa movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x0040a1b2 cmp ecx, 0xe                                      |         
    0x0040a1b5 je 0x40a180                                       |         
                                                                 |     }
    0x0040a1b7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040a1ba je 0x40a180                                       |         goto label_40;
                                                                 |     }
    0x0040a1bc lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x0040a1c0 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x0040a1c9 jmp 0x40a190                                      |     goto label_41;
                                                                 | label_122:
    0x0040a1d0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a1d6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a1db subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a1e1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040a1e7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a1eb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a1f1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a1f6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a1fc xor ebp, ebp                                      |     ebp = 0;
    0x0040a1fe nop                                               |     
                                                                 |     do {
    0x0040a200 lea rdi, [rsp + rbp + 0x100]                      |         
    0x0040a208 mov rsi, rbx                                      |         
    0x0040a20b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x0040a210 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a214 cmp rbp, 0x3e80                                   |         
    0x0040a21b jne 0x40a200                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040a21d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a222 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a228 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040a22e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a232 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x0040a238 mov rdi, rbx                                      |     
    0x0040a23b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x0040a240 inc r15d                                          |     r15d++;
    0x0040a243 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a248 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040a24b jl 0x40a0b0                                       |         goto label_42;
                                                                 |     }
    0x0040a251 jmp 0x40a285                                      |     goto label_123;
                                                                 | label_121:
    0x0040a253 mov edi, 0x73b320                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a258 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040a25d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040a25f je 0x40a155                                       |         goto label_43;
                                                                 |     }
    0x0040a265 mov edi, 0x7374a0                                 |     
    0x0040a26a mov edx, 0x3e80                                   |     
    0x0040a26f xor esi, esi                                      |     
    0x0040a271 call 0x404140                                     |     memset (0x7374a0, 0, 0x3e80);
    0x0040a276 mov edi, 0x73b320                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a27b call 0x4042d0                                     |     cxa_guard_release ();
    0x0040a280 jmp 0x40a155                                      |     goto label_43;
                                                                 | label_123:
    0x0040a285 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040a28a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040a28d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a293 jmp 0x40a2b7                                      |     goto label_124;
                                                                 | label_120:
    0x0040a295 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a299 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a29f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a2a3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a2a9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a2ad movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a2b3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_124:
    0x0040a2b7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a2bd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a2c3 mov rax, qword [rip + 0x30dc66]                   |     rax = std::__1::cout;
    0x0040a2ca mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a2ce mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040a2d9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040a2de call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040a2e3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x0040a2e8 lea rsi, [rsp + 0x60]                             |     
    0x0040a2ed mov edx, 1                                        |     
    0x0040a2f2 mov rdi, rax                                      |     
    0x0040a2f5 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040a2fa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a2fd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a301 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040a30a mov esi, 0x4c5fa8                                 |     
    0x0040a30f mov edx, 0x30                                     |     
    0x0040a314 mov rdi, rax                                      |     
    0x0040a317 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"abcdefghijklmnopqrstuvwxyz\", &alloc)", 0x30);
    0x0040a31c mov esi, 0x4e4950                                 |     
    0x0040a321 mov edx, 1                                        |     
    0x0040a326 mov rdi, rax                                      |     
    0x0040a329 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a32e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a331 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a335 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a33e mov rdi, rax                                      |     rdi = rax;
    0x0040a341 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a347 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a34c mov esi, 0x4e488d                                 |     
    0x0040a351 mov edx, 1                                        |     
    0x0040a356 mov rdi, rax                                      |     
    0x0040a359 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a35e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a364 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a36a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a370 mov rax, qword [rip + 0x30dbb9]                   |     rax = std::__1::cout;
    0x0040a377 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a37b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a386 mov edi, 0x717f30                                 |     
    0x0040a38b mov esi, 0x4c8852                                 |     
    0x0040a390 mov edx, 0xa                                      |     
    0x0040a395 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040a39a mov esi, 0x4e4950                                 |     
    0x0040a39f mov edx, 1                                        |     
    0x0040a3a4 mov rdi, rax                                      |     
    0x0040a3a7 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a3ac mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a3af mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a3b3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a3bc mov rdi, rax                                      |     rdi = rax;
    0x0040a3bf movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a3c5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a3ca mov esi, 0x4e488d                                 |     
    0x0040a3cf mov edx, 1                                        |     
    0x0040a3d4 mov rdi, rax                                      |     
    0x0040a3d7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a3dc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a3e2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a3e8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a3ee mov rax, qword [rip + 0x30db3b]                   |     rax = std::__1::cout;
    0x0040a3f5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a3f9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a404 mov edi, 0x717f30                                 |     
    0x0040a409 mov esi, 0x4c91f7                                 |     
    0x0040a40e mov edx, 0xb                                      |     
    0x0040a413 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x0040a418 mov esi, 0x4e4950                                 |     
    0x0040a41d mov edx, 1                                        |     
    0x0040a422 mov rdi, rax                                      |     
    0x0040a425 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a42a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a42d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a431 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a43a mov rdi, rax                                      |     rdi = rax;
    0x0040a43d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a443 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a448 mov esi, 0x4e488d                                 |     
    0x0040a44d mov edx, 1                                        |     
    0x0040a452 mov rdi, rax                                      |     
    0x0040a455 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a45a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a460 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a466 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a46c mov rax, qword [rip + 0x30dabd]                   |     rax = std::__1::cout;
    0x0040a473 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a477 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a482 mov edi, 0x717f30                                 |     
    0x0040a487 mov esi, 0x4c5e3a                                 |     
    0x0040a48c mov edx, 9                                        |     
    0x0040a491 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x0040a496 mov esi, 0x4e4950                                 |     
    0x0040a49b mov edx, 1                                        |     
    0x0040a4a0 mov rdi, rax                                      |     
    0x0040a4a3 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a4a8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a4ab mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a4af mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a4b8 mov rdi, rax                                      |     rdi = rax;
    0x0040a4bb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a4c1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a4c6 mov esi, 0x4e488d                                 |     
    0x0040a4cb mov edx, 1                                        |     
    0x0040a4d0 mov rdi, rax                                      |     
    0x0040a4d3 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a4d8 mov edi, 0x717f30                                 |     
    0x0040a4dd mov esi, 0x4e488d                                 |     
    0x0040a4e2 mov edx, 1                                        |     
    0x0040a4e7 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x0040a4ec mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040a4f0 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040a4f4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_119:
    0x0040a4f8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040a4fb inc rsi                                           |     rsi++;
    0x0040a4fe mov dword [r15], esi                              |     *(r15) = esi;
    0x0040a501 cmp rcx, rax                                      |     
    0x0040a504 mov qword [rsp + 0xa0], r13                       |     *((rsp + 0xa0)) = r13;
                                                                 |     if (rcx != rax) {
    0x0040a50c je 0x40a524                                       |         
    0x0040a50e mov edx, ecx                                      |         edx = ecx;
    0x0040a510 sub edx, eax                                      |         edx -= eax;
    0x0040a512 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040a514 jge 0x40aa00                                      |             goto label_125;
                                                                 |         }
    0x0040a51a cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x0040a51e je 0x40aa00                                       |             goto label_125;
                                                                 |         }
                                                                 |     }
    0x0040a524 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a529 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040a52c jle 0x40a79d                                      |         goto label_126;
                                                                 |     }
    0x0040a532 movabs rbx, 0xe000000000008                       |     rbx = 0xe000000000008;
    0x0040a53c lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x0040a541 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a545 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a54b xor r15d, r15d                                    |     r15d = 0;
    0x0040a54e lea r12, [rsp + 0x101]                            |     r12 = rsp + 0x101;
    0x0040a556 lea r13, [rsp + 0x60]                             |     r13 = rsp + 0x60;
    0x0040a55b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a55f movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a565 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a569 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a56f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a573 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a579 nop dword [rax]                                   |     
                                                                 | label_46:
    0x0040a580 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040a585 mov rsi, qword [rax]                              |     
    0x0040a588 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040a591 mov edx, 0x186a0                                  |     
    0x0040a596 mov rdi, r14                                      |     
    0x0040a599 xor ecx, ecx                                      |     
    0x0040a59b call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x0040a5a0 mov ebp, 0x38                                     |     
    0x0040a5a5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a5aa movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x0040a5b0 mov qword [rsp + rbp + 0xc8], 0x4c5dd4            |         *((rsp + rbp + 0xc8)) = 0x4c5dd4;
    0x0040a5bc mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x0040a5c4 mov qword [rsp + rbp + 0xd8], 0x4c5dd4            |         *((rsp + rbp + 0xd8)) = 0x4c5dd4;
    0x0040a5d0 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x0040a5d8 mov qword [rsp + rbp + 0xe8], 0x4c5dd4            |         *((rsp + rbp + 0xe8)) = 0x4c5dd4;
    0x0040a5e4 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x0040a5ec mov qword [rsp + rbp + 0xf8], 0x4c5dd4            |         *((rsp + rbp + 0xf8)) = 0x4c5dd4;
    0x0040a5f8 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x0040a600 add rbp, 0x40                                     |         rbp += 0x40;
    0x0040a604 cmp rbp, 0x3eb8                                   |         
    0x0040a60b jne 0x40a5b0                                      |         
                                                                 |     } while (rbp != 0x3eb8);
    0x0040a60d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a612 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a618 movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x0040a61e call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a623 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a629 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a62e subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a634 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040a63a call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a63f movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a645 mov al, byte [rip + 0x334b65]                     |     al = .comment;
    0x0040a64b test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040a64d je 0x40a753                                       |         goto label_127;
                                                                 |     }
                                                                 | label_47:
    0x0040a653 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a659 addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x0040a65f movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a665 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a66b addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x0040a671 xor eax, eax                                      |     eax = 0;
    0x0040a673 jmp 0x40a6aa                                      |     
                                                                 |     while (ecx == 0xe) {
                                                                 | label_44:
    0x0040a680 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x0040a688 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_45:
    0x0040a690 mov qword [rax + 0x73b330], rcx                   |         *((rax + 0x73b330)) = rcx;
    0x0040a697 mov qword [rax + 0x73b338], rdx                   |         *((rax + 0x73b338)) = rdx;
    0x0040a69e add rax, 0x10                                     |         rax += 0x10;
    0x0040a6a2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x0040a6a8 je 0x40a6d0                                       |             goto label_128;
                                                                 |         }
    0x0040a6aa movsx ecx, word [rsp + rax + 0x10e]               |         ecx = *((rsp + rax + 0x10e));
    0x0040a6b2 cmp ecx, 0xe                                      |         
    0x0040a6b5 je 0x40a680                                       |         
                                                                 |     }
    0x0040a6b7 cmp ecx, 5                                        |     
                                                                 |     if (ecx == 5) {
    0x0040a6ba je 0x40a680                                       |         goto label_44;
                                                                 |     }
    0x0040a6bc lea rcx, [r12 + rax]                              |     rcx = r12 + rax;
    0x0040a6c0 movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x0040a6c9 jmp 0x40a690                                      |     goto label_45;
                                                                 | label_128:
    0x0040a6d0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a6d6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6db subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a6e1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040a6e7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a6eb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a6f1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6f6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a6fc xor ebp, ebp                                      |     ebp = 0;
    0x0040a6fe nop                                               |     
                                                                 |     do {
    0x0040a700 lea rdi, [rsp + rbp + 0x100]                      |         
    0x0040a708 mov rsi, r13                                      |         
    0x0040a70b call 0x461e10                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r13);
    0x0040a710 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a714 cmp rbp, 0x3e80                                   |         
    0x0040a71b jne 0x40a700                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040a71d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a722 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a728 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040a72e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a732 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x0040a738 mov rdi, r13                                      |     
    0x0040a73b call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r13);
    0x0040a740 inc r15d                                          |     r15d++;
    0x0040a743 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a748 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040a74b jl 0x40a580                                       |         goto label_46;
                                                                 |     }
    0x0040a751 jmp 0x40a785                                      |     goto label_129;
                                                                 | label_127:
    0x0040a753 mov edi, 0x73f1b0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a758 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040a75d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040a75f je 0x40a653                                       |         goto label_47;
                                                                 |     }
    0x0040a765 mov edi, 0x73b330                                 |     
    0x0040a76a mov edx, 0x3e80                                   |     
    0x0040a76f xor esi, esi                                      |     
    0x0040a771 call 0x404140                                     |     memset (0x73b330, 0, 0x3e80);
    0x0040a776 mov edi, 0x73f1b0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a77b call 0x4042d0                                     |     cxa_guard_release ();
    0x0040a780 jmp 0x40a653                                      |     goto label_47;
                                                                 | label_129:
    0x0040a785 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040a78a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040a78d mov r13, qword [rsp + 0xa0]                       |     r13 = *((rsp + 0xa0));
    0x0040a795 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a79b jmp 0x40a7bf                                      |     goto label_130;
                                                                 | label_126:
    0x0040a79d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a7a1 xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a7a5 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x0040a7ab xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a7af movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a7b5 xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a7b9 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
                                                                 | label_130:
    0x0040a7bf divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a7c5 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a7cb mov rax, qword [rip + 0x30d75e]                   |     rax = std::__1::cout;
    0x0040a7d2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a7d6 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040a7e1 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040a7e6 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040a7eb mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x0040a7f0 lea rsi, [rsp + 0x60]                             |     
    0x0040a7f5 mov edx, 1                                        |     
    0x0040a7fa mov rdi, rax                                      |     
    0x0040a7fd call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040a802 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a805 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a809 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040a812 mov esi, 0x4c5fd9                                 |     
    0x0040a817 mov edx, 0x26                                     |     
    0x0040a81c mov rdi, rax                                      |     
    0x0040a81f call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createStringRef(\"12345678\", 8, &alloc)", 0x26);
    0x0040a824 mov esi, 0x4e4950                                 |     
    0x0040a829 mov edx, 1                                        |     
    0x0040a82e mov rdi, rax                                      |     
    0x0040a831 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a836 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a839 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a83d mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a846 mov rdi, rax                                      |     rdi = rax;
    0x0040a849 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a84f call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a854 mov esi, 0x4e488d                                 |     
    0x0040a859 mov edx, 1                                        |     
    0x0040a85e mov rdi, rax                                      |     
    0x0040a861 call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a866 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a86c divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a872 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a878 mov rax, qword [rip + 0x30d6b1]                   |     rax = std::__1::cout;
    0x0040a87f mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a883 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a88e mov edi, 0x717f30                                 |     
    0x0040a893 mov esi, 0x4c8852                                 |     
    0x0040a898 mov edx, 0xa                                      |     
    0x0040a89d call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8852, 0xa);
    0x0040a8a2 mov esi, 0x4e4950                                 |     
    0x0040a8a7 mov edx, 1                                        |     
    0x0040a8ac mov rdi, rax                                      |     
    0x0040a8af call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a8b4 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a8b7 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a8bb mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a8c4 mov rdi, rax                                      |     rdi = rax;
    0x0040a8c7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a8cd call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a8d2 mov esi, 0x4e488d                                 |     
    0x0040a8d7 mov edx, 1                                        |     
    0x0040a8dc mov rdi, rax                                      |     
    0x0040a8df call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a8e4 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a8ea divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a8f0 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a8f6 mov rax, qword [rip + 0x30d633]                   |     rax = std::__1::cout;
    0x0040a8fd mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a901 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a90c mov edi, 0x717f30                                 |     
    0x0040a911 mov esi, 0x4c91f7                                 |     
    0x0040a916 mov edx, 0xb                                      |     
    0x0040a91b call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c91f7, 0xb);
    0x0040a920 mov esi, 0x4e4950                                 |     
    0x0040a925 mov edx, 1                                        |     
    0x0040a92a mov rdi, rax                                      |     
    0x0040a92d call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a932 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a935 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a939 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a942 mov rdi, rax                                      |     rdi = rax;
    0x0040a945 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a94b call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a950 mov esi, 0x4e488d                                 |     
    0x0040a955 mov edx, 1                                        |     
    0x0040a95a mov rdi, rax                                      |     
    0x0040a95d call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a962 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a968 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a96e movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a974 mov rax, qword [rip + 0x30d5b5]                   |     rax = std::__1::cout;
    0x0040a97b mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a97f mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a98a mov edi, 0x717f30                                 |     
    0x0040a98f mov esi, 0x4c5e3a                                 |     
    0x0040a994 mov edx, 9                                        |     
    0x0040a999 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x0040a99e mov esi, 0x4e4950                                 |     
    0x0040a9a3 mov edx, 1                                        |     
    0x0040a9a8 mov rdi, rax                                      |     
    0x0040a9ab call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040a9b0 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a9b3 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a9b7 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a9c0 mov rdi, rax                                      |     rdi = rax;
    0x0040a9c3 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a9c9 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a9ce mov esi, 0x4e488d                                 |     
    0x0040a9d3 mov edx, 1                                        |     
    0x0040a9d8 mov rdi, rax                                      |     
    0x0040a9db call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040a9e0 mov edi, 0x717f30                                 |     
    0x0040a9e5 mov esi, 0x4e488d                                 |     
    0x0040a9ea mov edx, 1                                        |     
    0x0040a9ef call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x0040a9f4 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040a9f8 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040a9fc mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_125:
    0x0040aa00 movsxd rdx, esi                                   |     rdx = (int64_t) esi;
    0x0040aa03 inc rdx                                           |     rdx++;
    0x0040aa06 mov dword [r15], edx                              |     *(r15) = edx;
    0x0040aa09 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x0040aa0c je 0x40aa22                                       |         
    0x0040aa0e sub ecx, eax                                      |         ecx -= eax;
    0x0040aa10 cmp edx, ecx                                      |         
                                                                 |         if (edx >= ecx) {
    0x0040aa12 jge 0x40ac05                                      |             goto label_131;
                                                                 |         }
    0x0040aa18 cmp byte [rax + rdx], 0                           |         
                                                                 |         if (*((rax + rdx)) == 0) {
    0x0040aa1c je 0x40ac05                                       |             goto label_131;
                                                                 |         }
                                                                 |     }
    0x0040aa22 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040aa27 mov rsi, qword [rax]                              |     
    0x0040aa2a mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040aa33 lea rdi, [rsp + 0x68]                             |     
    0x0040aa38 mov edx, 0x186a0                                  |     
    0x0040aa3d xor ecx, ecx                                      |     
    0x0040aa3f call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (rsp + 0x68, *(rax), 0x186a0, 0);
    0x0040aa44 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040aa49 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040aa4c jle 0x40ab17                                      |         goto label_132;
                                                                 |     }
    0x0040aa52 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040aa56 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040aa5c xor r14d, r14d                                    |     r14d = 0;
    0x0040aa5f lea r12, [rsp + 0xb0]                             |     r12 = rsp + 0xb0;
    0x0040aa67 lea r15, [rsp + 0x100]                            |     r15 = rsp + 0x100;
    0x0040aa6f lea r13, [rsp + 0xa8]                             |     r13 = rsp + 0xa8;
    0x0040aa77 nop word [rax + rax]                              |     
                                                                 | label_48:
    0x0040aa80 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040aa85 mov rsi, qword [rax]                              |     
    0x0040aa88 mov qword [rsp + 0xa8], 0x4e4128                  |     *((rsp + 0xa8)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040aa94 mov edx, 0x186a0                                  |     
    0x0040aa99 mov rdi, r12                                      |     
    0x0040aa9c xor ecx, ecx                                      |     
    0x0040aa9e call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x0040aaa3 mov rbp, 0xffffffffffffe0c0                       |     
    0x0040aaaa call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040aaaf movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040aab5 mov rbx, r15                                      |     rbx = r15;
    0x0040aab8 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x0040aac0 mov esi, 0x50                                     |         
    0x0040aac5 mov rdi, rbx                                      |         
    0x0040aac8 mov rdx, r13                                      |         
    0x0040aacb call 0x461dc0                                     |         rax = BloombergLP::bdld::Datum::createUninitializedString(BloombergLP::bdld::Datum*,unsigned long,BloombergLP::bslma::Allocator*) (rbx, 0x50, r13);
    0x0040aad0 mov qword [rbp + 0x741100], rax                   |         *((rbp + 0x741100)) = rax;
    0x0040aad7 add rbx, 0x10                                     |         rbx += 0x10;
    0x0040aadb add rbp, 8                                        |         rbp += 8;
    0x0040aadf jne 0x40aac0                                      |         
                                                                 |     } while (rbp != 0);
    0x0040aae1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040aae6 subsd xmm0, qword [rsp + 0x18]                    |     __asm ("subsd xmm0, qword [rsp + 0x18]");
    0x0040aaec movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040aaf2 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040aaf6 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040aafc mov rdi, r13                                      |     
    0x0040aaff call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r13);
    0x0040ab04 inc r14d                                          |     r14d++;
    0x0040ab07 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040ab0c cmp r14d, dword [rax]                             |     
                                                                 |     if (r14d < *(rax)) {
    0x0040ab0f jl 0x40aa80                                       |         goto label_48;
                                                                 |     }
    0x0040ab15 jmp 0x40ab21                                      |     goto label_133;
                                                                 | label_132:
    0x0040ab17 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040ab1b movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
                                                                 | label_133:
    0x0040ab21 mov rax, qword [rsp + 0x50]                       |     rax = *((rsp + 0x50));
    0x0040ab26 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040ab2c divsd xmm0, qword [rax]                           |     __asm ("divsd xmm0, qword [rax]");
    0x0040ab30 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040ab36 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040ab3b mov esi, dword [r15]                              |     esi = *(r15);
    0x0040ab3e mov rax, qword [rip + 0x30d3eb]                   |     rax = std::__1::cout;
    0x0040ab45 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040ab49 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040ab54 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040ab59 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040ab5e mov byte [rsp + 0xa8], 0x29                       |     *((rsp + 0xa8)) = 0x29;
    0x0040ab66 lea rsi, [rsp + 0xa8]                             |     
    0x0040ab6e mov edx, 1                                        |     
    0x0040ab73 mov rdi, rax                                      |     
    0x0040ab76 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0xa8, 1);
    0x0040ab7b mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040ab7e mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040ab82 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040ab8b mov esi, 0x4c6000                                 |     
    0x0040ab90 mov edx, 0x19                                     |     
    0x0040ab95 mov rdi, rax                                      |     
    0x0040ab98 call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createUninitializedString", 0x19);
    0x0040ab9d mov esi, 0x4e4950                                 |     
    0x0040aba2 mov edx, 1                                        |     
    0x0040aba7 mov rdi, rax                                      |     
    0x0040abaa call 0x45fb90                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4950, 1);
    0x0040abaf mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040abb2 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040abb6 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040abbf mov rdi, rax                                      |     rdi = rax;
    0x0040abc2 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040abc8 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040abcd mov esi, 0x4e488d                                 |     
    0x0040abd2 mov edx, 1                                        |     
    0x0040abd7 mov rdi, rax                                      |     
    0x0040abda call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e488d, 1);
    0x0040abdf mov edi, 0x717f30                                 |     
    0x0040abe4 mov esi, 0x4e488d                                 |     
    0x0040abe9 mov edx, 1                                        |     
    0x0040abee call 0x45fb90                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e488d, 1);
    0x0040abf3 lea rdi, [rsp + 0x60]                             |     
    0x0040abf8 call 0x470b70                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rsp + 0x60);
    0x0040abfd mov r13, qword [rsp + 0xa0]                       |     r13 = *((rsp + 0xa0));
                                                                 | label_131:
    0x0040ac05 mov edi, 0x7da                                    |     
    0x0040ac0a mov esi, 1                                        |     
    0x0040ac0f mov edx, 5                                        |     
    0x0040ac14 call 0x46f030                                     |     eax = BloombergLP::bdlt::PosixDateImpUtil::ymdToSerial(int,int,int) (0x7da, 1, 5, rcx);
    0x0040ac19 movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x0040ac1d inc rsi                                           |     rsi++;
    0x0040ac20 mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x0040ac24 mov rcx, qword [r13]                              |     rcx = *(r13);
    0x0040ac28 mov rdx, qword [r13 + 8]                          |     rdx = *((r13 + 8));
    0x0040ac2c cmp rdx, rcx                                      |     
                                                                 |     if (rdx == rcx) {
    0x0040ac2f je 0x40ac47                                       |         goto label_134;
                                                                 |     }
    0x0040ac31 mov edi, edx                                      |     edi = edx;
    0x0040ac33 sub edi, ecx                                      |     edi -= ecx;
    0x0040ac35 cmp esi, edi                                      |     
                                                                 |     if (esi >= edi) {
    0x0040ac37 jge 0x40b119                                      |         void (*0x40b119)() ();
                                                                 |     }
    0x0040ac3d cmp byte [rcx + rsi], 0                           |     
                                                                 |     if (*((rcx + rsi)) == 0) {
    0x0040ac41 je 0x40b119                                       |         void (*0x40b119)() ();
                                                                 |     }
                                                                 | label_134:
    0x0040ac47 mov rcx, qword [rsp + 0x30]                       |     rcx = *((rsp + 0x30));
    0x0040ac4c cmp dword [rcx], 0                                |     
                                                                 |     if (*(rcx) <= 0) {
    0x0040ac4f jle 0x40aeb6                                      |         void (*0x40aeb6)() ();
                                                                 |     }
    0x0040ac55 movabs r13, 0x6000000000000                       |     r13 = 0x6000000000000;
    0x0040ac5f lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x0040ac64 mov ebp, eax                                      |     
    0x0040ac66 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040ac6a movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040ac70 xor r12d, r12d                                    |     r12d = 0;
    0x0040ac73 lea r15, [rsp + 0x60]                             |     r15 = rsp + 0x60;
    0x0040ac78 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040ac7c movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040ac82 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040ac86 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040ac8c xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040ac90 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040ac96 nop word cs:[rax + rax]                           |     
    0x0040aca0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040aca5 mov rsi, qword [rax]                              |     
    0x0040aca8 mov qword [rsp + 0x60], 0x4e4128                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040acb1 mov edx, 0x186a0                                  |     
    0x0040acb6 mov rdi, r14                                      |     
    0x0040acb9 xor ecx, ecx                                      |     
    0x0040acbb call 0x470e60                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x0040acc0 mov ebx, 0x38                                     |     ebx = 0x38;
    0x0040acc5 call 0x405b40                                     |     al = Stopwatch::getCPUTime() ();
    0x0040acca movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040acd2 lodsb al, byte [rsi]                              |     al = *(rsi);
                                                                 |     rsi++;
    0x0040acd3 sbb al, 0xc8                                      |     al -= 0xc8;
    0x0040acd5 add byte [rax], al                                |     *(rax) += al;
                                                                 | }
