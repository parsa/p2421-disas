    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* bdld_datum.t/assume @ 0x45c4f0 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.void_BloombergLP::bdld.hashAppend_MockAccumulatingHashingAlgorithm__MockAccumulatingHashingAlgorithm__BloombergLP::bdld::Datum_const_ ()          | int64_t method_void_BloombergLP::bdld_hashAppend_MockAccumulatingHashingAlgorithm_MockAccumulatingHashingAlgorithm_BloombergLP::bdld::Datum_const_ (char * arg2, char * arg1) {
                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                     |     int64_t var_ch;
                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                     |     char * var_18h;
                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* void BloombergLP::bdld::hashAppend<MockAccumulatingHashingAlgorithm>(MockAccumulatingHashingAlgorithm&, BloombergLP::bdld::Datum const&) */
    0x0045c4f0 push rbp                                                                                                                                              |     
    0x0045c4f1 push r15                                                                                                                                              |     
    0x0045c4f3 push r14                                                                                                                                              |     
    0x0045c4f5 push r13                                                                                                                                              |     
    0x0045c4f7 push r12                                                                                                                                              |     
    0x0045c4f9 push rbx                                                                                                                                              |     
    0x0045c4fa sub rsp, 0x58                                                                                                                                         |     
    0x0045c4fe mov r13, rsi                                                                                                                                          |     r13 = rsi;
    0x0045c501 movsx rax, word [rsi + 0xe]                                                                                                                           |     rax = *((rsi + 0xe));
    0x0045c506 mov eax, eax                                                                                                                                          |     
    0x0045c508 mov eax, dword [rax*4 + 0x4cc590]                                                                                                                     |     eax = *((rax*4 + method.BloombergLP::bdld::Datum.type___const::convert));
    0x0045c50f mov dword [rsp + 8], eax                                                                                                                              |     *((rsp + 8)) = eax;
    0x0045c513 lea rax, [rsp + 8]                                                                                                                                    |     rax = rsp + 8;
    0x0045c518 mov qword [rsp + 0x20], rax                                                                                                                           |     *((rsp + 0x20)) = rax;
    0x0045c51d lea rbp, [rsp + 0xc]                                                                                                                                  |     rbp = rsp + 0xc;
    0x0045c522 mov qword [rsp + 0x10], rbp                                                                                                                           |     *((rsp + 0x10)) = rbp;
    0x0045c527 lea rsi, [rsp + 0x20]                                                                                                                                 |     
    0x0045c52c lea rdx, [rsp + 0x10]                                                                                                                                 |     
    0x0045c531 mov qword [rsp + 0x18], rdi                                                                                                                           |     *((rsp + 0x18)) = rdi;
    0x0045c536 call 0x45d490                                                                                                                                         |     bsl::vector<unsignedchar,bsl::allocator<unsignedchar>>&bsl::vector<bsl::vector<unsignedchar,bsl::allocator<unsignedchar>>,bsl::allocator<bsl::vector<unsignedchar,bsl::allocator<unsignedchar>>>>::emplace_back<unsignedchar const*&,unsignedchar const*>(unsignedchar const*&,unsignedchar const*&&) (rdi, rsp + 0x20, rsp + 0x10);
    0x0045c53b movsx rax, word [r13 + 0xe]                                                                                                                           |     rax = *((r13 + 0xe));
    0x0045c540 mov ecx, eax                                                                                                                                          |     ecx = eax;
    0x0045c542 mov ecx, dword [rcx*4 + 0x4cc590]                                                                                                                     |     ecx = *((rcx*4 + method.BloombergLP::bdld::Datum.type___const::convert));
    0x0045c549 jmp qword [rcx*8 + 0x4c5bb8]                                                                                                                          |     
                                                                                                                                                                     | }
