    ; assembly                                                   | /* r2dec pseudo code output */
                                                                 | /* bdld_datum.t/none @ 0x405ef0 */
                                                                 | #include <stdint.h>
                                                                 |  
    ; (fcn) method.BenchmarkSuite.run_int__int__char_ ()         | uint64_t method_BenchmarkSuite_run_int_int_char_ (int64_t arg_30h, int64_t arg_38h, int64_t arg_40h, int64_t arg_48h, int64_t arg_50h, int64_t arg_58h, int64_t arg_60h, int64_t arg_68h, int64_t arg_a0h, int64_t arg_a8h, int64_t arg_b0h, int64_t arg_100h, int64_t arg_101h, int64_t arg_108h, int64_t arg_10eh, int64_t arg4, signed int64_t arg3, int64_t arg2, char * arg1, int64_t arg7) {
                                                                 |     int64_t var_8h;
                                                                 |     int64_t var_10h;
                                                                 |     int64_t var_18h;
                                                                 |     int64_t var_20h;
                                                                 |     int64_t var_28h;
                                                                 |     rcx = arg4;
                                                                 |     rdx = arg3;
                                                                 |     rsi = arg2;
                                                                 |     rdi = arg1;
                                                                 |     xmm0 = arg7;
                                                                 |     /* BenchmarkSuite::run(int, int, char**) */
    0x00405ef0 push rbp                                          |     
    0x00405ef1 push r15                                          |     
    0x00405ef3 push r14                                          |     
    0x00405ef5 push r13                                          |     
    0x00405ef7 push r12                                          |     
    0x00405ef9 push rbx                                          |     
    0x00405efa sub rsp, 0x3f88                                   |     
    0x00405f01 mov r14, rcx                                      |     r14 = rcx;
    0x00405f04 mov ebp, edx                                      |     
    0x00405f06 mov r13, rdi                                      |     r13 = rdi;
    0x00405f09 mov dword [rdi + 0x20], esi                       |     *((rdi + 0x20)) = esi;
    0x00405f0c cvtsi2sd xmm0, esi                                |     __asm ("cvtsi2sd xmm0, esi");
    0x00405f10 mulsd xmm0, qword [rip + 0xbf6e0]                 |     __asm ("mulsd xmm0, qword [0x004c55f8]");
    0x00405f18 divsd xmm0, qword [rip + 0xbf6c0]                 |     __asm ("divsd xmm0, qword [0x004c55e0]");
    0x00405f20 movsd qword [rdi + 0x28], xmm0                    |     *((rdi + 0x28)) = xmm0;
    0x00405f25 mov dword [rdi + 0x24], 0xffffffff                |     *((rdi + 0x24)) = 0xffffffff;
    0x00405f2c xor esi, esi                                      |     
    0x00405f2e call 0x484080                                     |     bsl::vector<bool,bsl::allocator<bool>>::resize(unsigned long) (rdi, 0);
    0x00405f33 lea rdi, [r13 + 0x100]                            |     
    0x00405f3a mov esi, 0x186a0                                  |     
    0x00405f3f mov qword [rsp + 0x58], rdi                       |     *((rsp + 0x58)) = rdi;
    0x00405f44 call 0x485270                                     |     bsl::vector<char,bsl::allocator<char>>::resize(unsigned long) (r13 + 0x100, 0x186a0);
    0x00405f49 test ebp, ebp                                     |     
                                                                 |     if (ebp <= 0) {
    0x00405f4b jle 0x405fb4                                      |         goto label_49;
                                                                 |     }
    0x00405f4d mov r15d, ebp                                     |     r15d = ebp;
    0x00405f50 xor ebx, ebx                                      |     ebx = 0;
    0x00405f52 jmp 0x405f70                                      |     
                                                                 |     while (eax < edx) {
                                                                 | label_0:
    0x00405f60 sar rbp, 0x20                                     |         rbp >>= 0x20;
    0x00405f64 mov byte [rcx + rbp], 1                           |         *((rcx + rbp)) = 1;
    0x00405f68 inc rbx                                           |         rbx++;
    0x00405f6b cmp r15, rbx                                      |         
                                                                 |         if (r15 == rbx) {
    0x00405f6e je 0x405fb4                                       |             goto label_49;
                                                                 |         }
    0x00405f70 mov rdi, qword [r14 + rbx*8]                      |         
    0x00405f74 xor esi, esi                                      |         
    0x00405f76 mov edx, 0xa                                      |         
    0x00405f7b call 0x404520                                     |         rax = strtol (*((r14 + rbx*8)), 0, 0xa);
    0x00405f80 mov edx, dword [r13 + 8]                          |         edx = *((r13 + 8));
    0x00405f84 mov rcx, qword [r13]                              |         rcx = *(r13);
    0x00405f88 sub edx, ecx                                      |         edx -= ecx;
    0x00405f8a mov rbp, rax                                      |         
    0x00405f8d shl rbp, 0x20                                     |         rbp <<= 0x20;
    0x00405f91 cmp eax, edx                                      |         
    0x00405f93 jl 0x405f60                                       |         
                                                                 |     }
    0x00405f95 mov eax, 0xd693a400                               |     eax = 0xd693a400;
    0x00405f9a lea rsi, [rax + rbp + 0x296c5c00]                 |     
    0x00405fa2 sar rsi, 0x20                                     |     rsi >>= 0x20;
    0x00405fa6 mov rdi, r13                                      |     
    0x00405fa9 call 0x484080                                     |     bsl::vector<bool,bsl::allocator<bool>>::resize(unsigned long) (r13, rax + rbp + 0x296c5c00);
    0x00405fae mov rcx, qword [r13]                              |     rcx = *(r13);
    0x00405fb2 jmp 0x405f60                                      |     goto label_0;
                                                                 | label_49:
    0x00405fb4 lea rax, [r13 + 0x20]                             |     rax = r13 + 0x20;
    0x00405fb8 mov qword [rsp + 0x30], rax                       |     *((rsp + 0x30)) = rax;
    0x00405fbd lea rbx, [r13 + 0x24]                             |     rbx = r13 + 0x24;
    0x00405fc1 mov edi, 0x717f30                                 |     
    0x00405fc6 mov esi, 0x4c6266                                 |     
    0x00405fcb mov edx, 0x15                                     |     
    0x00405fd0 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "/// BEGIN BENCHMARK: ", 0x15);
    0x00405fd5 mov edi, 0x717f30                                 |     
    0x00405fda mov esi, 0x4c627c                                 |     
    0x00405fdf mov edx, 5                                        |     
    0x00405fe4 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Linux", 5);
    0x00405fe9 mov edi, 0x717f30                                 |     
    0x00405fee mov esi, 0x4c6282                                 |     
    0x00405ff3 mov edx, 0x11                                     |     
    0x00405ff8 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, " - 64-bit variant", 0x11);
    0x00405ffd mov edi, 0x717f30                                 |     
    0x00406002 mov esi, 0x4c6294                                 |     
    0x00406007 mov edx, 3                                        |     
    0x0040600c call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c6294, 3);
    0x00406011 mov esi, dword [r13 + 0x20]                       |     esi = *((r13 + 0x20));
    0x00406015 mov rdi, rax                                      |     rdi = rax;
    0x00406018 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040601d mov esi, 0x4c6298                                 |     
    0x00406022 mov edx, 0xc                                      |     
    0x00406027 mov rdi, rax                                      |     
    0x0040602a call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " iterations\n", 0xc);
    0x0040602f mov rax, qword [rip + 0x311efa]                   |     rax = std::__1::cout;
    0x00406036 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040603a or dword [rax + 0x717f38], 4                      |     *((rax + 0x717f38)) |= 4;
    0x00406041 mov rax, qword [rip + 0x311ee8]                   |     rax = std::__1::cout;
    0x00406048 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040604c mov qword [rax + 0x717f40], 1                     |     *((rax + 0x717f40)) = 1;
    0x00406057 movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x0040605b inc rsi                                           |     rsi++;
    0x0040605e mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x00406062 mov rax, qword [r13]                              |     rax = *(r13);
    0x00406066 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
    0x0040606a cmp rcx, rax                                      |     
    0x0040606d mov qword [rsp + 0x48], rbx                       |     *((rsp + 0x48)) = rbx;
                                                                 |     if (rcx != rax) {
    0x00406072 je 0x40608a                                       |         
    0x00406074 mov edx, ecx                                      |         edx = ecx;
    0x00406076 sub edx, eax                                      |         edx -= eax;
    0x00406078 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040607a jge 0x4064a3                                      |             goto label_50;
                                                                 |         }
    0x00406080 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406084 je 0x4064a3                                       |             goto label_50;
                                                                 |         }
                                                                 |     }
    0x0040608a mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040608f cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00406092 jle 0x406240                                      |         goto label_51;
                                                                 |     }
    0x00406098 movabs rbx, 0x2000000000000                       |     rbx = 0x2000000000000;
    0x004060a2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060a6 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004060ac xor r15d, r15d                                    |     r15d = 0;
    0x004060af lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004060b4 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x004060b9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060bd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004060c3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060c7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004060cd xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004060d1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004060d7 nop word [rax + rax]                              |     
                                                                 | label_1:
    0x004060e0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004060e5 mov rsi, qword [rax]                              |     
    0x004060e8 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004060f1 mov edx, 0x186a0                                  |     
    0x004060f6 mov rdi, r14                                      |     
    0x004060f9 xor ecx, ecx                                      |     
    0x004060fb call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406100 mov ebp, 0x78                                     |     
    0x00406105 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040610a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406110 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406118 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x00406120 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x00406128 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x00406130 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x00406138 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x00406140 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x00406148 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x00406150 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x00406154 cmp rbp, 0x3ef8                                   |         
    0x0040615b jne 0x406110                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x0040615d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406162 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406168 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x0040616e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406172 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00406178 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040617d movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406183 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406188 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040618e movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406194 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406198 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x0040619e call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061a3 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004061a9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061ae subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004061b4 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004061ba addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004061be movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004061c4 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004061c9 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004061cf xor ebp, ebp                                      |     ebp = 0;
    0x004061d1 nop word cs:[rax + rax]                           |     
    0x004061db nop dword [rax + rax]                             |     
                                                                 |     do {
    0x004061e0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004061e8 mov rsi, r12                                      |         
    0x004061eb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x004061f0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004061f4 cmp rbp, 0x3e80                                   |         
    0x004061fb jne 0x4061e0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004061fd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406202 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406208 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040620e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406212 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406218 mov rdi, r12                                      |     
    0x0040621b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406220 inc r15d                                          |     r15d++;
    0x00406223 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406228 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040622b jl 0x4060e0                                       |         goto label_1;
                                                                 |     }
    0x00406231 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406236 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406238 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040623e jmp 0x406262                                      |     goto label_52;
                                                                 | label_51:
    0x00406240 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406244 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040624a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040624e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406254 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406258 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040625e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_52:
    0x00406262 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406268 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040626e mov rax, qword [rip + 0x311cbb]                   |     rax = std::__1::cout;
    0x00406275 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406279 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406284 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406289 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040628e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406293 lea rsi, [rsp + 0x60]                             |     
    0x00406298 mov edx, 1                                        |     
    0x0040629d mov rdi, rax                                      |     
    0x004062a0 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004062a5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004062a8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004062ac mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004062b5 mov esi, 0x4c62a5                                 |     
    0x004062ba mov edx, 0xc                                      |     
    0x004062bf mov rdi, rax                                      |     
    0x004062c2 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createNull()", 0xc);
    0x004062c7 mov esi, 0x4e4dc0                                 |     
    0x004062cc mov edx, 1                                        |     
    0x004062d1 mov rdi, rax                                      |     
    0x004062d4 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004062d9 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004062dc mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004062e0 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004062e9 mov rdi, rax                                      |     rdi = rax;
    0x004062ec movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004062f2 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004062f7 mov esi, 0x4e4cfd                                 |     
    0x004062fc mov edx, 1                                        |     
    0x00406301 mov rdi, rax                                      |     
    0x00406304 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406309 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040630f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406315 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040631b mov rax, qword [rip + 0x311c0e]                   |     rax = std::__1::cout;
    0x00406322 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406326 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406331 mov edi, 0x717f30                                 |     
    0x00406336 mov esi, 0x4c93b2                                 |     
    0x0040633b mov edx, 8                                        |     
    0x00406340 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c93b2, 8);
    0x00406345 mov esi, 0x4e4dc0                                 |     
    0x0040634a mov edx, 1                                        |     
    0x0040634f mov rdi, rax                                      |     
    0x00406352 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406357 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040635a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040635e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406367 mov rdi, rax                                      |     rdi = rax;
    0x0040636a movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406370 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406375 mov esi, 0x4e4cfd                                 |     
    0x0040637a mov edx, 1                                        |     
    0x0040637f mov rdi, rax                                      |     
    0x00406382 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406387 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040638d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406393 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406399 mov rax, qword [rip + 0x311b90]                   |     rax = std::__1::cout;
    0x004063a0 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004063a4 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004063af mov edi, 0x717f30                                 |     
    0x004063b4 mov esi, 0x4c93b2                                 |     
    0x004063b9 mov edx, 8                                        |     
    0x004063be call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c93b2, 8);
    0x004063c3 mov esi, 0x4e4dc0                                 |     
    0x004063c8 mov edx, 1                                        |     
    0x004063cd mov rdi, rax                                      |     
    0x004063d0 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004063d5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004063d8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004063dc mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004063e5 mov rdi, rax                                      |     rdi = rax;
    0x004063e8 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004063ee call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004063f3 mov esi, 0x4e4cfd                                 |     
    0x004063f8 mov edx, 1                                        |     
    0x004063fd mov rdi, rax                                      |     
    0x00406400 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406405 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040640b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406411 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406417 mov rax, qword [rip + 0x311b12]                   |     rax = std::__1::cout;
    0x0040641e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406422 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040642d mov edi, 0x717f30                                 |     
    0x00406432 mov esi, 0x4c62b2                                 |     
    0x00406437 mov edx, 9                                        |     
    0x0040643c call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406441 mov esi, 0x4e4dc0                                 |     
    0x00406446 mov edx, 1                                        |     
    0x0040644b mov rdi, rax                                      |     
    0x0040644e call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406453 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406456 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040645a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406463 mov rdi, rax                                      |     rdi = rax;
    0x00406466 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040646c call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406471 mov esi, 0x4e4cfd                                 |     
    0x00406476 mov edx, 1                                        |     
    0x0040647b mov rdi, rax                                      |     
    0x0040647e call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406483 mov edi, 0x717f30                                 |     
    0x00406488 mov esi, 0x4e4cfd                                 |     
    0x0040648d mov edx, 1                                        |     
    0x00406492 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00406497 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040649b mov rax, qword [r13]                              |     rax = *(r13);
    0x0040649f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_50:
    0x004064a3 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004064a6 inc rsi                                           |     rsi++;
    0x004064a9 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x004064ab cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004064ae je 0x4064c6                                       |         
    0x004064b0 mov edx, ecx                                      |         edx = ecx;
    0x004064b2 sub edx, eax                                      |         edx -= eax;
    0x004064b4 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004064b6 jge 0x4068e3                                      |             goto label_53;
                                                                 |         }
    0x004064bc cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004064c0 je 0x4068e3                                       |             goto label_53;
                                                                 |         }
                                                                 |     }
    0x004064c6 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004064cb cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004064ce jle 0x406680                                      |         goto label_54;
                                                                 |     }
    0x004064d4 movabs rbx, 0x3000000000001                       |     rbx = 0x3000000000001;
    0x004064de xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004064e2 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004064e8 xor r15d, r15d                                    |     r15d = 0;
    0x004064eb lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004064f0 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x004064f5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004064f9 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004064ff xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406503 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406509 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040650d movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406513 nop word cs:[rax + rax]                           |     
    0x0040651d nop dword [rax]                                   |     
                                                                 | label_2:
    0x00406520 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406525 mov rsi, qword [rax]                              |     
    0x00406528 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406531 mov edx, 0x186a0                                  |     
    0x00406536 mov rdi, r14                                      |     
    0x00406539 xor ecx, ecx                                      |     
    0x0040653b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406540 mov ebp, 0x78                                     |     
    0x00406545 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040654a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406550 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406558 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x00406560 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x00406568 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x00406570 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x00406578 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x00406580 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x00406588 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x00406590 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x00406594 cmp rbp, 0x3ef8                                   |         
    0x0040659b jne 0x406550                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x0040659d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065a2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065a8 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x004065ae addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065b2 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x004065b8 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065bd movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004065c3 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065c8 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065ce movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x004065d4 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065d8 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x004065de call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065e3 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004065e9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004065ee subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004065f4 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004065fa addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004065fe movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406604 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406609 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040660f xor ebp, ebp                                      |     ebp = 0;
    0x00406611 nop word cs:[rax + rax]                           |     
    0x0040661b nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406620 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00406628 mov rsi, r12                                      |         
    0x0040662b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x00406630 add rbp, 0x10                                     |         rbp += 0x10;
    0x00406634 cmp rbp, 0x3e80                                   |         
    0x0040663b jne 0x406620                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040663d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406642 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406648 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040664e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406652 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406658 mov rdi, r12                                      |     
    0x0040665b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406660 inc r15d                                          |     r15d++;
    0x00406663 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406668 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040666b jl 0x406520                                       |         goto label_2;
                                                                 |     }
    0x00406671 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406676 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406678 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040667e jmp 0x4066a2                                      |     goto label_55;
                                                                 | label_54:
    0x00406680 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406684 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040668a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040668e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406694 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406698 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040669e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_55:
    0x004066a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004066a8 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004066ae mov rax, qword [rip + 0x31187b]                   |     rax = std::__1::cout;
    0x004066b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004066b9 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x004066c4 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x004066c9 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004066ce mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004066d3 lea rsi, [rsp + 0x60]                             |     
    0x004066d8 mov edx, 1                                        |     
    0x004066dd mov rdi, rax                                      |     
    0x004066e0 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004066e5 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004066e8 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004066ec mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004066f5 mov esi, 0x4c62bc                                 |     
    0x004066fa mov edx, 0x13                                     |     
    0x004066ff mov rdi, rax                                      |     
    0x00406702 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createBoolean(true)", 0x13);
    0x00406707 mov esi, 0x4e4dc0                                 |     
    0x0040670c mov edx, 1                                        |     
    0x00406711 mov rdi, rax                                      |     
    0x00406714 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406719 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040671c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406720 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406729 mov rdi, rax                                      |     rdi = rax;
    0x0040672c movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406732 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406737 mov esi, 0x4e4cfd                                 |     
    0x0040673c mov edx, 1                                        |     
    0x00406741 mov rdi, rax                                      |     
    0x00406744 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406749 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040674f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406755 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040675b mov rax, qword [rip + 0x3117ce]                   |     rax = std::__1::cout;
    0x00406762 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406766 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406771 mov edi, 0x717f30                                 |     
    0x00406776 mov esi, 0x4c8dcf                                 |     
    0x0040677b mov edx, 0xb                                      |     
    0x00406780 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8dcf, 0xb);
    0x00406785 mov esi, 0x4e4dc0                                 |     
    0x0040678a mov edx, 1                                        |     
    0x0040678f mov rdi, rax                                      |     
    0x00406792 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406797 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040679a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040679e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004067a7 mov rdi, rax                                      |     rdi = rax;
    0x004067aa movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004067b0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004067b5 mov esi, 0x4e4cfd                                 |     
    0x004067ba mov edx, 1                                        |     
    0x004067bf mov rdi, rax                                      |     
    0x004067c2 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004067c7 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004067cd divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004067d3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004067d9 mov rax, qword [rip + 0x311750]                   |     rax = std::__1::cout;
    0x004067e0 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004067e4 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004067ef mov edi, 0x717f30                                 |     
    0x004067f4 mov esi, 0x4c8de7                                 |     
    0x004067f9 mov edx, 0xc                                      |     
    0x004067fe call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8de7, 0xc);
    0x00406803 mov esi, 0x4e4dc0                                 |     
    0x00406808 mov edx, 1                                        |     
    0x0040680d mov rdi, rax                                      |     
    0x00406810 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406815 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406818 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040681c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406825 mov rdi, rax                                      |     rdi = rax;
    0x00406828 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040682e call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406833 mov esi, 0x4e4cfd                                 |     
    0x00406838 mov edx, 1                                        |     
    0x0040683d mov rdi, rax                                      |     
    0x00406840 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406845 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040684b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406851 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406857 mov rax, qword [rip + 0x3116d2]                   |     rax = std::__1::cout;
    0x0040685e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406862 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040686d mov edi, 0x717f30                                 |     
    0x00406872 mov esi, 0x4c62b2                                 |     
    0x00406877 mov edx, 9                                        |     
    0x0040687c call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406881 mov esi, 0x4e4dc0                                 |     
    0x00406886 mov edx, 1                                        |     
    0x0040688b mov rdi, rax                                      |     
    0x0040688e call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406893 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406896 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040689a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004068a3 mov rdi, rax                                      |     rdi = rax;
    0x004068a6 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004068ac call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004068b1 mov esi, 0x4e4cfd                                 |     
    0x004068b6 mov edx, 1                                        |     
    0x004068bb mov rdi, rax                                      |     
    0x004068be call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004068c3 mov edi, 0x717f30                                 |     
    0x004068c8 mov esi, 0x4e4cfd                                 |     
    0x004068cd mov edx, 1                                        |     
    0x004068d2 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x004068d7 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004068db mov rax, qword [r13]                              |     rax = *(r13);
    0x004068df mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_53:
    0x004068e3 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004068e6 inc rsi                                           |     rsi++;
    0x004068e9 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x004068eb cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004068ee je 0x406906                                       |         
    0x004068f0 mov edx, ecx                                      |         edx = ecx;
    0x004068f2 sub edx, eax                                      |         edx -= eax;
    0x004068f4 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004068f6 jge 0x406d23                                      |             goto label_56;
                                                                 |         }
    0x004068fc cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406900 je 0x406d23                                       |             goto label_56;
                                                                 |         }
                                                                 |     }
    0x00406906 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040690b cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040690e jle 0x406ac0                                      |         goto label_57;
                                                                 |     }
    0x00406914 movabs rbx, 0xa000000000001                       |     rbx = 0xa000000000001;
    0x0040691e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406922 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406928 xor r15d, r15d                                    |     r15d = 0;
    0x0040692b lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x00406930 lea r12, [rsp + 0x60]                             |     r12 = rsp + 0x60;
    0x00406935 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406939 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040693f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406943 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406949 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040694d movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406953 nop word cs:[rax + rax]                           |     
    0x0040695d nop dword [rax]                                   |     
                                                                 | label_3:
    0x00406960 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406965 mov rsi, qword [rax]                              |     
    0x00406968 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406971 mov edx, 0x186a0                                  |     
    0x00406976 mov rdi, r14                                      |     
    0x00406979 xor ecx, ecx                                      |     
    0x0040697b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406980 mov ebp, 0x78                                     |     
    0x00406985 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040698a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00406990 mov qword [rsp + rbp + 0x90], rbx                 |         *((rsp + rbp + 0x90)) = rbx;
    0x00406998 mov qword [rsp + rbp + 0xa0], rbx                 |         *((rsp + rbp + 0xa0)) = rbx;
    0x004069a0 mov qword [rsp + rbp + 0xb0], rbx                 |         *((rsp + rbp + 0xb0)) = rbx;
    0x004069a8 mov qword [rsp + rbp + 0xc0], rbx                 |         *((rsp + rbp + 0xc0)) = rbx;
    0x004069b0 mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x004069b8 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x004069c0 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x004069c8 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x004069d0 sub rbp, 0xffffffffffffff80                       |         rbp -= 0xffffffffffffff80;
    0x004069d4 cmp rbp, 0x3ef8                                   |         
    0x004069db jne 0x406990                                      |         
                                                                 |     } while (rbp != 0x3ef8);
    0x004069dd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004069e2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004069e8 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x004069ee addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004069f2 movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x004069f8 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004069fd movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a03 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a08 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a0e movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406a14 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a18 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x00406a1e call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a23 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a29 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a2e subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a34 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00406a3a addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a3e movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406a44 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a49 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406a4f xor ebp, ebp                                      |     ebp = 0;
    0x00406a51 nop word cs:[rax + rax]                           |     
    0x00406a5b nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406a60 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00406a68 mov rsi, r12                                      |         
    0x00406a6b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r12);
    0x00406a70 add rbp, 0x10                                     |         rbp += 0x10;
    0x00406a74 cmp rbp, 0x3e80                                   |         
    0x00406a7b jne 0x406a60                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00406a7d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406a82 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406a88 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00406a8e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406a92 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406a98 mov rdi, r12                                      |     
    0x00406a9b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r12);
    0x00406aa0 inc r15d                                          |     r15d++;
    0x00406aa3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406aa8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00406aab jl 0x406960                                       |         goto label_3;
                                                                 |     }
    0x00406ab1 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406ab6 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406ab8 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406abe jmp 0x406ae2                                      |     goto label_58;
                                                                 | label_57:
    0x00406ac0 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ac4 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406aca xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ace movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406ad4 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406ad8 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406ade xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_58:
    0x00406ae2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406ae8 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406aee mov rax, qword [rip + 0x31143b]                   |     rax = std::__1::cout;
    0x00406af5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406af9 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406b04 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406b09 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406b0e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406b13 lea rsi, [rsp + 0x60]                             |     
    0x00406b18 mov edx, 1                                        |     
    0x00406b1d mov rdi, rax                                      |     
    0x00406b20 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00406b25 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406b28 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406b2c mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00406b35 mov esi, 0x4c62d0                                 |     
    0x00406b3a mov edx, 0x10                                     |     
    0x00406b3f mov rdi, rax                                      |     
    0x00406b42 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createInteger(1)", 0x10);
    0x00406b47 mov esi, 0x4e4dc0                                 |     
    0x00406b4c mov edx, 1                                        |     
    0x00406b51 mov rdi, rax                                      |     
    0x00406b54 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406b59 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406b5c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406b60 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406b69 mov rdi, rax                                      |     rdi = rax;
    0x00406b6c movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406b72 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406b77 mov esi, 0x4e4cfd                                 |     
    0x00406b7c mov edx, 1                                        |     
    0x00406b81 mov rdi, rax                                      |     
    0x00406b84 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406b89 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406b8f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406b95 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406b9b mov rax, qword [rip + 0x31138e]                   |     rax = std::__1::cout;
    0x00406ba2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406ba6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406bb1 mov edi, 0x717f30                                 |     
    0x00406bb6 mov esi, 0x4c92bd                                 |     
    0x00406bbb mov edx, 0xb                                      |     
    0x00406bc0 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c92bd, 0xb);
    0x00406bc5 mov esi, 0x4e4dc0                                 |     
    0x00406bca mov edx, 1                                        |     
    0x00406bcf mov rdi, rax                                      |     
    0x00406bd2 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406bd7 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406bda mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406bde mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406be7 mov rdi, rax                                      |     rdi = rax;
    0x00406bea movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406bf0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406bf5 mov esi, 0x4e4cfd                                 |     
    0x00406bfa mov edx, 1                                        |     
    0x00406bff mov rdi, rax                                      |     
    0x00406c02 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406c07 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00406c0d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406c13 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406c19 mov rax, qword [rip + 0x311310]                   |     rax = std::__1::cout;
    0x00406c20 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406c24 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406c2f mov edi, 0x717f30                                 |     
    0x00406c34 mov esi, 0x4c92d5                                 |     
    0x00406c39 mov edx, 0xc                                      |     
    0x00406c3e call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c92d5, 0xc);
    0x00406c43 mov esi, 0x4e4dc0                                 |     
    0x00406c48 mov edx, 1                                        |     
    0x00406c4d mov rdi, rax                                      |     
    0x00406c50 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406c55 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406c58 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406c5c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406c65 mov rdi, rax                                      |     rdi = rax;
    0x00406c68 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00406c6e call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406c73 mov esi, 0x4e4cfd                                 |     
    0x00406c78 mov edx, 1                                        |     
    0x00406c7d mov rdi, rax                                      |     
    0x00406c80 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406c85 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00406c8b divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406c91 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406c97 mov rax, qword [rip + 0x311292]                   |     rax = std::__1::cout;
    0x00406c9e mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406ca2 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406cad mov edi, 0x717f30                                 |     
    0x00406cb2 mov esi, 0x4c62b2                                 |     
    0x00406cb7 mov edx, 9                                        |     
    0x00406cbc call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00406cc1 mov esi, 0x4e4dc0                                 |     
    0x00406cc6 mov edx, 1                                        |     
    0x00406ccb mov rdi, rax                                      |     
    0x00406cce call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406cd3 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406cd6 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406cda mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406ce3 mov rdi, rax                                      |     rdi = rax;
    0x00406ce6 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00406cec call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406cf1 mov esi, 0x4e4cfd                                 |     
    0x00406cf6 mov edx, 1                                        |     
    0x00406cfb mov rdi, rax                                      |     
    0x00406cfe call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406d03 mov edi, 0x717f30                                 |     
    0x00406d08 mov esi, 0x4e4cfd                                 |     
    0x00406d0d mov edx, 1                                        |     
    0x00406d12 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00406d17 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00406d1b mov rax, qword [r13]                              |     rax = *(r13);
    0x00406d1f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_56:
    0x00406d23 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00406d26 inc rsi                                           |     rsi++;
    0x00406d29 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x00406d2b cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00406d2e je 0x406d46                                       |         
    0x00406d30 mov edx, ecx                                      |         edx = ecx;
    0x00406d32 sub edx, eax                                      |         edx -= eax;
    0x00406d34 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00406d36 jge 0x407163                                      |             goto label_59;
                                                                 |         }
    0x00406d3c cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00406d40 je 0x407163                                       |             goto label_59;
                                                                 |         }
                                                                 |     }
    0x00406d46 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406d4b cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00406d4e jle 0x406f00                                      |         goto label_60;
                                                                 |     }
    0x00406d54 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d58 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406d5e xor r15d, r15d                                    |     r15d = 0;
    0x00406d61 lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x00406d66 lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x00406d6b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d6f movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406d75 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d79 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406d7f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406d83 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406d89 nop dword [rax]                                   |     
                                                                 | label_4:
    0x00406d90 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00406d95 mov rsi, qword [rax]                              |     
    0x00406d98 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00406da1 mov edx, 0x186a0                                  |     
    0x00406da6 mov rdi, r14                                      |     
    0x00406da9 xor ecx, ecx                                      |     
    0x00406dab call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x00406db0 mov ebx, 0x70                                     |     ebx = 0x70;
    0x00406db5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406dba movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406dc0 movapd xmm0, xmmword [rip + 0xbe448]              |     __asm ("movapd xmm0, xmmword [0x004c5210]");
    0x00406dc8 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00406dd0 movapd xmmword [rsp + rbx + 0x90], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0x90], xmm0");
    0x00406dd9 movapd xmmword [rsp + rbx + 0xa0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xa0], xmm0");
    0x00406de2 movapd xmmword [rsp + rbx + 0xb0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xb0], xmm0");
    0x00406deb movapd xmmword [rsp + rbx + 0xc0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xc0], xmm0");
    0x00406df4 movapd xmmword [rsp + rbx + 0xd0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xd0], xmm0");
    0x00406dfd movapd xmmword [rsp + rbx + 0xe0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xe0], xmm0");
    0x00406e06 movapd xmmword [rsp + rbx + 0xf0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xf0], xmm0");
    0x00406e0f movapd xmmword [rsp + rbx + 0x100], xmm0          |         __asm ("movapd xmmword [rsp + rbx + 0x100], xmm0");
    0x00406e18 sub rbx, 0xffffffffffffff80                       |         rbx -= 0xffffffffffffff80;
    0x00406e1c cmp rbx, 0x3ef0                                   |         
    0x00406e23 jne 0x406dd0                                      |         
                                                                 |     } while (rbx != 0x3ef0);
    0x00406e25 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e2a subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e30 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x00406e36 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e3a movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00406e40 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e45 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e4b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e50 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e56 movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x00406e5c addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e60 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x00406e66 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e6b movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e71 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406e76 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406e7c movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00406e82 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406e86 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00406e8c call 0x405b40                                     |     rax = Stopwatch::getCPUTime() ();
    0x00406e91 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00406e97 xor ebx, ebx                                      |     ebx = 0;
    0x00406e99 nop dword [rax]                                   |     
                                                                 |     do {
    0x00406ea0 lea rdi, [rsp + rbx + 0x100]                      |         
    0x00406ea8 mov rsi, rbp                                      |         
    0x00406eab call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x00406eb0 add rbx, 0x10                                     |         rbx += 0x10;
    0x00406eb4 cmp rbx, 0x3e80                                   |         
    0x00406ebb jne 0x406ea0                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x00406ebd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00406ec2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00406ec8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00406ece addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00406ed2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00406ed8 mov rdi, rbp                                      |     
    0x00406edb call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00406ee0 inc r15d                                          |     r15d++;
    0x00406ee3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00406ee8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00406eeb jl 0x406d90                                       |         goto label_4;
                                                                 |     }
    0x00406ef1 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00406ef6 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00406ef8 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406efe jmp 0x406f22                                      |     goto label_61;
                                                                 | label_60:
    0x00406f00 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f04 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00406f0a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f0e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00406f14 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00406f18 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406f1e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_61:
    0x00406f22 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406f28 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00406f2e mov rax, qword [rip + 0x310ffb]                   |     rax = std::__1::cout;
    0x00406f35 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406f39 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00406f44 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00406f49 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406f4e mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00406f53 lea rsi, [rsp + 0x60]                             |     
    0x00406f58 mov edx, 1                                        |     
    0x00406f5d mov rdi, rax                                      |     
    0x00406f60 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00406f65 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406f68 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406f6c mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00406f75 mov esi, 0x4c62e1                                 |     
    0x00406f7a mov edx, 0x1c                                     |     
    0x00406f7f mov rdi, rax                                      |     
    0x00406f82 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createInteger64(1LL, &alloc)", 0x1c);
    0x00406f87 mov esi, 0x4e4dc0                                 |     
    0x00406f8c mov edx, 1                                        |     
    0x00406f91 mov rdi, rax                                      |     
    0x00406f94 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00406f99 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00406f9c mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00406fa0 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00406fa9 mov rdi, rax                                      |     rdi = rax;
    0x00406fac movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00406fb2 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00406fb7 mov esi, 0x4e4cfd                                 |     
    0x00406fbc mov edx, 1                                        |     
    0x00406fc1 mov rdi, rax                                      |     
    0x00406fc4 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00406fc9 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00406fcf divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00406fd5 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00406fdb mov rax, qword [rip + 0x310f4e]                   |     rax = std::__1::cout;
    0x00406fe2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00406fe6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00406ff1 mov edi, 0x717f30                                 |     
    0x00406ff6 mov esi, 0x4c934e                                 |     
    0x00406ffb mov edx, 0xd                                      |     
    0x00407000 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c934e, 0xd);
    0x00407005 mov esi, 0x4e4dc0                                 |     
    0x0040700a mov edx, 1                                        |     
    0x0040700f mov rdi, rax                                      |     
    0x00407012 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407017 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040701a mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040701e mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407027 mov rdi, rax                                      |     rdi = rax;
    0x0040702a movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407030 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407035 mov esi, 0x4e4cfd                                 |     
    0x0040703a mov edx, 1                                        |     
    0x0040703f mov rdi, rax                                      |     
    0x00407042 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407047 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040704d divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407053 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407059 mov rax, qword [rip + 0x310ed0]                   |     rax = std::__1::cout;
    0x00407060 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407064 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040706f mov edi, 0x717f30                                 |     
    0x00407074 mov esi, 0x4c9368                                 |     
    0x00407079 mov edx, 0xe                                      |     
    0x0040707e call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c9368, 0xe);
    0x00407083 mov esi, 0x4e4dc0                                 |     
    0x00407088 mov edx, 1                                        |     
    0x0040708d mov rdi, rax                                      |     
    0x00407090 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407095 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407098 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040709c mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004070a5 mov rdi, rax                                      |     rdi = rax;
    0x004070a8 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004070ae call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004070b3 mov esi, 0x4e4cfd                                 |     
    0x004070b8 mov edx, 1                                        |     
    0x004070bd mov rdi, rax                                      |     
    0x004070c0 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004070c5 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004070cb divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004070d1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004070d7 mov rax, qword [rip + 0x310e52]                   |     rax = std::__1::cout;
    0x004070de mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004070e2 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004070ed mov edi, 0x717f30                                 |     
    0x004070f2 mov esi, 0x4c62b2                                 |     
    0x004070f7 mov edx, 9                                        |     
    0x004070fc call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407101 mov esi, 0x4e4dc0                                 |     
    0x00407106 mov edx, 1                                        |     
    0x0040710b mov rdi, rax                                      |     
    0x0040710e call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407113 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407116 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040711a mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407123 mov rdi, rax                                      |     rdi = rax;
    0x00407126 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040712c call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407131 mov esi, 0x4e4cfd                                 |     
    0x00407136 mov edx, 1                                        |     
    0x0040713b mov rdi, rax                                      |     
    0x0040713e call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407143 mov edi, 0x717f30                                 |     
    0x00407148 mov esi, 0x4e4cfd                                 |     
    0x0040714d mov edx, 1                                        |     
    0x00407152 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00407157 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040715b mov rax, qword [r13]                              |     rax = *(r13);
    0x0040715f mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_59:
    0x00407163 lea rdx, [r13 + 0x28]                             |     rdx = r13 + 0x28;
    0x00407167 mov qword [rsp + 0x50], rdx                       |     *((rsp + 0x50)) = rdx;
    0x0040716c movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040716f inc rsi                                           |     rsi++;
    0x00407172 mov dword [rbx], esi                              |     *(rbx) = esi;
    0x00407174 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407177 je 0x40718d                                       |         
    0x00407179 sub ecx, eax                                      |         ecx -= eax;
    0x0040717b cmp esi, ecx                                      |         
                                                                 |         if (esi >= ecx) {
    0x0040717d jge 0x40759a                                      |             goto label_62;
                                                                 |         }
    0x00407183 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407187 je 0x40759a                                       |             goto label_62;
                                                                 |         }
                                                                 |     }
    0x0040718d mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407192 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407195 jle 0x407340                                      |         goto label_63;
                                                                 |     }
    0x0040719b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040719f movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004071a5 xor r15d, r15d                                    |     r15d = 0;
    0x004071a8 lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x004071ad lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x004071b2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071b6 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004071bc xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071c0 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004071c6 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004071ca movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
                                                                 | label_5:
    0x004071d0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004071d5 mov rsi, qword [rax]                              |     
    0x004071d8 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004071e1 mov edx, 0x186a0                                  |     
    0x004071e6 mov rdi, r14                                      |     
    0x004071e9 xor ecx, ecx                                      |     
    0x004071eb call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x004071f0 mov ebx, 0x70                                     |     ebx = 0x70;
    0x004071f5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004071fa movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407200 movapd xmm0, xmmword [rip + 0xbe0d8]              |     __asm ("movapd xmm0, xmmword [0x004c52e0]");
    0x00407208 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x00407210 movapd xmmword [rsp + rbx + 0x90], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0x90], xmm0");
    0x00407219 movapd xmmword [rsp + rbx + 0xa0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xa0], xmm0");
    0x00407222 movapd xmmword [rsp + rbx + 0xb0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xb0], xmm0");
    0x0040722b movapd xmmword [rsp + rbx + 0xc0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xc0], xmm0");
    0x00407234 movapd xmmword [rsp + rbx + 0xd0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xd0], xmm0");
    0x0040723d movapd xmmword [rsp + rbx + 0xe0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xe0], xmm0");
    0x00407246 movapd xmmword [rsp + rbx + 0xf0], xmm0           |         __asm ("movapd xmmword [rsp + rbx + 0xf0], xmm0");
    0x0040724f movapd xmmword [rsp + rbx + 0x100], xmm0          |         __asm ("movapd xmmword [rsp + rbx + 0x100], xmm0");
    0x00407258 sub rbx, 0xffffffffffffff80                       |         rbx -= 0xffffffffffffff80;
    0x0040725c cmp rbx, 0x3ef0                                   |         
    0x00407263 jne 0x407210                                      |         
                                                                 |     } while (rbx != 0x3ef0);
    0x00407265 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040726a subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407270 movsd xmm1, qword [rsp + 0x28]                    |     xmm1 = *((rsp + 0x28));
    0x00407276 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040727a movsd qword [rsp + 0x28], xmm1                    |     *((rsp + 0x28)) = xmm1;
    0x00407280 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407285 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040728b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407290 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407296 movsd xmm1, qword [rsp + 0x18]                    |     xmm1 = *((rsp + 0x18));
    0x0040729c addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004072a0 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x004072a6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004072ab movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004072b1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004072b6 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004072bc movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004072c2 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004072c6 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004072cc call 0x405b40                                     |     rax = Stopwatch::getCPUTime() ();
    0x004072d1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004072d7 xor ebx, ebx                                      |     ebx = 0;
    0x004072d9 nop dword [rax]                                   |     
                                                                 |     do {
    0x004072e0 lea rdi, [rsp + rbx + 0x100]                      |         
    0x004072e8 mov rsi, rbp                                      |         
    0x004072eb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x004072f0 add rbx, 0x10                                     |         rbx += 0x10;
    0x004072f4 cmp rbx, 0x3e80                                   |         
    0x004072fb jne 0x4072e0                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x004072fd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407302 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407308 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040730e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407312 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407318 mov rdi, rbp                                      |     
    0x0040731b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00407320 inc r15d                                          |     r15d++;
    0x00407323 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407328 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040732b jl 0x4071d0                                       |         goto label_5;
                                                                 |     }
    0x00407331 mov rbx, qword [rsp + 0x48]                       |     rbx = *((rsp + 0x48));
    0x00407336 mov esi, dword [rbx]                              |     esi = *(rbx);
    0x00407338 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040733e jmp 0x407362                                      |     goto label_64;
                                                                 | label_63:
    0x00407340 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407344 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040734a xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040734e movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407354 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407358 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040735e xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_64:
    0x00407362 mov rbp, qword [rsp + 0x50]                       |     rbp = *((rsp + 0x50));
    0x00407367 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x0040736c movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407372 mov rax, qword [rip + 0x310bb7]                   |     rax = std::__1::cout;
    0x00407379 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040737d mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407388 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040738d call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407392 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407397 lea rsi, [rsp + 0x60]                             |     
    0x0040739c mov edx, 1                                        |     
    0x004073a1 mov rdi, rax                                      |     
    0x004073a4 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004073a9 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004073ac mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004073b0 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004073b9 mov esi, 0x4c62fe                                 |     
    0x004073be mov edx, 0x12                                     |     
    0x004073c3 mov rdi, rax                                      |     
    0x004073c6 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createDouble(1.23)", 0x12);
    0x004073cb mov esi, 0x4e4dc0                                 |     
    0x004073d0 mov edx, 1                                        |     
    0x004073d5 mov rdi, rax                                      |     
    0x004073d8 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004073dd mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004073e0 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004073e4 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004073ed mov rdi, rax                                      |     rdi = rax;
    0x004073f0 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004073f6 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004073fb mov esi, 0x4e4cfd                                 |     
    0x00407400 mov edx, 1                                        |     
    0x00407405 mov rdi, rax                                      |     
    0x00407408 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040740d movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407413 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407418 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040741e mov rax, qword [rip + 0x310b0b]                   |     rax = std::__1::cout;
    0x00407425 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407429 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407434 mov edi, 0x717f30                                 |     
    0x00407439 mov esi, 0x4c90f3                                 |     
    0x0040743e mov edx, 0xa                                      |     
    0x00407443 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c90f3, 0xa);
    0x00407448 mov esi, 0x4e4dc0                                 |     
    0x0040744d mov edx, 1                                        |     
    0x00407452 mov rdi, rax                                      |     
    0x00407455 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040745a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040745d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407461 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040746a mov rdi, rax                                      |     rdi = rax;
    0x0040746d movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407473 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407478 mov esi, 0x4e4cfd                                 |     
    0x0040747d mov edx, 1                                        |     
    0x00407482 mov rdi, rax                                      |     
    0x00407485 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040748a movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407490 divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407495 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040749b mov rax, qword [rip + 0x310a8e]                   |     rax = std::__1::cout;
    0x004074a2 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004074a6 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004074b1 mov edi, 0x717f30                                 |     
    0x004074b6 mov esi, 0x4c9122                                 |     
    0x004074bb mov edx, 0xb                                      |     
    0x004074c0 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c9122, 0xb);
    0x004074c5 mov esi, 0x4e4dc0                                 |     
    0x004074ca mov edx, 1                                        |     
    0x004074cf mov rdi, rax                                      |     
    0x004074d2 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004074d7 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004074da mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004074de mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004074e7 mov rdi, rax                                      |     rdi = rax;
    0x004074ea movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004074f0 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004074f5 mov esi, 0x4e4cfd                                 |     
    0x004074fa mov edx, 1                                        |     
    0x004074ff mov rdi, rax                                      |     
    0x00407502 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407507 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040750d divsd xmm0, qword [rbp]                           |     __asm ("divsd xmm0, qword [rbp]");
    0x00407512 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407518 mov rax, qword [rip + 0x310a11]                   |     rax = std::__1::cout;
    0x0040751f mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407523 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040752e mov edi, 0x717f30                                 |     
    0x00407533 mov esi, 0x4c62b2                                 |     
    0x00407538 mov edx, 9                                        |     
    0x0040753d call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407542 mov esi, 0x4e4dc0                                 |     
    0x00407547 mov edx, 1                                        |     
    0x0040754c mov rdi, rax                                      |     
    0x0040754f call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407554 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407557 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040755b mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407564 mov rdi, rax                                      |     rdi = rax;
    0x00407567 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040756d call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407572 mov esi, 0x4e4cfd                                 |     
    0x00407577 mov edx, 1                                        |     
    0x0040757c mov rdi, rax                                      |     
    0x0040757f call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407584 mov edi, 0x717f30                                 |     
    0x00407589 mov esi, 0x4e4cfd                                 |     
    0x0040758e mov edx, 1                                        |     
    0x00407593 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00407598 mov esi, dword [rbx]                              |     esi = *(rbx);
                                                                 | label_62:
    0x0040759a inc esi                                           |     esi++;
    0x0040759c mov dword [rbx], esi                              |     *(rbx) = esi;
    0x0040759e mov dword [rsp + 0x60], 0                         |     *((rsp + 0x60)) = 0;
    0x004075a6 lea rsi, [rsp + 0x60]                             |     rsi = rsp + 0x60;
    0x004075ab mov edi, 0x4c6311                                 |     edi = "1.23456789";
    0x004075b0 call 0x4a4b90                                     |     rax = _bid64_from_string ();
    0x004075b5 mov r15, rax                                      |     r15 = rax;
    0x004075b8 test byte [rsp + 0x60], 0x18                      |     
                                                                 |     if ((*((rsp + 0x60)) & 0x18) != 0) {
    0x004075bd je 0x4075ca                                       |         
    0x004075bf call 0x404630                                     |         errno_location ();
    0x004075c4 mov dword [rax], 0x22                             |         *(rax) = 0x22;
                                                                 |     }
    0x004075ca movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x004075ce inc rsi                                           |     rsi++;
    0x004075d1 mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x004075d5 mov rax, qword [r13]                              |     rax = *(r13);
    0x004075d9 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
    0x004075dd cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004075e0 je 0x4075f8                                       |         
    0x004075e2 mov edx, ecx                                      |         edx = ecx;
    0x004075e4 sub edx, eax                                      |         edx -= eax;
    0x004075e6 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004075e8 jge 0x4077b4                                      |             goto label_65;
                                                                 |         }
    0x004075ee cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004075f2 je 0x4077b4                                       |             goto label_65;
                                                                 |         }
                                                                 |     }
    0x004075f8 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004075fd cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407600 jle 0x4077ce                                      |         goto label_66;
                                                                 |     }
    0x00407606 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040760a movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407610 xor r14d, r14d                                    |     r14d = 0;
    0x00407613 lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407618 lea rbp, [rsp + 0x60]                             |     rbp = rsp + 0x60;
    0x0040761d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407621 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407627 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040762b movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407631 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407635 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040763b nop dword [rax + rax]                             |     
                                                                 | label_6:
    0x00407640 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407645 mov rsi, qword [rax]                              |     
    0x00407648 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407651 mov edx, 0x186a0                                  |     
    0x00407656 mov rdi, r12                                      |     
    0x00407659 xor ecx, ecx                                      |     
    0x0040765b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407660 mov ebx, 8                                        |     ebx = 8;
    0x00407665 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040766a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407670 mov rdi, r15                                      |         
    0x00407673 mov rsi, rbp                                      |         rsi = rbp;
    0x00407676 call 0x461d80                                     |         rax = BloombergLP::bdld::Datum::createDecimal64(BloombergLP::bdldfp::Decimal_Type64,BloombergLP::bslma::Allocator*) (r15);
    0x0040767b mov qword [rsp + rbx + 0xf8], rax                 |         *((rsp + rbx + 0xf8)) = rax;
    0x00407683 mov qword [rsp + rbx + 0x100], rdx                |         *((rsp + rbx + 0x100)) = rdx;
    0x0040768b add rbx, 0x10                                     |         rbx += 0x10;
    0x0040768f cmp rbx, 0x3e88                                   |         
    0x00407696 jne 0x407670                                      |         
                                                                 |     } while (rbx != 0x3e88);
    0x00407698 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040769d subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004076a3 movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004076a9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076ae movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004076b4 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076b9 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004076bf movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004076c5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004076ca movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004076d0 mov al, byte [rip + 0x310942]                     |     al = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004076d6 test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004076d8 je 0x407793                                       |         goto label_67;
                                                                 |     }
                                                                 | label_7:
    0x004076de movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004076e4 addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004076ea movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004076f0 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004076f6 addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004076fc movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407702 mov eax, 0x3e8                                    |     eax = 0x3e8;
    0x00407707 nop word [rax + rax]                              |     
                                                                 |     do {
    0x00407710 add rax, 0xffffffffffffffe7                       |         rax += 0xffffffffffffffe7;
    0x00407714 jne 0x407710                                      |         
                                                                 |     } while (rax != 0);
    0x00407716 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040771b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407721 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00407727 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040772b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00407731 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407736 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040773c xor ebx, ebx                                      |     ebx = 0;
    0x0040773e nop                                               |     
                                                                 |     do {
    0x00407740 lea rdi, [rsp + rbx + 0x100]                      |         
    0x00407748 mov rsi, rbp                                      |         
    0x0040774b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbx + 0x100, rbp);
    0x00407750 add rbx, 0x10                                     |         rbx += 0x10;
    0x00407754 cmp rbx, 0x3e80                                   |         
    0x0040775b jne 0x407740                                      |         
                                                                 |     } while (rbx != 0x3e80);
    0x0040775d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407762 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407768 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040776e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407772 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407778 mov rdi, rbp                                      |     
    0x0040777b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbp);
    0x00407780 inc r14d                                          |     r14d++;
    0x00407783 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407788 cmp r14d, dword [rax]                             |     
                                                                 |     if (r14d < *(rax)) {
    0x0040778b jl 0x407640                                       |         goto label_6;
                                                                 |     }
    0x00407791 jmp 0x4077be                                      |     goto label_68;
                                                                 | label_67:
    0x00407793 mov edi, 0x718018                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407798 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040779d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040779f je 0x4076de                                       |         goto label_7;
                                                                 |     }
    0x004077a5 mov edi, 0x718018                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x004077aa call 0x4042d0                                     |     cxa_guard_release ();
    0x004077af jmp 0x4076de                                      |     goto label_7;
                                                                 | label_65:
    0x004077b4 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x004077b9 jmp 0x407a36                                      |     goto label_69;
                                                                 | label_68:
    0x004077be mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x004077c3 mov esi, dword [r15]                              |     esi = *(r15);
    0x004077c6 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004077cc jmp 0x4077f5                                      |     goto label_70;
                                                                 | label_66:
    0x004077ce xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077d2 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004077d8 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077dc movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004077e2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077e6 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004077ec xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004077f0 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
                                                                 | label_70:
    0x004077f5 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004077fb movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407801 mov rax, qword [rip + 0x310728]                   |     rax = std::__1::cout;
    0x00407808 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040780c mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407817 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040781c call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407821 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407826 lea rsi, [rsp + 0x60]                             |     
    0x0040782b mov edx, 1                                        |     
    0x00407830 mov rdi, rax                                      |     
    0x00407833 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00407838 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040783b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040783f mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00407848 mov esi, 0x4c631c                                 |     
    0x0040784d mov edx, 0x23                                     |     
    0x00407852 mov rdi, rax                                      |     
    0x00407855 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createDecimal64(aDecimal64, &alloc)", 0x23);
    0x0040785a mov esi, 0x4e4dc0                                 |     
    0x0040785f mov edx, 1                                        |     
    0x00407864 mov rdi, rax                                      |     
    0x00407867 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040786c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040786f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407873 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040787c mov rdi, rax                                      |     rdi = rax;
    0x0040787f movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407885 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040788a mov esi, 0x4e4cfd                                 |     
    0x0040788f mov edx, 1                                        |     
    0x00407894 mov rdi, rax                                      |     
    0x00407897 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040789c movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004078a2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004078a8 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004078ae mov rax, qword [rip + 0x31067b]                   |     rax = std::__1::cout;
    0x004078b5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004078b9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004078c4 mov edi, 0x717f30                                 |     
    0x004078c9 mov esi, 0x4c900c                                 |     
    0x004078ce mov edx, 0xd                                      |     
    0x004078d3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c900c, 0xd);
    0x004078d8 mov esi, 0x4e4dc0                                 |     
    0x004078dd mov edx, 1                                        |     
    0x004078e2 mov rdi, rax                                      |     
    0x004078e5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004078ea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004078ed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004078f1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004078fa mov rdi, rax                                      |     rdi = rax;
    0x004078fd movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407903 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407908 mov esi, 0x4e4cfd                                 |     
    0x0040790d mov edx, 1                                        |     
    0x00407912 mov rdi, rax                                      |     
    0x00407915 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040791a movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407920 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407926 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040792c mov rax, qword [rip + 0x3105fd]                   |     rax = std::__1::cout;
    0x00407933 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407937 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407942 mov edi, 0x717f30                                 |     
    0x00407947 mov esi, 0x4c9041                                 |     
    0x0040794c mov edx, 0xe                                      |     
    0x00407951 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c9041, 0xe);
    0x00407956 mov esi, 0x4e4dc0                                 |     
    0x0040795b mov edx, 1                                        |     
    0x00407960 mov rdi, rax                                      |     
    0x00407963 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407968 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040796b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040796f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407978 mov rdi, rax                                      |     rdi = rax;
    0x0040797b movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407981 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407986 mov esi, 0x4e4cfd                                 |     
    0x0040798b mov edx, 1                                        |     
    0x00407990 mov rdi, rax                                      |     
    0x00407993 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407998 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040799e divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004079a4 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004079aa mov rax, qword [rip + 0x31057f]                   |     rax = std::__1::cout;
    0x004079b1 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004079b5 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004079c0 mov edi, 0x717f30                                 |     
    0x004079c5 mov esi, 0x4c62b2                                 |     
    0x004079ca mov edx, 9                                        |     
    0x004079cf call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x004079d4 mov esi, 0x4e4dc0                                 |     
    0x004079d9 mov edx, 1                                        |     
    0x004079de mov rdi, rax                                      |     
    0x004079e1 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004079e6 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004079e9 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004079ed mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004079f6 mov rdi, rax                                      |     rdi = rax;
    0x004079f9 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004079ff call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407a04 mov esi, 0x4e4cfd                                 |     
    0x00407a09 mov edx, 1                                        |     
    0x00407a0e mov rdi, rax                                      |     
    0x00407a11 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407a16 mov edi, 0x717f30                                 |     
    0x00407a1b mov esi, 0x4e4cfd                                 |     
    0x00407a20 mov edx, 1                                        |     
    0x00407a25 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00407a2a mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00407a2e mov rax, qword [r13]                              |     rax = *(r13);
    0x00407a32 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_69:
    0x00407a36 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00407a39 inc rsi                                           |     rsi++;
    0x00407a3c mov dword [r15], esi                              |     *(r15) = esi;
    0x00407a3f cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407a42 je 0x407a5a                                       |         
    0x00407a44 mov edx, ecx                                      |         edx = ecx;
    0x00407a46 sub edx, eax                                      |         edx -= eax;
    0x00407a48 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00407a4a jge 0x407f08                                      |             goto label_71;
                                                                 |         }
    0x00407a50 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407a54 je 0x407f08                                       |             goto label_71;
                                                                 |         }
                                                                 |     }
    0x00407a5a mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407a5f cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407a62 jle 0x407ca5                                      |         goto label_72;
                                                                 |     }
    0x00407a68 lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407a6d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a71 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407a77 xor r15d, r15d                                    |     r15d = 0;
    0x00407a7a lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00407a82 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00407a87 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a8b movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407a91 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a95 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407a9b xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407a9f movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407aa5 nop word cs:[rax + rax]                           |     
    0x00407aaf nop                                               |     
                                                                 | label_10:
    0x00407ab0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407ab5 mov rsi, qword [rax]                              |     
    0x00407ab8 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407ac1 mov edx, 0x186a0                                  |     
    0x00407ac6 mov rdi, r12                                      |     
    0x00407ac9 xor ecx, ecx                                      |     
    0x00407acb call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407ad0 mov ebp, 8                                        |     
    0x00407ad5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407ada movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407ae0 mov edi, 0x4cbf14                                 |         
    0x00407ae5 mov esi, 1                                        |         
    0x00407aea mov rdx, rbx                                      |         
    0x00407aed call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4cbf14, 1, rbx);
    0x00407af2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00407afa mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00407b02 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407b06 cmp rbp, 0x3e88                                   |         
    0x00407b0d jne 0x407ae0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00407b0f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b14 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407b1a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00407b20 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b25 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407b2b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b30 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407b36 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00407b3c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407b41 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407b47 mov al, byte [rip + 0x314353]                     |     al = .comment;
    0x00407b4d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00407b4f je 0x407c63                                       |         goto label_73;
                                                                 |     }
                                                                 | label_11:
    0x00407b55 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407b5b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00407b61 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407b67 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407b6d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00407b73 xor eax, eax                                      |     eax = 0;
    0x00407b75 jmp 0x407baa                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_8:
    0x00407b80 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00407b88 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_9:
    0x00407b90 mov qword [rax + 0x718020], rcx                   |         *((rax + method.BenchmarkSuite.run_int__int__char_::results)) = rcx;
    0x00407b97 mov qword [rax + 0x718028], rdx                   |         *((rax + 0x718028)) = rdx;
    0x00407b9e add rax, 0x10                                     |         rax += 0x10;
    0x00407ba2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00407ba8 je 0x407be0                                       |             goto label_74;
                                                                 |         }
    0x00407baa movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00407bb2 cmp esi, 0xe                                      |         
    0x00407bb5 je 0x407b80                                       |         
                                                                 |     }
    0x00407bb7 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x00407bba je 0x407b80                                       |         goto label_8;
                                                                 |     }
    0x00407bbc mov ecx, 0                                        |     ecx = 0;
    0x00407bc1 mov edx, 0                                        |     edx = 0;
    0x00407bc6 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00407bc9 jne 0x407b90                                      |         goto label_9;
                                                                 |     }
    0x00407bcb lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00407bcf movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00407bd8 jmp 0x407b90                                      |     goto label_9;
                                                                 | label_74:
    0x00407be0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407be6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407beb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407bf1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00407bf7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407bfb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00407c01 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407c06 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407c0c xor ebp, ebp                                      |     ebp = 0;
    0x00407c0e nop                                               |     
                                                                 |     do {
    0x00407c10 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00407c18 mov rsi, rbx                                      |         
    0x00407c1b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00407c20 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407c24 cmp rbp, 0x3e80                                   |         
    0x00407c2b jne 0x407c10                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00407c2d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407c32 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407c38 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00407c3e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00407c42 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00407c48 mov rdi, rbx                                      |     
    0x00407c4b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00407c50 inc r15d                                          |     r15d++;
    0x00407c53 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407c58 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00407c5b jl 0x407ab0                                       |         goto label_10;
                                                                 |     }
    0x00407c61 jmp 0x407c95                                      |     goto label_75;
                                                                 | label_73:
    0x00407c63 mov edi, 0x71bea0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407c68 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00407c6d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00407c6f je 0x407b55                                       |         goto label_11;
                                                                 |     }
    0x00407c75 mov edi, 0x718020                                 |     
    0x00407c7a mov edx, 0x3e80                                   |     
    0x00407c7f xor esi, esi                                      |     
    0x00407c81 call 0x404140                                     |     memset (method.BenchmarkSuite.run_int__int__char_::results, 0, 0x3e80);
    0x00407c86 mov edi, 0x71bea0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00407c8b call 0x4042d0                                     |     cxa_guard_release ();
    0x00407c90 jmp 0x407b55                                      |     goto label_11;
                                                                 | label_75:
    0x00407c95 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00407c9a mov esi, dword [r15]                              |     esi = *(r15);
    0x00407c9d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407ca3 jmp 0x407cc7                                      |     goto label_76;
                                                                 | label_72:
    0x00407ca5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407ca9 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407caf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407cb3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407cb9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407cbd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407cc3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_76:
    0x00407cc7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407ccd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407cd3 mov rax, qword [rip + 0x310256]                   |     rax = std::__1::cout;
    0x00407cda mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407cde mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00407ce9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00407cee call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407cf3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00407cf8 lea rsi, [rsp + 0x60]                             |     
    0x00407cfd mov edx, 1                                        |     
    0x00407d02 mov rdi, rax                                      |     
    0x00407d05 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00407d0a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407d0d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407d11 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00407d1a mov esi, 0x4c6340                                 |     
    0x00407d1f mov edx, 0x17                                     |     
    0x00407d24 mov rdi, rax                                      |     
    0x00407d27 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1\", &alloc)", 0x17);
    0x00407d2c mov esi, 0x4e4dc0                                 |     
    0x00407d31 mov edx, 1                                        |     
    0x00407d36 mov rdi, rax                                      |     
    0x00407d39 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407d3e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407d41 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407d45 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407d4e mov rdi, rax                                      |     rdi = rax;
    0x00407d51 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00407d57 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407d5c mov esi, 0x4e4cfd                                 |     
    0x00407d61 mov edx, 1                                        |     
    0x00407d66 mov rdi, rax                                      |     
    0x00407d69 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407d6e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407d74 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407d7a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407d80 mov rax, qword [rip + 0x3101a9]                   |     rax = std::__1::cout;
    0x00407d87 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407d8b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407d96 mov edi, 0x717f30                                 |     
    0x00407d9b mov esi, 0x4c8cc8                                 |     
    0x00407da0 mov edx, 0xa                                      |     
    0x00407da5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x00407daa mov esi, 0x4e4dc0                                 |     
    0x00407daf mov edx, 1                                        |     
    0x00407db4 mov rdi, rax                                      |     
    0x00407db7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407dbc mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407dbf mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407dc3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407dcc mov rdi, rax                                      |     rdi = rax;
    0x00407dcf movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00407dd5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407dda mov esi, 0x4e4cfd                                 |     
    0x00407ddf mov edx, 1                                        |     
    0x00407de4 mov rdi, rax                                      |     
    0x00407de7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407dec movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407df2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407df8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407dfe mov rax, qword [rip + 0x31012b]                   |     rax = std::__1::cout;
    0x00407e05 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407e09 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407e14 mov edi, 0x717f30                                 |     
    0x00407e19 mov esi, 0x4c966d                                 |     
    0x00407e1e mov edx, 0xb                                      |     
    0x00407e23 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00407e28 mov esi, 0x4e4dc0                                 |     
    0x00407e2d mov edx, 1                                        |     
    0x00407e32 mov rdi, rax                                      |     
    0x00407e35 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407e3a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407e3d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407e41 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407e4a mov rdi, rax                                      |     rdi = rax;
    0x00407e4d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00407e53 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407e58 mov esi, 0x4e4cfd                                 |     
    0x00407e5d mov edx, 1                                        |     
    0x00407e62 mov rdi, rax                                      |     
    0x00407e65 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407e6a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00407e70 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00407e76 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407e7c mov rax, qword [rip + 0x3100ad]                   |     rax = std::__1::cout;
    0x00407e83 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00407e87 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00407e92 mov edi, 0x717f30                                 |     
    0x00407e97 mov esi, 0x4c62b2                                 |     
    0x00407e9c mov edx, 9                                        |     
    0x00407ea1 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00407ea6 mov esi, 0x4e4dc0                                 |     
    0x00407eab mov edx, 1                                        |     
    0x00407eb0 mov rdi, rax                                      |     
    0x00407eb3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00407eb8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00407ebb mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00407ebf mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00407ec8 mov rdi, rax                                      |     rdi = rax;
    0x00407ecb movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00407ed1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00407ed6 mov esi, 0x4e4cfd                                 |     
    0x00407edb mov edx, 1                                        |     
    0x00407ee0 mov rdi, rax                                      |     
    0x00407ee3 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00407ee8 mov edi, 0x717f30                                 |     
    0x00407eed mov esi, 0x4e4cfd                                 |     
    0x00407ef2 mov edx, 1                                        |     
    0x00407ef7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00407efc mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00407f00 mov rax, qword [r13]                              |     rax = *(r13);
    0x00407f04 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_71:
    0x00407f08 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00407f0b inc rsi                                           |     rsi++;
    0x00407f0e mov dword [r15], esi                              |     *(r15) = esi;
    0x00407f11 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00407f14 je 0x407f2c                                       |         
    0x00407f16 mov edx, ecx                                      |         edx = ecx;
    0x00407f18 sub edx, eax                                      |         edx -= eax;
    0x00407f1a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00407f1c jge 0x4083d8                                      |             goto label_77;
                                                                 |         }
    0x00407f22 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00407f26 je 0x4083d8                                       |             goto label_77;
                                                                 |         }
                                                                 |     }
    0x00407f2c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00407f31 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00407f34 jle 0x408175                                      |         goto label_78;
                                                                 |     }
    0x00407f3a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00407f3f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f43 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00407f49 xor r15d, r15d                                    |     r15d = 0;
    0x00407f4c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00407f54 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00407f59 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f5d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00407f63 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f67 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00407f6d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00407f71 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00407f77 nop word [rax + rax]                              |     
                                                                 | label_14:
    0x00407f80 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00407f85 mov rsi, qword [rax]                              |     
    0x00407f88 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00407f91 mov edx, 0x186a0                                  |     
    0x00407f96 mov rdi, r12                                      |     
    0x00407f99 xor ecx, ecx                                      |     
    0x00407f9b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00407fa0 mov ebp, 8                                        |     
    0x00407fa5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407faa movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00407fb0 mov edi, 0x4cbf14                                 |         
    0x00407fb5 mov esi, 1                                        |         
    0x00407fba mov rdx, rbx                                      |         
    0x00407fbd call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4cbf14, 1, rbx);
    0x00407fc2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00407fca mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00407fd2 add rbp, 0x10                                     |         rbp += 0x10;
    0x00407fd6 cmp rbp, 0x3e88                                   |         
    0x00407fdd jne 0x407fb0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00407fdf call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407fe4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00407fea movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00407ff0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00407ff5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00407ffb call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408000 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408006 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040800c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408011 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408017 mov al, byte [rip + 0x317d13]                     |     al = .comment;
    0x0040801d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040801f je 0x408133                                       |         goto label_79;
                                                                 |     }
                                                                 | label_15:
    0x00408025 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040802b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00408031 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408037 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040803d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00408043 xor eax, eax                                      |     eax = 0;
    0x00408045 jmp 0x40807a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_12:
    0x00408050 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408058 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_13:
    0x00408060 mov qword [rax + 0x71beb0], rcx                   |         *((rax + 0x71beb0)) = rcx;
    0x00408067 mov qword [rax + 0x71beb8], rdx                   |         *((rax + 0x71beb8)) = rdx;
    0x0040806e add rax, 0x10                                     |         rax += 0x10;
    0x00408072 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408078 je 0x4080b0                                       |             goto label_80;
                                                                 |         }
    0x0040807a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00408082 cmp esi, 0xe                                      |         
    0x00408085 je 0x408050                                       |         
                                                                 |     }
    0x00408087 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x0040808a je 0x408050                                       |         goto label_12;
                                                                 |     }
    0x0040808c mov ecx, 0                                        |     ecx = 0;
    0x00408091 mov edx, 0                                        |     edx = 0;
    0x00408096 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00408099 jne 0x408060                                      |         goto label_13;
                                                                 |     }
    0x0040809b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x0040809f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x004080a8 jmp 0x408060                                      |     goto label_13;
                                                                 | label_80:
    0x004080b0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004080b6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004080bb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004080c1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004080c7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004080cb movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004080d1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004080d6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004080dc xor ebp, ebp                                      |     ebp = 0;
    0x004080de nop                                               |     
                                                                 |     do {
    0x004080e0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004080e8 mov rsi, rbx                                      |         
    0x004080eb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x004080f0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004080f4 cmp rbp, 0x3e80                                   |         
    0x004080fb jne 0x4080e0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004080fd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408102 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408108 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040810e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408112 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00408118 mov rdi, rbx                                      |     
    0x0040811b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408120 inc r15d                                          |     r15d++;
    0x00408123 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408128 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040812b jl 0x407f80                                       |         goto label_14;
                                                                 |     }
    0x00408131 jmp 0x408165                                      |     goto label_81;
                                                                 | label_79:
    0x00408133 mov edi, 0x71fd30                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408138 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040813d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040813f je 0x408025                                       |         goto label_15;
                                                                 |     }
    0x00408145 mov edi, 0x71beb0                                 |     
    0x0040814a mov edx, 0x3e80                                   |     
    0x0040814f xor esi, esi                                      |     
    0x00408151 call 0x404140                                     |     memset (0x71beb0, 0, 0x3e80);
    0x00408156 mov edi, 0x71fd30                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040815b call 0x4042d0                                     |     cxa_guard_release ();
    0x00408160 jmp 0x408025                                      |     goto label_15;
                                                                 | label_81:
    0x00408165 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040816a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040816d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408173 jmp 0x408197                                      |     goto label_82;
                                                                 | label_78:
    0x00408175 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408179 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040817f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408183 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408189 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040818d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408193 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_82:
    0x00408197 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040819d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004081a3 mov rax, qword [rip + 0x30fd86]                   |     rax = std::__1::cout;
    0x004081aa mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004081ae mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x004081b9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x004081be call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004081c3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004081c8 lea rsi, [rsp + 0x60]                             |     
    0x004081cd mov edx, 1                                        |     
    0x004081d2 mov rdi, rax                                      |     
    0x004081d5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004081da mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004081dd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004081e1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004081ea mov esi, 0x4c6340                                 |     
    0x004081ef mov edx, 0x17                                     |     
    0x004081f4 mov rdi, rax                                      |     
    0x004081f7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1\", &alloc)", 0x17);
    0x004081fc mov esi, 0x4e4dc0                                 |     
    0x00408201 mov edx, 1                                        |     
    0x00408206 mov rdi, rax                                      |     
    0x00408209 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040820e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408211 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408215 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040821e mov rdi, rax                                      |     rdi = rax;
    0x00408221 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408227 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040822c mov esi, 0x4e4cfd                                 |     
    0x00408231 mov edx, 1                                        |     
    0x00408236 mov rdi, rax                                      |     
    0x00408239 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040823e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408244 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040824a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408250 mov rax, qword [rip + 0x30fcd9]                   |     rax = std::__1::cout;
    0x00408257 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040825b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408266 mov edi, 0x717f30                                 |     
    0x0040826b mov esi, 0x4c8cc8                                 |     
    0x00408270 mov edx, 0xa                                      |     
    0x00408275 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x0040827a mov esi, 0x4e4dc0                                 |     
    0x0040827f mov edx, 1                                        |     
    0x00408284 mov rdi, rax                                      |     
    0x00408287 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040828c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040828f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408293 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040829c mov rdi, rax                                      |     rdi = rax;
    0x0040829f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004082a5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004082aa mov esi, 0x4e4cfd                                 |     
    0x004082af mov edx, 1                                        |     
    0x004082b4 mov rdi, rax                                      |     
    0x004082b7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004082bc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004082c2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004082c8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004082ce mov rax, qword [rip + 0x30fc5b]                   |     rax = std::__1::cout;
    0x004082d5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004082d9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004082e4 mov edi, 0x717f30                                 |     
    0x004082e9 mov esi, 0x4c966d                                 |     
    0x004082ee mov edx, 0xb                                      |     
    0x004082f3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x004082f8 mov esi, 0x4e4dc0                                 |     
    0x004082fd mov edx, 1                                        |     
    0x00408302 mov rdi, rax                                      |     
    0x00408305 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040830a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040830d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408311 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040831a mov rdi, rax                                      |     rdi = rax;
    0x0040831d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408323 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408328 mov esi, 0x4e4cfd                                 |     
    0x0040832d mov edx, 1                                        |     
    0x00408332 mov rdi, rax                                      |     
    0x00408335 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040833a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408340 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408346 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040834c mov rax, qword [rip + 0x30fbdd]                   |     rax = std::__1::cout;
    0x00408353 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408357 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408362 mov edi, 0x717f30                                 |     
    0x00408367 mov esi, 0x4c62b2                                 |     
    0x0040836c mov edx, 9                                        |     
    0x00408371 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408376 mov esi, 0x4e4dc0                                 |     
    0x0040837b mov edx, 1                                        |     
    0x00408380 mov rdi, rax                                      |     
    0x00408383 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408388 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040838b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040838f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408398 mov rdi, rax                                      |     rdi = rax;
    0x0040839b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004083a1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004083a6 mov esi, 0x4e4cfd                                 |     
    0x004083ab mov edx, 1                                        |     
    0x004083b0 mov rdi, rax                                      |     
    0x004083b3 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004083b8 mov edi, 0x717f30                                 |     
    0x004083bd mov esi, 0x4e4cfd                                 |     
    0x004083c2 mov edx, 1                                        |     
    0x004083c7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x004083cc mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004083d0 mov rax, qword [r13]                              |     rax = *(r13);
    0x004083d4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_77:
    0x004083d8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004083db inc rsi                                           |     rsi++;
    0x004083de mov dword [r15], esi                              |     *(r15) = esi;
    0x004083e1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004083e4 je 0x4083fc                                       |         
    0x004083e6 mov edx, ecx                                      |         edx = ecx;
    0x004083e8 sub edx, eax                                      |         edx -= eax;
    0x004083ea cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004083ec jge 0x4088a8                                      |             goto label_83;
                                                                 |         }
    0x004083f2 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004083f6 je 0x4088a8                                       |             goto label_83;
                                                                 |         }
                                                                 |     }
    0x004083fc mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408401 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00408404 jle 0x408645                                      |         goto label_84;
                                                                 |     }
    0x0040840a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040840f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408413 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408419 xor r15d, r15d                                    |     r15d = 0;
    0x0040841c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00408424 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00408429 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040842d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408433 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408437 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040843d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408441 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408447 nop word [rax + rax]                              |     
                                                                 | label_18:
    0x00408450 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00408455 mov rsi, qword [rax]                              |     
    0x00408458 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408461 mov edx, 0x186a0                                  |     
    0x00408466 mov rdi, r12                                      |     
    0x00408469 xor ecx, ecx                                      |     
    0x0040846b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408470 mov ebp, 8                                        |     
    0x00408475 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040847a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408480 mov edi, 0x4c622a                                 |         
    0x00408485 mov esi, 2                                        |         
    0x0040848a mov rdx, rbx                                      |         
    0x0040848d call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4c622a, 2, rbx);
    0x00408492 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040849a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x004084a2 add rbp, 0x10                                     |         rbp += 0x10;
    0x004084a6 cmp rbp, 0x3e88                                   |         
    0x004084ad jne 0x408480                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x004084af call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084b4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004084ba movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x004084c0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084c5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004084cb call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084d0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004084d6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004084dc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004084e1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004084e7 mov al, byte [rip + 0x31b6d3]                     |     al = .comment;
    0x004084ed test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004084ef je 0x408603                                       |         goto label_85;
                                                                 |     }
                                                                 | label_19:
    0x004084f5 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004084fb addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00408501 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408507 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040850d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00408513 xor eax, eax                                      |     eax = 0;
    0x00408515 jmp 0x40854a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_16:
    0x00408520 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408528 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_17:
    0x00408530 mov qword [rax + 0x71fd40], rcx                   |         *((rax + 0x71fd40)) = rcx;
    0x00408537 mov qword [rax + 0x71fd48], rdx                   |         *((rax + 0x71fd48)) = rdx;
    0x0040853e add rax, 0x10                                     |         rax += 0x10;
    0x00408542 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408548 je 0x408580                                       |             goto label_86;
                                                                 |         }
    0x0040854a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00408552 cmp esi, 0xe                                      |         
    0x00408555 je 0x408520                                       |         
                                                                 |     }
    0x00408557 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x0040855a je 0x408520                                       |         goto label_16;
                                                                 |     }
    0x0040855c mov ecx, 0                                        |     ecx = 0;
    0x00408561 mov edx, 0                                        |     edx = 0;
    0x00408566 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00408569 jne 0x408530                                      |         goto label_17;
                                                                 |     }
    0x0040856b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x0040856f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408578 jmp 0x408530                                      |     goto label_17;
                                                                 | label_86:
    0x00408580 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408586 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040858b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408591 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408597 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040859b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004085a1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004085a6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004085ac xor ebp, ebp                                      |     ebp = 0;
    0x004085ae nop                                               |     
                                                                 |     do {
    0x004085b0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004085b8 mov rsi, rbx                                      |         
    0x004085bb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x004085c0 add rbp, 0x10                                     |         rbp += 0x10;
    0x004085c4 cmp rbp, 0x3e80                                   |         
    0x004085cb jne 0x4085b0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x004085cd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004085d2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004085d8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x004085de addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004085e2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x004085e8 mov rdi, rbx                                      |     
    0x004085eb call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x004085f0 inc r15d                                          |     r15d++;
    0x004085f3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004085f8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x004085fb jl 0x408450                                       |         goto label_18;
                                                                 |     }
    0x00408601 jmp 0x408635                                      |     goto label_87;
                                                                 | label_85:
    0x00408603 mov edi, 0x723bc0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408608 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040860d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040860f je 0x4084f5                                       |         goto label_19;
                                                                 |     }
    0x00408615 mov edi, 0x71fd40                                 |     
    0x0040861a mov edx, 0x3e80                                   |     
    0x0040861f xor esi, esi                                      |     
    0x00408621 call 0x404140                                     |     memset (0x71fd40, 0, 0x3e80);
    0x00408626 mov edi, 0x723bc0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040862b call 0x4042d0                                     |     cxa_guard_release ();
    0x00408630 jmp 0x4084f5                                      |     goto label_19;
                                                                 | label_87:
    0x00408635 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040863a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040863d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408643 jmp 0x408667                                      |     goto label_88;
                                                                 | label_84:
    0x00408645 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408649 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040864f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408653 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408659 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040865d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408663 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_88:
    0x00408667 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040866d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408673 mov rax, qword [rip + 0x30f8b6]                   |     rax = std::__1::cout;
    0x0040867a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040867e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408689 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040868e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408693 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00408698 lea rsi, [rsp + 0x60]                             |     
    0x0040869d mov edx, 1                                        |     
    0x004086a2 mov rdi, rax                                      |     
    0x004086a5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004086aa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004086ad mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004086b1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004086ba mov esi, 0x4c6358                                 |     
    0x004086bf mov edx, 0x18                                     |     
    0x004086c4 mov rdi, rax                                      |     
    0x004086c7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"12\", &alloc)", 0x18);
    0x004086cc mov esi, 0x4e4dc0                                 |     
    0x004086d1 mov edx, 1                                        |     
    0x004086d6 mov rdi, rax                                      |     
    0x004086d9 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004086de mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004086e1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004086e5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004086ee mov rdi, rax                                      |     rdi = rax;
    0x004086f1 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004086f7 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004086fc mov esi, 0x4e4cfd                                 |     
    0x00408701 mov edx, 1                                        |     
    0x00408706 mov rdi, rax                                      |     
    0x00408709 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040870e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408714 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040871a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408720 mov rax, qword [rip + 0x30f809]                   |     rax = std::__1::cout;
    0x00408727 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040872b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408736 mov edi, 0x717f30                                 |     
    0x0040873b mov esi, 0x4c8cc8                                 |     
    0x00408740 mov edx, 0xa                                      |     
    0x00408745 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x0040874a mov esi, 0x4e4dc0                                 |     
    0x0040874f mov edx, 1                                        |     
    0x00408754 mov rdi, rax                                      |     
    0x00408757 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040875c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040875f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408763 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040876c mov rdi, rax                                      |     rdi = rax;
    0x0040876f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408775 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040877a mov esi, 0x4e4cfd                                 |     
    0x0040877f mov edx, 1                                        |     
    0x00408784 mov rdi, rax                                      |     
    0x00408787 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040878c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408792 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408798 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040879e mov rax, qword [rip + 0x30f78b]                   |     rax = std::__1::cout;
    0x004087a5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004087a9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004087b4 mov edi, 0x717f30                                 |     
    0x004087b9 mov esi, 0x4c966d                                 |     
    0x004087be mov edx, 0xb                                      |     
    0x004087c3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x004087c8 mov esi, 0x4e4dc0                                 |     
    0x004087cd mov edx, 1                                        |     
    0x004087d2 mov rdi, rax                                      |     
    0x004087d5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004087da mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004087dd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004087e1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004087ea mov rdi, rax                                      |     rdi = rax;
    0x004087ed movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x004087f3 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004087f8 mov esi, 0x4e4cfd                                 |     
    0x004087fd mov edx, 1                                        |     
    0x00408802 mov rdi, rax                                      |     
    0x00408805 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040880a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408810 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408816 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040881c mov rax, qword [rip + 0x30f70d]                   |     rax = std::__1::cout;
    0x00408823 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408827 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408832 mov edi, 0x717f30                                 |     
    0x00408837 mov esi, 0x4c62b2                                 |     
    0x0040883c mov edx, 9                                        |     
    0x00408841 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408846 mov esi, 0x4e4dc0                                 |     
    0x0040884b mov edx, 1                                        |     
    0x00408850 mov rdi, rax                                      |     
    0x00408853 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408858 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040885b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040885f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408868 mov rdi, rax                                      |     rdi = rax;
    0x0040886b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408871 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408876 mov esi, 0x4e4cfd                                 |     
    0x0040887b mov edx, 1                                        |     
    0x00408880 mov rdi, rax                                      |     
    0x00408883 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00408888 mov edi, 0x717f30                                 |     
    0x0040888d mov esi, 0x4e4cfd                                 |     
    0x00408892 mov edx, 1                                        |     
    0x00408897 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040889c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x004088a0 mov rax, qword [r13]                              |     rax = *(r13);
    0x004088a4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_83:
    0x004088a8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x004088ab inc rsi                                           |     rsi++;
    0x004088ae mov dword [r15], esi                              |     *(r15) = esi;
    0x004088b1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x004088b4 je 0x4088cc                                       |         
    0x004088b6 mov edx, ecx                                      |         edx = ecx;
    0x004088b8 sub edx, eax                                      |         edx -= eax;
    0x004088ba cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x004088bc jge 0x408d78                                      |             goto label_89;
                                                                 |         }
    0x004088c2 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x004088c6 je 0x408d78                                       |             goto label_89;
                                                                 |         }
                                                                 |     }
    0x004088cc mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x004088d1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x004088d4 jle 0x408b15                                      |         goto label_90;
                                                                 |     }
    0x004088da lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x004088df xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088e3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004088e9 xor r15d, r15d                                    |     r15d = 0;
    0x004088ec lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x004088f4 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x004088f9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004088fd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408903 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408907 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040890d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408911 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408917 nop word [rax + rax]                              |     
                                                                 | label_22:
    0x00408920 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00408925 mov rsi, qword [rax]                              |     
    0x00408928 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408931 mov edx, 0x186a0                                  |     
    0x00408936 mov rdi, r12                                      |     
    0x00408939 xor ecx, ecx                                      |     
    0x0040893b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408940 mov ebp, 8                                        |     
    0x00408945 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040894a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408950 mov edi, 0x4c622d                                 |         
    0x00408955 mov esi, 3                                        |         
    0x0040895a mov rdx, rbx                                      |         
    0x0040895d call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) (0x4c622d, 3, rbx);
    0x00408962 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040896a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00408972 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408976 cmp rbp, 0x3e88                                   |         
    0x0040897d jne 0x408950                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040897f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408984 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040898a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00408990 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408995 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040899b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004089a0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004089a6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x004089ac call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004089b1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004089b7 mov al, byte [rip + 0x31f093]                     |     al = .comment;
    0x004089bd test al, al                                       |     
                                                                 |     if (al == 0) {
    0x004089bf je 0x408ad3                                       |         goto label_91;
                                                                 |     }
                                                                 | label_23:
    0x004089c5 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004089cb addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x004089d1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004089d7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004089dd addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x004089e3 xor eax, eax                                      |     eax = 0;
    0x004089e5 jmp 0x408a1a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_20:
    0x004089f0 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x004089f8 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_21:
    0x00408a00 mov qword [rax + 0x723bd0], rcx                   |         *((rax + 0x723bd0)) = rcx;
    0x00408a07 mov qword [rax + 0x723bd8], rdx                   |         *((rax + 0x723bd8)) = rdx;
    0x00408a0e add rax, 0x10                                     |         rax += 0x10;
    0x00408a12 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408a18 je 0x408a50                                       |             goto label_92;
                                                                 |         }
    0x00408a1a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00408a22 cmp esi, 0xe                                      |         
    0x00408a25 je 0x4089f0                                       |         
                                                                 |     }
    0x00408a27 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x00408a2a je 0x4089f0                                       |         goto label_20;
                                                                 |     }
    0x00408a2c mov ecx, 0                                        |     ecx = 0;
    0x00408a31 mov edx, 0                                        |     edx = 0;
    0x00408a36 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00408a39 jne 0x408a00                                      |         goto label_21;
                                                                 |     }
    0x00408a3b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408a3f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408a48 jmp 0x408a00                                      |     goto label_21;
                                                                 | label_92:
    0x00408a50 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408a56 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408a5b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408a61 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408a67 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408a6b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00408a71 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408a76 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408a7c xor ebp, ebp                                      |     ebp = 0;
    0x00408a7e nop                                               |     
                                                                 |     do {
    0x00408a80 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00408a88 mov rsi, rbx                                      |         
    0x00408a8b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00408a90 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408a94 cmp rbp, 0x3e80                                   |         
    0x00408a9b jne 0x408a80                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00408a9d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408aa2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408aa8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00408aae addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408ab2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00408ab8 mov rdi, rbx                                      |     
    0x00408abb call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408ac0 inc r15d                                          |     r15d++;
    0x00408ac3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408ac8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00408acb jl 0x408920                                       |         goto label_22;
                                                                 |     }
    0x00408ad1 jmp 0x408b05                                      |     goto label_93;
                                                                 | label_91:
    0x00408ad3 mov edi, 0x727a50                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408ad8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00408add test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00408adf je 0x4089c5                                       |         goto label_23;
                                                                 |     }
    0x00408ae5 mov edi, 0x723bd0                                 |     
    0x00408aea mov edx, 0x3e80                                   |     
    0x00408aef xor esi, esi                                      |     
    0x00408af1 call 0x404140                                     |     memset (0x723bd0, 0, 0x3e80);
    0x00408af6 mov edi, 0x727a50                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408afb call 0x4042d0                                     |     cxa_guard_release ();
    0x00408b00 jmp 0x4089c5                                      |     goto label_23;
                                                                 | label_93:
    0x00408b05 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00408b0a mov esi, dword [r15]                              |     esi = *(r15);
    0x00408b0d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408b13 jmp 0x408b37                                      |     goto label_94;
                                                                 | label_90:
    0x00408b15 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408b19 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408b1f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408b23 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408b29 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408b2d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408b33 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_94:
    0x00408b37 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408b3d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408b43 mov rax, qword [rip + 0x30f3e6]                   |     rax = std::__1::cout;
    0x00408b4a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408b4e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00408b59 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00408b5e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408b63 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00408b68 lea rsi, [rsp + 0x60]                             |     
    0x00408b6d mov edx, 1                                        |     
    0x00408b72 mov rdi, rax                                      |     
    0x00408b75 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00408b7a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408b7d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408b81 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00408b8a mov esi, 0x4c6371                                 |     
    0x00408b8f mov edx, 0x19                                     |     
    0x00408b94 mov rdi, rax                                      |     
    0x00408b97 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"123\", &alloc)", 0x19);
    0x00408b9c mov esi, 0x4e4dc0                                 |     
    0x00408ba1 mov edx, 1                                        |     
    0x00408ba6 mov rdi, rax                                      |     
    0x00408ba9 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408bae mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408bb1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408bb5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408bbe mov rdi, rax                                      |     rdi = rax;
    0x00408bc1 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408bc7 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408bcc mov esi, 0x4e4cfd                                 |     
    0x00408bd1 mov edx, 1                                        |     
    0x00408bd6 mov rdi, rax                                      |     
    0x00408bd9 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00408bde movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408be4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408bea movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408bf0 mov rax, qword [rip + 0x30f339]                   |     rax = std::__1::cout;
    0x00408bf7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408bfb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408c06 mov edi, 0x717f30                                 |     
    0x00408c0b mov esi, 0x4c8cc8                                 |     
    0x00408c10 mov edx, 0xa                                      |     
    0x00408c15 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x00408c1a mov esi, 0x4e4dc0                                 |     
    0x00408c1f mov edx, 1                                        |     
    0x00408c24 mov rdi, rax                                      |     
    0x00408c27 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408c2c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408c2f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408c33 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408c3c mov rdi, rax                                      |     rdi = rax;
    0x00408c3f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408c45 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408c4a mov esi, 0x4e4cfd                                 |     
    0x00408c4f mov edx, 1                                        |     
    0x00408c54 mov rdi, rax                                      |     
    0x00408c57 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00408c5c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408c62 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408c68 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408c6e mov rax, qword [rip + 0x30f2bb]                   |     rax = std::__1::cout;
    0x00408c75 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408c79 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408c84 mov edi, 0x717f30                                 |     
    0x00408c89 mov esi, 0x4c966d                                 |     
    0x00408c8e mov edx, 0xb                                      |     
    0x00408c93 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00408c98 mov esi, 0x4e4dc0                                 |     
    0x00408c9d mov edx, 1                                        |     
    0x00408ca2 mov rdi, rax                                      |     
    0x00408ca5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408caa mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408cad mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408cb1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408cba mov rdi, rax                                      |     rdi = rax;
    0x00408cbd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00408cc3 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408cc8 mov esi, 0x4e4cfd                                 |     
    0x00408ccd mov edx, 1                                        |     
    0x00408cd2 mov rdi, rax                                      |     
    0x00408cd5 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00408cda movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408ce0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00408ce6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408cec mov rax, qword [rip + 0x30f23d]                   |     rax = std::__1::cout;
    0x00408cf3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00408cf7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00408d02 mov edi, 0x717f30                                 |     
    0x00408d07 mov esi, 0x4c62b2                                 |     
    0x00408d0c mov edx, 9                                        |     
    0x00408d11 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00408d16 mov esi, 0x4e4dc0                                 |     
    0x00408d1b mov edx, 1                                        |     
    0x00408d20 mov rdi, rax                                      |     
    0x00408d23 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00408d28 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00408d2b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00408d2f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00408d38 mov rdi, rax                                      |     rdi = rax;
    0x00408d3b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00408d41 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00408d46 mov esi, 0x4e4cfd                                 |     
    0x00408d4b mov edx, 1                                        |     
    0x00408d50 mov rdi, rax                                      |     
    0x00408d53 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00408d58 mov edi, 0x717f30                                 |     
    0x00408d5d mov esi, 0x4e4cfd                                 |     
    0x00408d62 mov edx, 1                                        |     
    0x00408d67 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00408d6c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00408d70 mov rax, qword [r13]                              |     rax = *(r13);
    0x00408d74 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_89:
    0x00408d78 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00408d7b inc rsi                                           |     rsi++;
    0x00408d7e mov dword [r15], esi                              |     *(r15) = esi;
    0x00408d81 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00408d84 je 0x408d9c                                       |         
    0x00408d86 mov edx, ecx                                      |         edx = ecx;
    0x00408d88 sub edx, eax                                      |         edx -= eax;
    0x00408d8a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00408d8c jge 0x409248                                      |             goto label_95;
                                                                 |         }
    0x00408d92 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00408d96 je 0x409248                                       |             goto label_95;
                                                                 |         }
                                                                 |     }
    0x00408d9c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408da1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00408da4 jle 0x408fe5                                      |         goto label_96;
                                                                 |     }
    0x00408daa lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00408daf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408db3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408db9 xor r15d, r15d                                    |     r15d = 0;
    0x00408dbc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00408dc4 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00408dc9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408dcd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408dd3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408dd7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408ddd xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408de1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408de7 nop word [rax + rax]                              |     
                                                                 | label_26:
    0x00408df0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00408df5 mov rsi, qword [rax]                              |     
    0x00408df8 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00408e01 mov edx, 0x186a0                                  |     
    0x00408e06 mov rdi, r12                                      |     
    0x00408e09 xor ecx, ecx                                      |     
    0x00408e0b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00408e10 mov ebp, 8                                        |     
    0x00408e15 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e1a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00408e20 mov edi, 0x4c6231                                 |         
    0x00408e25 mov esi, 4                                        |         
    0x00408e2a mov rdx, rbx                                      |         
    0x00408e2d call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("1234", 4, rbx);
    0x00408e32 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00408e3a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00408e42 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408e46 cmp rbp, 0x3e88                                   |         
    0x00408e4d jne 0x408e20                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00408e4f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e54 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408e5a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00408e60 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e65 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408e6b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e70 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408e76 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00408e7c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408e81 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408e87 mov al, byte [rip + 0x322a53]                     |     al = .comment;
    0x00408e8d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00408e8f je 0x408fa3                                       |         goto label_97;
                                                                 |     }
                                                                 | label_27:
    0x00408e95 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408e9b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00408ea1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00408ea7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00408ead addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00408eb3 xor eax, eax                                      |     eax = 0;
    0x00408eb5 jmp 0x408eea                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_24:
    0x00408ec0 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00408ec8 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_25:
    0x00408ed0 mov qword [rax + 0x727a60], rcx                   |         *((rax + 0x727a60)) = rcx;
    0x00408ed7 mov qword [rax + 0x727a68], rdx                   |         *((rax + 0x727a68)) = rdx;
    0x00408ede add rax, 0x10                                     |         rax += 0x10;
    0x00408ee2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00408ee8 je 0x408f20                                       |             goto label_98;
                                                                 |         }
    0x00408eea movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00408ef2 cmp esi, 0xe                                      |         
    0x00408ef5 je 0x408ec0                                       |         
                                                                 |     }
    0x00408ef7 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x00408efa je 0x408ec0                                       |         goto label_24;
                                                                 |     }
    0x00408efc mov ecx, 0                                        |     ecx = 0;
    0x00408f01 mov edx, 0                                        |     edx = 0;
    0x00408f06 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00408f09 jne 0x408ed0                                      |         goto label_25;
                                                                 |     }
    0x00408f0b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00408f0f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00408f18 jmp 0x408ed0                                      |     goto label_25;
                                                                 | label_98:
    0x00408f20 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00408f26 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408f2b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408f31 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00408f37 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408f3b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00408f41 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408f46 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00408f4c xor ebp, ebp                                      |     ebp = 0;
    0x00408f4e nop                                               |     
                                                                 |     do {
    0x00408f50 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00408f58 mov rsi, rbx                                      |         
    0x00408f5b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00408f60 add rbp, 0x10                                     |         rbp += 0x10;
    0x00408f64 cmp rbp, 0x3e80                                   |         
    0x00408f6b jne 0x408f50                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00408f6d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00408f72 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00408f78 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00408f7e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00408f82 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00408f88 mov rdi, rbx                                      |     
    0x00408f8b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00408f90 inc r15d                                          |     r15d++;
    0x00408f93 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00408f98 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00408f9b jl 0x408df0                                       |         goto label_26;
                                                                 |     }
    0x00408fa1 jmp 0x408fd5                                      |     goto label_99;
                                                                 | label_97:
    0x00408fa3 mov edi, 0x72b8e0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408fa8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00408fad test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00408faf je 0x408e95                                       |         goto label_27;
                                                                 |     }
    0x00408fb5 mov edi, 0x727a60                                 |     
    0x00408fba mov edx, 0x3e80                                   |     
    0x00408fbf xor esi, esi                                      |     
    0x00408fc1 call 0x404140                                     |     memset (0x727a60, 0, 0x3e80);
    0x00408fc6 mov edi, 0x72b8e0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00408fcb call 0x4042d0                                     |     cxa_guard_release ();
    0x00408fd0 jmp 0x408e95                                      |     goto label_27;
                                                                 | label_99:
    0x00408fd5 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00408fda mov esi, dword [r15]                              |     esi = *(r15);
    0x00408fdd movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00408fe3 jmp 0x409007                                      |     goto label_100;
                                                                 | label_96:
    0x00408fe5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408fe9 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00408fef xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408ff3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00408ff9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00408ffd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409003 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_100:
    0x00409007 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040900d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409013 mov rax, qword [rip + 0x30ef16]                   |     rax = std::__1::cout;
    0x0040901a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040901e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00409029 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040902e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409033 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00409038 lea rsi, [rsp + 0x60]                             |     
    0x0040903d mov edx, 1                                        |     
    0x00409042 mov rdi, rax                                      |     
    0x00409045 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040904a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040904d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409051 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040905a mov esi, 0x4c638b                                 |     
    0x0040905f mov edx, 0x1a                                     |     
    0x00409064 mov rdi, rax                                      |     
    0x00409067 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"1234\", &alloc)", 0x1a);
    0x0040906c mov esi, 0x4e4dc0                                 |     
    0x00409071 mov edx, 1                                        |     
    0x00409076 mov rdi, rax                                      |     
    0x00409079 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040907e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409081 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409085 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040908e mov rdi, rax                                      |     rdi = rax;
    0x00409091 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409097 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040909c mov esi, 0x4e4cfd                                 |     
    0x004090a1 mov edx, 1                                        |     
    0x004090a6 mov rdi, rax                                      |     
    0x004090a9 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004090ae movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004090b4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004090ba movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004090c0 mov rax, qword [rip + 0x30ee69]                   |     rax = std::__1::cout;
    0x004090c7 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004090cb mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004090d6 mov edi, 0x717f30                                 |     
    0x004090db mov esi, 0x4c8cc8                                 |     
    0x004090e0 mov edx, 0xa                                      |     
    0x004090e5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x004090ea mov esi, 0x4e4dc0                                 |     
    0x004090ef mov edx, 1                                        |     
    0x004090f4 mov rdi, rax                                      |     
    0x004090f7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004090fc mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004090ff mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409103 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040910c mov rdi, rax                                      |     rdi = rax;
    0x0040910f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409115 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040911a mov esi, 0x4e4cfd                                 |     
    0x0040911f mov edx, 1                                        |     
    0x00409124 mov rdi, rax                                      |     
    0x00409127 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040912c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409132 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409138 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040913e mov rax, qword [rip + 0x30edeb]                   |     rax = std::__1::cout;
    0x00409145 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409149 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409154 mov edi, 0x717f30                                 |     
    0x00409159 mov esi, 0x4c966d                                 |     
    0x0040915e mov edx, 0xb                                      |     
    0x00409163 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00409168 mov esi, 0x4e4dc0                                 |     
    0x0040916d mov edx, 1                                        |     
    0x00409172 mov rdi, rax                                      |     
    0x00409175 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040917a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040917d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409181 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040918a mov rdi, rax                                      |     rdi = rax;
    0x0040918d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409193 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409198 mov esi, 0x4e4cfd                                 |     
    0x0040919d mov edx, 1                                        |     
    0x004091a2 mov rdi, rax                                      |     
    0x004091a5 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004091aa movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004091b0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004091b6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004091bc mov rax, qword [rip + 0x30ed6d]                   |     rax = std::__1::cout;
    0x004091c3 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004091c7 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004091d2 mov edi, 0x717f30                                 |     
    0x004091d7 mov esi, 0x4c62b2                                 |     
    0x004091dc mov edx, 9                                        |     
    0x004091e1 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x004091e6 mov esi, 0x4e4dc0                                 |     
    0x004091eb mov edx, 1                                        |     
    0x004091f0 mov rdi, rax                                      |     
    0x004091f3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004091f8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004091fb mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004091ff mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409208 mov rdi, rax                                      |     rdi = rax;
    0x0040920b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409211 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409216 mov esi, 0x4e4cfd                                 |     
    0x0040921b mov edx, 1                                        |     
    0x00409220 mov rdi, rax                                      |     
    0x00409223 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409228 mov edi, 0x717f30                                 |     
    0x0040922d mov esi, 0x4e4cfd                                 |     
    0x00409232 mov edx, 1                                        |     
    0x00409237 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040923c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00409240 mov rax, qword [r13]                              |     rax = *(r13);
    0x00409244 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_95:
    0x00409248 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040924b inc rsi                                           |     rsi++;
    0x0040924e mov dword [r15], esi                              |     *(r15) = esi;
    0x00409251 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00409254 je 0x40926c                                       |         
    0x00409256 mov edx, ecx                                      |         edx = ecx;
    0x00409258 sub edx, eax                                      |         edx -= eax;
    0x0040925a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040925c jge 0x409718                                      |             goto label_101;
                                                                 |         }
    0x00409262 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00409266 je 0x409718                                       |             goto label_101;
                                                                 |         }
                                                                 |     }
    0x0040926c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409271 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00409274 jle 0x4094b5                                      |         goto label_102;
                                                                 |     }
    0x0040927a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040927f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409283 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409289 xor r15d, r15d                                    |     r15d = 0;
    0x0040928c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409294 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409299 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040929d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004092a3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004092a7 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004092ad xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004092b1 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004092b7 nop word [rax + rax]                              |     
                                                                 | label_30:
    0x004092c0 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x004092c5 mov rsi, qword [rax]                              |     
    0x004092c8 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004092d1 mov edx, 0x186a0                                  |     
    0x004092d6 mov rdi, r12                                      |     
    0x004092d9 xor ecx, ecx                                      |     
    0x004092db call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x004092e0 mov ebp, 8                                        |     
    0x004092e5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004092ea movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x004092f0 mov edi, 0x4cc023                                 |         
    0x004092f5 mov esi, 5                                        |         
    0x004092fa mov rdx, rbx                                      |         
    0x004092fd call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("12345", 5, rbx);
    0x00409302 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040930a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00409312 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409316 cmp rbp, 0x3e88                                   |         
    0x0040931d jne 0x4092f0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040931f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409324 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040932a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00409330 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409335 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040933b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409340 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409346 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040934c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409351 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409357 mov al, byte [rip + 0x326413]                     |     al = .comment;
    0x0040935d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040935f je 0x409473                                       |         goto label_103;
                                                                 |     }
                                                                 | label_31:
    0x00409365 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040936b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00409371 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409377 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040937d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00409383 xor eax, eax                                      |     eax = 0;
    0x00409385 jmp 0x4093ba                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_28:
    0x00409390 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409398 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_29:
    0x004093a0 mov qword [rax + 0x72b8f0], rcx                   |         *((rax + 0x72b8f0)) = rcx;
    0x004093a7 mov qword [rax + 0x72b8f8], rdx                   |         *((rax + 0x72b8f8)) = rdx;
    0x004093ae add rax, 0x10                                     |         rax += 0x10;
    0x004093b2 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x004093b8 je 0x4093f0                                       |             goto label_104;
                                                                 |         }
    0x004093ba movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x004093c2 cmp esi, 0xe                                      |         
    0x004093c5 je 0x409390                                       |         
                                                                 |     }
    0x004093c7 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x004093ca je 0x409390                                       |         goto label_28;
                                                                 |     }
    0x004093cc mov ecx, 0                                        |     ecx = 0;
    0x004093d1 mov edx, 0                                        |     edx = 0;
    0x004093d6 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x004093d9 jne 0x4093a0                                      |         goto label_29;
                                                                 |     }
    0x004093db lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x004093df movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x004093e8 jmp 0x4093a0                                      |     goto label_29;
                                                                 | label_104:
    0x004093f0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004093f6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004093fb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409401 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00409407 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040940b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00409411 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409416 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040941c xor ebp, ebp                                      |     ebp = 0;
    0x0040941e nop                                               |     
                                                                 |     do {
    0x00409420 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00409428 mov rsi, rbx                                      |         
    0x0040942b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00409430 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409434 cmp rbp, 0x3e80                                   |         
    0x0040943b jne 0x409420                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040943d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409442 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409448 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040944e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409452 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00409458 mov rdi, rbx                                      |     
    0x0040945b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00409460 inc r15d                                          |     r15d++;
    0x00409463 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409468 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040946b jl 0x4092c0                                       |         goto label_30;
                                                                 |     }
    0x00409471 jmp 0x4094a5                                      |     goto label_105;
                                                                 | label_103:
    0x00409473 mov edi, 0x72f770                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409478 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040947d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040947f je 0x409365                                       |         goto label_31;
                                                                 |     }
    0x00409485 mov edi, 0x72b8f0                                 |     
    0x0040948a mov edx, 0x3e80                                   |     
    0x0040948f xor esi, esi                                      |     
    0x00409491 call 0x404140                                     |     memset (0x72b8f0, 0, 0x3e80);
    0x00409496 mov edi, 0x72f770                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040949b call 0x4042d0                                     |     cxa_guard_release ();
    0x004094a0 jmp 0x409365                                      |     goto label_31;
                                                                 | label_105:
    0x004094a5 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x004094aa mov esi, dword [r15]                              |     esi = *(r15);
    0x004094ad movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x004094b3 jmp 0x4094d7                                      |     goto label_106;
                                                                 | label_102:
    0x004094b5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004094b9 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x004094bf xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004094c3 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x004094c9 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x004094cd movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004094d3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_106:
    0x004094d7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004094dd movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004094e3 mov rax, qword [rip + 0x30ea46]                   |     rax = std::__1::cout;
    0x004094ea mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004094ee mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x004094f9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x004094fe call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409503 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00409508 lea rsi, [rsp + 0x60]                             |     
    0x0040950d mov edx, 1                                        |     
    0x00409512 mov rdi, rax                                      |     
    0x00409515 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040951a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040951d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409521 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040952a mov esi, 0x4c63a6                                 |     
    0x0040952f mov edx, 0x1b                                     |     
    0x00409534 mov rdi, rax                                      |     
    0x00409537 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"12345\", &alloc)", 0x1b);
    0x0040953c mov esi, 0x4e4dc0                                 |     
    0x00409541 mov edx, 1                                        |     
    0x00409546 mov rdi, rax                                      |     
    0x00409549 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040954e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409551 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409555 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040955e mov rdi, rax                                      |     rdi = rax;
    0x00409561 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409567 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040956c mov esi, 0x4e4cfd                                 |     
    0x00409571 mov edx, 1                                        |     
    0x00409576 mov rdi, rax                                      |     
    0x00409579 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040957e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409584 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040958a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409590 mov rax, qword [rip + 0x30e999]                   |     rax = std::__1::cout;
    0x00409597 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040959b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004095a6 mov edi, 0x717f30                                 |     
    0x004095ab mov esi, 0x4c8cc8                                 |     
    0x004095b0 mov edx, 0xa                                      |     
    0x004095b5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x004095ba mov esi, 0x4e4dc0                                 |     
    0x004095bf mov edx, 1                                        |     
    0x004095c4 mov rdi, rax                                      |     
    0x004095c7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004095cc mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004095cf mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004095d3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004095dc mov rdi, rax                                      |     rdi = rax;
    0x004095df movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x004095e5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004095ea mov esi, 0x4e4cfd                                 |     
    0x004095ef mov edx, 1                                        |     
    0x004095f4 mov rdi, rax                                      |     
    0x004095f7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004095fc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409602 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409608 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040960e mov rax, qword [rip + 0x30e91b]                   |     rax = std::__1::cout;
    0x00409615 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409619 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409624 mov edi, 0x717f30                                 |     
    0x00409629 mov esi, 0x4c966d                                 |     
    0x0040962e mov edx, 0xb                                      |     
    0x00409633 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00409638 mov esi, 0x4e4dc0                                 |     
    0x0040963d mov edx, 1                                        |     
    0x00409642 mov rdi, rax                                      |     
    0x00409645 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040964a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040964d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409651 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040965a mov rdi, rax                                      |     rdi = rax;
    0x0040965d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409663 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409668 mov esi, 0x4e4cfd                                 |     
    0x0040966d mov edx, 1                                        |     
    0x00409672 mov rdi, rax                                      |     
    0x00409675 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040967a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409680 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409686 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040968c mov rax, qword [rip + 0x30e89d]                   |     rax = std::__1::cout;
    0x00409693 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409697 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x004096a2 mov edi, 0x717f30                                 |     
    0x004096a7 mov esi, 0x4c62b2                                 |     
    0x004096ac mov edx, 9                                        |     
    0x004096b1 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x004096b6 mov esi, 0x4e4dc0                                 |     
    0x004096bb mov edx, 1                                        |     
    0x004096c0 mov rdi, rax                                      |     
    0x004096c3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x004096c8 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004096cb mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004096cf mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x004096d8 mov rdi, rax                                      |     rdi = rax;
    0x004096db movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x004096e1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x004096e6 mov esi, 0x4e4cfd                                 |     
    0x004096eb mov edx, 1                                        |     
    0x004096f0 mov rdi, rax                                      |     
    0x004096f3 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x004096f8 mov edi, 0x717f30                                 |     
    0x004096fd mov esi, 0x4e4cfd                                 |     
    0x00409702 mov edx, 1                                        |     
    0x00409707 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040970c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00409710 mov rax, qword [r13]                              |     rax = *(r13);
    0x00409714 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_101:
    0x00409718 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040971b inc rsi                                           |     rsi++;
    0x0040971e mov dword [r15], esi                              |     *(r15) = esi;
    0x00409721 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00409724 je 0x40973c                                       |         
    0x00409726 mov edx, ecx                                      |         edx = ecx;
    0x00409728 sub edx, eax                                      |         edx -= eax;
    0x0040972a cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040972c jge 0x409be8                                      |             goto label_107;
                                                                 |         }
    0x00409732 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00409736 je 0x409be8                                       |             goto label_107;
                                                                 |         }
                                                                 |     }
    0x0040973c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409741 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00409744 jle 0x409985                                      |         goto label_108;
                                                                 |     }
    0x0040974a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040974f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409753 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409759 xor r15d, r15d                                    |     r15d = 0;
    0x0040975c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409764 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409769 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040976d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409773 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409777 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040977d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409781 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409787 nop word [rax + rax]                              |     
                                                                 | label_34:
    0x00409790 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00409795 mov rsi, qword [rax]                              |     
    0x00409798 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x004097a1 mov edx, 0x186a0                                  |     
    0x004097a6 mov rdi, r12                                      |     
    0x004097a9 xor ecx, ecx                                      |     
    0x004097ab call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x004097b0 mov ebp, 8                                        |     
    0x004097b5 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004097ba movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x004097c0 mov edi, 0x4c6236                                 |         
    0x004097c5 mov esi, 6                                        |         
    0x004097ca mov rdx, rbx                                      |         
    0x004097cd call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("123456", 6, rbx);
    0x004097d2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x004097da mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x004097e2 add rbp, 0x10                                     |         rbp += 0x10;
    0x004097e6 cmp rbp, 0x3e88                                   |         
    0x004097ed jne 0x4097c0                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x004097ef call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004097f4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004097fa movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00409800 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409805 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040980b call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409810 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409816 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040981c call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409821 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409827 mov al, byte [rip + 0x329dd3]                     |     al = .comment;
    0x0040982d test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040982f je 0x409943                                       |         goto label_109;
                                                                 |     }
                                                                 | label_35:
    0x00409835 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040983b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00409841 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409847 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040984d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00409853 xor eax, eax                                      |     eax = 0;
    0x00409855 jmp 0x40988a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_32:
    0x00409860 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409868 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_33:
    0x00409870 mov qword [rax + 0x72f780], rcx                   |         *((rax + 0x72f780)) = rcx;
    0x00409877 mov qword [rax + 0x72f788], rdx                   |         *((rax + 0x72f788)) = rdx;
    0x0040987e add rax, 0x10                                     |         rax += 0x10;
    0x00409882 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00409888 je 0x4098c0                                       |             goto label_110;
                                                                 |         }
    0x0040988a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00409892 cmp esi, 0xe                                      |         
    0x00409895 je 0x409860                                       |         
                                                                 |     }
    0x00409897 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x0040989a je 0x409860                                       |         goto label_32;
                                                                 |     }
    0x0040989c mov ecx, 0                                        |     ecx = 0;
    0x004098a1 mov edx, 0                                        |     edx = 0;
    0x004098a6 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x004098a9 jne 0x409870                                      |         goto label_33;
                                                                 |     }
    0x004098ab lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x004098af movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x004098b8 jmp 0x409870                                      |     goto label_33;
                                                                 | label_110:
    0x004098c0 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004098c6 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004098cb subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x004098d1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x004098d7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x004098db movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x004098e1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x004098e6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x004098ec xor ebp, ebp                                      |     ebp = 0;
    0x004098ee nop                                               |     
                                                                 |     do {
    0x004098f0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x004098f8 mov rsi, rbx                                      |         
    0x004098fb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00409900 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409904 cmp rbp, 0x3e80                                   |         
    0x0040990b jne 0x4098f0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040990d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409912 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409918 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040991e addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409922 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00409928 mov rdi, rbx                                      |     
    0x0040992b call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00409930 inc r15d                                          |     r15d++;
    0x00409933 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409938 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040993b jl 0x409790                                       |         goto label_34;
                                                                 |     }
    0x00409941 jmp 0x409975                                      |     goto label_111;
                                                                 | label_109:
    0x00409943 mov edi, 0x733600                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409948 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040994d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040994f je 0x409835                                       |         goto label_35;
                                                                 |     }
    0x00409955 mov edi, 0x72f780                                 |     
    0x0040995a mov edx, 0x3e80                                   |     
    0x0040995f xor esi, esi                                      |     
    0x00409961 call 0x404140                                     |     memset (0x72f780, 0, 0x3e80);
    0x00409966 mov edi, 0x733600                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040996b call 0x4042d0                                     |     cxa_guard_release ();
    0x00409970 jmp 0x409835                                      |     goto label_35;
                                                                 | label_111:
    0x00409975 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040997a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040997d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409983 jmp 0x4099a7                                      |     goto label_112;
                                                                 | label_108:
    0x00409985 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409989 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040998f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409993 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409999 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040999d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x004099a3 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_112:
    0x004099a7 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x004099ad movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x004099b3 mov rax, qword [rip + 0x30e576]                   |     rax = std::__1::cout;
    0x004099ba mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x004099be mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x004099c9 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x004099ce call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004099d3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x004099d8 lea rsi, [rsp + 0x60]                             |     
    0x004099dd mov edx, 1                                        |     
    0x004099e2 mov rdi, rax                                      |     
    0x004099e5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x004099ea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x004099ed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x004099f1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x004099fa mov esi, 0x4c63c2                                 |     
    0x004099ff mov edx, 0x1c                                     |     
    0x00409a04 mov rdi, rax                                      |     
    0x00409a07 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"123456\", &alloc)", 0x1c);
    0x00409a0c mov esi, 0x4e4dc0                                 |     
    0x00409a11 mov edx, 1                                        |     
    0x00409a16 mov rdi, rax                                      |     
    0x00409a19 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409a1e mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409a21 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409a25 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409a2e mov rdi, rax                                      |     rdi = rax;
    0x00409a31 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409a37 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409a3c mov esi, 0x4e4cfd                                 |     
    0x00409a41 mov edx, 1                                        |     
    0x00409a46 mov rdi, rax                                      |     
    0x00409a49 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409a4e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409a54 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409a5a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409a60 mov rax, qword [rip + 0x30e4c9]                   |     rax = std::__1::cout;
    0x00409a67 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409a6b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409a76 mov edi, 0x717f30                                 |     
    0x00409a7b mov esi, 0x4c8cc8                                 |     
    0x00409a80 mov edx, 0xa                                      |     
    0x00409a85 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x00409a8a mov esi, 0x4e4dc0                                 |     
    0x00409a8f mov edx, 1                                        |     
    0x00409a94 mov rdi, rax                                      |     
    0x00409a97 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409a9c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409a9f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409aa3 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409aac mov rdi, rax                                      |     rdi = rax;
    0x00409aaf movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409ab5 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409aba mov esi, 0x4e4cfd                                 |     
    0x00409abf mov edx, 1                                        |     
    0x00409ac4 mov rdi, rax                                      |     
    0x00409ac7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409acc movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409ad2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409ad8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409ade mov rax, qword [rip + 0x30e44b]                   |     rax = std::__1::cout;
    0x00409ae5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409ae9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409af4 mov edi, 0x717f30                                 |     
    0x00409af9 mov esi, 0x4c966d                                 |     
    0x00409afe mov edx, 0xb                                      |     
    0x00409b03 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00409b08 mov esi, 0x4e4dc0                                 |     
    0x00409b0d mov edx, 1                                        |     
    0x00409b12 mov rdi, rax                                      |     
    0x00409b15 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409b1a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409b1d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409b21 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409b2a mov rdi, rax                                      |     rdi = rax;
    0x00409b2d movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409b33 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409b38 mov esi, 0x4e4cfd                                 |     
    0x00409b3d mov edx, 1                                        |     
    0x00409b42 mov rdi, rax                                      |     
    0x00409b45 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409b4a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409b50 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409b56 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409b5c mov rax, qword [rip + 0x30e3cd]                   |     rax = std::__1::cout;
    0x00409b63 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409b67 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409b72 mov edi, 0x717f30                                 |     
    0x00409b77 mov esi, 0x4c62b2                                 |     
    0x00409b7c mov edx, 9                                        |     
    0x00409b81 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x00409b86 mov esi, 0x4e4dc0                                 |     
    0x00409b8b mov edx, 1                                        |     
    0x00409b90 mov rdi, rax                                      |     
    0x00409b93 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409b98 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409b9b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409b9f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409ba8 mov rdi, rax                                      |     rdi = rax;
    0x00409bab movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x00409bb1 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409bb6 mov esi, 0x4e4cfd                                 |     
    0x00409bbb mov edx, 1                                        |     
    0x00409bc0 mov rdi, rax                                      |     
    0x00409bc3 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409bc8 mov edi, 0x717f30                                 |     
    0x00409bcd mov esi, 0x4e4cfd                                 |     
    0x00409bd2 mov edx, 1                                        |     
    0x00409bd7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x00409bdc mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x00409be0 mov rax, qword [r13]                              |     rax = *(r13);
    0x00409be4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_107:
    0x00409be8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x00409beb inc rsi                                           |     rsi++;
    0x00409bee mov dword [r15], esi                              |     *(r15) = esi;
    0x00409bf1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x00409bf4 je 0x409c0c                                       |         
    0x00409bf6 mov edx, ecx                                      |         edx = ecx;
    0x00409bf8 sub edx, eax                                      |         edx -= eax;
    0x00409bfa cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x00409bfc jge 0x40a0b8                                      |             goto label_113;
                                                                 |         }
    0x00409c02 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x00409c06 je 0x40a0b8                                       |             goto label_113;
                                                                 |         }
                                                                 |     }
    0x00409c0c mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409c11 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x00409c14 jle 0x409e55                                      |         goto label_114;
                                                                 |     }
    0x00409c1a lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x00409c1f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409c23 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409c29 xor r15d, r15d                                    |     r15d = 0;
    0x00409c2c lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x00409c34 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x00409c39 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409c3d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409c43 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409c47 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409c4d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409c51 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409c57 nop word [rax + rax]                              |     
                                                                 | label_38:
    0x00409c60 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x00409c65 mov rsi, qword [rax]                              |     
    0x00409c68 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x00409c71 mov edx, 0x186a0                                  |     
    0x00409c76 mov rdi, r12                                      |     
    0x00409c79 xor ecx, ecx                                      |     
    0x00409c7b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x00409c80 mov ebp, 8                                        |     
    0x00409c85 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409c8a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x00409c90 mov edi, 0x4c61f9                                 |         
    0x00409c95 mov esi, 0xf                                      |         
    0x00409c9a mov rdx, rbx                                      |         
    0x00409c9d call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("0123456789abcde", 0xf, rbx);
    0x00409ca2 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x00409caa mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x00409cb2 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409cb6 cmp rbp, 0x3e88                                   |         
    0x00409cbd jne 0x409c90                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x00409cbf call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409cc4 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409cca movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x00409cd0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409cd5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409cdb call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409ce0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409ce6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x00409cec call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409cf1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409cf7 mov al, byte [rip + 0x32d793]                     |     al = .comment;
    0x00409cfd test al, al                                       |     
                                                                 |     if (al == 0) {
    0x00409cff je 0x409e13                                       |         goto label_115;
                                                                 |     }
                                                                 | label_39:
    0x00409d05 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409d0b addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x00409d11 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409d17 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409d1d addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x00409d23 xor eax, eax                                      |     eax = 0;
    0x00409d25 jmp 0x409d5a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_36:
    0x00409d30 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x00409d38 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_37:
    0x00409d40 mov qword [rax + 0x733610], rcx                   |         *((rax + 0x733610)) = rcx;
    0x00409d47 mov qword [rax + 0x733618], rdx                   |         *((rax + 0x733618)) = rdx;
    0x00409d4e add rax, 0x10                                     |         rax += 0x10;
    0x00409d52 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x00409d58 je 0x409d90                                       |             goto label_116;
                                                                 |         }
    0x00409d5a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x00409d62 cmp esi, 0xe                                      |         
    0x00409d65 je 0x409d30                                       |         
                                                                 |     }
    0x00409d67 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x00409d6a je 0x409d30                                       |         goto label_36;
                                                                 |     }
    0x00409d6c mov ecx, 0                                        |     ecx = 0;
    0x00409d71 mov edx, 0                                        |     edx = 0;
    0x00409d76 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x00409d79 jne 0x409d40                                      |         goto label_37;
                                                                 |     }
    0x00409d7b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x00409d7f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x00409d88 jmp 0x409d40                                      |     goto label_37;
                                                                 | label_116:
    0x00409d90 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409d96 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409d9b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409da1 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x00409da7 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409dab movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x00409db1 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409db6 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x00409dbc xor ebp, ebp                                      |     ebp = 0;
    0x00409dbe nop                                               |     
                                                                 |     do {
    0x00409dc0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x00409dc8 mov rsi, rbx                                      |         
    0x00409dcb call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x00409dd0 add rbp, 0x10                                     |         rbp += 0x10;
    0x00409dd4 cmp rbp, 0x3e80                                   |         
    0x00409ddb jne 0x409dc0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x00409ddd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x00409de2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x00409de8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x00409dee addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x00409df2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x00409df8 mov rdi, rbx                                      |     
    0x00409dfb call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x00409e00 inc r15d                                          |     r15d++;
    0x00409e03 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x00409e08 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x00409e0b jl 0x409c60                                       |         goto label_38;
                                                                 |     }
    0x00409e11 jmp 0x409e45                                      |     goto label_117;
                                                                 | label_115:
    0x00409e13 mov edi, 0x737490                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409e18 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x00409e1d test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x00409e1f je 0x409d05                                       |         goto label_39;
                                                                 |     }
    0x00409e25 mov edi, 0x733610                                 |     
    0x00409e2a mov edx, 0x3e80                                   |     
    0x00409e2f xor esi, esi                                      |     
    0x00409e31 call 0x404140                                     |     memset (0x733610, 0, 0x3e80);
    0x00409e36 mov edi, 0x737490                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x00409e3b call 0x4042d0                                     |     cxa_guard_release ();
    0x00409e40 jmp 0x409d05                                      |     goto label_39;
                                                                 | label_117:
    0x00409e45 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x00409e4a mov esi, dword [r15]                              |     esi = *(r15);
    0x00409e4d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409e53 jmp 0x409e77                                      |     goto label_118;
                                                                 | label_114:
    0x00409e55 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409e59 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x00409e5f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409e63 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409e69 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x00409e6d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409e73 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_118:
    0x00409e77 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409e7d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x00409e83 mov rax, qword [rip + 0x30e0a6]                   |     rax = std::__1::cout;
    0x00409e8a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409e8e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x00409e99 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x00409e9e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409ea3 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x00409ea8 lea rsi, [rsp + 0x60]                             |     
    0x00409ead mov edx, 1                                        |     
    0x00409eb2 mov rdi, rax                                      |     
    0x00409eb5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x00409eba mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409ebd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409ec1 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x00409eca mov esi, 0x4c63df                                 |     
    0x00409ecf mov edx, 0x25                                     |     
    0x00409ed4 mov rdi, rax                                      |     
    0x00409ed7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"0123456789abcde\", &alloc)", 0x25);
    0x00409edc mov esi, 0x4e4dc0                                 |     
    0x00409ee1 mov edx, 1                                        |     
    0x00409ee6 mov rdi, rax                                      |     
    0x00409ee9 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409eee mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409ef1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409ef5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409efe mov rdi, rax                                      |     rdi = rax;
    0x00409f01 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x00409f07 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409f0c mov esi, 0x4e4cfd                                 |     
    0x00409f11 mov edx, 1                                        |     
    0x00409f16 mov rdi, rax                                      |     
    0x00409f19 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409f1e movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409f24 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409f2a movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x00409f30 mov rax, qword [rip + 0x30dff9]                   |     rax = std::__1::cout;
    0x00409f37 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409f3b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409f46 mov edi, 0x717f30                                 |     
    0x00409f4b mov esi, 0x4c8cc8                                 |     
    0x00409f50 mov edx, 0xa                                      |     
    0x00409f55 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x00409f5a mov esi, 0x4e4dc0                                 |     
    0x00409f5f mov edx, 1                                        |     
    0x00409f64 mov rdi, rax                                      |     
    0x00409f67 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409f6c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409f6f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409f73 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409f7c mov rdi, rax                                      |     rdi = rax;
    0x00409f7f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x00409f85 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x00409f8a mov esi, 0x4e4cfd                                 |     
    0x00409f8f mov edx, 1                                        |     
    0x00409f94 mov rdi, rax                                      |     
    0x00409f97 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x00409f9c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x00409fa2 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x00409fa8 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x00409fae mov rax, qword [rip + 0x30df7b]                   |     rax = std::__1::cout;
    0x00409fb5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x00409fb9 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x00409fc4 mov edi, 0x717f30                                 |     
    0x00409fc9 mov esi, 0x4c966d                                 |     
    0x00409fce mov edx, 0xb                                      |     
    0x00409fd3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x00409fd8 mov esi, 0x4e4dc0                                 |     
    0x00409fdd mov edx, 1                                        |     
    0x00409fe2 mov rdi, rax                                      |     
    0x00409fe5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x00409fea mov rcx, qword [rax]                              |     rcx = *(rax);
    0x00409fed mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x00409ff1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x00409ffa mov rdi, rax                                      |     rdi = rax;
    0x00409ffd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a003 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a008 mov esi, 0x4e4cfd                                 |     
    0x0040a00d mov edx, 1                                        |     
    0x0040a012 mov rdi, rax                                      |     
    0x0040a015 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a01a movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a020 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a026 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a02c mov rax, qword [rip + 0x30defd]                   |     rax = std::__1::cout;
    0x0040a033 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a037 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a042 mov edi, 0x717f30                                 |     
    0x0040a047 mov esi, 0x4c62b2                                 |     
    0x0040a04c mov edx, 9                                        |     
    0x0040a051 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x0040a056 mov esi, 0x4e4dc0                                 |     
    0x0040a05b mov edx, 1                                        |     
    0x0040a060 mov rdi, rax                                      |     
    0x0040a063 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a068 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a06b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a06f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a078 mov rdi, rax                                      |     rdi = rax;
    0x0040a07b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a081 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a086 mov esi, 0x4e4cfd                                 |     
    0x0040a08b mov edx, 1                                        |     
    0x0040a090 mov rdi, rax                                      |     
    0x0040a093 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a098 mov edi, 0x717f30                                 |     
    0x0040a09d mov esi, 0x4e4cfd                                 |     
    0x0040a0a2 mov edx, 1                                        |     
    0x0040a0a7 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040a0ac mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040a0b0 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040a0b4 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_113:
    0x0040a0b8 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040a0bb inc rsi                                           |     rsi++;
    0x0040a0be mov dword [r15], esi                              |     *(r15) = esi;
    0x0040a0c1 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x0040a0c4 je 0x40a0dc                                       |         
    0x0040a0c6 mov edx, ecx                                      |         edx = ecx;
    0x0040a0c8 sub edx, eax                                      |         edx -= eax;
    0x0040a0ca cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040a0cc jge 0x40a588                                      |             goto label_119;
                                                                 |         }
    0x0040a0d2 cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x0040a0d6 je 0x40a588                                       |             goto label_119;
                                                                 |         }
                                                                 |     }
    0x0040a0dc mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a0e1 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040a0e4 jle 0x40a325                                      |         goto label_120;
                                                                 |     }
    0x0040a0ea lea r12, [rsp + 0x68]                             |     r12 = rsp + 0x68;
    0x0040a0ef xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a0f3 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a0f9 xor r15d, r15d                                    |     r15d = 0;
    0x0040a0fc lea r14, [rsp + 0x101]                            |     r14 = rsp + 0x101;
    0x0040a104 lea rbx, [rsp + 0x60]                             |     rbx = rsp + 0x60;
    0x0040a109 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a10d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a113 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a117 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a11d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a121 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a127 nop word [rax + rax]                              |     
                                                                 | label_42:
    0x0040a130 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040a135 mov rsi, qword [rax]                              |     
    0x0040a138 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040a141 mov edx, 0x186a0                                  |     
    0x0040a146 mov rdi, r12                                      |     
    0x0040a149 xor ecx, ecx                                      |     
    0x0040a14b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x0040a150 mov ebp, 8                                        |     
    0x0040a155 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a15a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x0040a160 mov edi, 0x4c6405                                 |         
    0x0040a165 mov esi, 0x1a                                     |         
    0x0040a16a mov rdx, rbx                                      |         
    0x0040a16d call 0x461e80                                     |         rax = BloombergLP::bdld::Datum::copyString(char const*,unsigned long,BloombergLP::bslma::Allocator*) ("abcdefghijklmnopqrstuvwxyz", 0x1a, rbx);
    0x0040a172 mov qword [rsp + rbp + 0xf8], rax                 |         *((rsp + rbp + 0xf8)) = rax;
    0x0040a17a mov qword [rsp + rbp + 0x100], rdx                |         *((rsp + rbp + 0x100)) = rdx;
    0x0040a182 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a186 cmp rbp, 0x3e88                                   |         
    0x0040a18d jne 0x40a160                                      |         
                                                                 |     } while (rbp != 0x3e88);
    0x0040a18f call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a194 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a19a movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x0040a1a0 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a1a5 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a1ab call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a1b0 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a1b6 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040a1bc call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a1c1 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a1c7 mov al, byte [rip + 0x331153]                     |     al = .comment;
    0x0040a1cd test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040a1cf je 0x40a2e3                                       |         goto label_121;
                                                                 |     }
                                                                 | label_43:
    0x0040a1d5 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a1db addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x0040a1e1 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a1e7 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a1ed addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x0040a1f3 xor eax, eax                                      |     eax = 0;
    0x0040a1f5 jmp 0x40a22a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_40:
    0x0040a200 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x0040a208 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_41:
    0x0040a210 mov qword [rax + 0x7374a0], rcx                   |         *((rax + 0x7374a0)) = rcx;
    0x0040a217 mov qword [rax + 0x7374a8], rdx                   |         *((rax + 0x7374a8)) = rdx;
    0x0040a21e add rax, 0x10                                     |         rax += 0x10;
    0x0040a222 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x0040a228 je 0x40a260                                       |             goto label_122;
                                                                 |         }
    0x0040a22a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x0040a232 cmp esi, 0xe                                      |         
    0x0040a235 je 0x40a200                                       |         
                                                                 |     }
    0x0040a237 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x0040a23a je 0x40a200                                       |         goto label_40;
                                                                 |     }
    0x0040a23c mov ecx, 0                                        |     ecx = 0;
    0x0040a241 mov edx, 0                                        |     edx = 0;
    0x0040a246 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x0040a249 jne 0x40a210                                      |         goto label_41;
                                                                 |     }
    0x0040a24b lea rcx, [r14 + rax]                              |     rcx = r14 + rax;
    0x0040a24f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x0040a258 jmp 0x40a210                                      |     goto label_41;
                                                                 | label_122:
    0x0040a260 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a266 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a26b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a271 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040a277 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a27b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a281 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a286 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a28c xor ebp, ebp                                      |     ebp = 0;
    0x0040a28e nop                                               |     
                                                                 |     do {
    0x0040a290 lea rdi, [rsp + rbp + 0x100]                      |         
    0x0040a298 mov rsi, rbx                                      |         
    0x0040a29b call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, rbx);
    0x0040a2a0 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a2a4 cmp rbp, 0x3e80                                   |         
    0x0040a2ab jne 0x40a290                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040a2ad call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a2b2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a2b8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040a2be addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a2c2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x0040a2c8 mov rdi, rbx                                      |     
    0x0040a2cb call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rbx);
    0x0040a2d0 inc r15d                                          |     r15d++;
    0x0040a2d3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a2d8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040a2db jl 0x40a130                                       |         goto label_42;
                                                                 |     }
    0x0040a2e1 jmp 0x40a315                                      |     goto label_123;
                                                                 | label_121:
    0x0040a2e3 mov edi, 0x73b320                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a2e8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040a2ed test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040a2ef je 0x40a1d5                                       |         goto label_43;
                                                                 |     }
    0x0040a2f5 mov edi, 0x7374a0                                 |     
    0x0040a2fa mov edx, 0x3e80                                   |     
    0x0040a2ff xor esi, esi                                      |     
    0x0040a301 call 0x404140                                     |     memset (0x7374a0, 0, 0x3e80);
    0x0040a306 mov edi, 0x73b320                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a30b call 0x4042d0                                     |     cxa_guard_release ();
    0x0040a310 jmp 0x40a1d5                                      |     goto label_43;
                                                                 | label_123:
    0x0040a315 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040a31a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040a31d movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a323 jmp 0x40a347                                      |     goto label_124;
                                                                 | label_120:
    0x0040a325 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a329 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a32f xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a333 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a339 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a33d movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a343 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
                                                                 | label_124:
    0x0040a347 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a34d movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a353 mov rax, qword [rip + 0x30dbd6]                   |     rax = std::__1::cout;
    0x0040a35a mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a35e mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040a369 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040a36e call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040a373 mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x0040a378 lea rsi, [rsp + 0x60]                             |     
    0x0040a37d mov edx, 1                                        |     
    0x0040a382 mov rdi, rax                                      |     
    0x0040a385 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040a38a mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a38d mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a391 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040a39a mov esi, 0x4c6420                                 |     
    0x0040a39f mov edx, 0x30                                     |     
    0x0040a3a4 mov rdi, rax                                      |     
    0x0040a3a7 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "copyString(\"abcdefghijklmnopqrstuvwxyz\", &alloc)", 0x30);
    0x0040a3ac mov esi, 0x4e4dc0                                 |     
    0x0040a3b1 mov edx, 1                                        |     
    0x0040a3b6 mov rdi, rax                                      |     
    0x0040a3b9 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a3be mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a3c1 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a3c5 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a3ce mov rdi, rax                                      |     rdi = rax;
    0x0040a3d1 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a3d7 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a3dc mov esi, 0x4e4cfd                                 |     
    0x0040a3e1 mov edx, 1                                        |     
    0x0040a3e6 mov rdi, rax                                      |     
    0x0040a3e9 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a3ee movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a3f4 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a3fa movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a400 mov rax, qword [rip + 0x30db29]                   |     rax = std::__1::cout;
    0x0040a407 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a40b mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a416 mov edi, 0x717f30                                 |     
    0x0040a41b mov esi, 0x4c8cc8                                 |     
    0x0040a420 mov edx, 0xa                                      |     
    0x0040a425 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x0040a42a mov esi, 0x4e4dc0                                 |     
    0x0040a42f mov edx, 1                                        |     
    0x0040a434 mov rdi, rax                                      |     
    0x0040a437 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a43c mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a43f mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a443 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a44c mov rdi, rax                                      |     rdi = rax;
    0x0040a44f movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a455 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a45a mov esi, 0x4e4cfd                                 |     
    0x0040a45f mov edx, 1                                        |     
    0x0040a464 mov rdi, rax                                      |     
    0x0040a467 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a46c movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a472 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a478 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a47e mov rax, qword [rip + 0x30daab]                   |     rax = std::__1::cout;
    0x0040a485 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a489 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a494 mov edi, 0x717f30                                 |     
    0x0040a499 mov esi, 0x4c966d                                 |     
    0x0040a49e mov edx, 0xb                                      |     
    0x0040a4a3 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x0040a4a8 mov esi, 0x4e4dc0                                 |     
    0x0040a4ad mov edx, 1                                        |     
    0x0040a4b2 mov rdi, rax                                      |     
    0x0040a4b5 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a4ba mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a4bd mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a4c1 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a4ca mov rdi, rax                                      |     rdi = rax;
    0x0040a4cd movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a4d3 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a4d8 mov esi, 0x4e4cfd                                 |     
    0x0040a4dd mov edx, 1                                        |     
    0x0040a4e2 mov rdi, rax                                      |     
    0x0040a4e5 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a4ea movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a4f0 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a4f6 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a4fc mov rax, qword [rip + 0x30da2d]                   |     rax = std::__1::cout;
    0x0040a503 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a507 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a512 mov edi, 0x717f30                                 |     
    0x0040a517 mov esi, 0x4c62b2                                 |     
    0x0040a51c mov edx, 9                                        |     
    0x0040a521 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x0040a526 mov esi, 0x4e4dc0                                 |     
    0x0040a52b mov edx, 1                                        |     
    0x0040a530 mov rdi, rax                                      |     
    0x0040a533 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a538 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a53b mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a53f mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a548 mov rdi, rax                                      |     rdi = rax;
    0x0040a54b movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040a551 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a556 mov esi, 0x4e4cfd                                 |     
    0x0040a55b mov edx, 1                                        |     
    0x0040a560 mov rdi, rax                                      |     
    0x0040a563 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a568 mov edi, 0x717f30                                 |     
    0x0040a56d mov esi, 0x4e4cfd                                 |     
    0x0040a572 mov edx, 1                                        |     
    0x0040a577 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040a57c mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040a580 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040a584 mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_119:
    0x0040a588 movsxd rsi, esi                                   |     rsi = (int64_t) esi;
    0x0040a58b inc rsi                                           |     rsi++;
    0x0040a58e mov dword [r15], esi                              |     *(r15) = esi;
    0x0040a591 cmp rcx, rax                                      |     
    0x0040a594 mov qword [rsp + 0xa0], r13                       |     *((rsp + 0xa0)) = r13;
                                                                 |     if (rcx != rax) {
    0x0040a59c je 0x40a5b4                                       |         
    0x0040a59e mov edx, ecx                                      |         edx = ecx;
    0x0040a5a0 sub edx, eax                                      |         edx -= eax;
    0x0040a5a2 cmp esi, edx                                      |         
                                                                 |         if (esi >= edx) {
    0x0040a5a4 jge 0x40aaa0                                      |             goto label_125;
                                                                 |         }
    0x0040a5aa cmp byte [rax + rsi], 0                           |         
                                                                 |         if (*((rax + rsi)) == 0) {
    0x0040a5ae je 0x40aaa0                                       |             goto label_125;
                                                                 |         }
                                                                 |     }
    0x0040a5b4 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a5b9 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040a5bc jle 0x40a83d                                      |         goto label_126;
                                                                 |     }
    0x0040a5c2 movabs rbx, 0xe000000000008                       |     rbx = 0xe000000000008;
    0x0040a5cc lea r14, [rsp + 0x68]                             |     r14 = rsp + 0x68;
    0x0040a5d1 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a5d5 movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040a5db xor r15d, r15d                                    |     r15d = 0;
    0x0040a5de lea r12, [rsp + 0x101]                            |     r12 = rsp + 0x101;
    0x0040a5e6 lea r13, [rsp + 0x60]                             |     r13 = rsp + 0x60;
    0x0040a5eb xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a5ef movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a5f5 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a5f9 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a5ff xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a603 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a609 nop dword [rax]                                   |     
                                                                 | label_46:
    0x0040a610 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040a615 mov rsi, qword [rax]                              |     
    0x0040a618 mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040a621 mov edx, 0x186a0                                  |     
    0x0040a626 mov rdi, r14                                      |     
    0x0040a629 xor ecx, ecx                                      |     
    0x0040a62b call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r14, *(rax), 0x186a0, 0);
    0x0040a630 mov ebp, 0x38                                     |     
    0x0040a635 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a63a movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
                                                                 |     do {
    0x0040a640 mov qword [rsp + rbp + 0xc8], 0x4c624c            |         *((rsp + rbp + 0xc8)) = 0x4c624c;
    0x0040a64c mov qword [rsp + rbp + 0xd0], rbx                 |         *((rsp + rbp + 0xd0)) = rbx;
    0x0040a654 mov qword [rsp + rbp + 0xd8], 0x4c624c            |         *((rsp + rbp + 0xd8)) = 0x4c624c;
    0x0040a660 mov qword [rsp + rbp + 0xe0], rbx                 |         *((rsp + rbp + 0xe0)) = rbx;
    0x0040a668 mov qword [rsp + rbp + 0xe8], 0x4c624c            |         *((rsp + rbp + 0xe8)) = 0x4c624c;
    0x0040a674 mov qword [rsp + rbp + 0xf0], rbx                 |         *((rsp + rbp + 0xf0)) = rbx;
    0x0040a67c mov qword [rsp + rbp + 0xf8], 0x4c624c            |         *((rsp + rbp + 0xf8)) = 0x4c624c;
    0x0040a688 mov qword [rsp + rbp + 0x100], rbx                |         *((rsp + rbp + 0x100)) = rbx;
    0x0040a690 add rbp, 0x40                                     |         rbp += 0x40;
    0x0040a694 cmp rbp, 0x3eb8                                   |         
    0x0040a69b jne 0x40a640                                      |         
                                                                 |     } while (rbp != 0x3eb8);
    0x0040a69d call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6a2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a6a8 movsd qword [rsp + 0x38], xmm0                    |     *((rsp + 0x38)) = xmm0;
    0x0040a6ae call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6b3 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a6b9 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6be subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a6c4 movsd qword [rsp + 0x40], xmm0                    |     *((rsp + 0x40)) = xmm0;
    0x0040a6ca call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a6cf movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a6d5 mov al, byte [rip + 0x334ad5]                     |     al = .comment;
    0x0040a6db test al, al                                       |     
                                                                 |     if (al == 0) {
    0x0040a6dd je 0x40a7f3                                       |         goto label_127;
                                                                 |     }
                                                                 | label_47:
    0x0040a6e3 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a6e9 addsd xmm0, qword [rsp + 0x38]                    |     __asm ("addsd xmm0, qword [rsp + 0x38]");
    0x0040a6ef movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a6f5 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a6fb addsd xmm0, qword [rsp + 0x40]                    |     __asm ("addsd xmm0, qword [rsp + 0x40]");
    0x0040a701 xor eax, eax                                      |     eax = 0;
    0x0040a703 jmp 0x40a73a                                      |     
                                                                 |     while (esi == 0xe) {
                                                                 | label_44:
    0x0040a710 mov rcx, qword [rsp + rax + 0x100]                |         rcx = *((rsp + rax + 0x100));
    0x0040a718 movsxd rdx, dword [rsp + rax + 0x108]             |         rdx = *((rsp + rax + 0x108));
                                                                 | label_45:
    0x0040a720 mov qword [rax + 0x73b330], rcx                   |         *((rax + 0x73b330)) = rcx;
    0x0040a727 mov qword [rax + 0x73b338], rdx                   |         *((rax + 0x73b338)) = rdx;
    0x0040a72e add rax, 0x10                                     |         rax += 0x10;
    0x0040a732 cmp rax, 0x3e80                                   |         
                                                                 |         if (rax == 0x3e80) {
    0x0040a738 je 0x40a770                                       |             goto label_128;
                                                                 |         }
    0x0040a73a movsx esi, word [rsp + rax + 0x10e]               |         esi = *((rsp + rax + 0x10e));
    0x0040a742 cmp esi, 0xe                                      |         
    0x0040a745 je 0x40a710                                       |         
                                                                 |     }
    0x0040a747 cmp esi, 5                                        |     
                                                                 |     if (esi == 5) {
    0x0040a74a je 0x40a710                                       |         goto label_44;
                                                                 |     }
    0x0040a74c mov ecx, 0                                        |     ecx = 0;
    0x0040a751 mov edx, 0                                        |     edx = 0;
    0x0040a756 cmp esi, 4                                        |     
                                                                 |     if (esi != 4) {
    0x0040a759 jne 0x40a720                                      |         goto label_45;
                                                                 |     }
    0x0040a75b lea rcx, [r12 + rax]                              |     rcx = r12 + rax;
    0x0040a75f movsx rdx, byte [rsp + rax + 0x100]               |     rdx = *((rsp + rax + 0x100));
    0x0040a768 jmp 0x40a720                                      |     goto label_45;
                                                                 | label_128:
    0x0040a770 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a776 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a77b subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a781 movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040a787 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a78b movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a791 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a796 movsd qword [rsp + 8], xmm0                       |     *((rsp + 8)) = xmm0;
    0x0040a79c xor ebp, ebp                                      |     ebp = 0;
    0x0040a79e nop                                               |     
                                                                 |     do {
    0x0040a7a0 lea rdi, [rsp + rbp + 0x100]                      |         
    0x0040a7a8 mov rsi, r13                                      |         
    0x0040a7ab call 0x462060                                     |         BloombergLP::bdld::Datum::destroy(BloombergLP::bdld::Datumconst&,BloombergLP::bslma::Allocator*) (rsp + rbp + 0x100, r13);
    0x0040a7b0 add rbp, 0x10                                     |         rbp += 0x10;
    0x0040a7b4 cmp rbp, 0x3e80                                   |         
    0x0040a7bb jne 0x40a7a0                                      |         
                                                                 |     } while (rbp != 0x3e80);
    0x0040a7bd call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040a7c2 subsd xmm0, qword [rsp + 8]                       |     __asm ("subsd xmm0, qword [rsp + 8]");
    0x0040a7c8 movsd xmm1, qword [rsp + 0x20]                    |     xmm1 = *((rsp + 0x20));
    0x0040a7ce addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040a7d2 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
    0x0040a7d8 mov rdi, r13                                      |     
    0x0040a7db call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r13);
    0x0040a7e0 inc r15d                                          |     r15d++;
    0x0040a7e3 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040a7e8 cmp r15d, dword [rax]                             |     
                                                                 |     if (r15d < *(rax)) {
    0x0040a7eb jl 0x40a610                                       |         goto label_46;
                                                                 |     }
    0x0040a7f1 jmp 0x40a825                                      |     goto label_129;
                                                                 | label_127:
    0x0040a7f3 mov edi, 0x73f1b0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a7f8 call 0x404580                                     |     eax = cxa_guard_acquire ();
    0x0040a7fd test eax, eax                                     |     
                                                                 |     if (eax == 0) {
    0x0040a7ff je 0x40a6e3                                       |         goto label_47;
                                                                 |     }
    0x0040a805 mov edi, 0x73b330                                 |     
    0x0040a80a mov edx, 0x3e80                                   |     
    0x0040a80f xor esi, esi                                      |     
    0x0040a811 call 0x404140                                     |     memset (0x73b330, 0, 0x3e80);
    0x0040a816 mov edi, 0x73f1b0                                 |     edi = guard variable for BenchmarkSuite::run(int, int, char**)::results;
    0x0040a81b call 0x4042d0                                     |     cxa_guard_release ();
    0x0040a820 jmp 0x40a6e3                                      |     goto label_47;
                                                                 | label_129:
    0x0040a825 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040a82a mov esi, dword [r15]                              |     esi = *(r15);
    0x0040a82d mov r13, qword [rsp + 0xa0]                       |     r13 = *((rsp + 0xa0));
    0x0040a835 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a83b jmp 0x40a85f                                      |     goto label_130;
                                                                 | label_126:
    0x0040a83d xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040a841 xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a845 movsd qword [rsp + 0x18], xmm1                    |     *((rsp + 0x18)) = xmm1;
    0x0040a84b xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a84f movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040a855 xorpd xmm1, xmm1                                  |     __asm ("xorpd xmm1, xmm1");
    0x0040a859 movsd qword [rsp + 0x20], xmm1                    |     *((rsp + 0x20)) = xmm1;
                                                                 | label_130:
    0x0040a85f divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a865 movsd qword [rsp + 0x28], xmm0                    |     *((rsp + 0x28)) = xmm0;
    0x0040a86b mov rax, qword [rip + 0x30d6be]                   |     rax = std::__1::cout;
    0x0040a872 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a876 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040a881 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040a886 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040a88b mov byte [rsp + 0x60], 0x29                       |     *((rsp + 0x60)) = 0x29;
    0x0040a890 lea rsi, [rsp + 0x60]                             |     
    0x0040a895 mov edx, 1                                        |     
    0x0040a89a mov rdi, rax                                      |     
    0x0040a89d call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x60, 1);
    0x0040a8a2 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a8a5 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a8a9 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040a8b2 mov esi, 0x4c6451                                 |     
    0x0040a8b7 mov edx, 0x26                                     |     
    0x0040a8bc mov rdi, rax                                      |     
    0x0040a8bf call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createStringRef(\"12345678\", 8, &alloc)", 0x26);
    0x0040a8c4 mov esi, 0x4e4dc0                                 |     
    0x0040a8c9 mov edx, 1                                        |     
    0x0040a8ce mov rdi, rax                                      |     
    0x0040a8d1 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a8d6 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a8d9 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a8dd mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a8e6 mov rdi, rax                                      |     rdi = rax;
    0x0040a8e9 movsd xmm0, qword [rsp + 0x28]                    |     xmm0 = *((rsp + 0x28));
    0x0040a8ef call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a8f4 mov esi, 0x4e4cfd                                 |     
    0x0040a8f9 mov edx, 1                                        |     
    0x0040a8fe mov rdi, rax                                      |     
    0x0040a901 call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a906 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a90c divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a912 movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040a918 mov rax, qword [rip + 0x30d611]                   |     rax = std::__1::cout;
    0x0040a91f mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a923 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a92e mov edi, 0x717f30                                 |     
    0x0040a933 mov esi, 0x4c8cc8                                 |     
    0x0040a938 mov edx, 0xa                                      |     
    0x0040a93d call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c8cc8, 0xa);
    0x0040a942 mov esi, 0x4e4dc0                                 |     
    0x0040a947 mov edx, 1                                        |     
    0x0040a94c mov rdi, rax                                      |     
    0x0040a94f call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a954 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a957 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a95b mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a964 mov rdi, rax                                      |     rdi = rax;
    0x0040a967 movsd xmm0, qword [rsp + 0x18]                    |     xmm0 = *((rsp + 0x18));
    0x0040a96d call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a972 mov esi, 0x4e4cfd                                 |     
    0x0040a977 mov edx, 1                                        |     
    0x0040a97c mov rdi, rax                                      |     
    0x0040a97f call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040a984 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a98a divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040a990 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040a996 mov rax, qword [rip + 0x30d593]                   |     rax = std::__1::cout;
    0x0040a99d mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040a9a1 mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040a9ac mov edi, 0x717f30                                 |     
    0x0040a9b1 mov esi, 0x4c966d                                 |     
    0x0040a9b6 mov edx, 0xb                                      |     
    0x0040a9bb call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4c966d, 0xb);
    0x0040a9c0 mov esi, 0x4e4dc0                                 |     
    0x0040a9c5 mov edx, 1                                        |     
    0x0040a9ca mov rdi, rax                                      |     
    0x0040a9cd call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040a9d2 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040a9d5 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040a9d9 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040a9e2 mov rdi, rax                                      |     rdi = rax;
    0x0040a9e5 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040a9eb call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040a9f0 mov esi, 0x4e4cfd                                 |     
    0x0040a9f5 mov edx, 1                                        |     
    0x0040a9fa mov rdi, rax                                      |     
    0x0040a9fd call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040aa02 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040aa08 divsd xmm0, qword [r13 + 0x28]                    |     __asm ("divsd xmm0, qword [r13 + 0x28]");
    0x0040aa0e movsd qword [rsp + 0x20], xmm0                    |     *((rsp + 0x20)) = xmm0;
    0x0040aa14 mov rax, qword [rip + 0x30d515]                   |     rax = std::__1::cout;
    0x0040aa1b mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040aa1f mov qword [rax + 0x717f48], 0x50                  |     *((rax + 0x717f48)) = 0x50;
    0x0040aa2a mov edi, 0x717f30                                 |     
    0x0040aa2f mov esi, 0x4c62b2                                 |     
    0x0040aa34 mov edx, 9                                        |     
    0x0040aa39 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "destroy()", 9);
    0x0040aa3e mov esi, 0x4e4dc0                                 |     
    0x0040aa43 mov edx, 1                                        |     
    0x0040aa48 mov rdi, rax                                      |     
    0x0040aa4b call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040aa50 mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040aa53 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040aa57 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040aa60 mov rdi, rax                                      |     rdi = rax;
    0x0040aa63 movsd xmm0, qword [rsp + 0x20]                    |     xmm0 = *((rsp + 0x20));
    0x0040aa69 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040aa6e mov esi, 0x4e4cfd                                 |     
    0x0040aa73 mov edx, 1                                        |     
    0x0040aa78 mov rdi, rax                                      |     
    0x0040aa7b call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040aa80 mov edi, 0x717f30                                 |     
    0x0040aa85 mov esi, 0x4e4cfd                                 |     
    0x0040aa8a mov edx, 1                                        |     
    0x0040aa8f call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040aa94 mov esi, dword [r13 + 0x24]                       |     esi = *((r13 + 0x24));
    0x0040aa98 mov rax, qword [r13]                              |     rax = *(r13);
    0x0040aa9c mov rcx, qword [r13 + 8]                          |     rcx = *((r13 + 8));
                                                                 | label_125:
    0x0040aaa0 movsxd rdx, esi                                   |     rdx = (int64_t) esi;
    0x0040aaa3 inc rdx                                           |     rdx++;
    0x0040aaa6 mov dword [r15], edx                              |     *(r15) = edx;
    0x0040aaa9 cmp rcx, rax                                      |     
                                                                 |     if (rcx != rax) {
    0x0040aaac je 0x40aac2                                       |         
    0x0040aaae sub ecx, eax                                      |         ecx -= eax;
    0x0040aab0 cmp edx, ecx                                      |         
                                                                 |         if (edx >= ecx) {
    0x0040aab2 jge 0x40aca5                                      |             goto label_131;
                                                                 |         }
    0x0040aab8 cmp byte [rax + rdx], 0                           |         
                                                                 |         if (*((rax + rdx)) == 0) {
    0x0040aabc je 0x40aca5                                       |             goto label_131;
                                                                 |         }
                                                                 |     }
    0x0040aac2 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040aac7 mov rsi, qword [rax]                              |     
    0x0040aaca mov qword [rsp + 0x60], 0x4e4598                  |     *((rsp + 0x60)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040aad3 lea rdi, [rsp + 0x68]                             |     
    0x0040aad8 mov edx, 0x186a0                                  |     
    0x0040aadd xor ecx, ecx                                      |     
    0x0040aadf call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (rsp + 0x68, *(rax), 0x186a0, 0);
    0x0040aae4 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040aae9 cmp dword [rax], 0                                |     
                                                                 |     if (*(rax) <= 0) {
    0x0040aaec jle 0x40abb7                                      |         goto label_132;
                                                                 |     }
    0x0040aaf2 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040aaf6 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040aafc xor r14d, r14d                                    |     r14d = 0;
    0x0040aaff lea r12, [rsp + 0xb0]                             |     r12 = rsp + 0xb0;
    0x0040ab07 lea r15, [rsp + 0x100]                            |     r15 = rsp + 0x100;
    0x0040ab0f lea r13, [rsp + 0xa8]                             |     r13 = rsp + 0xa8;
    0x0040ab17 nop word [rax + rax]                              |     
                                                                 | label_48:
    0x0040ab20 mov rax, qword [rsp + 0x58]                       |     rax = *((rsp + 0x58));
    0x0040ab25 mov rsi, qword [rax]                              |     
    0x0040ab28 mov qword [rsp + 0xa8], 0x4e4598                  |     *((rsp + 0xa8)) = vtable.BloombergLP::bdlma::BufferedSequentialAllocator.0;
    0x0040ab34 mov edx, 0x186a0                                  |     
    0x0040ab39 mov rdi, r12                                      |     
    0x0040ab3c xor ecx, ecx                                      |     
    0x0040ab3e call 0x471320                                     |     BloombergLP::bdlma::BufferedSequentialPool::BufferedSequentialPool(char*,unsigned long,BloombergLP::bslma::Allocator*) (r12, *(rax), 0x186a0, 0);
    0x0040ab43 mov rbp, 0xffffffffffffe0c0                       |     
    0x0040ab4a call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040ab4f movsd qword [rsp + 0x18], xmm0                    |     *((rsp + 0x18)) = xmm0;
    0x0040ab55 mov rbx, r15                                      |     rbx = r15;
    0x0040ab58 nop dword [rax + rax]                             |     
                                                                 |     do {
    0x0040ab60 mov esi, 0x50                                     |         
    0x0040ab65 mov rdi, rbx                                      |         
    0x0040ab68 mov rdx, r13                                      |         
    0x0040ab6b call 0x462010                                     |         rax = BloombergLP::bdld::Datum::createUninitializedString(BloombergLP::bdld::Datum*,unsigned long,BloombergLP::bslma::Allocator*) (rbx, 0x50, r13);
    0x0040ab70 mov qword [rbp + 0x741100], rax                   |         *((rbp + 0x741100)) = rax;
    0x0040ab77 add rbx, 0x10                                     |         rbx += 0x10;
    0x0040ab7b add rbp, 8                                        |         rbp += 8;
    0x0040ab7f jne 0x40ab60                                      |         
                                                                 |     } while (rbp != 0);
    0x0040ab81 call 0x405b40                                     |     Stopwatch::getCPUTime() ();
    0x0040ab86 subsd xmm0, qword [rsp + 0x18]                    |     __asm ("subsd xmm0, qword [rsp + 0x18]");
    0x0040ab8c movsd xmm1, qword [rsp + 0x10]                    |     xmm1 = *((rsp + 0x10));
    0x0040ab92 addsd xmm1, xmm0                                  |     __asm ("addsd xmm1, xmm0");
    0x0040ab96 movsd qword [rsp + 0x10], xmm1                    |     *((rsp + 0x10)) = xmm1;
    0x0040ab9c mov rdi, r13                                      |     
    0x0040ab9f call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (r13);
    0x0040aba4 inc r14d                                          |     r14d++;
    0x0040aba7 mov rax, qword [rsp + 0x30]                       |     rax = *((rsp + 0x30));
    0x0040abac cmp r14d, dword [rax]                             |     
                                                                 |     if (r14d < *(rax)) {
    0x0040abaf jl 0x40ab20                                       |         goto label_48;
                                                                 |     }
    0x0040abb5 jmp 0x40abc1                                      |     goto label_133;
                                                                 | label_132:
    0x0040abb7 xorpd xmm0, xmm0                                  |     __asm ("xorpd xmm0, xmm0");
    0x0040abbb movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
                                                                 | label_133:
    0x0040abc1 mov rax, qword [rsp + 0x50]                       |     rax = *((rsp + 0x50));
    0x0040abc6 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040abcc divsd xmm0, qword [rax]                           |     __asm ("divsd xmm0, qword [rax]");
    0x0040abd0 movsd qword [rsp + 0x10], xmm0                    |     *((rsp + 0x10)) = xmm0;
    0x0040abd6 mov r15, qword [rsp + 0x48]                       |     r15 = *((rsp + 0x48));
    0x0040abdb mov esi, dword [r15]                              |     esi = *(r15);
    0x0040abde mov rax, qword [rip + 0x30d34b]                   |     rax = std::__1::cout;
    0x0040abe5 mov rax, qword [rax - 0x18]                       |     rax = *((rax - 0x18));
    0x0040abe9 mov qword [rax + 0x717f48], 2                     |     *((rax + 0x717f48)) = 2;
    0x0040abf4 mov edi, 0x717f30                                 |     edi = std::__1::cout;
    0x0040abf9 call 0x4045f0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040abfe mov byte [rsp + 0xa8], 0x29                       |     *((rsp + 0xa8)) = 0x29;
    0x0040ac06 lea rsi, [rsp + 0xa8]                             |     
    0x0040ac0e mov edx, 1                                        |     
    0x0040ac13 mov rdi, rax                                      |     
    0x0040ac16 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0xa8, 1);
    0x0040ac1b mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040ac1e mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040ac22 mov qword [rax + rcx + 0x18], 0x4d                |     *((rax + rcx + 0x18)) = 0x4d;
    0x0040ac2b mov esi, 0x4c6478                                 |     
    0x0040ac30 mov edx, 0x19                                     |     
    0x0040ac35 mov rdi, rax                                      |     
    0x0040ac38 call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "createUninitializedString", 0x19);
    0x0040ac3d mov esi, 0x4e4dc0                                 |     
    0x0040ac42 mov edx, 1                                        |     
    0x0040ac47 mov rdi, rax                                      |     
    0x0040ac4a call 0x45fde0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4dc0, 1);
    0x0040ac4f mov rcx, qword [rax]                              |     rcx = *(rax);
    0x0040ac52 mov rcx, qword [rcx - 0x18]                       |     rcx = *((rcx - 0x18));
    0x0040ac56 mov qword [rax + rcx + 0x18], 6                   |     *((rax + rcx + 0x18)) = 6;
    0x0040ac5f mov rdi, rax                                      |     rdi = rax;
    0x0040ac62 movsd xmm0, qword [rsp + 0x10]                    |     xmm0 = *((rsp + 0x10));
    0x0040ac68 call 0x4047d0                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (double) ();
    0x0040ac6d mov esi, 0x4e4cfd                                 |     
    0x0040ac72 mov edx, 1                                        |     
    0x0040ac77 mov rdi, rax                                      |     
    0x0040ac7a call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4e4cfd, 1);
    0x0040ac7f mov edi, 0x717f30                                 |     
    0x0040ac84 mov esi, 0x4e4cfd                                 |     
    0x0040ac89 mov edx, 1                                        |     
    0x0040ac8e call 0x45fde0                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x4e4cfd, 1);
    0x0040ac93 lea rdi, [rsp + 0x60]                             |     
    0x0040ac98 call 0x471040                                     |     BloombergLP::bdlma::BufferedSequentialAllocator::~BufferedSequentialAllocator() (rsp + 0x60);
    0x0040ac9d mov r13, qword [rsp + 0xa0]                       |     r13 = *((rsp + 0xa0));
                                                                 | label_131:
    0x0040aca5 mov edi, 0x7da                                    |     
    0x0040acaa mov esi, 1                                        |     
    0x0040acaf mov edx, 5                                        |     
    0x0040acb4 call 0x46f4f0                                     |     BloombergLP::bdlt::PosixDateImpUtil::ymdToSerial(int,int,int) (0x7da, 1, 5, rcx);
    0x0040acb9 movsxd rsi, dword [r13 + 0x24]                    |     rsi = *((r13 + 0x24));
    0x0040acbd inc rsi                                           |     rsi++;
    0x0040acc0 mov dword [r13 + 0x24], esi                       |     *((r13 + 0x24)) = esi;
    0x0040acc4 mov rcx, qword [r13]                              |     rcx = *(r13);
    0x0040acc8 mov rdx, qword [r13 + 8]                          |     rdx = *((r13 + 8));
    0x0040accc cmp rdx, rcx                                      |     
                                                                 |     if (rdx == rcx) {
    0x0040accf je 0x40ace7                                       |         void (*0x40ace7)() ();
                                                                 |     }
    0x0040acd1 mov edi, edx                                      |     edi = edx;
    0x0040acd3 sub edi, ecx                                      |     edi -= ecx;
    0x0040acd5 cmp esi, edi                                      |     
                                                                 | }
