    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlcc_skiplist.t/assume @ 0x5bd710 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_int__int___int__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int__int___int__ ()           | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::SkipList_int_int_int_int_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int_int_int_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<int, int>*, int, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<int, int>*, int, int> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<int, int>*, int, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<int, int>*, int, int> > const&, BloombergLP::bslma::Allocator*) */
    0x005bd710 push rbp                                                                                                                                                                                                                                                              |     
    0x005bd711 push r15                                                                                                                                                                                                                                                              |     
    0x005bd713 push r14                                                                                                                                                                                                                                                              |     
    0x005bd715 push rbx                                                                                                                                                                                                                                                              |     
    0x005bd716 sub rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x005bd71a mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x005bd71d mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x005bd720 mov r15, rdi                                                                                                                                                                                                                                                          |     r15 = rdi;
    0x005bd723 mov rax, qword [rdx]                                                                                                                                                                                                                                                  |     rax = *(rdx);
    0x005bd726 mov esi, 0x50                                                                                                                                                                                                                                                         |     esi = 0x50;
    0x005bd72b mov rdi, rdx                                                                                                                                                                                                                                                          |     rdi = rdx;
    0x005bd72e call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x005bd731 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x005bd734 mov qword [rax], 0x5bd8a0                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_int__int___int__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int__int___int__int_____::i;
    0x005bd73b mov rax, qword [rbp]                                                                                                                                                                                                                                                  |     rax = *(rbp);
    0x005bd73f mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x005bd743 mov rax, qword [rbp + 8]                                                                                                                                                                                                                                              |     rax = *((rbp + 8));
    0x005bd747 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x005bd74b mov eax, dword [rbp + 0x10]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x10));
    0x005bd74e mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                           |     *((rbx + 0x18)) = eax;
    0x005bd751 mov eax, dword [rbp + 0x14]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x14));
    0x005bd754 mov dword [rbx + 0x1c], eax                                                                                                                                                                                                                                           |     *((rbx + 0x1c)) = eax;
    0x005bd757 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                                 |     
    0x005bd75b mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                             |     *((rbx + 0x20)) = 0;
    0x005bd763 mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                           |     *((rbx + 0x48)) = r14;
    0x005bd767 movaps xmm0, xmmword [rip + 0xbcc52]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x005bd76e movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x005bd772 mov ecx, 0x67c28f                                                                                                                                                                                                                                                     |     
    0x005bd777 xor esi, esi                                                                                                                                                                                                                                                          |     
    0x005bd779 xor edx, edx                                                                                                                                                                                                                                                          |     
    0x005bd77b call 0x653850                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x005bd780 mov rdi, rsp                                                                                                                                                                                                                                                          |     
    0x005bd783 call 0x64fce0                                                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x005bd788 mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x005bd78b mov edx, 0x64f840                                                                                                                                                                                                                                                     |     
    0x005bd790 mov rdi, r15                                                                                                                                                                                                                                                          |     
    0x005bd793 mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x005bd796 call 0x6501d0                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x005bd79b mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x005bd79d cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x005bd7a3 je 0x5bd7b5                                                                                                                                                                                                                                                           |         
    0x005bd7a5 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x005bd7aa mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x005bd7af mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x005bd7b2 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x005bd7b5 test ebp, ebp                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x005bd7b7 je 0x5bd7e2                                                                                                                                                                                                                                                           |         
    0x005bd7b9 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x40)) != 0x17) {
    0x005bd7be je 0x5bd7ce                                                                                                                                                                                                                                                           |             
    0x005bd7c0 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x20));
    0x005bd7c4 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x48));
    0x005bd7c8 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x005bd7cb call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x005bd7ce mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x005bd7d6 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x005bd7d9 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x005bd7dc mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x005bd7df call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x005bd7e2 mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x005bd7e4 add rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x005bd7e8 pop rbx                                                                                                                                                                                                                                                               |     
    0x005bd7e9 pop r14                                                                                                                                                                                                                                                               |     
    0x005bd7eb pop r15                                                                                                                                                                                                                                                               |     
    0x005bd7ed pop rbp                                                                                                                                                                                                                                                               |     
    0x005bd7ee ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
