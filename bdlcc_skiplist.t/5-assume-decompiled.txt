    ; assembly                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                             | /* bdlcc_skiplist.t/assume @ 0x5e9830 */
                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlcc::SkipList_int__bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_____.allocateNode_int__int_const__bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()        | uint64_t method_BloombergLP::bdlcc::SkipList_int_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_allocateNode_int_int_const_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (char * arg4, char * arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                             |     /* BloombergLP::bdlcc::SkipList<int, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > >::allocateNode(int, int const&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x005e9830 push rbp                                                                                                                                                                                                                                      |     
    0x005e9831 push r15                                                                                                                                                                                                                                      |     
    0x005e9833 push r14                                                                                                                                                                                                                                      |     
    0x005e9835 push r13                                                                                                                                                                                                                                      |     
    0x005e9837 push r12                                                                                                                                                                                                                                      |     
    0x005e9839 push rbx                                                                                                                                                                                                                                      |     
    0x005e983a push rax                                                                                                                                                                                                                                      |     
    0x005e983b mov r14, rcx                                                                                                                                                                                                                                  |     r14 = rcx;
    0x005e983e mov r13, rdx                                                                                                                                                                                                                                  |     r13 = rdx;
    0x005e9841 mov rbp, rdi                                                                                                                                                                                                                                  |     
    0x005e9844 mov eax, dword [rdi + 8]                                                                                                                                                                                                                      |     eax = *((rdi + 8));
    0x005e9847 lea ecx, [rax + 1]                                                                                                                                                                                                                            |     ecx = rax + 1;
    0x005e984a cmp eax, esi                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                             |     if (eax < esi) {
    0x005e984c cmovl esi, ecx                                                                                                                                                                                                                                |         esi = ecx;
                                                                                                                                                                                                                                                             |     }
    0x005e984f mov rdi, qword [rdi + 0x50]                                                                                                                                                                                                                   |     
    0x005e9853 call 0x64a060                                                                                                                                                                                                                                 |     rax = BloombergLP::bdlcc::SkipList_PoolUtil::allocate(BloombergLP::bdlcc::SkipList_PoolManager*,int) (*((rdi + 0x50)), rsi);
    0x005e9858 mov rbx, rax                                                                                                                                                                                                                                  |     rbx = rax;
    0x005e985b mov r15, rax                                                                                                                                                                                                                                  |     r15 = rax;
    0x005e985e mov r12, qword [rbp + 0x50]                                                                                                                                                                                                                   |     r12 = *((rbp + 0x50));
    0x005e9862 mov rax, qword [rbp + 0x58]                                                                                                                                                                                                                   |     rax = *((rbp + 0x58));
    0x005e9866 test rax, rax                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                             |     if (rax == 0) {
    0x005e9869 jne 0x5e987c                                                                                                                                                                                                                                  |         
    0x005e986b mov rax, qword [rip + 0x3312ce]                                                                                                                                                                                                               |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x005e9872 test rax, rax                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                             |         if (rax != 0) {
    0x005e9875 jne 0x5e987c                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                             |         }
    0x005e9877 call 0x64e700                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                             | label_0:
    0x005e987c mov ecx, dword [r13]                                                                                                                                                                                                                          |     ecx = *(r13);
    0x005e9880 mov dword [r15 + 0x38], ecx                                                                                                                                                                                                                   |     *((r15 + 0x38)) = ecx;
    0x005e9884 test rax, rax                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                             |     if (rax == 0) {
    0x005e9887 jne 0x5e989a                                                                                                                                                                                                                                  |         
    0x005e9889 mov rax, qword [rip + 0x3312b0]                                                                                                                                                                                                               |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x005e9890 test rax, rax                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                             |         if (rax != 0) {
    0x005e9893 jne 0x5e989a                                                                                                                                                                                                                                  |             goto label_1;
                                                                                                                                                                                                                                                             |         }
    0x005e9895 call 0x64e700                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                             | label_1:
    0x005e989a add rbx, 8                                                                                                                                                                                                                                    |     rbx += 8;
    0x005e989e mov rcx, qword [r14 + 0x20]                                                                                                                                                                                                                   |     rcx = *((r14 + 0x20));
    0x005e98a2 mov qword [rbx + 0x20], rcx                                                                                                                                                                                                                   |     *((rbx + 0x20)) = rcx;
    0x005e98a6 movups xmm0, xmmword [r14]                                                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [r14]");
    0x005e98aa movups xmm1, xmmword [r14 + 0x10]                                                                                                                                                                                                             |     __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x005e98af movups xmmword [rbx + 0x10], xmm1                                                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x005e98b3 movups xmmword [rbx], xmm0                                                                                                                                                                                                                    |     __asm ("movups xmmword [rbx], xmm0");
    0x005e98b6 mov qword [r15 + 0x30], rax                                                                                                                                                                                                                   |     *((r15 + 0x30)) = rax;
    0x005e98ba cmp qword [r15 + 0x28], 0x17                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                             |     if (*((r15 + 0x28)) != 0x17) {
    0x005e98bf je 0x5e9920                                                                                                                                                                                                                                   |         
    0x005e98c1 mov rcx, qword [r14 + 0x18]                                                                                                                                                                                                                   |         rcx = *((r14 + 0x18));
    0x005e98c5 cmp rcx, 0x17                                                                                                                                                                                                                                 |         
    0x005e98c9 mov esi, 0x17                                                                                                                                                                                                                                 |         esi = 0x17;
                                                                                                                                                                                                                                                             |         if (rcx > 0x17) {
    0x005e98ce cmova rsi, rcx                                                                                                                                                                                                                                |             rsi = rcx;
                                                                                                                                                                                                                                                             |         }
    0x005e98d2 mov qword [r15 + 8], 0                                                                                                                                                                                                                        |         *((r15 + 8)) = 0;
    0x005e98da mov qword [r15 + 0x20], rcx                                                                                                                                                                                                                   |         *((r15 + 0x20)) = rcx;
    0x005e98de mov qword [r15 + 0x28], rsi                                                                                                                                                                                                                   |         *((r15 + 0x28)) = rsi;
    0x005e98e2 cmp rcx, 0x18                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                             |         if (rcx >= 0x18) {
    0x005e98e6 jb 0x5e98ff                                                                                                                                                                                                                                   |             
    0x005e98e8 inc rsi                                                                                                                                                                                                                                       |             rsi++;
    0x005e98eb mov rcx, qword [rax]                                                                                                                                                                                                                          |             rcx = *(rax);
    0x005e98ee mov rdi, rax                                                                                                                                                                                                                                  |             rdi = rax;
    0x005e98f1 call qword [rcx + 0x10]                                                                                                                                                                                                                       |             rax = uint64_t (*rcx + 0x10)() ();
    0x005e98f4 mov qword [r15 + 8], rax                                                                                                                                                                                                                      |             *((r15 + 8)) = rax;
    0x005e98f8 cmp qword [r15 + 0x28], 0x17                                                                                                                                                                                                                  |             
                                                                                                                                                                                                                                                             |             if (*((r15 + 0x28)) != 0x17) {
    0x005e98fd jne 0x5e9902                                                                                                                                                                                                                                  |                 goto label_2;
                                                                                                                                                                                                                                                             |             }
                                                                                                                                                                                                                                                             |         }
    0x005e98ff mov rax, rbx                                                                                                                                                                                                                                  |         rax = rbx;
                                                                                                                                                                                                                                                             | label_2:
    0x005e9902 mov rdx, qword [r15 + 0x20]                                                                                                                                                                                                                   |         rdx = *((r15 + 0x20));
    0x005e9906 inc rdx                                                                                                                                                                                                                                       |         rdx++;
                                                                                                                                                                                                                                                             |         if (rdx == 0) {
    0x005e9909 je 0x5e9920                                                                                                                                                                                                                                   |             goto label_3;
                                                                                                                                                                                                                                                             |         }
    0x005e990b cmp qword [r14 + 0x20], 0x17                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                             |         if (*((r14 + 0x20)) != 0x17) {
    0x005e9910 je 0x5e9915                                                                                                                                                                                                                                   |             
    0x005e9912 mov r14, qword [r14]                                                                                                                                                                                                                          |             r14 = *(r14);
                                                                                                                                                                                                                                                             |         }
    0x005e9915 mov rdi, rax                                                                                                                                                                                                                                  |         
    0x005e9918 mov rsi, r14                                                                                                                                                                                                                                  |         
    0x005e991b call 0x4053d0                                                                                                                                                                                                                                 |         memcpy (rax, r14, rdx);
                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                             | label_3:
    0x005e9920 mov rdi, r15                                                                                                                                                                                                                                  |     
    0x005e9923 call 0x649be0                                                                                                                                                                                                                                 |     BloombergLP::bdlcc::SkipList_Control::incrementRefCount() (r15);
    0x005e9928 mov qword [r15 + 0x40], 0                                                                                                                                                                                                                     |     *((r15 + 0x40)) = 0;
    0x005e9930 mov rax, r15                                                                                                                                                                                                                                  |     rax = r15;
    0x005e9933 add rsp, 8                                                                                                                                                                                                                                    |     
    0x005e9937 pop rbx                                                                                                                                                                                                                                       |     
    0x005e9938 pop r12                                                                                                                                                                                                                                       |     
    0x005e993a pop r13                                                                                                                                                                                                                                       |     
    0x005e993c pop r14                                                                                                                                                                                                                                       |     
    0x005e993e pop r15                                                                                                                                                                                                                                       |     
    0x005e9940 pop rbp                                                                                                                                                                                                                                       |     
    0x005e9941 ret                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                             | }
