    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_skiplist.t/assume @ 0x5e9610 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bslmt::Barrier______unsigned_long__BloombergLP::bslm ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bslmt::Barrier_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bslmt::Barrier_unsigned_long_BloombergLP::bslm (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x005e9610 push rbp                                                                                                                                                                                                                                                          |     
    0x005e9611 push r15                                                                                                                                                                                                                                                          |     
    0x005e9613 push r14                                                                                                                                                                                                                                                          |     
    0x005e9615 push r13                                                                                                                                                                                                                                                          |     
    0x005e9617 push r12                                                                                                                                                                                                                                                          |     
    0x005e9619 push rbx                                                                                                                                                                                                                                                          |     
    0x005e961a push rax                                                                                                                                                                                                                                                          |     
    0x005e961b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x005e961e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x005e9621 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x005e9624 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x005e9628 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x005e962c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x005e9631 je 0x5e9639                                                                                                                                                                                                                                                       |         
    0x005e9633 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x005e9637 jmp 0x5e963d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x005e9639 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x005e963d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x005e9640 mov esi, 0x48                                                                                                                                                                                                                                                     |     esi = 0x48;
    0x005e9645 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x005e9648 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x005e964b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x005e964e mov qword [rax], 0x5e9760                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bslmt::Barrier_____::invokerFunction_void_;
    0x005e9655 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x005e9659 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x005e965d mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x005e9662 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x005e9666 lea rdi, [rbx + 0x18]                                                                                                                                                                                                                                             |     
    0x005e966a mov qword [rbx + 0x18], 0                                                                                                                                                                                                                                         |     *((rbx + 0x18)) = 0;
    0x005e9672 mov qword [rbx + 0x40], r14                                                                                                                                                                                                                                       |     *((rbx + 0x40)) = r14;
    0x005e9676 movaps xmm0, xmmword [rip + 0x90d43]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x005e967d movups xmmword [rbx + 0x30], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x30], xmm0");
    0x005e9681 mov ecx, 0x67c28f                                                                                                                                                                                                                                                 |     
    0x005e9686 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x005e9689 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x005e968c call 0x653850                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x18, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x005e9691 mov edx, 0x64f840                                                                                                                                                                                                                                                 |     
    0x005e9696 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x005e969a mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x005e969d mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x005e96a0 call 0x6501d0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x005e96a5 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x005e96a7 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x005e96a9 je 0x5e96d4                                                                                                                                                                                                                                                       |         
    0x005e96ab cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x38)) != 0x17) {
    0x005e96b0 je 0x5e96c0                                                                                                                                                                                                                                                       |             
    0x005e96b2 mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x18));
    0x005e96b6 mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x40));
    0x005e96ba mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x005e96bd call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x005e96c0 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x005e96c8 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x005e96cb mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x005e96ce mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x005e96d1 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x005e96d4 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x005e96d6 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x005e96da pop rbx                                                                                                                                                                                                                                                           |     
    0x005e96db pop r12                                                                                                                                                                                                                                                           |     
    0x005e96dd pop r13                                                                                                                                                                                                                                                           |     
    0x005e96df pop r14                                                                                                                                                                                                                                                           |     
    0x005e96e1 pop r15                                                                                                                                                                                                                                                           |     
    0x005e96e3 pop rbp                                                                                                                                                                                                                                                           |     
    0x005e96e4 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
