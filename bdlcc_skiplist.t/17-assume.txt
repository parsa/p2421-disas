    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_skiplist.t/assume @ 0x5c5860 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_void_______void________BloombergLP::bsls::AtomicInt__BloombergLP::bslmt::Barrier___BloombergLP::bdlf ()          | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::SkipList_void_void_BloombergLP::bsls::AtomicInt_BloombergLP::bslmt::Barrier_BloombergLP::bdlf (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<void (*)(), void (*)()>*, BloombergLP::bsls::AtomicInt*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<void (*)(), void (*)()>*, BloombergLP::bsls::AtomicInt*, BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<void (*)(), void (*)()>*, BloombergLP::bsls::AtomicInt*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<void (*)(), void (*)()>*, BloombergLP::bsls::AtomicInt*, BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x005c5860 push rbp                                                                                                                                                                                                                                                          |     
    0x005c5861 push r15                                                                                                                                                                                                                                                          |     
    0x005c5863 push r14                                                                                                                                                                                                                                                          |     
    0x005c5865 push r13                                                                                                                                                                                                                                                          |     
    0x005c5867 push r12                                                                                                                                                                                                                                                          |     
    0x005c5869 push rbx                                                                                                                                                                                                                                                          |     
    0x005c586a push rax                                                                                                                                                                                                                                                          |     
    0x005c586b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x005c586e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x005c5871 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x005c5874 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x005c5878 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x005c587c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x005c5881 je 0x5c5889                                                                                                                                                                                                                                                       |         
    0x005c5883 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x005c5887 jmp 0x5c588d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x005c5889 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x005c588d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x005c5890 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x005c5895 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x005c5898 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x005c589b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x005c589e mov qword [rax], 0x5c59c0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_void_______void________BloombergLP::bsls::AtomicInt__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_Boun;
    0x005c58a5 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x005c58a9 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x005c58ad mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x005c58b2 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x005c58b6 mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x005c58bb mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x005c58bf mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x18));
    0x005c58c4 mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = rax;
    0x005c58c8 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                             |     
    0x005c58cc mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                         |     *((rbx + 0x28)) = 0;
    0x005c58d4 mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                       |     *((rbx + 0x50)) = r14;
    0x005c58d8 movaps xmm0, xmmword [rip + 0xb4ae1]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x005c58df movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x005c58e3 mov ecx, 0x67c28f                                                                                                                                                                                                                                                 |     
    0x005c58e8 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x005c58eb mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x005c58ee call 0x653850                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x005c58f3 mov edx, 0x64f840                                                                                                                                                                                                                                                 |     
    0x005c58f8 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x005c58fc mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x005c58ff mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x005c5902 call 0x6501d0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x005c5907 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x005c5909 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x005c590b je 0x5c5936                                                                                                                                                                                                                                                       |         
    0x005c590d cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x005c5912 je 0x5c5922                                                                                                                                                                                                                                                       |             
    0x005c5914 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x005c5918 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x005c591c mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x005c591f call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x005c5922 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x005c592a mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x005c592d mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x005c5930 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x005c5933 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x005c5936 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x005c5938 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x005c593c pop rbx                                                                                                                                                                                                                                                           |     
    0x005c593d pop r12                                                                                                                                                                                                                                                           |     
    0x005c593f pop r13                                                                                                                                                                                                                                                           |     
    0x005c5941 pop r14                                                                                                                                                                                                                                                           |     
    0x005c5943 pop r15                                                                                                                                                                                                                                                           |     
    0x005c5945 pop rbp                                                                                                                                                                                                                                                           |     
    0x005c5946 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
