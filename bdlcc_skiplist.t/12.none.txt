    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlcc_skiplist.t/none @ 0x5bd8e0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_int__int___int__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int__int___int__ ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::SkipList_int_int_int_int_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int_int_int_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<int, int>*, int, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<int, int>*, int, int> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::SkipList<int, int>*, int, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlcc::SkipList<int, int>*, int, int> > const&, BloombergLP::bslma::Allocator*) */
    0x005bd8e0 push rbp                                                                                                                                                                                                                                                              |     
    0x005bd8e1 push r15                                                                                                                                                                                                                                                              |     
    0x005bd8e3 push r14                                                                                                                                                                                                                                                              |     
    0x005bd8e5 push rbx                                                                                                                                                                                                                                                              |     
    0x005bd8e6 sub rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x005bd8ea mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x005bd8ed mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x005bd8f0 mov r15, rdi                                                                                                                                                                                                                                                          |     r15 = rdi;
    0x005bd8f3 test rdx, rdx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rdx == 0) {
    0x005bd8f6 jne 0x5bd90c                                                                                                                                                                                                                                                          |         
    0x005bd8f8 mov r14, qword [rip + 0x35d241]                                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x005bd8ff test r14, r14                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x005bd902 jne 0x5bd90c                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x005bd904 call 0x64efc0                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x005bd909 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x005bd90c mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x005bd90f mov esi, 0x50                                                                                                                                                                                                                                                         |     esi = 0x50;
    0x005bd914 mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x005bd917 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x005bd91a mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x005bd91d mov qword [rax], 0x5bda80                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::SkipList_int__int___int__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlcc::SkipList_int__int___int__int_____::i;
    0x005bd924 mov rax, qword [rbp]                                                                                                                                                                                                                                                  |     rax = *(rbp);
    0x005bd928 mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x005bd92c mov rax, qword [rbp + 8]                                                                                                                                                                                                                                              |     rax = *((rbp + 8));
    0x005bd930 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x005bd934 mov eax, dword [rbp + 0x10]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x10));
    0x005bd937 mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                           |     *((rbx + 0x18)) = eax;
    0x005bd93a mov eax, dword [rbp + 0x14]                                                                                                                                                                                                                                           |     eax = *((rbp + 0x14));
    0x005bd93d mov dword [rbx + 0x1c], eax                                                                                                                                                                                                                                           |     *((rbx + 0x1c)) = eax;
    0x005bd940 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                                 |     
    0x005bd944 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                             |     *((rbx + 0x20)) = 0;
    0x005bd94c mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                           |     *((rbx + 0x48)) = r14;
    0x005bd950 movaps xmm0, xmmword [rip + 0xbd339]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x005bd957 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x005bd95b mov ecx, 0x67cb5d                                                                                                                                                                                                                                                     |     
    0x005bd960 xor esi, esi                                                                                                                                                                                                                                                          |     
    0x005bd962 xor edx, edx                                                                                                                                                                                                                                                          |     
    0x005bd964 call 0x654130                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x005bd969 mov rdi, rsp                                                                                                                                                                                                                                                          |     
    0x005bd96c call 0x6505a0                                                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x005bd971 mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x005bd974 mov edx, 0x650100                                                                                                                                                                                                                                                     |     
    0x005bd979 mov rdi, r15                                                                                                                                                                                                                                                          |     
    0x005bd97c mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x005bd97f call 0x650a90                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x005bd984 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x005bd986 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x005bd98c je 0x5bd99e                                                                                                                                                                                                                                                           |         
    0x005bd98e mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x005bd993 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x005bd998 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x005bd99b call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x005bd99e test ebp, ebp                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x005bd9a0 je 0x5bd9cb                                                                                                                                                                                                                                                           |         
    0x005bd9a2 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x40)) != 0x17) {
    0x005bd9a7 je 0x5bd9b7                                                                                                                                                                                                                                                           |             
    0x005bd9a9 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x20));
    0x005bd9ad mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x48));
    0x005bd9b1 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x005bd9b4 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x005bd9b7 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x005bd9bf mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x005bd9c2 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x005bd9c5 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x005bd9c8 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x005bd9cb mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x005bd9cd add rsp, 0x48                                                                                                                                                                                                                                                         |     
    0x005bd9d1 pop rbx                                                                                                                                                                                                                                                               |     
    0x005bd9d2 pop r14                                                                                                                                                                                                                                                               |     
    0x005bd9d4 pop r15                                                                                                                                                                                                                                                               |     
    0x005bd9d6 pop rbp                                                                                                                                                                                                                                                               |     
    0x005bd9d7 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
