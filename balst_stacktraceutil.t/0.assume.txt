    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* balst_stacktraceutil.t/assume @ 0x4127e0 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_void_______unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__void___const_____BloombergLP::bslma::Allocator_ ()       | int64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_void_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_void_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<void (*)()>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, void (* const&)(), BloombergLP::bslma::Allocator*) */
    0x004127e0 push rbp                                                                                                                                                                                  |     
    0x004127e1 push r15                                                                                                                                                                                  |     
    0x004127e3 push r14                                                                                                                                                                                  |     
    0x004127e5 push r13                                                                                                                                                                                  |     
    0x004127e7 push r12                                                                                                                                                                                  |     
    0x004127e9 push rbx                                                                                                                                                                                  |     
    0x004127ea push rax                                                                                                                                                                                  |     
    0x004127eb mov r14, rcx                                                                                                                                                                              |     r14 = rcx;
    0x004127ee mov r12, rdx                                                                                                                                                                              |     r12 = rdx;
    0x004127f1 mov r15, rsi                                                                                                                                                                              |     r15 = rsi;
    0x004127f4 mov qword [rsp], rdi                                                                                                                                                                      |     *(rsp) = rdi;
    0x004127f8 mov r13, qword [rsi + 0x30]                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x004127fc cmp qword [rsi + 0x38], 0x17                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00412801 je 0x412809                                                                                                                                                                               |         
    0x00412803 mov rbp, qword [r15 + 0x18]                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00412807 jmp 0x41280d                                                                                                                                                                              |         
                                                                                                                                                                                                         |     } else {
    0x00412809 lea rbp, [r15 + 0x18]                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                         |     }
    0x0041280d mov rax, qword [r14]                                                                                                                                                                      |     rax = *(r14);
    0x00412810 mov esi, 0x40                                                                                                                                                                             |     esi = 0x40;
    0x00412815 mov rdi, r14                                                                                                                                                                              |     rdi = r14;
    0x00412818 call qword [rax + 0x10]                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0041281b mov rbx, rax                                                                                                                                                                              |     rbx = rax;
    0x0041281e mov qword [rax], 0x412930                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt.EntryPointFunctorAdapter_void______::invokerFunction_void_;
    0x00412825 mov rax, qword [r12]                                                                                                                                                                      |     rax = *(r12);
    0x00412829 mov qword [rbx + 8], rax                                                                                                                                                                  |     *((rbx + 8)) = rax;
    0x0041282d lea rdi, [rbx + 0x10]                                                                                                                                                                     |     
    0x00412831 mov qword [rbx + 0x10], 0                                                                                                                                                                 |     *((rbx + 0x10)) = 0;
    0x00412839 mov qword [rbx + 0x38], r14                                                                                                                                                               |     *((rbx + 0x38)) = r14;
    0x0041283d movaps xmm0, xmmword [rip + 0x3750c]                                                                                                                                                      |     xmm0 = .comment;
    0x00412844 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00412848 mov ecx, 0x44b4de                                                                                                                                                                         |     
    0x0041284d mov rsi, rbp                                                                                                                                                                              |     
    0x00412850 mov rdx, r13                                                                                                                                                                              |     
    0x00412853 call 0x426fb0                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00412858 mov edx, 0x423510                                                                                                                                                                         |     
    0x0041285d mov rdi, qword [rsp]                                                                                                                                                                      |     
    0x00412861 mov rsi, r15                                                                                                                                                                              |     
    0x00412864 mov rcx, rbx                                                                                                                                                                              |     
    0x00412867 call 0x423a10                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041286c mov ebp, eax                                                                                                                                                                              |     
    0x0041286e test eax, eax                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (eax != 0) {
    0x00412870 je 0x41289b                                                                                                                                                                               |         
    0x00412872 cmp qword [rbx + 0x30], 0x17                                                                                                                                                              |         
                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00412877 je 0x412887                                                                                                                                                                               |             
    0x00412879 mov rsi, qword [rbx + 0x10]                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x0041287d mov rdi, qword [rbx + 0x38]                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x00412881 mov rax, qword [rdi]                                                                                                                                                                      |             rax = *(rdi);
    0x00412884 call qword [rax + 0x18]                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |         }
    0x00412887 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041288f mov rax, qword [r14]                                                                                                                                                                      |         rax = *(r14);
    0x00412892 mov rdi, r14                                                                                                                                                                              |         rdi = r14;
    0x00412895 mov rsi, rbx                                                                                                                                                                              |         rsi = rbx;
    0x00412898 call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x0041289b mov eax, ebp                                                                                                                                                                              |     eax = ebp;
    0x0041289d add rsp, 8                                                                                                                                                                                |     
    0x004128a1 pop rbx                                                                                                                                                                                   |     
    0x004128a2 pop r12                                                                                                                                                                                   |     
    0x004128a4 pop r13                                                                                                                                                                                   |     
    0x004128a6 pop r14                                                                                                                                                                                   |     
    0x004128a8 pop r15                                                                                                                                                                                   |     
    0x004128aa pop rbp                                                                                                                                                                                   |     
    0x004128ab ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
