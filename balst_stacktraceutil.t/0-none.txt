    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* balst_stacktraceutil.t/none @ 0x4127b0 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_void_______unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__void___const_____BloombergLP::bslma::Allocator_ ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_void_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_void_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<void (*)()>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, void (* const&)(), BloombergLP::bslma::Allocator*) */
    0x004127b0 push rbp                                                                                                                                                                                  |     
    0x004127b1 push r15                                                                                                                                                                                  |     
    0x004127b3 push r14                                                                                                                                                                                  |     
    0x004127b5 push r13                                                                                                                                                                                  |     
    0x004127b7 push r12                                                                                                                                                                                  |     
    0x004127b9 push rbx                                                                                                                                                                                  |     
    0x004127ba push rax                                                                                                                                                                                  |     
    0x004127bb mov r14, rcx                                                                                                                                                                              |     r14 = rcx;
    0x004127be mov r12, rdx                                                                                                                                                                              |     r12 = rdx;
    0x004127c1 mov r15, rsi                                                                                                                                                                              |     r15 = rsi;
    0x004127c4 mov qword [rsp], rdi                                                                                                                                                                      |     *(rsp) = rdi;
    0x004127c8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x004127cd je 0x4127d5                                                                                                                                                                               |         
    0x004127cf mov r13, qword [r15 + 0x18]                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x004127d3 jmp 0x4127d9                                                                                                                                                                              |         
                                                                                                                                                                                                         |     } else {
    0x004127d5 lea r13, [r15 + 0x18]                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                         |     }
    0x004127d9 mov rbp, qword [r15 + 0x30]                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x004127dd test r14, r14                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (r14 == 0) {
    0x004127e0 jne 0x4127f6                                                                                                                                                                              |         
    0x004127e2 mov r14, qword [rip + 0x26fe57]                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004127e9 test r14, r14                                                                                                                                                                             |         
                                                                                                                                                                                                         |         if (r14 != 0) {
    0x004127ec jne 0x4127f6                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                         |         }
    0x004127ee call 0x4228b0                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004127f3 mov r14, rax                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_0:
    0x004127f6 mov rax, qword [r14]                                                                                                                                                                      |     rax = *(r14);
    0x004127f9 mov esi, 0x40                                                                                                                                                                             |     esi = 0x40;
    0x004127fe mov rdi, r14                                                                                                                                                                              |     rdi = r14;
    0x00412801 call qword [rax + 0x10]                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00412804 mov rbx, rax                                                                                                                                                                              |     rbx = rax;
    0x00412807 mov qword [rax], 0x412910                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt.EntryPointFunctorAdapter_void______::invokerFunction_void_;
    0x0041280e mov rax, qword [r12]                                                                                                                                                                      |     rax = *(r12);
    0x00412812 mov qword [rbx + 8], rax                                                                                                                                                                  |     *((rbx + 8)) = rax;
    0x00412816 lea rdi, [rbx + 0x10]                                                                                                                                                                     |     
    0x0041281a mov qword [rbx + 0x10], 0                                                                                                                                                                 |     *((rbx + 0x10)) = 0;
    0x00412822 mov qword [rbx + 0x38], r14                                                                                                                                                               |     *((rbx + 0x38)) = r14;
    0x00412826 movaps xmm0, xmmword [rip + 0x377f3]                                                                                                                                                      |     xmm0 = .comment;
    0x0041282d movups xmmword [rbx + 0x28], xmm0                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00412831 mov ecx, 0x44b7ac                                                                                                                                                                         |     
    0x00412836 mov rsi, r13                                                                                                                                                                              |     
    0x00412839 mov rdx, rbp                                                                                                                                                                              |     
    0x0041283c call 0x427240                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00412841 mov edx, 0x423780                                                                                                                                                                         |     
    0x00412846 mov rdi, qword [rsp]                                                                                                                                                                      |     
    0x0041284a mov rsi, r15                                                                                                                                                                              |     
    0x0041284d mov rcx, rbx                                                                                                                                                                              |     
    0x00412850 call 0x423c80                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00412855 mov ebp, eax                                                                                                                                                                              |     
    0x00412857 test eax, eax                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (eax != 0) {
    0x00412859 je 0x412884                                                                                                                                                                               |         
    0x0041285b cmp qword [rbx + 0x30], 0x17                                                                                                                                                              |         
                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00412860 je 0x412870                                                                                                                                                                               |             
    0x00412862 mov rsi, qword [rbx + 0x10]                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00412866 mov rdi, qword [rbx + 0x38]                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x0041286a mov rax, qword [rdi]                                                                                                                                                                      |             rax = *(rdi);
    0x0041286d call qword [rax + 0x18]                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |         }
    0x00412870 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00412878 mov rax, qword [r14]                                                                                                                                                                      |         rax = *(r14);
    0x0041287b mov rdi, r14                                                                                                                                                                              |         rdi = r14;
    0x0041287e mov rsi, rbx                                                                                                                                                                              |         rsi = rbx;
    0x00412881 call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x00412884 mov eax, ebp                                                                                                                                                                              |     eax = ebp;
    0x00412886 add rsp, 8                                                                                                                                                                                |     
    0x0041288a pop rbx                                                                                                                                                                                   |     
    0x0041288b pop r12                                                                                                                                                                                   |     
    0x0041288d pop r13                                                                                                                                                                                   |     
    0x0041288f pop r14                                                                                                                                                                                   |     
    0x00412891 pop r15                                                                                                                                                                                   |     
    0x00412893 pop rbp                                                                                                                                                                                   |     
    0x00412894 ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
