    ; assembly                               | /* r2dec pseudo code output */
                                             | /* bdlt_dayofweekset.t/assume @ 0x4040e0 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.g_char_const_ ()             | uint64_t g_char_const_ (int64_t arg4, int64_t arg2, int64_t arg1) {
                                             |     int64_t var_8h;
                                             |     rcx = arg4;
                                             |     rsi = arg2;
                                             |     rdi = arg1;
                                             |     /* g(char const*) */
    0x004040e0 push rbx                      |     
    0x004040e1 sub rsp, 0x10                 |     
    0x004040e5 mov rbx, rdi                  |     rbx = rdi;
    0x004040e8 mov byte [rsp + 8], 0         |     *((rsp + 8)) = 0;
    0x004040ed lea rdi, [rsp + 8]            |     rdi = rsp + 8;
    0x004040f2 mov edx, 1                    |     edx = 1;
    0x004040f7 call 0x403e40                 |     eax = symggg(BloombergLP::bdlt::DayOfWeekSet* ();
    0x004040fc not eax                       |     eax = ~eax;
    0x004040fe shr eax, 0x1f                 |     eax >>= 0x1f;
    0x00404101 mov esi, 0x44a3bc             |     esi = "ggg(object, spec) < 0";
    0x00404106 mov edi, eax                  |     edi = eax;
    0x00404108 mov edx, 0x170                |     edx = 0x170;
    0x0040410d call 0x403ff0                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404112 mov al, byte [rsp + 8]        |     al = *((rsp + 8));
    0x00404116 mov byte [rbx], al            |     *(rbx) = al;
    0x00404118 mov rax, rbx                  |     rax = rbx;
    0x0040411b add rsp, 0x10                 |     
    0x0040411f pop rbx                       |     
    0x00404120 ret                           |     return rax;
                                             | }
