    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* balber_berutil.t/assume @ 0x476620 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdldfp::DecimalImpUtil.classify_BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType128_ ()       | int64_t method_BloombergLP::bdldfp::DecimalImpUtil_classify_BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType128_ (int64_t arg2, int64_t arg1) {
                                                                                                                                     |     rsi = arg2;
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* BloombergLP::bdldfp::DecimalImpUtil::classify(BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType128) */
    0x00476620 push rax                                                                                                              |     
    0x00476621 call 0x4a2490                                                                                                         |     _bid128_class ();
    0x00476626 cdqe                                                                                                                  |     rax = (int64_t) eax;
    0x00476628 mov eax, dword [rax*4 + 0x50a110]                                                                                     |     eax = *((rax*4 + 0x50a110));
    0x0047662f pop rcx                                                                                                               |     
    0x00476630 ret                                                                                                                   |     return rax;
                                                                                                                                     | }
