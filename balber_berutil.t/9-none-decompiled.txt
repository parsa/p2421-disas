    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* balber_berutil.t/none @ 0x4765f0 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdldfp::DecimalImpUtil.classify_BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType32_ ()        | int64_t method_BloombergLP::bdldfp::DecimalImpUtil_classify_BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType32_ (int64_t arg1) {
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* BloombergLP::bdldfp::DecimalImpUtil::classify(BloombergLP::bdldfp::DecimalImpUtil_IntelDfp::ValueType32) */
    0x004765f0 push rax                                                                                                              |     
    0x004765f1 call 0x4857e0                                                                                                         |     eax = _bid32_class ();
    0x004765f6 cmp eax, 9                                                                                                            |     
                                                                                                                                     |     if (eax <= 9) {
    0x004765f9 ja 0x476606                                                                                                           |         
    0x004765fb cdqe                                                                                                                  |         rax = (int64_t) eax;
    0x004765fd mov eax, dword [rax*4 + 0x50a780]                                                                                     |         eax = *((rax*4 + 0x50a780));
    0x00476604 pop rcx                                                                                                               |         
    0x00476605 ret                                                                                                                   |         return rax;
                                                                                                                                     |     }
    0x00476606 mov eax, 0xffffffff                                                                                                   |     eax = 0xffffffff;
    0x0047660b pop rcx                                                                                                               |     
    0x0047660c ret                                                                                                                   |     return rax;
                                                                                                                                     | }
