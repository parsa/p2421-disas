    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_rwmutex.t/assume @ 0x409010 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionReader_BloombergLP::bslmt.RWMutex____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__ContentionReader_BloombergLP::bslmt::RWMutex__const__BloombergLP::bslma::Allocator ()       | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionReader_BloombergLP::bslmt_RWMutex_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_ContentionReader_BloombergLP::bslmt::RWMutex_const_BloombergLP::bslma::Allocator (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ContentionReader<BloombergLP::bslmt::RWMutex> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, ContentionReader<BloombergLP::bslmt::RWMutex> const&, BloombergLP::bslma::Allocator*) */
    0x00409010 push rbp                                                                                                                                                                                                                                                          |     
    0x00409011 push r15                                                                                                                                                                                                                                                          |     
    0x00409013 push r14                                                                                                                                                                                                                                                          |     
    0x00409015 push r13                                                                                                                                                                                                                                                          |     
    0x00409017 push r12                                                                                                                                                                                                                                                          |     
    0x00409019 push rbx                                                                                                                                                                                                                                                          |     
    0x0040901a push rax                                                                                                                                                                                                                                                          |     
    0x0040901b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0040901e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00409021 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00409024 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00409028 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0040902c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00409031 je 0x409039                                                                                                                                                                                                                                                       |         
    0x00409033 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x00409037 jmp 0x40903d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00409039 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0040903d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00409040 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x00409045 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00409048 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0040904b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0040904e mov qword [rax], 0x409160                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_ContentionReader_BloombergLP::bslmt::RWMutex___.invokerFunction_void_;
    0x00409055 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x0040905a movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                 |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x00409060 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00409064 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x00409068 lea rdi, [rax + 0x28]                                                                                                                                                                                                                                             |     
    0x0040906c mov qword [rax + 0x28], 0                                                                                                                                                                                                                                         |     *((rax + 0x28)) = 0;
    0x00409074 mov qword [rax + 0x50], r14                                                                                                                                                                                                                                       |     *((rax + 0x50)) = r14;
    0x00409078 movaps xmm0, xmmword [rip + 0x29b31]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0040907f movups xmmword [rax + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x40], xmm0");
    0x00409083 mov ecx, 0x4330c9                                                                                                                                                                                                                                                 |     
    0x00409088 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0040908b mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0040908e call 0x40f220                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x28, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00409093 mov edx, 0x40c1e0                                                                                                                                                                                                                                                 |     
    0x00409098 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0040909c mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0040909f mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004090a2 call 0x40d1b0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004090a7 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004090a9 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004090ab je 0x4090d6                                                                                                                                                                                                                                                       |         
    0x004090ad cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x004090b2 je 0x4090c2                                                                                                                                                                                                                                                       |             
    0x004090b4 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x004090b8 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x004090bc mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004090bf call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004090c2 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x004090ca mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004090cd mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004090d0 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x004090d3 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x004090d6 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x004090d8 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x004090dc pop rbx                                                                                                                                                                                                                                                           |     
    0x004090dd pop r12                                                                                                                                                                                                                                                           |     
    0x004090df pop r13                                                                                                                                                                                                                                                           |     
    0x004090e1 pop r14                                                                                                                                                                                                                                                           |     
    0x004090e3 pop r15                                                                                                                                                                                                                                                           |     
    0x004090e5 pop rbp                                                                                                                                                                                                                                                           |     
    0x004090e6 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
