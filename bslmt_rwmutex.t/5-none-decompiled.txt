    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_rwmutex.t/none @ 0x409080 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionReader_BloombergLP::bslmt.RWMutex____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__ContentionReader_BloombergLP::bslmt::RWMutex__const__BloombergLP::bslma::Allocator ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionReader_BloombergLP::bslmt_RWMutex_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_ContentionReader_BloombergLP::bslmt::RWMutex_const_BloombergLP::bslma::Allocator (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ContentionReader<BloombergLP::bslmt::RWMutex> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, ContentionReader<BloombergLP::bslmt::RWMutex> const&, BloombergLP::bslma::Allocator*) */
    0x00409080 push rbp                                                                                                                                                                                                                                                          |     
    0x00409081 push r15                                                                                                                                                                                                                                                          |     
    0x00409083 push r14                                                                                                                                                                                                                                                          |     
    0x00409085 push r13                                                                                                                                                                                                                                                          |     
    0x00409087 push r12                                                                                                                                                                                                                                                          |     
    0x00409089 push rbx                                                                                                                                                                                                                                                          |     
    0x0040908a push rax                                                                                                                                                                                                                                                          |     
    0x0040908b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0040908e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00409091 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00409094 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00409098 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0040909d je 0x4090a5                                                                                                                                                                                                                                                       |         
    0x0040909f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004090a3 jmp 0x4090a9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004090a5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004090a9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004090ad test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004090b0 jne 0x4090c6                                                                                                                                                                                                                                                      |         
    0x004090b2 mov r14, qword [rip + 0x2418b7]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004090b9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004090bc jne 0x4090c6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004090be call 0x432700                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004090c3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x004090c6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004090c9 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x004090ce mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004090d1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004090d4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004090d7 mov qword [rax], 0x4091f0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_ContentionReader_BloombergLP::bslmt::RWMutex___.invokerFunction_void_;
    0x004090de movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x004090e3 movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                 |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x004090e9 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004090ed movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x004090f1 lea rdi, [rax + 0x28]                                                                                                                                                                                                                                             |     
    0x004090f5 mov qword [rax + 0x28], 0                                                                                                                                                                                                                                         |     *((rax + 0x28)) = 0;
    0x004090fd mov qword [rax + 0x50], r14                                                                                                                                                                                                                                       |     *((rax + 0x50)) = r14;
    0x00409101 movaps xmm0, xmmword [rip + 0x29cb8]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00409108 movups xmmword [rax + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x40], xmm0");
    0x0040910c mov ecx, 0x4332d5                                                                                                                                                                                                                                                 |     
    0x00409111 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x00409114 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00409117 call 0x40f410                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x28, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0040911c mov edx, 0x40c3b0                                                                                                                                                                                                                                                 |     
    0x00409121 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x00409125 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00409128 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0040912b call 0x40d380                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00409130 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00409132 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00409134 je 0x40915f                                                                                                                                                                                                                                                       |         
    0x00409136 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x0040913b je 0x40914b                                                                                                                                                                                                                                                       |             
    0x0040913d mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x00409141 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x00409145 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00409148 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0040914b mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x00409153 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00409156 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00409159 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0040915c call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0040915f mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00409161 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00409165 pop rbx                                                                                                                                                                                                                                                           |     
    0x00409166 pop r12                                                                                                                                                                                                                                                           |     
    0x00409168 pop r13                                                                                                                                                                                                                                                           |     
    0x0040916a pop r14                                                                                                                                                                                                                                                           |     
    0x0040916c pop r15                                                                                                                                                                                                                                                           |     
    0x0040916e pop rbp                                                                                                                                                                                                                                                           |     
    0x0040916f ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
