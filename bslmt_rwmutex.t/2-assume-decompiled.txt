    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* bslmt_rwmutex.t/assume @ 0x409750 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongReader_BloombergLP::bslmt.ReaderWriterLock____unsigned_long__PingPongReader_BloombergLP::bslmt::ReaderWriterLock__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongReader_BloombergLP::bslmt_ReaderWriterLock_unsigned_long_PingPongReader_BloombergLP::bslmt::ReaderWriterLock_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<PingPongReader<BloombergLP::bslmt::ReaderWriterLock> >(unsigned long*, PingPongReader<BloombergLP::bslmt::ReaderWriterLock> const&, BloombergLP::bslma::Allocator*) */
    0x00409750 push rbp                                                                                                                                                                                                                              |     
    0x00409751 push r15                                                                                                                                                                                                                              |     
    0x00409753 push r14                                                                                                                                                                                                                              |     
    0x00409755 push rbx                                                                                                                                                                                                                              |     
    0x00409756 sub rsp, 0x48                                                                                                                                                                                                                         |     
    0x0040975a mov r14, rdx                                                                                                                                                                                                                          |     r14 = rdx;
    0x0040975d mov rbp, rsi                                                                                                                                                                                                                          |     
    0x00409760 mov r15, rdi                                                                                                                                                                                                                          |     r15 = rdi;
    0x00409763 mov rax, qword [rdx]                                                                                                                                                                                                                  |     rax = *(rdx);
    0x00409766 mov esi, 0x60                                                                                                                                                                                                                         |     esi = 0x60;
    0x0040976b mov rdi, rdx                                                                                                                                                                                                                          |     rdi = rdx;
    0x0040976e call qword [rax + 0x10]                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00409771 mov rbx, rax                                                                                                                                                                                                                          |     rbx = rax;
    0x00409774 mov qword [rax], 0x4098d0                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_PingPongReader_BloombergLP::bslmt::ReaderWriterLock___.invokerFunction_void_;
    0x0040977b movups xmm0, xmmword [rbp]                                                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [rbp]");
    0x0040977f movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x00409783 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00409787 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x0040978b mov rax, qword [rbp + 0x20]                                                                                                                                                                                                           |     rax = *((rbp + 0x20));
    0x0040978f mov qword [rbx + 0x28], rax                                                                                                                                                                                                           |     *((rbx + 0x28)) = rax;
    0x00409793 lea rdi, [rbx + 0x30]                                                                                                                                                                                                                 |     
    0x00409797 mov qword [rbx + 0x30], 0                                                                                                                                                                                                             |     *((rbx + 0x30)) = 0;
    0x0040979f mov qword [rbx + 0x58], r14                                                                                                                                                                                                           |     *((rbx + 0x58)) = r14;
    0x004097a3 movaps xmm0, xmmword [rip + 0x29406]                                                                                                                                                                                                  |     xmm0 = .comment;
    0x004097aa movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x004097ae mov ecx, 0x4330c9                                                                                                                                                                                                                     |     
    0x004097b3 xor esi, esi                                                                                                                                                                                                                          |     
    0x004097b5 xor edx, edx                                                                                                                                                                                                                          |     
    0x004097b7 call 0x40f220                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004097bc mov rdi, rsp                                                                                                                                                                                                                          |     
    0x004097bf call 0x40ccc0                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004097c4 mov rsi, rsp                                                                                                                                                                                                                          |     
    0x004097c7 mov edx, 0x40c1e0                                                                                                                                                                                                                     |     
    0x004097cc mov rdi, r15                                                                                                                                                                                                                          |     
    0x004097cf mov rcx, rbx                                                                                                                                                                                                                          |     
    0x004097d2 call 0x40d1b0                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004097d7 mov ebp, eax                                                                                                                                                                                                                          |     
    0x004097d9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x004097df je 0x4097f1                                                                                                                                                                                                                           |         
    0x004097e1 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x004097e6 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x004097eb mov rax, qword [rdi]                                                                                                                                                                                                                  |         rax = *(rdi);
    0x004097ee call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x004097f1 test ebp, ebp                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x004097f3 je 0x40981e                                                                                                                                                                                                                           |         
    0x004097f5 cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |         if (*((rbx + 0x50)) != 0x17) {
    0x004097fa je 0x40980a                                                                                                                                                                                                                           |             
    0x004097fc mov rsi, qword [rbx + 0x30]                                                                                                                                                                                                           |             rsi = *((rbx + 0x30));
    0x00409800 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                                           |             rdi = *((rbx + 0x58));
    0x00409804 mov rax, qword [rdi]                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00409807 call qword [rax + 0x18]                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |         }
    0x0040980a mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                                            |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x00409812 mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x00409815 mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x00409818 mov rsi, rbx                                                                                                                                                                                                                          |         rsi = rbx;
    0x0040981b call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x0040981e mov eax, ebp                                                                                                                                                                                                                          |     eax = ebp;
    0x00409820 add rsp, 0x48                                                                                                                                                                                                                         |     
    0x00409824 pop rbx                                                                                                                                                                                                                               |     
    0x00409825 pop r14                                                                                                                                                                                                                               |     
    0x00409827 pop r15                                                                                                                                                                                                                               |     
    0x00409829 pop rbp                                                                                                                                                                                                                               |     
    0x0040982a ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
