    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* bslmt_rwmutex.t/assume @ 0x409370 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongWriter_BloombergLP::bslmt.ReaderWriterLock____unsigned_long__PingPongWriter_BloombergLP::bslmt::ReaderWriterLock__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongWriter_BloombergLP::bslmt_ReaderWriterLock_unsigned_long_PingPongWriter_BloombergLP::bslmt::ReaderWriterLock_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<PingPongWriter<BloombergLP::bslmt::ReaderWriterLock> >(unsigned long*, PingPongWriter<BloombergLP::bslmt::ReaderWriterLock> const&, BloombergLP::bslma::Allocator*) */
    0x00409370 push rbp                                                                                                                                                                                                                              |     
    0x00409371 push r15                                                                                                                                                                                                                              |     
    0x00409373 push r14                                                                                                                                                                                                                              |     
    0x00409375 push rbx                                                                                                                                                                                                                              |     
    0x00409376 sub rsp, 0x48                                                                                                                                                                                                                         |     
    0x0040937a mov r14, rdx                                                                                                                                                                                                                          |     r14 = rdx;
    0x0040937d mov rbp, rsi                                                                                                                                                                                                                          |     
    0x00409380 mov r15, rdi                                                                                                                                                                                                                          |     r15 = rdi;
    0x00409383 mov rax, qword [rdx]                                                                                                                                                                                                                  |     rax = *(rdx);
    0x00409386 mov esi, 0x60                                                                                                                                                                                                                         |     esi = 0x60;
    0x0040938b mov rdi, rdx                                                                                                                                                                                                                          |     rdi = rdx;
    0x0040938e call qword [rax + 0x10]                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00409391 mov rbx, rax                                                                                                                                                                                                                          |     rbx = rax;
    0x00409394 mov qword [rax], 0x4094f0                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_PingPongWriter_BloombergLP::bslmt::ReaderWriterLock___.invokerFunction_void_;
    0x0040939b movups xmm0, xmmword [rbp]                                                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [rbp]");
    0x0040939f movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x004093a3 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004093a7 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x004093ab mov rax, qword [rbp + 0x20]                                                                                                                                                                                                           |     rax = *((rbp + 0x20));
    0x004093af mov qword [rbx + 0x28], rax                                                                                                                                                                                                           |     *((rbx + 0x28)) = rax;
    0x004093b3 lea rdi, [rbx + 0x30]                                                                                                                                                                                                                 |     
    0x004093b7 mov qword [rbx + 0x30], 0                                                                                                                                                                                                             |     *((rbx + 0x30)) = 0;
    0x004093bf mov qword [rbx + 0x58], r14                                                                                                                                                                                                           |     *((rbx + 0x58)) = r14;
    0x004093c3 movaps xmm0, xmmword [rip + 0x297e6]                                                                                                                                                                                                  |     xmm0 = .comment;
    0x004093ca movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x004093ce mov ecx, 0x4330c9                                                                                                                                                                                                                     |     
    0x004093d3 xor esi, esi                                                                                                                                                                                                                          |     
    0x004093d5 xor edx, edx                                                                                                                                                                                                                          |     
    0x004093d7 call 0x40f220                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004093dc mov rdi, rsp                                                                                                                                                                                                                          |     
    0x004093df call 0x40ccc0                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004093e4 mov rsi, rsp                                                                                                                                                                                                                          |     
    0x004093e7 mov edx, 0x40c1e0                                                                                                                                                                                                                     |     
    0x004093ec mov rdi, r15                                                                                                                                                                                                                          |     
    0x004093ef mov rcx, rbx                                                                                                                                                                                                                          |     
    0x004093f2 call 0x40d1b0                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004093f7 mov ebp, eax                                                                                                                                                                                                                          |     
    0x004093f9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x004093ff je 0x409411                                                                                                                                                                                                                           |         
    0x00409401 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x00409406 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x0040940b mov rax, qword [rdi]                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0040940e call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x00409411 test ebp, ebp                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x00409413 je 0x40943e                                                                                                                                                                                                                           |         
    0x00409415 cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |         if (*((rbx + 0x50)) != 0x17) {
    0x0040941a je 0x40942a                                                                                                                                                                                                                           |             
    0x0040941c mov rsi, qword [rbx + 0x30]                                                                                                                                                                                                           |             rsi = *((rbx + 0x30));
    0x00409420 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                                           |             rdi = *((rbx + 0x58));
    0x00409424 mov rax, qword [rdi]                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00409427 call qword [rax + 0x18]                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |         }
    0x0040942a mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                                            |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x00409432 mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x00409435 mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x00409438 mov rsi, rbx                                                                                                                                                                                                                          |         rsi = rbx;
    0x0040943b call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x0040943e mov eax, ebp                                                                                                                                                                                                                          |     eax = ebp;
    0x00409440 add rsp, 0x48                                                                                                                                                                                                                         |     
    0x00409444 pop rbx                                                                                                                                                                                                                               |     
    0x00409445 pop r14                                                                                                                                                                                                                               |     
    0x00409447 pop r15                                                                                                                                                                                                                               |     
    0x00409449 pop rbp                                                                                                                                                                                                                               |     
    0x0040944a ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
