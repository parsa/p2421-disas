    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_rwmutex.t/assume @ 0x40b8a0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ReadThread_BloombergLP::bslmt.ReaderWriterLock____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__ReadThread_BloombergLP::bslmt::ReaderWriterLock__const__BloombergLP::bslma::All ()           | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ReadThread_BloombergLP::bslmt_ReaderWriterLock_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_ReadThread_BloombergLP::bslmt::ReaderWriterLock_const_BloombergLP::bslma::All (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ReadThread<BloombergLP::bslmt::ReaderWriterLock> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, ReadThread<BloombergLP::bslmt::ReaderWriterLock> const&, BloombergLP::bslma::Allocator*) */
    0x0040b8a0 push rbp                                                                                                                                                                                                                                                              |     
    0x0040b8a1 push r15                                                                                                                                                                                                                                                              |     
    0x0040b8a3 push r14                                                                                                                                                                                                                                                              |     
    0x0040b8a5 push r13                                                                                                                                                                                                                                                              |     
    0x0040b8a7 push r12                                                                                                                                                                                                                                                              |     
    0x0040b8a9 push rbx                                                                                                                                                                                                                                                              |     
    0x0040b8aa push rax                                                                                                                                                                                                                                                              |     
    0x0040b8ab mov r14, rcx                                                                                                                                                                                                                                                          |     r14 = rcx;
    0x0040b8ae mov r12, rdx                                                                                                                                                                                                                                                          |     r12 = rdx;
    0x0040b8b1 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x0040b8b4 mov qword [rsp], rdi                                                                                                                                                                                                                                                  |     *(rsp) = rdi;
    0x0040b8b8 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                           |     r13 = *((rsi + 0x30));
    0x0040b8bc cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x0040b8c1 je 0x40b8c9                                                                                                                                                                                                                                                           |         
    0x0040b8c3 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                           |         rbp = *((r15 + 0x18));
    0x0040b8c7 jmp 0x40b8cd                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0040b8c9 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                                 |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                     |     }
    0x0040b8cd mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x0040b8d0 mov esi, 0x58                                                                                                                                                                                                                                                         |     esi = 0x58;
    0x0040b8d5 mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x0040b8d8 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x0040b8db mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x0040b8de mov qword [rax], 0x40b9f0                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_ReadThread_BloombergLP::bslmt::ReaderWriterLock___.invokerFunction_void_;
    0x0040b8e5 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [r12]");
    0x0040b8ea movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x0040b8f0 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0040b8f4 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x0040b8f8 lea rdi, [rax + 0x28]                                                                                                                                                                                                                                                 |     
    0x0040b8fc mov qword [rax + 0x28], 0                                                                                                                                                                                                                                             |     *((rax + 0x28)) = 0;
    0x0040b904 mov qword [rax + 0x50], r14                                                                                                                                                                                                                                           |     *((rax + 0x50)) = r14;
    0x0040b908 movaps xmm0, xmmword [rip + 0x272a1]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x0040b90f movups xmmword [rax + 0x40], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x40], xmm0");
    0x0040b913 mov ecx, 0x4330c9                                                                                                                                                                                                                                                     |     
    0x0040b918 mov rsi, rbp                                                                                                                                                                                                                                                          |     
    0x0040b91b mov rdx, r13                                                                                                                                                                                                                                                          |     
    0x0040b91e call 0x40f220                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x28, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0040b923 mov edx, 0x40c1e0                                                                                                                                                                                                                                                     |     
    0x0040b928 mov rdi, qword [rsp]                                                                                                                                                                                                                                                  |     
    0x0040b92c mov rsi, r15                                                                                                                                                                                                                                                          |     
    0x0040b92f mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x0040b932 call 0x40d1b0                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040b937 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0040b939 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x0040b93b je 0x40b966                                                                                                                                                                                                                                                           |         
    0x0040b93d cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x48)) != 0x17) {
    0x0040b942 je 0x40b952                                                                                                                                                                                                                                                           |             
    0x0040b944 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x28));
    0x0040b948 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x50));
    0x0040b94c mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x0040b94f call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x0040b952 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x0040b95a mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x0040b95d mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x0040b960 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0040b963 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0040b966 mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x0040b968 add rsp, 8                                                                                                                                                                                                                                                            |     
    0x0040b96c pop rbx                                                                                                                                                                                                                                                               |     
    0x0040b96d pop r12                                                                                                                                                                                                                                                               |     
    0x0040b96f pop r13                                                                                                                                                                                                                                                               |     
    0x0040b971 pop r14                                                                                                                                                                                                                                                               |     
    0x0040b973 pop r15                                                                                                                                                                                                                                                               |     
    0x0040b975 pop rbp                                                                                                                                                                                                                                                               |     
    0x0040b976 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
