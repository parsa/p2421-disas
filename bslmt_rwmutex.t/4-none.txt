    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* bslmt_rwmutex.t/none @ 0x409400 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongWriter_BloombergLP::bslmt.ReaderWriterLock____unsigned_long__PingPongWriter_BloombergLP::bslmt::ReaderWriterLock__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_PingPongWriter_BloombergLP::bslmt_ReaderWriterLock_unsigned_long_PingPongWriter_BloombergLP::bslmt::ReaderWriterLock_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<PingPongWriter<BloombergLP::bslmt::ReaderWriterLock> >(unsigned long*, PingPongWriter<BloombergLP::bslmt::ReaderWriterLock> const&, BloombergLP::bslma::Allocator*) */
    0x00409400 push rbp                                                                                                                                                                                                                              |     
    0x00409401 push r15                                                                                                                                                                                                                              |     
    0x00409403 push r14                                                                                                                                                                                                                              |     
    0x00409405 push rbx                                                                                                                                                                                                                              |     
    0x00409406 sub rsp, 0x48                                                                                                                                                                                                                         |     
    0x0040940a mov r14, rdx                                                                                                                                                                                                                          |     r14 = rdx;
    0x0040940d mov rbp, rsi                                                                                                                                                                                                                          |     
    0x00409410 mov r15, rdi                                                                                                                                                                                                                          |     r15 = rdi;
    0x00409413 test rdx, rdx                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (rdx == 0) {
    0x00409416 jne 0x40942c                                                                                                                                                                                                                          |         
    0x00409418 mov r14, qword [rip + 0x241551]                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040941f test r14, r14                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x00409422 jne 0x40942c                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                     |         }
    0x00409424 call 0x432700                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00409429 mov r14, rax                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                     | label_0:
    0x0040942c mov rax, qword [r14]                                                                                                                                                                                                                  |     rax = *(r14);
    0x0040942f mov esi, 0x60                                                                                                                                                                                                                         |     esi = 0x60;
    0x00409434 mov rdi, r14                                                                                                                                                                                                                          |     rdi = r14;
    0x00409437 call qword [rax + 0x10]                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x0040943a mov rbx, rax                                                                                                                                                                                                                          |     rbx = rax;
    0x0040943d mov qword [rax], 0x4095a0                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_PingPongWriter_BloombergLP::bslmt::ReaderWriterLock___.invokerFunction_void_;
    0x00409444 movups xmm0, xmmword [rbp]                                                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [rbp]");
    0x00409448 movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x0040944c movups xmmword [rax + 8], xmm0                                                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00409450 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x00409454 mov rax, qword [rbp + 0x20]                                                                                                                                                                                                           |     rax = *((rbp + 0x20));
    0x00409458 mov qword [rbx + 0x28], rax                                                                                                                                                                                                           |     *((rbx + 0x28)) = rax;
    0x0040945c lea rdi, [rbx + 0x30]                                                                                                                                                                                                                 |     
    0x00409460 mov qword [rbx + 0x30], 0                                                                                                                                                                                                             |     *((rbx + 0x30)) = 0;
    0x00409468 mov qword [rbx + 0x58], r14                                                                                                                                                                                                           |     *((rbx + 0x58)) = r14;
    0x0040946c movaps xmm0, xmmword [rip + 0x2994d]                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00409473 movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x00409477 mov ecx, 0x4332d5                                                                                                                                                                                                                     |     
    0x0040947c xor esi, esi                                                                                                                                                                                                                          |     
    0x0040947e xor edx, edx                                                                                                                                                                                                                          |     
    0x00409480 call 0x40f410                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00409485 mov rdi, rsp                                                                                                                                                                                                                          |     
    0x00409488 call 0x40ce90                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0040948d mov rsi, rsp                                                                                                                                                                                                                          |     
    0x00409490 mov edx, 0x40c3b0                                                                                                                                                                                                                     |     
    0x00409495 mov rdi, r15                                                                                                                                                                                                                          |     
    0x00409498 mov rcx, rbx                                                                                                                                                                                                                          |     
    0x0040949b call 0x40d380                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004094a0 mov ebp, eax                                                                                                                                                                                                                          |     
    0x004094a2 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x004094a8 je 0x4094ba                                                                                                                                                                                                                           |         
    0x004094aa mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x004094af mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x004094b4 mov rax, qword [rdi]                                                                                                                                                                                                                  |         rax = *(rdi);
    0x004094b7 call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x004094ba test ebp, ebp                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x004094bc je 0x4094e7                                                                                                                                                                                                                           |         
    0x004094be cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |         if (*((rbx + 0x50)) != 0x17) {
    0x004094c3 je 0x4094d3                                                                                                                                                                                                                           |             
    0x004094c5 mov rsi, qword [rbx + 0x30]                                                                                                                                                                                                           |             rsi = *((rbx + 0x30));
    0x004094c9 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                                           |             rdi = *((rbx + 0x58));
    0x004094cd mov rax, qword [rdi]                                                                                                                                                                                                                  |             rax = *(rdi);
    0x004094d0 call qword [rax + 0x18]                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |         }
    0x004094d3 mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                                            |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x004094db mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x004094de mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x004094e1 mov rsi, rbx                                                                                                                                                                                                                          |         rsi = rbx;
    0x004094e4 call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x004094e7 mov eax, ebp                                                                                                                                                                                                                          |     eax = ebp;
    0x004094e9 add rsp, 0x48                                                                                                                                                                                                                         |     
    0x004094ed pop rbx                                                                                                                                                                                                                               |     
    0x004094ee pop r14                                                                                                                                                                                                                               |     
    0x004094f0 pop r15                                                                                                                                                                                                                               |     
    0x004094f2 pop rbp                                                                                                                                                                                                                               |     
    0x004094f3 ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
