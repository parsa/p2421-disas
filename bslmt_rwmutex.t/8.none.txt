    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_rwmutex.t/none @ 0x409cc0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionWriter_BloombergLP::bslmt.ReaderWriterLock____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__ContentionWriter_BloombergLP::bslmt::ReaderWriterLock__const__BloombergLP ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ContentionWriter_BloombergLP::bslmt_ReaderWriterLock_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_ContentionWriter_BloombergLP::bslmt::ReaderWriterLock_const_BloombergLP (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ContentionWriter<BloombergLP::bslmt::ReaderWriterLock> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, ContentionWriter<BloombergLP::bslmt::ReaderWriterLock> const&, BloombergLP::bslma::Allocator*) */
    0x00409cc0 push rbp                                                                                                                                                                                                                                                              |     
    0x00409cc1 push r15                                                                                                                                                                                                                                                              |     
    0x00409cc3 push r14                                                                                                                                                                                                                                                              |     
    0x00409cc5 push r13                                                                                                                                                                                                                                                              |     
    0x00409cc7 push r12                                                                                                                                                                                                                                                              |     
    0x00409cc9 push rbx                                                                                                                                                                                                                                                              |     
    0x00409cca push rax                                                                                                                                                                                                                                                              |     
    0x00409ccb mov r14, rcx                                                                                                                                                                                                                                                          |     r14 = rcx;
    0x00409cce mov r12, rdx                                                                                                                                                                                                                                                          |     r12 = rdx;
    0x00409cd1 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x00409cd4 mov qword [rsp], rdi                                                                                                                                                                                                                                                  |     *(rsp) = rdi;
    0x00409cd8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x00409cdd je 0x409ce5                                                                                                                                                                                                                                                           |         
    0x00409cdf mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                           |         r13 = *((r15 + 0x18));
    0x00409ce3 jmp 0x409ce9                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x00409ce5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                                 |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                     |     }
    0x00409ce9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                           |     rbp = *((r15 + 0x30));
    0x00409ced test r14, r14                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (r14 == 0) {
    0x00409cf0 jne 0x409d06                                                                                                                                                                                                                                                          |         
    0x00409cf2 mov r14, qword [rip + 0x240c77]                                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00409cf9 test r14, r14                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x00409cfc jne 0x409d06                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00409cfe call 0x432700                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00409d03 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x00409d06 mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x00409d09 mov esi, 0x58                                                                                                                                                                                                                                                         |     esi = 0x58;
    0x00409d0e mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x00409d11 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00409d14 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x00409d17 mov qword [rax], 0x409e30                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_ContentionWriter_BloombergLP::bslmt::ReaderWriterLock___.invokerFunction_void_;
    0x00409d1e movups xmm0, xmmword [r12]                                                                                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [r12]");
    0x00409d23 movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x00409d29 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00409d2d movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x00409d31 lea rdi, [rax + 0x28]                                                                                                                                                                                                                                                 |     
    0x00409d35 mov qword [rax + 0x28], 0                                                                                                                                                                                                                                             |     *((rax + 0x28)) = 0;
    0x00409d3d mov qword [rax + 0x50], r14                                                                                                                                                                                                                                           |     *((rax + 0x50)) = r14;
    0x00409d41 movaps xmm0, xmmword [rip + 0x29078]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00409d48 movups xmmword [rax + 0x40], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x40], xmm0");
    0x00409d4c mov ecx, 0x4332d5                                                                                                                                                                                                                                                     |     
    0x00409d51 mov rsi, r13                                                                                                                                                                                                                                                          |     
    0x00409d54 mov rdx, rbp                                                                                                                                                                                                                                                          |     
    0x00409d57 call 0x40f410                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x28, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00409d5c mov edx, 0x40c3b0                                                                                                                                                                                                                                                     |     
    0x00409d61 mov rdi, qword [rsp]                                                                                                                                                                                                                                                  |     
    0x00409d65 mov rsi, r15                                                                                                                                                                                                                                                          |     
    0x00409d68 mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x00409d6b call 0x40d380                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00409d70 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x00409d72 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x00409d74 je 0x409d9f                                                                                                                                                                                                                                                           |         
    0x00409d76 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x48)) != 0x17) {
    0x00409d7b je 0x409d8b                                                                                                                                                                                                                                                           |             
    0x00409d7d mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x28));
    0x00409d81 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x50));
    0x00409d85 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00409d88 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00409d8b mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x00409d93 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x00409d96 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x00409d99 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x00409d9c call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x00409d9f mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x00409da1 add rsp, 8                                                                                                                                                                                                                                                            |     
    0x00409da5 pop rbx                                                                                                                                                                                                                                                               |     
    0x00409da6 pop r12                                                                                                                                                                                                                                                               |     
    0x00409da8 pop r13                                                                                                                                                                                                                                                               |     
    0x00409daa pop r14                                                                                                                                                                                                                                                               |     
    0x00409dac pop r15                                                                                                                                                                                                                                                               |     
    0x00409dae pop rbp                                                                                                                                                                                                                                                               |     
    0x00409daf ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
