0000000000409010 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ContentionReader<Bloom   |	0000000000409080 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ContentionReader<Bloom
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 01	pushq	%rax									000000000000000a: 01	pushq	%rax
000000000000000b: 03	movq	%rcx, %r14								000000000000000b: 03	movq	%rcx, %r14
000000000000000e: 03	movq	%rdx, %r12								000000000000000e: 03	movq	%rdx, %r12
0000000000000011: 03	movq	%rsi, %r15								0000000000000011: 03	movq	%rsi, %r15
0000000000000014: 04	movq	%rdi, (%rsp)								0000000000000014: 04	movq	%rdi, (%rsp)
0000000000000018: 04	movq	48(%rsi), %r13							   |	0000000000000018: 05	cmpq	$23, 56(%rsi)
000000000000001c: 05	cmpq	$23, 56(%rsi)							   |	000000000000001d: 02	je	0x4090a5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000021: 02	je	0x409039 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000001f: 04	movq	24(%r15), %r13
0000000000000023: 04	movq	24(%r15), %rbp							   |	0000000000000023: 02	jmp	0x4090a9 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000027: 02	jmp	0x40903d <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000025: 04	leaq	24(%r15), %r13
0000000000000029: 04	leaq	24(%r15), %rbp							   |	0000000000000029: 04	movq	48(%r15), %rbp
000000000000002d: 03	movq	(%r14), %rax							   |	000000000000002d: 03	testq	%r14, %r14
0000000000000030: 05	movl	$88, %esi							   |	0000000000000030: 02	jne	0x4090c6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000035: 03	movq	%r14, %rdi							   |	0000000000000032: 07	movq	2365623(%rip), %r14  # 64a970 <BloombergLP::bslma::Default::s_de
0000000000000038: 03	callq	*16(%rax)							   |	0000000000000039: 03	testq	%r14, %r14
000000000000003b: 03	movq	%rax, %rbx							   |	000000000000003c: 02	jne	0x4090c6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000003e: 07	movq	$4231520, (%rax)						   |	000000000000003e: 05	callq	0x432700 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000045: 05	movups	(%r12), %xmm0							   |	0000000000000043: 03	movq	%rax, %r14
000000000000004a: 06	movups	16(%r12), %xmm1							   |	0000000000000046: 03	movq	(%r14), %rax
0000000000000050: 04	movups	%xmm0, 8(%rax)							   |	0000000000000049: 05	movl	$88, %esi
0000000000000054: 04	movups	%xmm1, 24(%rax)							   |	000000000000004e: 03	movq	%r14, %rdi
0000000000000058: 04	leaq	40(%rax), %rdi							   |	0000000000000051: 03	callq	*16(%rax)
000000000000005c: 08	movq	$0, 40(%rax)							   |	0000000000000054: 03	movq	%rax, %rbx
0000000000000064: 04	movq	%r14, 80(%rax)							   |	0000000000000057: 07	movq	$4231664, (%rax)
0000000000000068: 07	movaps	170801(%rip), %xmm0  # 432bb0 <__dso_handle+0x18>		   |	000000000000005e: 05	movups	(%r12), %xmm0
000000000000006f: 04	movups	%xmm0, 64(%rax)							   |	0000000000000063: 06	movups	16(%r12), %xmm1
0000000000000073: 05	movl	$4403401, %ecx							   |	0000000000000069: 04	movups	%xmm0, 8(%rax)
0000000000000078: 03	movq	%rbp, %rsi							   |	000000000000006d: 04	movups	%xmm1, 24(%rax)
000000000000007b: 03	movq	%r13, %rdx							   |	0000000000000071: 04	leaq	40(%rax), %rdi
000000000000007e: 05	callq	0x40f220 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000075: 08	movq	$0, 40(%rax)
0000000000000083: 05	movl	$4243936, %edx							   |	000000000000007d: 04	movq	%r14, 80(%rax)
0000000000000088: 04	movq	(%rsp), %rdi							   |	0000000000000081: 07	movaps	171192(%rip), %xmm0  # 432dc0 <__dso_handle+0x18>
000000000000008c: 03	movq	%r15, %rsi							   |	0000000000000088: 04	movups	%xmm0, 64(%rax)
000000000000008f: 03	movq	%rbx, %rcx							   |	000000000000008c: 05	movl	$4403925, %ecx
0000000000000092: 05	callq	0x40d1b0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	0000000000000091: 03	movq	%r13, %rsi
0000000000000097: 02	movl	%eax, %ebp							   |	0000000000000094: 03	movq	%rbp, %rdx
0000000000000099: 02	testl	%eax, %eax							   |	0000000000000097: 05	callq	0x40f410 <bsl::basic_string<char, std::__1::char_traits<char>, b
000000000000009b: 02	je	0x4090d6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000009c: 05	movl	$4244400, %edx
000000000000009d: 05	cmpq	$23, 72(%rbx)							   |	00000000000000a1: 04	movq	(%rsp), %rdi
00000000000000a2: 02	je	0x4090c2 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000a5: 03	movq	%r15, %rsi
00000000000000a4: 04	movq	40(%rbx), %rsi							   |	00000000000000a8: 03	movq	%rbx, %rcx
00000000000000a8: 04	movq	80(%rbx), %rdi							   |	00000000000000ab: 05	callq	0x40d380 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000ac: 03	movq	(%rdi), %rax							   |	00000000000000b0: 02	movl	%eax, %ebp
00000000000000af: 03	callq	*24(%rax)							   |	00000000000000b2: 02	testl	%eax, %eax
00000000000000b2: 08	movq	$-1, 64(%rbx)							   |	00000000000000b4: 02	je	0x40915f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000ba: 03	movq	(%r14), %rax							   |	00000000000000b6: 05	cmpq	$23, 72(%rbx)
00000000000000bd: 03	movq	%r14, %rdi							   |	00000000000000bb: 02	je	0x40914b <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000c0: 03	movq	%rbx, %rsi							   |	00000000000000bd: 04	movq	40(%rbx), %rsi
00000000000000c3: 03	callq	*24(%rax)							   |	00000000000000c1: 04	movq	80(%rbx), %rdi
00000000000000c6: 02	movl	%ebp, %eax							   |	00000000000000c5: 03	movq	(%rdi), %rax
00000000000000c8: 04	addq	$8, %rsp							   |	00000000000000c8: 03	callq	*24(%rax)
00000000000000cc: 01	popq	%rbx								   |	00000000000000cb: 08	movq	$-1, 64(%rbx)
00000000000000cd: 02	popq	%r12								   |	00000000000000d3: 03	movq	(%r14), %rax
00000000000000cf: 02	popq	%r13								   |	00000000000000d6: 03	movq	%r14, %rdi
00000000000000d1: 02	popq	%r14								   |	00000000000000d9: 03	movq	%rbx, %rsi
00000000000000d3: 02	popq	%r15								   |	00000000000000dc: 03	callq	*24(%rax)
00000000000000d5: 01	popq	%rbp								   |	00000000000000df: 02	movl	%ebp, %eax
00000000000000d6: 01	retq									   |	00000000000000e1: 04	addq	$8, %rsp
00000000000000d7: 03	movq	%rax, %rdi							   |	00000000000000e5: 01	popq	%rbx
00000000000000da: 05	callq	0x408140 <__clang_call_terminate>				   |	00000000000000e6: 02	popq	%r12
00000000000000df: 03	movq	%rax, %rdi							   |	00000000000000e8: 02	popq	%r13
00000000000000e2: 05	callq	0x408140 <__clang_call_terminate>				   |	00000000000000ea: 02	popq	%r14
00000000000000e7: 03	movq	%rax, %r15							   |	00000000000000ec: 02	popq	%r15
00000000000000ea: 05	cmpq	$23, 72(%rbx)							   |	00000000000000ee: 01	popq	%rbp
00000000000000ef: 02	je	0x40910f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000ef: 01	retq	
00000000000000f1: 04	movq	40(%rbx), %rsi							   |	00000000000000f0: 03	movq	%rax, %rdi
00000000000000f5: 04	movq	80(%rbx), %rdi							   |	00000000000000f3: 05	callq	0x408140 <__clang_call_terminate>
00000000000000f9: 03	movq	(%rdi), %rax							   |	00000000000000f8: 03	movq	%rax, %rdi
00000000000000fc: 03	callq	*24(%rax)							   |	00000000000000fb: 05	callq	0x408140 <__clang_call_terminate>
00000000000000ff: 08	movq	$-1, 64(%rbx)							   |	0000000000000100: 03	movq	%rax, %rbp
0000000000000107: 03	movq	(%r14), %rax							   |	0000000000000103: 05	cmpq	$23, 72(%rbx)
000000000000010a: 03	movq	%r14, %rdi							   |	0000000000000108: 02	je	0x409198 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000010d: 03	movq	%rbx, %rsi							   |	000000000000010a: 04	movq	40(%rbx), %rsi
0000000000000110: 03	callq	*24(%rax)							   |	000000000000010e: 04	movq	80(%rbx), %rdi
0000000000000113: 02	jmp	0x40914c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000112: 03	movq	(%rdi), %rax
0000000000000115: 03	movq	%rax, %rdi							   |	0000000000000115: 03	callq	*24(%rax)
0000000000000118: 05	callq	0x408140 <__clang_call_terminate>				   |	0000000000000118: 08	movq	$-1, 64(%rbx)
000000000000011d: 03	movq	%rax, %rdi							   |	0000000000000120: 03	movq	(%r14), %rax
0000000000000120: 05	callq	0x408140 <__clang_call_terminate>				   |	0000000000000123: 03	movq	%r14, %rdi
0000000000000125: 03	movq	%rax, %r15							   |	0000000000000126: 03	movq	%rbx, %rsi
0000000000000128: 08	movq	$0, 64(%rbx)							   |	0000000000000129: 03	callq	*24(%rax)
0000000000000130: 03	movq	(%r14), %rax							   |	000000000000012c: 02	jmp	0x4091d5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000133: 03	movq	%r14, %rdi							   |	000000000000012e: 03	movq	%rax, %rdi
0000000000000136: 03	movq	%rbx, %rsi							   |	0000000000000131: 05	callq	0x408140 <__clang_call_terminate>
0000000000000139: 03	callq	*24(%rax)							   |	0000000000000136: 03	movq	%rax, %rdi
000000000000013c: 03	movq	%r15, %rdi							   |	0000000000000139: 05	callq	0x408140 <__clang_call_terminate>
000000000000013f: 05	callq	0x403ce0 <_Unwind_Resume@plt>					   |	000000000000013e: 03	movq	%rax, %rbp
0000000000000144: 03	movq	%rax, %rdi							   |	0000000000000141: 08	movq	$0, 64(%rbx)
0000000000000147: 05	callq	0x408140 <__clang_call_terminate>				   |	0000000000000149: 03	movq	(%r14), %rax
000000000000014c: 04	nopl	(%rax)								   |	000000000000014c: 03	movq	%r14, %rdi
												   >	000000000000014f: 03	movq	%rbx, %rsi
												   >	0000000000000152: 03	callq	*24(%rax)
												   >	0000000000000155: 03	movq	%rbp, %rdi
												   >	0000000000000158: 05	callq	0x403ce0 <_Unwind_Resume@plt>
												   >	000000000000015d: 03	movq	%rax, %rdi
												   >	0000000000000160: 05	callq	0x408140 <__clang_call_terminate>
												   >	0000000000000165: 10	nopw	%cs:(%rax,%rax)
												   >	000000000000016f: 01	nop	
