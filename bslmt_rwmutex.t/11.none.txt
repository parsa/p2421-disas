    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_rwmutex.t/none @ 0x40b070 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ReadWaitThread_BloombergLP::bslmt.RWMutex____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__ReadWaitThread_BloombergLP::bslmt::RWMutex__const__BloombergLP::bslma::Allocator_ ()          | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_ReadWaitThread_BloombergLP::bslmt_RWMutex_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_ReadWaitThread_BloombergLP::bslmt::RWMutex_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<ReadWaitThread<BloombergLP::bslmt::RWMutex> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, ReadWaitThread<BloombergLP::bslmt::RWMutex> const&, BloombergLP::bslma::Allocator*) */
    0x0040b070 push rbp                                                                                                                                                                                                                                                          |     
    0x0040b071 push r15                                                                                                                                                                                                                                                          |     
    0x0040b073 push r14                                                                                                                                                                                                                                                          |     
    0x0040b075 push r13                                                                                                                                                                                                                                                          |     
    0x0040b077 push r12                                                                                                                                                                                                                                                          |     
    0x0040b079 push rbx                                                                                                                                                                                                                                                          |     
    0x0040b07a push rax                                                                                                                                                                                                                                                          |     
    0x0040b07b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0040b07e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0040b081 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0040b084 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0040b088 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0040b08d je 0x40b095                                                                                                                                                                                                                                                       |         
    0x0040b08f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x0040b093 jmp 0x40b099                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0040b095 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0040b099 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0040b09d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0040b0a0 jne 0x40b0b6                                                                                                                                                                                                                                                      |         
    0x0040b0a2 mov r14, qword [rip + 0x23f8c7]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040b0a9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0040b0ac jne 0x40b0b6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0040b0ae call 0x432700                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040b0b3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x0040b0b6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0040b0b9 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x0040b0be mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0040b0c1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0040b0c4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0040b0c7 mov qword [rax], 0x40b1e0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_ReadWaitThread_BloombergLP::bslmt::RWMutex___.invokerFunction_void_;
    0x0040b0ce movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x0040b0d3 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0040b0d7 mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x0040b0dc mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x0040b0e0 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x0040b0e4 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x0040b0ec mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x0040b0f0 movaps xmm0, xmmword [rip + 0x27cc9]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0040b0f7 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x0040b0fb mov ecx, 0x4332d5                                                                                                                                                                                                                                                 |     
    0x0040b100 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0040b103 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0040b106 call 0x40f410                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0040b10b mov edx, 0x40c3b0                                                                                                                                                                                                                                                 |     
    0x0040b110 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0040b114 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0040b117 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0040b11a call 0x40d380                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040b11f mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0040b121 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0040b123 je 0x40b14e                                                                                                                                                                                                                                                       |         
    0x0040b125 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x0040b12a je 0x40b13a                                                                                                                                                                                                                                                       |             
    0x0040b12c mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x0040b130 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x0040b134 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0040b137 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0040b13a mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x0040b142 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0040b145 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0040b148 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0040b14b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0040b14e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0040b150 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0040b154 pop rbx                                                                                                                                                                                                                                                           |     
    0x0040b155 pop r12                                                                                                                                                                                                                                                           |     
    0x0040b157 pop r13                                                                                                                                                                                                                                                           |     
    0x0040b159 pop r14                                                                                                                                                                                                                                                           |     
    0x0040b15b pop r15                                                                                                                                                                                                                                                           |     
    0x0040b15d pop rbp                                                                                                                                                                                                                                                           |     
    0x0040b15e ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
