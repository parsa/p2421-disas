    ; assembly                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                         | /* balber_berdecoder.t/assume @ 0x45ca70 */
                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice.makeMyChoice2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()        | uint64_t method_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_makeMyChoice2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                         |     /* BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::makeMyChoice2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x0045ca70 push r15                                                                                                                                                                  |     
    0x0045ca72 push r14                                                                                                                                                                  |     
    0x0045ca74 push rbx                                                                                                                                                                  |     
    0x0045ca75 mov r14, rsi                                                                                                                                                              |     r14 = rsi;
    0x0045ca78 mov rbx, rdi                                                                                                                                                              |     rbx = rdi;
    0x0045ca7b mov eax, dword [rdi + 0x30]                                                                                                                                               |     eax = *((rdi + 0x30));
    0x0045ca7e test eax, eax                                                                                                                                                             |     
                                                                                                                                                                                         |     if (eax != 0) {
    0x0045ca80 je 0x45cabf                                                                                                                                                               |         
    0x0045ca82 cmp eax, 1                                                                                                                                                                |         
                                                                                                                                                                                         |         if (eax == 1) {
    0x0045ca85 jne 0x45cabf                                                                                                                                                              |             
    0x0045ca87 cmp rbx, r14                                                                                                                                                              |             
                                                                                                                                                                                         |             if (rbx == r14) {
    0x0045ca8a je 0x45cb66                                                                                                                                                               |                 goto label_0;
                                                                                                                                                                                         |             }
    0x0045ca90 mov rdx, qword [r14 + 0x18]                                                                                                                                               |             rdx = *((r14 + 0x18));
    0x0045ca94 cmp qword [r14 + 0x20], 0x17                                                                                                                                              |             
                                                                                                                                                                                         |             if (*((r14 + 0x20)) != 0x17) {
    0x0045ca99 je 0x45ca9e                                                                                                                                                               |                 
    0x0045ca9b mov r14, qword [r14]                                                                                                                                                      |                 r14 = *(r14);
                                                                                                                                                                                         |             }
    0x0045ca9e mov r15, qword [rbx + 0x18]                                                                                                                                               |             r15 = *((rbx + 0x18));
    0x0045caa2 mov qword [rbx + 0x18], 0                                                                                                                                                 |             *((rbx + 0x18)) = 0;
    0x0045caaa mov ecx, 0x49a630                                                                                                                                                         |             
    0x0045caaf mov rdi, rbx                                                                                                                                                              |             
    0x0045cab2 mov rsi, r14                                                                                                                                                              |             
    0x0045cab5 call 0x471870                                                                                                                                                             |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x0045caba jmp 0x45cb66                                                                                                                                                              |             
                                                                                                                                                                                         |         }
                                                                                                                                                                                         |     } else {
    0x0045cabf mov dword [rbx + 0x30], 0xffffffff                                                                                                                                        |         *((rbx + 0x30)) = 0xffffffff;
    0x0045cac6 mov rdi, qword [rbx + 0x38]                                                                                                                                               |         rdi = *((rbx + 0x38));
    0x0045caca test rdi, rdi                                                                                                                                                             |         
                                                                                                                                                                                         |         if (rdi == 0) {
    0x0045cacd jne 0x45cae3                                                                                                                                                              |             
    0x0045cacf mov rdi, qword [rip + 0x29a91a]                                                                                                                                           |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045cad6 test rdi, rdi                                                                                                                                                             |             
                                                                                                                                                                                         |             if (rdi != 0) {
    0x0045cad9 jne 0x45cae3                                                                                                                                                              |                 goto label_1;
                                                                                                                                                                                         |             }
    0x0045cadb call 0x46d200                                                                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045cae0 mov rdi, rax                                                                                                                                                              |             rdi = rax;
                                                                                                                                                                                         |         }
                                                                                                                                                                                         | label_1:
    0x0045cae3 mov rax, qword [r14 + 0x20]                                                                                                                                               |         rax = *((r14 + 0x20));
    0x0045cae7 mov qword [rbx + 0x20], rax                                                                                                                                               |         *((rbx + 0x20)) = rax;
    0x0045caeb movups xmm0, xmmword [r14]                                                                                                                                                |         __asm ("movups xmm0, xmmword [r14]");
    0x0045caef movups xmm1, xmmword [r14 + 0x10]                                                                                                                                         |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045caf4 movups xmmword [rbx + 0x10], xmm1                                                                                                                                         |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045caf8 movups xmmword [rbx], xmm0                                                                                                                                                |         __asm ("movups xmmword [rbx], xmm0");
    0x0045cafb mov qword [rbx + 0x28], rdi                                                                                                                                               |         *((rbx + 0x28)) = rdi;
    0x0045caff cmp rax, 0x17                                                                                                                                                             |         
                                                                                                                                                                                         |         if (rax != 0x17) {
    0x0045cb03 je 0x45cb5f                                                                                                                                                               |             
    0x0045cb05 mov rax, qword [r14 + 0x18]                                                                                                                                               |             rax = *((r14 + 0x18));
    0x0045cb09 cmp rax, 0x17                                                                                                                                                             |             
    0x0045cb0d mov esi, 0x17                                                                                                                                                             |             esi = 0x17;
                                                                                                                                                                                         |             if (rax > 0x17) {
    0x0045cb12 cmova rsi, rax                                                                                                                                                            |                 rsi = rax;
                                                                                                                                                                                         |             }
    0x0045cb16 mov qword [rbx], 0                                                                                                                                                        |             *(rbx) = 0;
    0x0045cb1d mov qword [rbx + 0x18], rax                                                                                                                                               |             *((rbx + 0x18)) = rax;
    0x0045cb21 mov qword [rbx + 0x20], rsi                                                                                                                                               |             *((rbx + 0x20)) = rsi;
    0x0045cb25 cmp rax, 0x18                                                                                                                                                             |             
                                                                                                                                                                                         |             if (rax >= 0x18) {
    0x0045cb29 jb 0x45cb3e                                                                                                                                                               |                 
    0x0045cb2b inc rsi                                                                                                                                                                   |                 rsi++;
    0x0045cb2e mov rax, qword [rdi]                                                                                                                                                      |                 rax = *(rdi);
    0x0045cb31 call qword [rax + 0x10]                                                                                                                                                   |                 rax = uint64_t (*rax + 0x10)() ();
    0x0045cb34 mov qword [rbx], rax                                                                                                                                                      |                 *(rbx) = rax;
    0x0045cb37 cmp qword [rbx + 0x20], 0x17                                                                                                                                              |                 
                                                                                                                                                                                         |                 if (*((rbx + 0x20)) != 0x17) {
    0x0045cb3c jne 0x45cb41                                                                                                                                                              |                     goto label_2;
                                                                                                                                                                                         |                 }
                                                                                                                                                                                         |             }
    0x0045cb3e mov rax, rbx                                                                                                                                                              |             rax = rbx;
                                                                                                                                                                                         | label_2:
    0x0045cb41 mov rdx, qword [rbx + 0x18]                                                                                                                                               |             rdx = *((rbx + 0x18));
    0x0045cb45 inc rdx                                                                                                                                                                   |             rdx++;
                                                                                                                                                                                         |             if (rdx == 0) {
    0x0045cb48 je 0x45cb5f                                                                                                                                                               |                 goto label_3;
                                                                                                                                                                                         |             }
    0x0045cb4a cmp qword [r14 + 0x20], 0x17                                                                                                                                              |             
                                                                                                                                                                                         |             if (*((r14 + 0x20)) != 0x17) {
    0x0045cb4f je 0x45cb54                                                                                                                                                               |                 
    0x0045cb51 mov r14, qword [r14]                                                                                                                                                      |                 r14 = *(r14);
                                                                                                                                                                                         |             }
    0x0045cb54 mov rdi, rax                                                                                                                                                              |             
    0x0045cb57 mov rsi, r14                                                                                                                                                              |             
    0x0045cb5a call 0x404980                                                                                                                                                             |             memcpy (rax, r14, rdx);
                                                                                                                                                                                         |         }
                                                                                                                                                                                         | label_3:
    0x0045cb5f mov dword [rbx + 0x30], 1                                                                                                                                                 |         *((rbx + 0x30)) = 1;
                                                                                                                                                                                         |     }
                                                                                                                                                                                         | label_0:
    0x0045cb66 mov rax, rbx                                                                                                                                                              |     rax = rbx;
    0x0045cb69 pop rbx                                                                                                                                                                   |     
    0x0045cb6a pop r14                                                                                                                                                                   |     
    0x0045cb6c pop r15                                                                                                                                                                   |     
    0x0045cb6e ret                                                                                                                                                                       |     return rax;
                                                                                                                                                                                         | }
