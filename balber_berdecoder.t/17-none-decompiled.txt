    ; assembly                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                         | /* balber_berdecoder.t/none @ 0x405230 */
                                                                                                                                         | #include <stdint.h>
                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoiceWithDefaultValues.makeSelection2_BloombergLP::s_baltst::MyEnumeration::Value_ ()       | int64_t method_BloombergLP::s_baltst::MyChoiceWithDefaultValues_makeSelection2_BloombergLP::s_baltst::MyEnumeration::Value_ (int64_t arg2, int64_t arg1) {
                                                                                                                                         |     rsi = arg2;
                                                                                                                                         |     rdi = arg1;
                                                                                                                                         |     /* BloombergLP::s_baltst::MyChoiceWithDefaultValues::makeSelection2(BloombergLP::s_baltst::MyEnumeration::Value) */
    0x00405230 push rbp                                                                                                                  |     
    0x00405231 push rbx                                                                                                                  |     
    0x00405232 push rax                                                                                                                  |     
    0x00405233 mov ebp, esi                                                                                                              |     
    0x00405235 mov rbx, rdi                                                                                                              |     rbx = rdi;
    0x00405238 mov eax, dword [rdi + 0x30]                                                                                               |     eax = *((rdi + 0x30));
    0x0040523b cmp eax, 1                                                                                                                |     
                                                                                                                                         |     if (eax != 1) {
    0x0040523e je 0x405249                                                                                                               |         
    0x00405240 cmp eax, 2                                                                                                                |         
                                                                                                                                         |         if (eax == 2) {
    0x00405243 jne 0x405265                                                                                                              |             
    0x00405245 mov dword [rbx], ebp                                                                                                      |             *(rbx) = ebp;
    0x00405247 jmp 0x40526e                                                                                                              |             
                                                                                                                                         |         } else {
    0x00405249 cmp qword [rbx + 0x20], 0x17                                                                                              |             
                                                                                                                                         |             if (*((rbx + 0x20)) != 0x17) {
    0x0040524e je 0x40525d                                                                                                               |                 
    0x00405250 mov rsi, qword [rbx]                                                                                                      |                 rsi = *(rbx);
    0x00405253 mov rdi, qword [rbx + 0x28]                                                                                               |                 rdi = *((rbx + 0x28));
    0x00405257 mov rax, qword [rdi]                                                                                                      |                 rax = *(rdi);
    0x0040525a call qword [rax + 0x18]                                                                                                   |                 uint64_t (*rax + 0x18)() ();
                                                                                                                                         |             }
    0x0040525d mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                         |         }
    0x00405265 mov dword [rbx], ebp                                                                                                      |         *(rbx) = ebp;
    0x00405267 mov dword [rbx + 0x30], 2                                                                                                 |         *((rbx + 0x30)) = 2;
                                                                                                                                         |     }
    0x0040526e mov rax, rbx                                                                                                              |     rax = rbx;
    0x00405271 add rsp, 8                                                                                                                |     
    0x00405275 pop rbx                                                                                                                   |     
    0x00405276 pop rbp                                                                                                                   |     
    0x00405277 ret                                                                                                                       |     return rax;
                                                                                                                                         | }
