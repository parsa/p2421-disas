    ; assembly                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                         | /* balber_berdecoder.t/none @ 0x454dc0 */
                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::balber::BerUtil_Iso8601ImpUtil.putDatetimeValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Datetime_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_Iso8601ImpUtil_putDatetimeValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Datetime_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                         |     int64_t var_8h;
                                                                                                                                                                                                                                         |     int64_t var_10h;
                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                         |     /* BloombergLP::balber::BerUtil_Iso8601ImpUtil::putDatetimeValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Datetime const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00454dc0 push r15                                                                                                                                                                                                                  |     
    0x00454dc2 push r14                                                                                                                                                                                                                  |     
    0x00454dc4 push rbx                                                                                                                                                                                                                  |     
    0x00454dc5 sub rsp, 0x40                                                                                                                                                                                                             |     
    0x00454dc9 mov r15, rsi                                                                                                                                                                                                              |     r15 = rsi;
    0x00454dcc mov r14, rdi                                                                                                                                                                                                              |     r14 = rdi;
    0x00454dcf mov dword [rsp + 8], 3                                                                                                                                                                                                    |     *((rsp + 8)) = 3;
    0x00454dd7 test rdx, rdx                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                         |     if (rdx != 0) {
    0x00454dda je 0x454de0                                                                                                                                                                                                               |         
    0x00454ddc mov esi, dword [rdx]                                                                                                                                                                                                      |         esi = *(rdx);
    0x00454dde jmp 0x454de5                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                         |     } else {
    0x00454de0 mov esi, 6                                                                                                                                                                                                                |         
                                                                                                                                                                                                                                         |     }
    0x00454de5 lea rbx, [rsp + 8]                                                                                                                                                                                                        |     rbx = rsp + 8;
    0x00454dea mov rdi, rbx                                                                                                                                                                                                              |     
    0x00454ded call 0x469bc0                                                                                                                                                                                                             |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x00454df2 lea rdi, [rsp + 0x10]                                                                                                                                                                                                     |     
    0x00454df7 mov esi, 0x26                                                                                                                                                                                                             |     
    0x00454dfc mov rdx, r15                                                                                                                                                                                                              |     
    0x00454dff mov rcx, rbx                                                                                                                                                                                                              |     
    0x00454e02 call 0x466e20                                                                                                                                                                                                             |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Datetimeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15, rbx);
    0x00454e07 mov ebx, eax                                                                                                                                                                                                              |     ebx = eax;
    0x00454e09 mov rdi, r14                                                                                                                                                                                                              |     
    0x00454e0c mov esi, eax                                                                                                                                                                                                              |     
    0x00454e0e call 0x453da0                                                                                                                                                                                                             |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00454e13 mov ecx, eax                                                                                                                                                                                                              |     ecx = eax;
    0x00454e15 mov eax, 0xffffffff                                                                                                                                                                                                       |     eax = 0xffffffff;
    0x00454e1a test ecx, ecx                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                         |     if (ecx == 0) {
    0x00454e1c jne 0x454e3f                                                                                                                                                                                                              |         
    0x00454e1e movsxd rbx, ebx                                                                                                                                                                                                           |         rbx = (int64_t) ebx;
    0x00454e21 mov rax, qword [r14]                                                                                                                                                                                                      |         rax = *(r14);
    0x00454e24 lea rsi, [rsp + 0x10]                                                                                                                                                                                                     |         rsi = rsp + 0x10;
    0x00454e29 mov rdi, r14                                                                                                                                                                                                              |         rdi = r14;
    0x00454e2c mov rdx, rbx                                                                                                                                                                                                              |         rdx = rbx;
    0x00454e2f call qword [rax + 0x60]                                                                                                                                                                                                   |         rax = uint64_t (*rax + 0x60)() ();
    0x00454e32 mov rcx, rax                                                                                                                                                                                                              |         rcx = rax;
    0x00454e35 xor eax, eax                                                                                                                                                                                                              |         eax = 0;
    0x00454e37 cmp rcx, rbx                                                                                                                                                                                                              |         
    0x00454e3a setne al                                                                                                                                                                                                                  |         al = (rcx != rbx) ? 1 : 0;
    0x00454e3d neg eax                                                                                                                                                                                                                   |         eax = -eax;
                                                                                                                                                                                                                                         |     }
    0x00454e3f add rsp, 0x40                                                                                                                                                                                                             |     
    0x00454e43 pop rbx                                                                                                                                                                                                                   |     
    0x00454e44 pop r14                                                                                                                                                                                                                   |     
    0x00454e46 pop r15                                                                                                                                                                                                                   |     
    0x00454e48 ret                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                         | }
