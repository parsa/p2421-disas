    ; assembly                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                         | /* balber_berdecoder.t/assume @ 0x45b140 */
                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoice.makeSelection2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()        | uint64_t method_BloombergLP::s_baltst::MyChoice_makeSelection2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                         |     /* BloombergLP::s_baltst::MyChoice::makeSelection2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x0045b140 push r14                                                                                                                                  |     
    0x0045b142 push rbx                                                                                                                                  |     
    0x0045b143 push rax                                                                                                                                  |     
    0x0045b144 mov r14, rsi                                                                                                                              |     r14 = rsi;
    0x0045b147 mov rbx, rdi                                                                                                                              |     rbx = rdi;
    0x0045b14a mov eax, dword [rdi + 0x30]                                                                                                               |     eax = *((rdi + 0x30));
    0x0045b14d test eax, eax                                                                                                                             |     
                                                                                                                                                         |     if (eax != 0) {
    0x0045b14f je 0x45b166                                                                                                                               |         
    0x0045b151 cmp eax, 1                                                                                                                                |         
                                                                                                                                                         |         if (eax == 1) {
    0x0045b154 jne 0x45b166                                                                                                                              |             
    0x0045b156 mov rdi, rbx                                                                                                                              |             
    0x0045b159 mov rsi, r14                                                                                                                              |             
    0x0045b15c call 0x472e30                                                                                                                             |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x0045b161 jmp 0x45b228                                                                                                                              |             
                                                                                                                                                         |         }
                                                                                                                                                         |     } else {
    0x0045b166 mov dword [rbx + 0x30], 0xffffffff                                                                                                        |         *((rbx + 0x30)) = 0xffffffff;
    0x0045b16d mov rdi, qword [rbx + 0x38]                                                                                                               |         rdi = *((rbx + 0x38));
    0x0045b171 test rdi, rdi                                                                                                                             |         
                                                                                                                                                         |         if (rdi == 0) {
    0x0045b174 jne 0x45b18a                                                                                                                              |             
    0x0045b176 mov rdi, qword [rip + 0x29c273]                                                                                                           |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045b17d test rdi, rdi                                                                                                                             |             
                                                                                                                                                         |             if (rdi != 0) {
    0x0045b180 jne 0x45b18a                                                                                                                              |                 goto label_0;
                                                                                                                                                         |             }
    0x0045b182 call 0x46d200                                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045b187 mov rdi, rax                                                                                                                              |             rdi = rax;
                                                                                                                                                         |         }
                                                                                                                                                         | label_0:
    0x0045b18a mov rax, qword [r14 + 0x20]                                                                                                               |         rax = *((r14 + 0x20));
    0x0045b18e mov qword [rbx + 0x20], rax                                                                                                               |         *((rbx + 0x20)) = rax;
    0x0045b192 movups xmm0, xmmword [r14]                                                                                                                |         __asm ("movups xmm0, xmmword [r14]");
    0x0045b196 movups xmm1, xmmword [r14 + 0x10]                                                                                                         |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045b19b movups xmmword [rbx + 0x10], xmm1                                                                                                         |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045b19f movups xmmword [rbx], xmm0                                                                                                                |         __asm ("movups xmmword [rbx], xmm0");
    0x0045b1a2 mov qword [rbx + 0x28], rdi                                                                                                               |         *((rbx + 0x28)) = rdi;
    0x0045b1a6 cmp rax, 0x17                                                                                                                             |         
                                                                                                                                                         |         if (rax != 0x17) {
    0x0045b1aa je 0x45b221                                                                                                                               |             
    0x0045b1ac cmp rdi, qword [r14 + 0x28]                                                                                                               |             
                                                                                                                                                         |             if (rdi != *((r14 + 0x28))) {
    0x0045b1b0 je 0x45b20e                                                                                                                               |                 
    0x0045b1b2 mov rax, qword [r14 + 0x18]                                                                                                               |                 rax = *((r14 + 0x18));
    0x0045b1b6 cmp rax, 0x17                                                                                                                             |                 
    0x0045b1ba mov esi, 0x17                                                                                                                             |                 esi = 0x17;
                                                                                                                                                         |                 if (rax > 0x17) {
    0x0045b1bf cmova rsi, rax                                                                                                                            |                     rsi = rax;
                                                                                                                                                         |                 }
    0x0045b1c3 mov qword [rbx], 0                                                                                                                        |                 *(rbx) = 0;
    0x0045b1ca mov qword [rbx + 0x18], rax                                                                                                               |                 *((rbx + 0x18)) = rax;
    0x0045b1ce mov qword [rbx + 0x20], rsi                                                                                                               |                 *((rbx + 0x20)) = rsi;
    0x0045b1d2 cmp rax, 0x18                                                                                                                             |                 
                                                                                                                                                         |                 if (rax >= 0x18) {
    0x0045b1d6 jb 0x45b1eb                                                                                                                               |                     
    0x0045b1d8 inc rsi                                                                                                                                   |                     rsi++;
    0x0045b1db mov rax, qword [rdi]                                                                                                                      |                     rax = *(rdi);
    0x0045b1de call qword [rax + 0x10]                                                                                                                   |                     rax = uint64_t (*rax + 0x10)() ();
    0x0045b1e1 mov qword [rbx], rax                                                                                                                      |                     *(rbx) = rax;
    0x0045b1e4 cmp qword [rbx + 0x20], 0x17                                                                                                              |                     
                                                                                                                                                         |                     if (*((rbx + 0x20)) != 0x17) {
    0x0045b1e9 jne 0x45b1ee                                                                                                                              |                         goto label_1;
                                                                                                                                                         |                     }
                                                                                                                                                         |                 }
    0x0045b1eb mov rax, rbx                                                                                                                              |                 rax = rbx;
                                                                                                                                                         | label_1:
    0x0045b1ee mov rdx, qword [rbx + 0x18]                                                                                                               |                 rdx = *((rbx + 0x18));
    0x0045b1f2 inc rdx                                                                                                                                   |                 rdx++;
                                                                                                                                                         |                 if (rdx == 0) {
    0x0045b1f5 je 0x45b221                                                                                                                               |                     goto label_2;
                                                                                                                                                         |                 }
    0x0045b1f7 cmp qword [r14 + 0x20], 0x17                                                                                                              |                 
                                                                                                                                                         |                 if (*((r14 + 0x20)) != 0x17) {
    0x0045b1fc je 0x45b201                                                                                                                               |                     
    0x0045b1fe mov r14, qword [r14]                                                                                                                      |                     r14 = *(r14);
                                                                                                                                                         |                 }
    0x0045b201 mov rdi, rax                                                                                                                              |                 
    0x0045b204 mov rsi, r14                                                                                                                              |                 
    0x0045b207 call 0x404980                                                                                                                             |                 memcpy (rax, r14, rdx);
    0x0045b20c jmp 0x45b221                                                                                                                              |                 
                                                                                                                                                         |             } else {
    0x0045b20e mov qword [r14], 0                                                                                                                        |                 *(r14) = 0;
    0x0045b215 movaps xmm0, xmmword [rip + 0x3c504]                                                                                                      |                 xmm0 = .comment;
    0x0045b21c movups xmmword [r14 + 0x18], xmm0                                                                                                         |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                         |             }
                                                                                                                                                         |         }
                                                                                                                                                         | label_2:
    0x0045b221 mov dword [rbx + 0x30], 1                                                                                                                 |         *((rbx + 0x30)) = 1;
                                                                                                                                                         |     }
    0x0045b228 mov rax, rbx                                                                                                                              |     rax = rbx;
    0x0045b22b add rsp, 8                                                                                                                                |     
    0x0045b22f pop rbx                                                                                                                                   |     
    0x0045b230 pop r14                                                                                                                                   |     
    0x0045b232 ret                                                                                                                                       |     return rax;
                                                                                                                                                         | }
