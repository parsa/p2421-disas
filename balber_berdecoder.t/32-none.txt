    ; assembly                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x455170 */
                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DateImpUtil.putIso8601DateValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Date_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_DateImpUtil_putIso8601DateValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Date_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                     |     /* BloombergLP::balber::BerUtil_DateImpUtil::putIso8601DateValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Date const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00455170 push r15                                                                                                                                                                                                              |     
    0x00455172 push r14                                                                                                                                                                                                              |     
    0x00455174 push rbx                                                                                                                                                                                                              |     
    0x00455175 sub rsp, 0x40                                                                                                                                                                                                         |     
    0x00455179 mov r15, rsi                                                                                                                                                                                                          |     r15 = rsi;
    0x0045517c mov r14, rdi                                                                                                                                                                                                          |     r14 = rdi;
    0x0045517f mov dword [rsp + 8], 3                                                                                                                                                                                                |     *((rsp + 8)) = 3;
    0x00455187 test rdx, rdx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (rdx != 0) {
    0x0045518a je 0x455190                                                                                                                                                                                                           |         
    0x0045518c mov esi, dword [rdx]                                                                                                                                                                                                  |         esi = *(rdx);
    0x0045518e jmp 0x455195                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                     |     } else {
    0x00455190 mov esi, 6                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                     |     }
    0x00455195 lea rbx, [rsp + 8]                                                                                                                                                                                                    |     rbx = rsp + 8;
    0x0045519a mov rdi, rbx                                                                                                                                                                                                          |     
    0x0045519d call 0x469bc0                                                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x004551a2 lea rdi, [rsp + 0x10]                                                                                                                                                                                                 |     
    0x004551a7 mov esi, 0x26                                                                                                                                                                                                         |     
    0x004551ac mov rdx, r15                                                                                                                                                                                                          |     
    0x004551af mov rcx, rbx                                                                                                                                                                                                          |     rcx = rbx;
    0x004551b2 call 0x4662f0                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Dateconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15);
    0x004551b7 mov ebx, eax                                                                                                                                                                                                          |     ebx = eax;
    0x004551b9 mov rdi, r14                                                                                                                                                                                                          |     
    0x004551bc mov esi, eax                                                                                                                                                                                                          |     
    0x004551be call 0x453da0                                                                                                                                                                                                         |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x004551c3 mov ecx, eax                                                                                                                                                                                                          |     ecx = eax;
    0x004551c5 mov eax, 0xffffffff                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x004551ca test ecx, ecx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (ecx == 0) {
    0x004551cc jne 0x4551ef                                                                                                                                                                                                          |         
    0x004551ce movsxd rbx, ebx                                                                                                                                                                                                       |         rbx = (int64_t) ebx;
    0x004551d1 mov rax, qword [r14]                                                                                                                                                                                                  |         rax = *(r14);
    0x004551d4 lea rsi, [rsp + 0x10]                                                                                                                                                                                                 |         rsi = rsp + 0x10;
    0x004551d9 mov rdi, r14                                                                                                                                                                                                          |         rdi = r14;
    0x004551dc mov rdx, rbx                                                                                                                                                                                                          |         rdx = rbx;
    0x004551df call qword [rax + 0x60]                                                                                                                                                                                               |         rax = uint64_t (*rax + 0x60)() ();
    0x004551e2 mov rcx, rax                                                                                                                                                                                                          |         rcx = rax;
    0x004551e5 xor eax, eax                                                                                                                                                                                                          |         eax = 0;
    0x004551e7 cmp rcx, rbx                                                                                                                                                                                                          |         
    0x004551ea setne al                                                                                                                                                                                                              |         al = (rcx != rbx) ? 1 : 0;
    0x004551ed neg eax                                                                                                                                                                                                               |         eax = -eax;
                                                                                                                                                                                                                                     |     }
    0x004551ef add rsp, 0x40                                                                                                                                                                                                         |     
    0x004551f3 pop rbx                                                                                                                                                                                                               |     
    0x004551f4 pop r14                                                                                                                                                                                                               |     
    0x004551f6 pop r15                                                                                                                                                                                                               |     
    0x004551f8 ret                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                     | }
