    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* balber_berdecoder.t/assume @ 0x4580b0 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DatetimeImpUtil.putIso8601DatetimeTzValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::DatetimeTz_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_DatetimeImpUtil_putIso8601DatetimeTzValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::DatetimeTz_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* BloombergLP::balber::BerUtil_DatetimeImpUtil::putIso8601DatetimeTzValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::DatetimeTz const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x004580b0 push r14                                                                                                                                                                                                                              |     
    0x004580b2 push rbx                                                                                                                                                                                                                              |     
    0x004580b3 sub rsp, 0x38                                                                                                                                                                                                                         |     
    0x004580b7 mov rbx, rsi                                                                                                                                                                                                                          |     rbx = rsi;
    0x004580ba mov r14, rdi                                                                                                                                                                                                                          |     r14 = rdi;
    0x004580bd mov dword [rsp + 8], 3                                                                                                                                                                                                                |     *((rsp + 8)) = 3;
    0x004580c5 test rdx, rdx                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (rdx != 0) {
    0x004580c8 je 0x4580ce                                                                                                                                                                                                                           |         
    0x004580ca mov esi, dword [rdx]                                                                                                                                                                                                                  |         esi = *(rdx);
    0x004580cc jmp 0x4580d3                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |     } else {
    0x004580ce mov esi, 6                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                     |     }
    0x004580d3 lea rdi, [rsp + 8]                                                                                                                                                                                                                    |     
    0x004580d8 call 0x469860                                                                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x004580dd lea rdi, [rsp + 0x10]                                                                                                                                                                                                                 |     
    0x004580e2 lea rcx, [rsp + 8]                                                                                                                                                                                                                    |     
    0x004580e7 mov esi, 0x26                                                                                                                                                                                                                         |     
    0x004580ec mov rdx, rbx                                                                                                                                                                                                                          |     
    0x004580ef call 0x467980                                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::DatetimeTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, rbx, rsp + 8);
    0x004580f4 mov ebx, eax                                                                                                                                                                                                                          |     ebx = eax;
    0x004580f6 mov rdi, r14                                                                                                                                                                                                                          |     
    0x004580f9 mov esi, eax                                                                                                                                                                                                                          |     
    0x004580fb call 0x453df0                                                                                                                                                                                                                         |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00458100 mov ecx, 0xffffffff                                                                                                                                                                                                                   |     ecx = 0xffffffff;
    0x00458105 test eax, eax                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (eax == 0) {
    0x00458107 jne 0x458127                                                                                                                                                                                                                          |         
    0x00458109 movsxd rbx, ebx                                                                                                                                                                                                                       |         rbx = (int64_t) ebx;
    0x0045810c mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x0045810f lea rsi, [rsp + 0x10]                                                                                                                                                                                                                 |         rsi = rsp + 0x10;
    0x00458114 mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x00458117 mov rdx, rbx                                                                                                                                                                                                                          |         rdx = rbx;
    0x0045811a call qword [rax + 0x60]                                                                                                                                                                                                               |         rax = uint64_t (*rax + 0x60)() ();
    0x0045811d xor ecx, ecx                                                                                                                                                                                                                          |         ecx = 0;
    0x0045811f cmp rax, rbx                                                                                                                                                                                                                          |         
    0x00458122 setne cl                                                                                                                                                                                                                              |         cl = (rax != rbx) ? 1 : 0;
    0x00458125 neg ecx                                                                                                                                                                                                                               |         ecx = -ecx;
                                                                                                                                                                                                                                                     |     }
    0x00458127 mov eax, ecx                                                                                                                                                                                                                          |     eax = ecx;
    0x00458129 add rsp, 0x38                                                                                                                                                                                                                         |     
    0x0045812d pop rbx                                                                                                                                                                                                                               |     
    0x0045812e pop r14                                                                                                                                                                                                                               |     
    0x00458130 ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
