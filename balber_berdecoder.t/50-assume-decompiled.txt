    ; assembly                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                 | /* balber_berdecoder.t/assume @ 0x4666d0 */
                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::bdlt::Iso8601Util.generate_char__int__BloombergLP::bdlt::Time_const__BloombergLP::bdlt::Iso8601UtilConfiguration_const_ ()       | int64_t method_BloombergLP::bdlt::Iso8601Util_generate_char_int_BloombergLP::bdlt::Time_const_BloombergLP::bdlt::Iso8601UtilConfiguration_const_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                 |     int64_t var_9h;
                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                 |     /* BloombergLP::bdlt::Iso8601Util::generate(char*, int, BloombergLP::bdlt::Time const&, BloombergLP::bdlt::Iso8601UtilConfiguration const&) */
    0x004666d0 push rbp                                                                                                                                          |     
    0x004666d1 push r15                                                                                                                                          |     
    0x004666d3 push r14                                                                                                                                          |     
    0x004666d5 push rbx                                                                                                                                          |     
    0x004666d6 sub rsp, 0x18                                                                                                                                     |     
    0x004666da mov ebp, esi                                                                                                                                      |     
    0x004666dc mov r14, rdi                                                                                                                                      |     r14 = rdi;
    0x004666df cmp esi, 0xf                                                                                                                                      |     
                                                                                                                                                                 |     if (esi >= 0xf) {
    0x004666e2 jb 0x4666fa                                                                                                                                       |         
    0x004666e4 mov rdi, r14                                                                                                                                      |         
    0x004666e7 mov rsi, rdx                                                                                                                                      |         
    0x004666ea mov rdx, rcx                                                                                                                                      |         
    0x004666ed call 0x466740                                                                                                                                     |         eax = BloombergLP::bdlt::Iso8601Util::generateRaw(char*,BloombergLP::bdlt::Timeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (r14, rdx, rcx);
    0x004666f2 mov ebx, eax                                                                                                                                      |         ebx = eax;
    0x004666f4 cmp ebx, ebp                                                                                                                                      |         
                                                                                                                                                                 |         if (ebx >= ebp) {
    0x004666f6 jl 0x466720                                                                                                                                       |             
    0x004666f8 jmp 0x466728                                                                                                                                      |             
                                                                                                                                                                 |         } else {
    0x004666fa lea r15, [rsp + 9]                                                                                                                                |             r15 = rsp + 9;
    0x004666ff mov rdi, r15                                                                                                                                      |             
    0x00466702 mov rsi, rdx                                                                                                                                      |             
    0x00466705 mov rdx, rcx                                                                                                                                      |             
    0x00466708 call 0x466740                                                                                                                                     |             eax = BloombergLP::bdlt::Iso8601Util::generateRaw(char*,BloombergLP::bdlt::Timeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (r15, rdx, rcx);
    0x0046670d mov ebx, eax                                                                                                                                      |             ebx = eax;
    0x0046670f mov edx, ebp                                                                                                                                      |             
    0x00466711 mov rdi, r14                                                                                                                                      |             
    0x00466714 mov rsi, r15                                                                                                                                      |             
    0x00466717 call 0x404980                                                                                                                                     |             memcpy (r14, r15, ebp);
    0x0046671c cmp ebx, ebp                                                                                                                                      |             
                                                                                                                                                                 |             if (ebx >= ebp) {
    0x0046671e jge 0x466728                                                                                                                                      |                 goto label_0;
                                                                                                                                                                 |             }
                                                                                                                                                                 |         }
    0x00466720 movsxd rax, ebx                                                                                                                                   |         rax = (int64_t) ebx;
    0x00466723 mov byte [r14 + rax], 0                                                                                                                           |         *((r14 + rax)) = 0;
                                                                                                                                                                 |     }
                                                                                                                                                                 | label_0:
    0x00466728 mov eax, ebx                                                                                                                                      |     eax = ebx;
    0x0046672a add rsp, 0x18                                                                                                                                     |     
    0x0046672e pop rbx                                                                                                                                           |     
    0x0046672f pop r14                                                                                                                                           |     
    0x00466731 pop r15                                                                                                                                           |     
    0x00466733 pop rbp                                                                                                                                           |     
    0x00466734 ret                                                                                                                                               |     return rax;
                                                                                                                                                                 | }
