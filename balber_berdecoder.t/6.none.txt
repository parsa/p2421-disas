    ; assembly                                                                                               | /* r2dec pseudo code output */
                                                                                                             | /* balber_berdecoder.t/none @ 0x45cc50 */
                                                                                                             | #include <stdint.h>
                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice.makeSelection_int_ ()          | int64_t method_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_makeSelection_int_ (uint32_t arg2, int64_t arg1) {
                                                                                                             |     rsi = arg2;
                                                                                                             |     rdi = arg1;
                                                                                                             |     /* BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::makeSelection(int) */
    0x0045cc50 push r14                                                                                      |     
    0x0045cc52 push rbx                                                                                      |     
    0x0045cc53 push rax                                                                                      |     
    0x0045cc54 mov r14, rdi                                                                                  |     r14 = rdi;
    0x0045cc57 cmp esi, 0xffffffff                                                                           |     
                                                                                                             |     if (esi != 0xffffffff) {
    0x0045cc5a je 0x45ccae                                                                                   |         
    0x0045cc5c cmp esi, 1                                                                                    |         
                                                                                                             |         if (esi != 1) {
    0x0045cc5f je 0x45cc8f                                                                                   |             
    0x0045cc61 mov ebx, 0xffffffff                                                                           |             ebx = 0xffffffff;
    0x0045cc66 test esi, esi                                                                                 |             
                                                                                                             |             if (esi != 0) {
    0x0045cc68 jne 0x45cd4f                                                                                  |                 goto label_0;
                                                                                                             |             }
    0x0045cc6e mov eax, dword [r14 + 0x30]                                                                   |             eax = *((r14 + 0x30));
    0x0045cc72 cmp eax, 1                                                                                    |             
                                                                                                             |             if (eax != 1) {
    0x0045cc75 je 0x45cd22                                                                                   |                 
    0x0045cc7b test eax, eax                                                                                 |                 
                                                                                                             |                 if (eax == 0) {
    0x0045cc7d jne 0x45cd3e                                                                                  |                     
    0x0045cc83 mov dword [r14], 0                                                                            |                     *(r14) = 0;
    0x0045cc8a jmp 0x45cd4d                                                                                  |                     
                                                                                                             |                 } else {
    0x0045cc8f cmp dword [r14 + 0x30], 1                                                                     |                     
                                                                                                             |                     if (*((r14 + 0x30)) == 1) {
    0x0045cc94 jne 0x45ccdb                                                                                  |                         
    0x0045cc96 xor ebx, ebx                                                                                  |                         ebx = 0;
    0x0045cc98 mov rdi, r14                                                                                  |                         
    0x0045cc9b xor esi, esi                                                                                  |                         
    0x0045cc9d mov rdx, 0xffffffffffffffff                                                                   |                         
    0x0045cca4 call 0x473cd0                                                                                 |                         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::erase(unsigned long,unsigned long) (r14, 0, 0xffffffffffffffff);
    0x0045cca9 jmp 0x45cd4f                                                                                  |                         
                                                                                                             |                     } else {
    0x0045ccae cmp dword [r14 + 0x30], 1                                                                     |                         
                                                                                                             |                         if (*((r14 + 0x30)) == 1) {
    0x0045ccb3 jne 0x45ccd1                                                                                  |                             
    0x0045ccb5 cmp qword [r14 + 0x20], 0x17                                                                  |                             
                                                                                                             |                             if (*((r14 + 0x20)) != 0x17) {
    0x0045ccba je 0x45ccc9                                                                                   |                                 
    0x0045ccbc mov rsi, qword [r14]                                                                          |                                 rsi = *(r14);
    0x0045ccbf mov rdi, qword [r14 + 0x28]                                                                   |                                 rdi = *((r14 + 0x28));
    0x0045ccc3 mov rax, qword [rdi]                                                                          |                                 rax = *(rdi);
    0x0045ccc6 call qword [rax + 0x18]                                                                       |                                 uint64_t (*rax + 0x18)() ();
                                                                                                             |                             }
    0x0045ccc9 mov qword [r14 + 0x18], 0xffffffffffffffff                                                    |                             *((r14 + 0x18)) = 0xffffffffffffffff;
                                                                                                             |                         }
    0x0045ccd1 mov dword [r14 + 0x30], 0xffffffff                                                            |                         *((r14 + 0x30)) = 0xffffffff;
    0x0045ccd9 jmp 0x45cd4d                                                                                  |                         goto label_1;
                                                                                                             |                     }
    0x0045ccdb mov dword [r14 + 0x30], 0xffffffff                                                            |                     *((r14 + 0x30)) = 0xffffffff;
    0x0045cce3 mov rax, qword [r14 + 0x38]                                                                   |                     rax = *((r14 + 0x38));
    0x0045cce7 test rax, rax                                                                                 |                     
                                                                                                             |                     if (rax == 0) {
    0x0045ccea jne 0x45ccfd                                                                                  |                         
    0x0045ccec mov rax, qword [rip + 0x29a6fd]                                                               |                         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045ccf3 test rax, rax                                                                                 |                         
                                                                                                             |                         if (rax != 0) {
    0x0045ccf6 jne 0x45ccfd                                                                                  |                             goto label_2;
                                                                                                             |                         }
    0x0045ccf8 call 0x46d5b0                                                                                 |                         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                             |                     }
                                                                                                             | label_2:
    0x0045ccfd mov qword [r14], 0                                                                            |                     *(r14) = 0;
    0x0045cd04 movaps xmm0, xmmword [rip + 0x37fc5]                                                          |                     xmm0 = .comment;
    0x0045cd0b movups xmmword [r14 + 0x18], xmm0                                                             |                     __asm ("movups xmmword [r14 + 0x18], xmm0");
    0x0045cd10 mov qword [r14 + 0x28], rax                                                                   |                     *((r14 + 0x28)) = rax;
    0x0045cd14 mov byte [r14], 0                                                                             |                     *(r14) = 0;
    0x0045cd18 mov dword [r14 + 0x30], 1                                                                     |                     *((r14 + 0x30)) = 1;
    0x0045cd20 jmp 0x45cd4d                                                                                  |                     
                                                                                                             |                 } else {
    0x0045cd22 cmp qword [r14 + 0x20], 0x17                                                                  |                     
                                                                                                             |                 }
                                                                                                             |             }
                                                                                                             |             if (*((r14 + 0x20)) != 0x17) {
    0x0045cd27 je 0x45cd36                                                                                   |                 
    0x0045cd29 mov rsi, qword [r14]                                                                          |                 rsi = *(r14);
    0x0045cd2c mov rdi, qword [r14 + 0x28]                                                                   |                 rdi = *((r14 + 0x28));
    0x0045cd30 mov rax, qword [rdi]                                                                          |                 rax = *(rdi);
    0x0045cd33 call qword [rax + 0x18]                                                                       |                 uint64_t (*rax + 0x18)() ();
                                                                                                             |             }
    0x0045cd36 mov qword [r14 + 0x18], 0xffffffffffffffff                                                    |             *((r14 + 0x18)) = 0xffffffffffffffff;
    0x0045cd3e mov dword [r14], 0                                                                            |             *(r14) = 0;
    0x0045cd45 mov dword [r14 + 0x30], 0                                                                     |             *((r14 + 0x30)) = 0;
                                                                                                             |         }
                                                                                                             | label_1:
    0x0045cd4d xor ebx, ebx                                                                                  |         ebx = 0;
                                                                                                             |     }
                                                                                                             | label_0:
    0x0045cd4f mov eax, ebx                                                                                  |     eax = ebx;
    0x0045cd51 add rsp, 8                                                                                    |     
    0x0045cd55 pop rbx                                                                                       |     
    0x0045cd56 pop r14                                                                                       |     
    0x0045cd58 ret                                                                                           |     return rax;
                                                                                                             | }
