    ; assembly                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                 | /* balber_berdecoder.t/assume @ 0x457460 */
                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DatetimeImpUtil.putIso8601DatetimeValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Datetime_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_DatetimeImpUtil_putIso8601DatetimeValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Datetime_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                 |     /* BloombergLP::balber::BerUtil_DatetimeImpUtil::putIso8601DatetimeValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Datetime const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00457460 push r14                                                                                                                                                                                                                          |     
    0x00457462 push rbx                                                                                                                                                                                                                          |     
    0x00457463 sub rsp, 0x38                                                                                                                                                                                                                     |     
    0x00457467 mov rbx, rsi                                                                                                                                                                                                                      |     rbx = rsi;
    0x0045746a mov r14, rdi                                                                                                                                                                                                                      |     r14 = rdi;
    0x0045746d mov dword [rsp + 8], 3                                                                                                                                                                                                            |     *((rsp + 8)) = 3;
    0x00457475 test rdx, rdx                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (rdx != 0) {
    0x00457478 je 0x45747e                                                                                                                                                                                                                       |         
    0x0045747a mov esi, dword [rdx]                                                                                                                                                                                                              |         esi = *(rdx);
    0x0045747c jmp 0x457483                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                 |     } else {
    0x0045747e mov esi, 6                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                 |     }
    0x00457483 lea rdi, [rsp + 8]                                                                                                                                                                                                                |     
    0x00457488 call 0x469860                                                                                                                                                                                                                     |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x0045748d lea rdi, [rsp + 0x10]                                                                                                                                                                                                             |     
    0x00457492 lea rcx, [rsp + 8]                                                                                                                                                                                                                |     
    0x00457497 mov esi, 0x26                                                                                                                                                                                                                     |     
    0x0045749c mov rdx, rbx                                                                                                                                                                                                                      |     
    0x0045749f call 0x466ca0                                                                                                                                                                                                                     |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Datetimeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, rbx, rsp + 8);
    0x004574a4 mov ebx, eax                                                                                                                                                                                                                      |     ebx = eax;
    0x004574a6 mov rdi, r14                                                                                                                                                                                                                      |     
    0x004574a9 mov esi, eax                                                                                                                                                                                                                      |     
    0x004574ab call 0x453df0                                                                                                                                                                                                                     |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x004574b0 mov ecx, 0xffffffff                                                                                                                                                                                                               |     ecx = 0xffffffff;
    0x004574b5 test eax, eax                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x004574b7 jne 0x4574d7                                                                                                                                                                                                                      |         
    0x004574b9 movsxd rbx, ebx                                                                                                                                                                                                                   |         rbx = (int64_t) ebx;
    0x004574bc mov rax, qword [r14]                                                                                                                                                                                                              |         rax = *(r14);
    0x004574bf lea rsi, [rsp + 0x10]                                                                                                                                                                                                             |         rsi = rsp + 0x10;
    0x004574c4 mov rdi, r14                                                                                                                                                                                                                      |         rdi = r14;
    0x004574c7 mov rdx, rbx                                                                                                                                                                                                                      |         rdx = rbx;
    0x004574ca call qword [rax + 0x60]                                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x60)() ();
    0x004574cd xor ecx, ecx                                                                                                                                                                                                                      |         ecx = 0;
    0x004574cf cmp rax, rbx                                                                                                                                                                                                                      |         
    0x004574d2 setne cl                                                                                                                                                                                                                          |         cl = (rax != rbx) ? 1 : 0;
    0x004574d5 neg ecx                                                                                                                                                                                                                           |         ecx = -ecx;
                                                                                                                                                                                                                                                 |     }
    0x004574d7 mov eax, ecx                                                                                                                                                                                                                      |     eax = ecx;
    0x004574d9 add rsp, 0x38                                                                                                                                                                                                                     |     
    0x004574dd pop rbx                                                                                                                                                                                                                           |     
    0x004574de pop r14                                                                                                                                                                                                                           |     
    0x004574e0 ret                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                 | }
