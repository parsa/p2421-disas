    ; assembly                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                     | /* balber_berdecoder.t/assume @ 0x455b00 */
                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DateImpUtil.putDateTzValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::DateTz_const__BloombergLP::balber::BerEncoderOptions_const_ ()          | int64_t method_BloombergLP::balber::BerUtil_DateImpUtil_putDateTzValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::DateTz_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                     |     /* BloombergLP::balber::BerUtil_DateImpUtil::putDateTzValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::DateTz const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00455b00 push r15                                                                                                                                                                                                              |     
    0x00455b02 push r14                                                                                                                                                                                                              |     
    0x00455b04 push rbx                                                                                                                                                                                                              |     
    0x00455b05 sub rsp, 0x40                                                                                                                                                                                                         |     
    0x00455b09 mov r15, rdx                                                                                                                                                                                                          |     r15 = rdx;
    0x00455b0c mov rbx, rsi                                                                                                                                                                                                          |     rbx = rsi;
    0x00455b0f mov r14, rdi                                                                                                                                                                                                          |     r14 = rdi;
    0x00455b12 mov eax, dword [rsi]                                                                                                                                                                                                  |     eax = *(rsi);
    0x00455b14 mov dword [rsp + 0x10], eax                                                                                                                                                                                           |     *((rsp + 0x10)) = eax;
    0x00455b18 lea rdi, [rsp + 0x10]                                                                                                                                                                                                 |     
    0x00455b1d xor esi, esi                                                                                                                                                                                                          |     
    0x00455b1f call 0x463ce0                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Date::addDaysIfValid(int) (rsp + 0x10, 0);
    0x00455b24 test eax, eax                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x00455b26 je 0x455b32                                                                                                                                                                                                           |         
    0x00455b28 mov ecx, 0xffffffff                                                                                                                                                                                                   |         ecx = 0xffffffff;
    0x00455b2d jmp 0x455bee                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                     |     } else {
    0x00455b32 mov eax, dword [rbx + 4]                                                                                                                                                                                              |         eax = *((rbx + 4));
    0x00455b35 lea edx, [rax + 0x59f]                                                                                                                                                                                                |         edx = rax + 0x59f;
    0x00455b3b mov ecx, 0xffffffff                                                                                                                                                                                                   |         ecx = 0xffffffff;
    0x00455b40 cmp edx, 0xb3e                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                     |         if (edx > 0xb3e) {
    0x00455b46 ja 0x455bee                                                                                                                                                                                                           |             goto label_0;
                                                                                                                                                                                                                                     |         }
    0x00455b4c test r15, r15                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                     |         if (r15 != 0) {
    0x00455b4f je 0x455b6c                                                                                                                                                                                                           |             
    0x00455b51 cmp byte [r15 + 0xd], 0                                                                                                                                                                                               |             
                                                                                                                                                                                                                                     |             if (*((r15 + 0xd)) != 0) {
    0x00455b56 je 0x455b6c                                                                                                                                                                                                           |                 
    0x00455b58 test eax, eax                                                                                                                                                                                                         |                 
                                                                                                                                                                                                                                     |                 if (eax == 0) {
    0x00455b5a je 0x455bd9                                                                                                                                                                                                           |                     goto label_1;
                                                                                                                                                                                                                                     |                 }
    0x00455b5c mov rdi, r14                                                                                                                                                                                                          |                 
    0x00455b5f mov rsi, rbx                                                                                                                                                                                                          |                 
    0x00455b62 call 0x4555d0                                                                                                                                                                                                         |                 BloombergLP::balber::BerUtil_DateImpUtil::putCompactBinaryDateTzValue(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,BloombergLP::bdlt::DateTzconst&,BloombergLP::balber::BerEncoderOptionsconst*) (r14, rbx);
    0x00455b67 jmp 0x455bec                                                                                                                                                                                                          |                 
                                                                                                                                                                                                                                     |             }
                                                                                                                                                                                                                                     |         } else {
    0x00455b6c mov dword [rsp + 8], 3                                                                                                                                                                                                |             *((rsp + 8)) = 3;
    0x00455b74 test r15, r15                                                                                                                                                                                                         |             
                                                                                                                                                                                                                                     |             if (r15 != 0) {
    0x00455b77 je 0x455b7e                                                                                                                                                                                                           |                 
    0x00455b79 mov esi, dword [r15]                                                                                                                                                                                                  |                 esi = *(r15);
    0x00455b7c jmp 0x455b83                                                                                                                                                                                                          |                 
                                                                                                                                                                                                                                     |             } else {
    0x00455b7e mov esi, 6                                                                                                                                                                                                            |                 
                                                                                                                                                                                                                                     |             }
    0x00455b83 lea rdi, [rsp + 8]                                                                                                                                                                                                    |             
    0x00455b88 call 0x469860                                                                                                                                                                                                         |             BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x00455b8d lea rdi, [rsp + 0x10]                                                                                                                                                                                                 |             
    0x00455b92 lea rcx, [rsp + 8]                                                                                                                                                                                                    |             
    0x00455b97 mov esi, 0x26                                                                                                                                                                                                         |             
    0x00455b9c mov rdx, rbx                                                                                                                                                                                                          |             
    0x00455b9f call 0x467530                                                                                                                                                                                                         |             eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::DateTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, rbx, rsp + 8);
    0x00455ba4 mov ebx, eax                                                                                                                                                                                                          |             ebx = eax;
    0x00455ba6 mov rdi, r14                                                                                                                                                                                                          |             
    0x00455ba9 mov esi, eax                                                                                                                                                                                                          |             
    0x00455bab call 0x453df0                                                                                                                                                                                                         |             eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00455bb0 mov ecx, 0xffffffff                                                                                                                                                                                                   |             ecx = 0xffffffff;
    0x00455bb5 test eax, eax                                                                                                                                                                                                         |             
                                                                                                                                                                                                                                     |             if (eax != 0) {
    0x00455bb7 jne 0x455bee                                                                                                                                                                                                          |                 goto label_0;
                                                                                                                                                                                                                                     |             }
    0x00455bb9 movsxd rbx, ebx                                                                                                                                                                                                       |             rbx = (int64_t) ebx;
    0x00455bbc mov rax, qword [r14]                                                                                                                                                                                                  |             rax = *(r14);
    0x00455bbf lea rsi, [rsp + 0x10]                                                                                                                                                                                                 |             rsi = rsp + 0x10;
    0x00455bc4 mov rdi, r14                                                                                                                                                                                                          |             rdi = r14;
    0x00455bc7 mov rdx, rbx                                                                                                                                                                                                          |             rdx = rbx;
    0x00455bca call qword [rax + 0x60]                                                                                                                                                                                               |             rax = uint64_t (*rax + 0x60)() ();
    0x00455bcd xor ecx, ecx                                                                                                                                                                                                          |             ecx = 0;
    0x00455bcf cmp rax, rbx                                                                                                                                                                                                          |             
    0x00455bd2 setne cl                                                                                                                                                                                                              |             cl = (rax != rbx) ? 1 : 0;
    0x00455bd5 neg ecx                                                                                                                                                                                                               |             ecx = -ecx;
    0x00455bd7 jmp 0x455bee                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                     | label_1:
    0x00455bd9 mov eax, dword [rbx]                                                                                                                                                                                                  |             eax = *(rbx);
    0x00455bdb mov dword [rsp + 0x10], eax                                                                                                                                                                                           |             *((rsp + 0x10)) = eax;
    0x00455bdf lea rsi, [rsp + 0x10]                                                                                                                                                                                                 |             
    0x00455be4 mov rdi, r14                                                                                                                                                                                                          |             
    0x00455be7 call 0x4552a0                                                                                                                                                                                                         |             eax = BloombergLP::balber::BerUtil_DateImpUtil::putCompactBinaryDateValue(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,BloombergLP::bdlt::Dateconst&,BloombergLP::balber::BerEncoderOptionsconst*) (r14, rsp + 0x10);
                                                                                                                                                                                                                                     |         }
    0x00455bec mov ecx, eax                                                                                                                                                                                                          |         ecx = eax;
                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                     | label_0:
    0x00455bee mov eax, ecx                                                                                                                                                                                                          |     
    0x00455bf0 add rsp, 0x40                                                                                                                                                                                                         |     
    0x00455bf4 pop rbx                                                                                                                                                                                                               |     
    0x00455bf5 pop r14                                                                                                                                                                                                               |     
    0x00455bf7 pop r15                                                                                                                                                                                                               |     
    0x00455bf9 ret                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                     | }
