    ; assembly                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                 | /* balber_berdecoder.t/none @ 0x4573a0 */
                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DatetimeImpUtil.putIso8601DatetimeValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Datetime_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_DatetimeImpUtil_putIso8601DatetimeValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Datetime_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                 |     /* BloombergLP::balber::BerUtil_DatetimeImpUtil::putIso8601DatetimeValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Datetime const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x004573a0 push r15                                                                                                                                                                                                                          |     
    0x004573a2 push r14                                                                                                                                                                                                                          |     
    0x004573a4 push rbx                                                                                                                                                                                                                          |     
    0x004573a5 sub rsp, 0x40                                                                                                                                                                                                                     |     
    0x004573a9 mov r15, rsi                                                                                                                                                                                                                      |     r15 = rsi;
    0x004573ac mov r14, rdi                                                                                                                                                                                                                      |     r14 = rdi;
    0x004573af mov dword [rsp + 8], 3                                                                                                                                                                                                            |     *((rsp + 8)) = 3;
    0x004573b7 test rdx, rdx                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (rdx != 0) {
    0x004573ba je 0x4573c0                                                                                                                                                                                                                       |         
    0x004573bc mov esi, dword [rdx]                                                                                                                                                                                                              |         esi = *(rdx);
    0x004573be jmp 0x4573c5                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                 |     } else {
    0x004573c0 mov esi, 6                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                 |     }
    0x004573c5 lea rbx, [rsp + 8]                                                                                                                                                                                                                |     rbx = rsp + 8;
    0x004573ca mov rdi, rbx                                                                                                                                                                                                                      |     
    0x004573cd call 0x469bc0                                                                                                                                                                                                                     |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x004573d2 lea rdi, [rsp + 0x10]                                                                                                                                                                                                             |     
    0x004573d7 mov esi, 0x26                                                                                                                                                                                                                     |     
    0x004573dc mov rdx, r15                                                                                                                                                                                                                      |     
    0x004573df mov rcx, rbx                                                                                                                                                                                                                      |     
    0x004573e2 call 0x466e20                                                                                                                                                                                                                     |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Datetimeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15, rbx);
    0x004573e7 mov ebx, eax                                                                                                                                                                                                                      |     ebx = eax;
    0x004573e9 mov rdi, r14                                                                                                                                                                                                                      |     
    0x004573ec mov esi, eax                                                                                                                                                                                                                      |     
    0x004573ee call 0x453da0                                                                                                                                                                                                                     |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x004573f3 mov ecx, eax                                                                                                                                                                                                                      |     ecx = eax;
    0x004573f5 mov eax, 0xffffffff                                                                                                                                                                                                               |     eax = 0xffffffff;
    0x004573fa test ecx, ecx                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (ecx == 0) {
    0x004573fc jne 0x45741f                                                                                                                                                                                                                      |         
    0x004573fe movsxd rbx, ebx                                                                                                                                                                                                                   |         rbx = (int64_t) ebx;
    0x00457401 mov rax, qword [r14]                                                                                                                                                                                                              |         rax = *(r14);
    0x00457404 lea rsi, [rsp + 0x10]                                                                                                                                                                                                             |         rsi = rsp + 0x10;
    0x00457409 mov rdi, r14                                                                                                                                                                                                                      |         rdi = r14;
    0x0045740c mov rdx, rbx                                                                                                                                                                                                                      |         rdx = rbx;
    0x0045740f call qword [rax + 0x60]                                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x60)() ();
    0x00457412 mov rcx, rax                                                                                                                                                                                                                      |         rcx = rax;
    0x00457415 xor eax, eax                                                                                                                                                                                                                      |         eax = 0;
    0x00457417 cmp rcx, rbx                                                                                                                                                                                                                      |         
    0x0045741a setne al                                                                                                                                                                                                                          |         al = (rcx != rbx) ? 1 : 0;
    0x0045741d neg eax                                                                                                                                                                                                                           |         eax = -eax;
                                                                                                                                                                                                                                                 |     }
    0x0045741f add rsp, 0x40                                                                                                                                                                                                                     |     
    0x00457423 pop rbx                                                                                                                                                                                                                           |     
    0x00457424 pop r14                                                                                                                                                                                                                           |     
    0x00457426 pop r15                                                                                                                                                                                                                           |     
    0x00457428 ret                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                 | }
