    ; assembly                                                                                               | /* r2dec pseudo code output */
                                                                                                             | /* balber_berdecoder.t/assume @ 0x4688d0 */
                                                                                                             | #include <stdint.h>
                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlt::Iso8601Util.parse_BloombergLP::bdlt::Time__char_const__int_ ()         | int64_t method_BloombergLP::bdlt::Iso8601Util_parse_BloombergLP::bdlt::Time_char_const_int_ (uint32_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                             |     uint32_t var_bh;
                                                                                                             |     int64_t var_4h;
                                                                                                             |     int64_t var_8h;
                                                                                                             |     int64_t var_18h_2;
                                                                                                             |     uint32_t var_1ch;
                                                                                                             |     uint32_t var_18h;
                                                                                                             |     int64_t var_28h;
                                                                                                             |     int64_t var_2ch;
                                                                                                             |     uint32_t var_30h;
                                                                                                             |     rdx = arg3;
                                                                                                             |     rsi = arg2;
                                                                                                             |     rdi = arg1;
                                                                                                             |     /* BloombergLP::bdlt::Iso8601Util::parse(BloombergLP::bdlt::Time*, char const*, int) */
    0x004688d0 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x004688d5 cmp edx, 8                                                                                    |     
                                                                                                             |     if (edx < 8) {
    0x004688d8 jb 0x46894b                                                                                   |         goto label_1;
                                                                                                             |     }
    0x004688da push r15                                                                                      |     
    0x004688dc push r14                                                                                      |     
    0x004688de push rbx                                                                                      |     
    0x004688df sub rsp, 0x30                                                                                 |     
    0x004688e3 mov rbx, rsi                                                                                  |     rbx = rsi;
    0x004688e6 mov r14, rdi                                                                                  |     r14 = rdi;
    0x004688e9 mov qword [rsp + 0x18], rsi                                                                   |     *((rsp + 0x18)) = rsi;
    0x004688ee mov r15d, edx                                                                                 |     r15d = edx;
    0x004688f1 add r15, rsi                                                                                  |     r15 += rsi;
    0x004688f4 movabs rax, 0x541dd76000                                                                      |     rax = 0x541dd76000;
    0x004688fe mov qword [rsp + 8], rax                                                                      |     *((rsp + 8)) = rax;
    0x00468903 sub rsp, 8                                                                                    |     
    0x00468907 lea rax, [rsp + 0xb]                                                                          |     rax = rsp + 0xb;
    0x0046890c lea rdi, [rsp + 0x20]                                                                         |     rdi = rsp + 0x20;
    0x00468911 lea rsi, [rsp + 0x1c]                                                                         |     rsi = rsp + 0x1c;
    0x00468916 lea rdx, [rsp + 0x2c]                                                                         |     rdx = rsp + 0x2c;
    0x0046891b lea rcx, [rsp + 0x28]                                                                         |     rcx = rsp + 0x28;
    0x00468920 lea r8, [rsp + 0x18]                                                                          |     r8 = rsp + 0x18;
    0x00468925 lea r9, [rsp + 0x30]                                                                          |     r9 = rsp + 0x30;
    0x0046892a push r15                                                                                      |     
    0x0046892c push rbx                                                                                      |     
    0x0046892d push rax                                                                                      |     
    0x0046892e call 0x468a80                                                                                 |     eax = (anonymousnamespace)::u::parseTime(char const**,int*,int*,int*,int*,long long*,bool*,char const*,char const*,int) ();
    0x00468933 add rsp, 0x20                                                                                 |     
    0x00468937 mov ecx, eax                                                                                  |     ecx = eax;
    0x00468939 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x0046893e test ecx, ecx                                                                                 |     
    0x00468940 je 0x46894c                                                                                   |     
                                                                                                             |     while (esi != 0x18) {
                                                                                                             | label_0:
    0x00468942 add rsp, 0x30                                                                                 |         
    0x00468946 pop rbx                                                                                       |         
    0x00468947 pop r14                                                                                       |         
    0x00468949 pop r15                                                                                       |         
                                                                                                             | label_1:
    0x0046894b ret                                                                                           |         return rax;
    0x0046894c mov esi, dword [rsp + 0x14]                                                                   |         esi = *((rsp + 0x14));
    0x00468950 mov edx, dword [rsp + 0x24]                                                                   |         edx = *((rsp + 0x24));
    0x00468954 mov ecx, dword [rsp + 0x20]                                                                   |         ecx = *((rsp + 0x20));
    0x00468958 cmp ecx, 0x3b                                                                                 |         
                                                                                                             |         if (ecx <= 0x3b) {
    0x0046895b ja 0x468967                                                                                   |             
    0x0046895d cmp esi, 0x17                                                                                 |             
                                                                                                             |             if (esi > 0x17) {
    0x00468960 ja 0x468967                                                                                   |                 goto label_2;
                                                                                                             |             }
    0x00468962 cmp edx, 0x3c                                                                                 |             
                                                                                                             |             if (edx < 0x3c) {
    0x00468965 jb 0x468972                                                                                   |                 goto label_3;
                                                                                                             |             }
                                                                                                             |         }
                                                                                                             | label_2:
    0x00468967 cmp esi, 0x18                                                                                 |         
    0x0046896a jne 0x468942                                                                                  |         
                                                                                                             |     }
    0x0046896c mov edi, ecx                                                                                  |     edi = ecx;
    0x0046896e or edi, edx                                                                                   |     edi |= edx;
                                                                                                             |     if (edi != 0) {
    0x00468970 jne 0x468942                                                                                  |         goto label_0;
                                                                                                             |     }
                                                                                                             | label_3:
    0x00468972 lea rdi, [rsp + 8]                                                                            |     
    0x00468977 xor r8d, r8d                                                                                  |     
    0x0046897a xor r9d, r9d                                                                                  |     
    0x0046897d call 0x46bc70                                                                                 |     BloombergLP::bdlt::Time::setTime(int,int,int,int,int) (rsp + 8, rsi, rdx, rcx, 0, 0);
    0x00468982 cmp byte [rsp + 3], 0                                                                         |     
                                                                                                             |     if (*((rsp + 3)) != 0) {
    0x00468987 je 0x468998                                                                                   |         
    0x00468989 lea rdi, [rsp + 8]                                                                            |         
    0x0046898e mov esi, 1                                                                                    |         
    0x00468993 call 0x46b170                                                                                 |         BloombergLP::bdlt::Time::addSeconds(int) (rsp + 8, 1);
                                                                                                             |     }
    0x00468998 mov esi, dword [rsp + 0x10]                                                                   |     esi = *((rsp + 0x10));
    0x0046899c test esi, esi                                                                                 |     
                                                                                                             |     if (esi != 0) {
    0x0046899e je 0x4689aa                                                                                   |         
    0x004689a0 lea rdi, [rsp + 8]                                                                            |         
    0x004689a5 call 0x46b290                                                                                 |         BloombergLP::bdlt::Time::addMilliseconds(int) (rsp + 8, rsi);
                                                                                                             |     }
    0x004689aa mov rsi, qword [rsp + 0x28]                                                                   |     rsi = *((rsp + 0x28));
    0x004689af test rsi, rsi                                                                                 |     
                                                                                                             |     if (rsi != 0) {
    0x004689b2 je 0x4689be                                                                                   |         
    0x004689b4 lea rdi, [rsp + 8]                                                                            |         
    0x004689b9 call 0x46b3b0                                                                                 |         BloombergLP::bdlt::Time::addMicroseconds(long long) (rsp + 8, rsi);
                                                                                                             |     }
    0x004689be mov dword [rsp + 4], 0                                                                        |     *((rsp + 4)) = 0;
    0x004689c6 mov rdx, qword [rsp + 0x18]                                                                   |     rdx = *((rsp + 0x18));
    0x004689cb cmp rdx, r15                                                                                  |     
                                                                                                             |     if (rdx == r15) {
    0x004689ce je 0x468a10                                                                                   |         goto label_4;
                                                                                                             |     }
    0x004689d0 lea rdi, [rsp + 0x18]                                                                         |     rdi = rsp + 0x18;
    0x004689d5 lea rsi, [rsp + 4]                                                                            |     rsi = rsp + 4;
    0x004689da mov rcx, r15                                                                                  |     rcx = r15;
    0x004689dd call 0x4687b0                                                                                 |     eax = (anonymousnamespace)::u::parseZoneDesignator(char const**,int*,char const*,char const*) ();
    0x004689e2 mov ecx, eax                                                                                  |     ecx = eax;
    0x004689e4 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x004689e9 test ecx, ecx                                                                                 |     
                                                                                                             |     if (ecx != 0) {
    0x004689eb jne 0x468942                                                                                  |         goto label_0;
                                                                                                             |     }
    0x004689f1 cmp qword [rsp + 0x18], r15                                                                   |     
                                                                                                             |     if (*((rsp + 0x18)) != r15) {
    0x004689f6 jne 0x468942                                                                                  |         goto label_0;
                                                                                                             |     }
    0x004689fc mov esi, dword [rsp + 4]                                                                      |     esi = *((rsp + 4));
    0x00468a00 test esi, esi                                                                                 |     
                                                                                                             |     if (esi != 0) {
    0x00468a02 je 0x468a10                                                                                   |         
    0x00468a04 neg esi                                                                                       |         esi = -esi;
    0x00468a06 lea rdi, [rsp + 8]                                                                            |         
    0x00468a0b call 0x46b050                                                                                 |         BloombergLP::bdlt::Time::addMinutes(int) (rsp + 8, rsi);
                                                                                                             |     }
                                                                                                             | label_4:
    0x00468a10 cmp dword [rsp + 0x14], 0x18                                                                  |     
                                                                                                             |     if (*((rsp + 0x14)) != 0x18) {
    0x00468a15 jne 0x468a36                                                                                  |         goto label_5;
                                                                                                             |     }
    0x00468a17 cmp qword [rsp + 0x28], 0                                                                     |     
    0x00468a1d mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
                                                                                                             |     if (*((rsp + 0x28)) != 0) {
    0x00468a22 jne 0x468942                                                                                  |         goto label_0;
                                                                                                             |     }
    0x00468a28 mov ecx, dword [rsp + 4]                                                                      |     ecx = *((rsp + 4));
    0x00468a2c or ecx, dword [rsp + 0x10]                                                                    |     ecx |= *((rsp + 0x10));
                                                                                                             |     if (ecx != 0) {
    0x00468a30 jne 0x468942                                                                                  |         goto label_0;
                                                                                                             |     }
                                                                                                             | label_5:
    0x00468a36 movabs rbx, 0x4000000000                                                                      |     rbx = 0x4000000000;
    0x00468a40 mov rax, qword [rsp + 8]                                                                      |     rax = *((rsp + 8));
    0x00468a45 mov qword [r14], rax                                                                          |     *(r14) = rax;
    0x00468a48 cmp rax, rbx                                                                                  |     
                                                                                                             |     if (rax < rbx) {
    0x00468a4b jl 0x468a67                                                                                   |         goto label_6;
                                                                                                             |     }
    0x00468a4d movabs rcx, 0xffffffbfffffffff                                                                |     rcx = 0xffffffbfffffffff;
    0x00468a57 and rax, rcx                                                                                  |     rax &= rcx;
                                                                                                             |     do {
    0x00468a5a or rax, rbx                                                                                   |         rax |= rbx;
    0x00468a5d mov qword [r14], rax                                                                          |         *(r14) = rax;
    0x00468a60 xor eax, eax                                                                                  |         eax = 0;
    0x00468a62 jmp 0x468942                                                                                  |         goto label_0;
                                                                                                             | label_6:
    0x00468a67 mov rdi, r14                                                                                  |         
    0x00468a6a call 0x46aee0                                                                                 |         BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnight()const (r14);
    0x00468a6f jmp 0x468a5a                                                                                  |         
                                                                                                             |     } while (1);
                                                                                                             | }
