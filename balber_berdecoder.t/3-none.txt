    ; assembly                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                             | /* balber_berdecoder.t/none @ 0x404fe0 */
                                                                                                                                             | #include <stdint.h>
                                                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoiceWithDefaultValues.operator_BloombergLP::s_baltst::MyChoiceWithDefaultValues_const_ ()      | int64_t method_BloombergLP::s_baltst::MyChoiceWithDefaultValues_operator_BloombergLP::s_baltst::MyChoiceWithDefaultValues_const_ (int64_t arg2, uint32_t arg1) {
                                                                                                                                             |     rsi = arg2;
                                                                                                                                             |     rdi = arg1;
                                                                                                                                             |     /* BloombergLP::s_baltst::MyChoiceWithDefaultValues::operator=(BloombergLP::s_baltst::MyChoiceWithDefaultValues const&) */
    0x00404fe0 push rbp                                                                                                                      |     
    0x00404fe1 push rbx                                                                                                                      |     
    0x00404fe2 push rax                                                                                                                      |     
    0x00404fe3 mov rbx, rdi                                                                                                                  |     rbx = rdi;
    0x00404fe6 cmp rdi, rsi                                                                                                                  |     
                                                                                                                                             |     if (rdi != rsi) {
    0x00404fe9 je 0x4050aa                                                                                                                   |         
    0x00404fef mov eax, dword [rsi + 0x30]                                                                                                   |         eax = *((rsi + 0x30));
    0x00404ff2 cmp eax, 2                                                                                                                    |         
                                                                                                                                             |         if (eax != 2) {
    0x00404ff5 je 0x405020                                                                                                                   |             
    0x00404ff7 cmp eax, 1                                                                                                                    |             
                                                                                                                                             |             if (eax != 1) {
    0x00404ffa je 0x405013                                                                                                                   |                 
    0x00404ffc test eax, eax                                                                                                                 |                 
                                                                                                                                             |                 if (eax == 0) {
    0x00404ffe jne 0x405033                                                                                                                  |                     
    0x00405000 mov ebp, dword [rsi]                                                                                                          |                     ebp = *(rsi);
    0x00405002 mov eax, dword [rbx + 0x30]                                                                                                   |                     eax = *((rbx + 0x30));
    0x00405005 cmp eax, 1                                                                                                                    |                     
                                                                                                                                             |                     if (eax == 1) {
    0x00405008 je 0x405085                                                                                                                   |                         goto label_0;
                                                                                                                                             |                     }
    0x0040500a test eax, eax                                                                                                                 |                     
                                                                                                                                             |                     if (eax != 0) {
    0x0040500c je 0x40502f                                                                                                                   |                         
    0x0040500e jmp 0x4050a1                                                                                                                  |                         
                                                                                                                                             |                     } else {
    0x00405013 mov rdi, rbx                                                                                                                  |                         
    0x00405016 call 0x405120                                                                                                                 |                         BloombergLP::s_baltst::MyChoiceWithDefaultValues::makeSelection1(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rbx, rsi);
    0x0040501b jmp 0x4050aa                                                                                                                  |                         
                                                                                                                                             |                     } else {
    0x00405020 mov ebp, dword [rsi]                                                                                                          |                         ebp = *(rsi);
    0x00405022 mov eax, dword [rbx + 0x30]                                                                                                   |                         eax = *((rbx + 0x30));
    0x00405025 cmp eax, 1                                                                                                                    |                         
                                                                                                                                             |                         if (eax == 1) {
    0x00405028 je 0x40505e                                                                                                                   |                             goto label_1;
                                                                                                                                             |                         }
    0x0040502a cmp eax, 2                                                                                                                    |                         
                                                                                                                                             |                         if (eax != 2) {
    0x0040502d jne 0x40507a                                                                                                                  |                             goto label_2;
                                                                                                                                             |                         }
                                                                                                                                             |                     }
    0x0040502f mov dword [rbx], ebp                                                                                                          |                     *(rbx) = ebp;
    0x00405031 jmp 0x4050aa                                                                                                                  |                     goto label_3;
                                                                                                                                             |                 }
    0x00405033 cmp dword [rbx + 0x30], 1                                                                                                     |                 
                                                                                                                                             |                 if (*((rbx + 0x30)) == 1) {
    0x00405037 jne 0x405055                                                                                                                  |                     
    0x00405039 cmp qword [rbx + 0x20], 0x17                                                                                                  |                     
                                                                                                                                             |                     if (*((rbx + 0x20)) != 0x17) {
    0x0040503e je 0x40504d                                                                                                                   |                         
    0x00405040 mov rsi, qword [rbx]                                                                                                          |                         rsi = *(rbx);
    0x00405043 mov rdi, qword [rbx + 0x28]                                                                                                   |                         rdi = *((rbx + 0x28));
    0x00405047 mov rax, qword [rdi]                                                                                                          |                         rax = *(rdi);
    0x0040504a call qword [rax + 0x18]                                                                                                       |                         uint64_t (*rax + 0x18)() ();
                                                                                                                                             |                     }
    0x0040504d mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                    |                     *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                             |                 }
    0x00405055 mov dword [rbx + 0x30], 0xffffffff                                                                                            |                 *((rbx + 0x30)) = 0xffffffff;
    0x0040505c jmp 0x4050aa                                                                                                                  |                 goto label_3;
                                                                                                                                             | label_1:
    0x0040505e cmp qword [rbx + 0x20], 0x17                                                                                                  |                 
                                                                                                                                             |                 if (*((rbx + 0x20)) != 0x17) {
    0x00405063 je 0x405072                                                                                                                   |                     
    0x00405065 mov rsi, qword [rbx]                                                                                                          |                     rsi = *(rbx);
    0x00405068 mov rdi, qword [rbx + 0x28]                                                                                                   |                     rdi = *((rbx + 0x28));
    0x0040506c mov rax, qword [rdi]                                                                                                          |                     rax = *(rdi);
    0x0040506f call qword [rax + 0x18]                                                                                                       |                     uint64_t (*rax + 0x18)() ();
                                                                                                                                             |                 }
    0x00405072 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                    |                 *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                             | label_2:
    0x0040507a mov dword [rbx], ebp                                                                                                          |                 *(rbx) = ebp;
    0x0040507c mov dword [rbx + 0x30], 2                                                                                                     |                 *((rbx + 0x30)) = 2;
    0x00405083 jmp 0x4050aa                                                                                                                  |                 goto label_3;
                                                                                                                                             | label_0:
    0x00405085 cmp qword [rbx + 0x20], 0x17                                                                                                  |                 
                                                                                                                                             |                 if (*((rbx + 0x20)) != 0x17) {
    0x0040508a je 0x405099                                                                                                                   |                     
    0x0040508c mov rsi, qword [rbx]                                                                                                          |                     rsi = *(rbx);
    0x0040508f mov rdi, qword [rbx + 0x28]                                                                                                   |                     rdi = *((rbx + 0x28));
    0x00405093 mov rax, qword [rdi]                                                                                                          |                     rax = *(rdi);
    0x00405096 call qword [rax + 0x18]                                                                                                       |                     uint64_t (*rax + 0x18)() ();
                                                                                                                                             |                 }
    0x00405099 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                    |                 *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                             |             }
    0x004050a1 mov dword [rbx], ebp                                                                                                          |             *(rbx) = ebp;
    0x004050a3 mov dword [rbx + 0x30], 0                                                                                                     |             *((rbx + 0x30)) = 0;
                                                                                                                                             |         }
                                                                                                                                             |     }
                                                                                                                                             | label_3:
    0x004050aa mov rax, rbx                                                                                                                  |     rax = rbx;
    0x004050ad add rsp, 8                                                                                                                    |     
    0x004050b1 pop rbx                                                                                                                       |     
    0x004050b2 pop rbp                                                                                                                       |     
    0x004050b3 ret                                                                                                                           |     return rax;
                                                                                                                                             | }
