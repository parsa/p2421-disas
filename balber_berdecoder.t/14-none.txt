    ; assembly                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                         | /* balber_berdecoder.t/none @ 0x45b070 */
                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoice.makeSelection2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()        | uint64_t method_BloombergLP::s_baltst::MyChoice_makeSelection2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (int64_t arg2, uint32_t arg1) {
                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                         |     /* BloombergLP::s_baltst::MyChoice::makeSelection2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x0045b070 push r14                                                                                                                                  |     
    0x0045b072 push rbx                                                                                                                                  |     
    0x0045b073 push rax                                                                                                                                  |     
    0x0045b074 mov r14, rsi                                                                                                                              |     r14 = rsi;
    0x0045b077 mov rbx, rdi                                                                                                                              |     rbx = rdi;
    0x0045b07a cmp dword [rdi + 0x30], 1                                                                                                                 |     
                                                                                                                                                         |     if (*((rdi + 0x30)) == 1) {
    0x0045b07e jne 0x45b090                                                                                                                              |         
    0x0045b080 mov rdi, rbx                                                                                                                              |         
    0x0045b083 mov rsi, r14                                                                                                                              |         
    0x0045b086 call 0x4731f0                                                                                                                             |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x0045b08b jmp 0x45b152                                                                                                                              |         
                                                                                                                                                         |     } else {
    0x0045b090 mov dword [rbx + 0x30], 0xffffffff                                                                                                        |         *((rbx + 0x30)) = 0xffffffff;
    0x0045b097 mov rdi, qword [rbx + 0x38]                                                                                                               |         rdi = *((rbx + 0x38));
    0x0045b09b test rdi, rdi                                                                                                                             |         
                                                                                                                                                         |         if (rdi == 0) {
    0x0045b09e jne 0x45b0b4                                                                                                                              |             
    0x0045b0a0 mov rdi, qword [rip + 0x29c349]                                                                                                           |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045b0a7 test rdi, rdi                                                                                                                             |             
                                                                                                                                                         |             if (rdi != 0) {
    0x0045b0aa jne 0x45b0b4                                                                                                                              |                 goto label_0;
                                                                                                                                                         |             }
    0x0045b0ac call 0x46d5b0                                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045b0b1 mov rdi, rax                                                                                                                              |             rdi = rax;
                                                                                                                                                         |         }
                                                                                                                                                         | label_0:
    0x0045b0b4 mov rax, qword [r14 + 0x20]                                                                                                               |         rax = *((r14 + 0x20));
    0x0045b0b8 mov qword [rbx + 0x20], rax                                                                                                               |         *((rbx + 0x20)) = rax;
    0x0045b0bc movups xmm0, xmmword [r14]                                                                                                                |         __asm ("movups xmm0, xmmword [r14]");
    0x0045b0c0 movups xmm1, xmmword [r14 + 0x10]                                                                                                         |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045b0c5 movups xmmword [rbx + 0x10], xmm1                                                                                                         |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045b0c9 movups xmmword [rbx], xmm0                                                                                                                |         __asm ("movups xmmword [rbx], xmm0");
    0x0045b0cc mov qword [rbx + 0x28], rdi                                                                                                               |         *((rbx + 0x28)) = rdi;
    0x0045b0d0 cmp rax, 0x17                                                                                                                             |         
                                                                                                                                                         |         if (rax != 0x17) {
    0x0045b0d4 je 0x45b14b                                                                                                                               |             
    0x0045b0d6 cmp rdi, qword [r14 + 0x28]                                                                                                               |             
                                                                                                                                                         |             if (rdi != *((r14 + 0x28))) {
    0x0045b0da je 0x45b138                                                                                                                               |                 
    0x0045b0dc mov rax, qword [r14 + 0x18]                                                                                                               |                 rax = *((r14 + 0x18));
    0x0045b0e0 cmp rax, 0x17                                                                                                                             |                 
    0x0045b0e4 mov esi, 0x17                                                                                                                             |                 esi = 0x17;
                                                                                                                                                         |                 if (rax > 0x17) {
    0x0045b0e9 cmova rsi, rax                                                                                                                            |                     rsi = rax;
                                                                                                                                                         |                 }
    0x0045b0ed mov qword [rbx], 0                                                                                                                        |                 *(rbx) = 0;
    0x0045b0f4 mov qword [rbx + 0x18], rax                                                                                                               |                 *((rbx + 0x18)) = rax;
    0x0045b0f8 mov qword [rbx + 0x20], rsi                                                                                                               |                 *((rbx + 0x20)) = rsi;
    0x0045b0fc cmp rax, 0x18                                                                                                                             |                 
                                                                                                                                                         |                 if (rax >= 0x18) {
    0x0045b100 jb 0x45b115                                                                                                                               |                     
    0x0045b102 inc rsi                                                                                                                                   |                     rsi++;
    0x0045b105 mov rax, qword [rdi]                                                                                                                      |                     rax = *(rdi);
    0x0045b108 call qword [rax + 0x10]                                                                                                                   |                     rax = uint64_t (*rax + 0x10)() ();
    0x0045b10b mov qword [rbx], rax                                                                                                                      |                     *(rbx) = rax;
    0x0045b10e cmp qword [rbx + 0x20], 0x17                                                                                                              |                     
                                                                                                                                                         |                     if (*((rbx + 0x20)) != 0x17) {
    0x0045b113 jne 0x45b118                                                                                                                              |                         goto label_1;
                                                                                                                                                         |                     }
                                                                                                                                                         |                 }
    0x0045b115 mov rax, rbx                                                                                                                              |                 rax = rbx;
                                                                                                                                                         | label_1:
    0x0045b118 mov rdx, qword [rbx + 0x18]                                                                                                               |                 rdx = *((rbx + 0x18));
    0x0045b11c inc rdx                                                                                                                                   |                 rdx++;
                                                                                                                                                         |                 if (rdx == 0) {
    0x0045b11f je 0x45b14b                                                                                                                               |                     goto label_2;
                                                                                                                                                         |                 }
    0x0045b121 cmp qword [r14 + 0x20], 0x17                                                                                                              |                 
                                                                                                                                                         |                 if (*((r14 + 0x20)) != 0x17) {
    0x0045b126 je 0x45b12b                                                                                                                               |                     
    0x0045b128 mov r14, qword [r14]                                                                                                                      |                     r14 = *(r14);
                                                                                                                                                         |                 }
    0x0045b12b mov rdi, rax                                                                                                                              |                 
    0x0045b12e mov rsi, r14                                                                                                                              |                 
    0x0045b131 call 0x404980                                                                                                                             |                 memcpy (rax, r14, rdx);
    0x0045b136 jmp 0x45b14b                                                                                                                              |                 
                                                                                                                                                         |             } else {
    0x0045b138 mov qword [r14], 0                                                                                                                        |                 *(r14) = 0;
    0x0045b13f movaps xmm0, xmmword [rip + 0x39b8a]                                                                                                      |                 xmm0 = .comment;
    0x0045b146 movups xmmword [r14 + 0x18], xmm0                                                                                                         |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                         |             }
                                                                                                                                                         |         }
                                                                                                                                                         | label_2:
    0x0045b14b mov dword [rbx + 0x30], 1                                                                                                                 |         *((rbx + 0x30)) = 1;
                                                                                                                                                         |     }
    0x0045b152 mov rax, rbx                                                                                                                              |     rax = rbx;
    0x0045b155 add rsp, 8                                                                                                                                |     
    0x0045b159 pop rbx                                                                                                                                   |     
    0x0045b15a pop r14                                                                                                                                   |     
    0x0045b15c ret                                                                                                                                       |     return rax;
                                                                                                                                                         | }
