    ; assembly                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x454ee0 */
                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balber::BerUtil_Iso8601ImpUtil.putTimeValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Time_const__BloombergLP::balber::BerEncoderOptions_const_ ()           | uint64_t method_BloombergLP::balber::BerUtil_Iso8601ImpUtil_putTimeValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Time_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                     |     /* BloombergLP::balber::BerUtil_Iso8601ImpUtil::putTimeValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Time const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00454ee0 push r15                                                                                                                                                                                                              |     
    0x00454ee2 push r14                                                                                                                                                                                                              |     
    0x00454ee4 push rbx                                                                                                                                                                                                              |     
    0x00454ee5 sub rsp, 0x40                                                                                                                                                                                                         |     
    0x00454ee9 mov r15, rsi                                                                                                                                                                                                          |     r15 = rsi;
    0x00454eec mov r14, rdi                                                                                                                                                                                                          |     r14 = rdi;
    0x00454eef mov dword [rsp + 8], 3                                                                                                                                                                                                |     *((rsp + 8)) = 3;
    0x00454ef7 test rdx, rdx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (rdx != 0) {
    0x00454efa je 0x454f00                                                                                                                                                                                                           |         
    0x00454efc mov esi, dword [rdx]                                                                                                                                                                                                  |         esi = *(rdx);
    0x00454efe jmp 0x454f05                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                     |     } else {
    0x00454f00 mov esi, 6                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                     |     }
    0x00454f05 lea rbx, [rsp + 8]                                                                                                                                                                                                    |     rbx = rsp + 8;
    0x00454f0a mov rdi, rbx                                                                                                                                                                                                          |     
    0x00454f0d call 0x469bc0                                                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x00454f12 lea rdi, [rsp + 0x10]                                                                                                                                                                                                 |     
    0x00454f17 mov esi, 0x26                                                                                                                                                                                                         |     
    0x00454f1c mov rdx, r15                                                                                                                                                                                                          |     
    0x00454f1f mov rcx, rbx                                                                                                                                                                                                          |     
    0x00454f22 call 0x466780                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Timeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15, rbx);
    0x00454f27 mov ebx, eax                                                                                                                                                                                                          |     ebx = eax;
    0x00454f29 mov rdi, r14                                                                                                                                                                                                          |     
    0x00454f2c mov esi, eax                                                                                                                                                                                                          |     
    0x00454f2e call 0x453da0                                                                                                                                                                                                         |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00454f33 mov ecx, eax                                                                                                                                                                                                          |     ecx = eax;
    0x00454f35 mov eax, 0xffffffff                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x00454f3a test ecx, ecx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (ecx == 0) {
    0x00454f3c jne 0x454f5f                                                                                                                                                                                                          |         
    0x00454f3e movsxd rbx, ebx                                                                                                                                                                                                       |         rbx = (int64_t) ebx;
    0x00454f41 mov rax, qword [r14]                                                                                                                                                                                                  |         rax = *(r14);
    0x00454f44 lea rsi, [rsp + 0x10]                                                                                                                                                                                                 |         rsi = rsp + 0x10;
    0x00454f49 mov rdi, r14                                                                                                                                                                                                          |         rdi = r14;
    0x00454f4c mov rdx, rbx                                                                                                                                                                                                          |         rdx = rbx;
    0x00454f4f call qword [rax + 0x60]                                                                                                                                                                                               |         rax = uint64_t (*rax + 0x60)() ();
    0x00454f52 mov rcx, rax                                                                                                                                                                                                          |         rcx = rax;
    0x00454f55 xor eax, eax                                                                                                                                                                                                          |         eax = 0;
    0x00454f57 cmp rcx, rbx                                                                                                                                                                                                          |         
    0x00454f5a setne al                                                                                                                                                                                                              |         al = (rcx != rbx) ? 1 : 0;
    0x00454f5d neg eax                                                                                                                                                                                                               |         eax = -eax;
                                                                                                                                                                                                                                     |     }
    0x00454f5f add rsp, 0x40                                                                                                                                                                                                         |     
    0x00454f63 pop rbx                                                                                                                                                                                                               |     
    0x00454f64 pop r14                                                                                                                                                                                                               |     
    0x00454f66 pop r15                                                                                                                                                                                                               |     
    0x00454f68 ret                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                     | }
