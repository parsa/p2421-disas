    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* balber_berdecoder.t/assume @ 0x467530 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::bdlt::Iso8601Util.generate_char__int__BloombergLP::bdlt::DateTz_const__BloombergLP::bdlt::Iso8601UtilConfiguration_const_ ()         | int64_t method_BloombergLP::bdlt::Iso8601Util_generate_char_int_BloombergLP::bdlt::DateTz_const_BloombergLP::bdlt::Iso8601UtilConfiguration_const_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* BloombergLP::bdlt::Iso8601Util::generate(char*, int, BloombergLP::bdlt::DateTz const&, BloombergLP::bdlt::Iso8601UtilConfiguration const&) */
    0x00467530 push rbp                                                                                                                                              |     
    0x00467531 push r14                                                                                                                                              |     
    0x00467533 push rbx                                                                                                                                              |     
    0x00467534 sub rsp, 0x10                                                                                                                                         |     
    0x00467538 mov r14, rdi                                                                                                                                          |     r14 = rdi;
    0x0046753b cmp esi, 0x11                                                                                                                                         |     
                                                                                                                                                                     |     if (esi >= 0x11) {
    0x0046753e jb 0x467559                                                                                                                                           |         
    0x00467540 mov rdi, r14                                                                                                                                          |         
    0x00467543 mov rsi, rdx                                                                                                                                          |         
    0x00467546 mov rdx, rcx                                                                                                                                          |         
    0x00467549 call 0x4675a0                                                                                                                                         |         eax = BloombergLP::bdlt::Iso8601Util::generateRaw(char*,BloombergLP::bdlt::DateTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (r14, rdx, rcx);
    0x0046754e mov ebp, eax                                                                                                                                          |         
    0x00467550 cdqe                                                                                                                                                  |         rax = (int64_t) eax;
    0x00467552 mov byte [r14 + rax], 0                                                                                                                               |         *((r14 + rax)) = 0;
    0x00467557 jmp 0x467593                                                                                                                                          |         
                                                                                                                                                                     |     } else {
    0x00467559 mov ebx, esi                                                                                                                                          |         ebx = esi;
    0x0046755b mov rdi, rsp                                                                                                                                          |         
    0x0046755e mov rsi, rdx                                                                                                                                          |         
    0x00467561 mov rdx, rcx                                                                                                                                          |         
    0x00467564 call 0x4675a0                                                                                                                                         |         eax = BloombergLP::bdlt::Iso8601Util::generateRaw(char*,BloombergLP::bdlt::DateTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp, rdx, rcx);
    0x00467569 mov ebp, eax                                                                                                                                          |         
    0x0046756b cmp eax, ebx                                                                                                                                          |         
                                                                                                                                                                     |         if (eax < ebx) {
    0x0046756d jae 0x467586                                                                                                                                          |             
    0x0046756f mov ebx, ebp                                                                                                                                          |             ebx = ebp;
    0x00467571 mov rsi, rsp                                                                                                                                          |             
    0x00467574 mov rdi, r14                                                                                                                                          |             
    0x00467577 mov rdx, rbx                                                                                                                                          |             
    0x0046757a call 0x404980                                                                                                                                         |             memcpy (r14, rsp, rbx);
    0x0046757f mov byte [r14 + rbx], 0                                                                                                                               |             *((r14 + rbx)) = 0;
    0x00467584 jmp 0x467593                                                                                                                                          |             
                                                                                                                                                                     |         } else {
    0x00467586 mov edx, ebx                                                                                                                                          |             
    0x00467588 mov rsi, rsp                                                                                                                                          |             
    0x0046758b mov rdi, r14                                                                                                                                          |             
    0x0046758e call 0x404980                                                                                                                                         |             memcpy (r14, rsp, ebx);
                                                                                                                                                                     |         }
                                                                                                                                                                     |     }
    0x00467593 mov eax, ebp                                                                                                                                          |     eax = ebp;
    0x00467595 add rsp, 0x10                                                                                                                                         |     
    0x00467599 pop rbx                                                                                                                                               |     
    0x0046759a pop r14                                                                                                                                               |     
    0x0046759c pop rbp                                                                                                                                               |     
    0x0046759d ret                                                                                                                                                   |     return rax;
                                                                                                                                                                     | }
