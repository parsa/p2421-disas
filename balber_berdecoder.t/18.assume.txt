    ; assembly                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                     | /* balber_berdecoder.t/assume @ 0x45cc70 */
                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice.makeMyChoice2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()          | uint64_t method_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_makeMyChoice2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                     |     /* BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::makeMyChoice2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x0045cc70 push r14                                                                                                                                                              |     
    0x0045cc72 push rbx                                                                                                                                                              |     
    0x0045cc73 push rax                                                                                                                                                              |     
    0x0045cc74 mov r14, rsi                                                                                                                                                          |     r14 = rsi;
    0x0045cc77 mov rbx, rdi                                                                                                                                                          |     rbx = rdi;
    0x0045cc7a mov eax, dword [rdi + 0x30]                                                                                                                                           |     eax = *((rdi + 0x30));
    0x0045cc7d test eax, eax                                                                                                                                                         |     
                                                                                                                                                                                     |     if (eax != 0) {
    0x0045cc7f je 0x45cc96                                                                                                                                                           |         
    0x0045cc81 cmp eax, 1                                                                                                                                                            |         
                                                                                                                                                                                     |         if (eax == 1) {
    0x0045cc84 jne 0x45cc96                                                                                                                                                          |             
    0x0045cc86 mov rdi, rbx                                                                                                                                                          |             
    0x0045cc89 mov rsi, r14                                                                                                                                                          |             
    0x0045cc8c call 0x472e30                                                                                                                                                         |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x0045cc91 jmp 0x45cd58                                                                                                                                                          |             
                                                                                                                                                                                     |         }
                                                                                                                                                                                     |     } else {
    0x0045cc96 mov dword [rbx + 0x30], 0xffffffff                                                                                                                                    |         *((rbx + 0x30)) = 0xffffffff;
    0x0045cc9d mov rdi, qword [rbx + 0x38]                                                                                                                                           |         rdi = *((rbx + 0x38));
    0x0045cca1 test rdi, rdi                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rdi == 0) {
    0x0045cca4 jne 0x45ccba                                                                                                                                                          |             
    0x0045cca6 mov rdi, qword [rip + 0x29a743]                                                                                                                                       |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045ccad test rdi, rdi                                                                                                                                                         |             
                                                                                                                                                                                     |             if (rdi != 0) {
    0x0045ccb0 jne 0x45ccba                                                                                                                                                          |                 goto label_0;
                                                                                                                                                                                     |             }
    0x0045ccb2 call 0x46d200                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045ccb7 mov rdi, rax                                                                                                                                                          |             rdi = rax;
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_0:
    0x0045ccba mov rax, qword [r14 + 0x20]                                                                                                                                           |         rax = *((r14 + 0x20));
    0x0045ccbe mov qword [rbx + 0x20], rax                                                                                                                                           |         *((rbx + 0x20)) = rax;
    0x0045ccc2 movups xmm0, xmmword [r14]                                                                                                                                            |         __asm ("movups xmm0, xmmword [r14]");
    0x0045ccc6 movups xmm1, xmmword [r14 + 0x10]                                                                                                                                     |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045cccb movups xmmword [rbx + 0x10], xmm1                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045cccf movups xmmword [rbx], xmm0                                                                                                                                            |         __asm ("movups xmmword [rbx], xmm0");
    0x0045ccd2 mov qword [rbx + 0x28], rdi                                                                                                                                           |         *((rbx + 0x28)) = rdi;
    0x0045ccd6 cmp rax, 0x17                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rax != 0x17) {
    0x0045ccda je 0x45cd51                                                                                                                                                           |             
    0x0045ccdc cmp rdi, qword [r14 + 0x28]                                                                                                                                           |             
                                                                                                                                                                                     |             if (rdi != *((r14 + 0x28))) {
    0x0045cce0 je 0x45cd3e                                                                                                                                                           |                 
    0x0045cce2 mov rax, qword [r14 + 0x18]                                                                                                                                           |                 rax = *((r14 + 0x18));
    0x0045cce6 cmp rax, 0x17                                                                                                                                                         |                 
    0x0045ccea mov esi, 0x17                                                                                                                                                         |                 esi = 0x17;
                                                                                                                                                                                     |                 if (rax > 0x17) {
    0x0045ccef cmova rsi, rax                                                                                                                                                        |                     rsi = rax;
                                                                                                                                                                                     |                 }
    0x0045ccf3 mov qword [rbx], 0                                                                                                                                                    |                 *(rbx) = 0;
    0x0045ccfa mov qword [rbx + 0x18], rax                                                                                                                                           |                 *((rbx + 0x18)) = rax;
    0x0045ccfe mov qword [rbx + 0x20], rsi                                                                                                                                           |                 *((rbx + 0x20)) = rsi;
    0x0045cd02 cmp rax, 0x18                                                                                                                                                         |                 
                                                                                                                                                                                     |                 if (rax >= 0x18) {
    0x0045cd06 jb 0x45cd1b                                                                                                                                                           |                     
    0x0045cd08 inc rsi                                                                                                                                                               |                     rsi++;
    0x0045cd0b mov rax, qword [rdi]                                                                                                                                                  |                     rax = *(rdi);
    0x0045cd0e call qword [rax + 0x10]                                                                                                                                               |                     rax = uint64_t (*rax + 0x10)() ();
    0x0045cd11 mov qword [rbx], rax                                                                                                                                                  |                     *(rbx) = rax;
    0x0045cd14 cmp qword [rbx + 0x20], 0x17                                                                                                                                          |                     
                                                                                                                                                                                     |                     if (*((rbx + 0x20)) != 0x17) {
    0x0045cd19 jne 0x45cd1e                                                                                                                                                          |                         goto label_1;
                                                                                                                                                                                     |                     }
                                                                                                                                                                                     |                 }
    0x0045cd1b mov rax, rbx                                                                                                                                                          |                 rax = rbx;
                                                                                                                                                                                     | label_1:
    0x0045cd1e mov rdx, qword [rbx + 0x18]                                                                                                                                           |                 rdx = *((rbx + 0x18));
    0x0045cd22 inc rdx                                                                                                                                                               |                 rdx++;
                                                                                                                                                                                     |                 if (rdx == 0) {
    0x0045cd25 je 0x45cd51                                                                                                                                                           |                     goto label_2;
                                                                                                                                                                                     |                 }
    0x0045cd27 cmp qword [r14 + 0x20], 0x17                                                                                                                                          |                 
                                                                                                                                                                                     |                 if (*((r14 + 0x20)) != 0x17) {
    0x0045cd2c je 0x45cd31                                                                                                                                                           |                     
    0x0045cd2e mov r14, qword [r14]                                                                                                                                                  |                     r14 = *(r14);
                                                                                                                                                                                     |                 }
    0x0045cd31 mov rdi, rax                                                                                                                                                          |                 
    0x0045cd34 mov rsi, r14                                                                                                                                                          |                 
    0x0045cd37 call 0x404980                                                                                                                                                         |                 memcpy (rax, r14, rdx);
    0x0045cd3c jmp 0x45cd51                                                                                                                                                          |                 
                                                                                                                                                                                     |             } else {
    0x0045cd3e mov qword [r14], 0                                                                                                                                                    |                 *(r14) = 0;
    0x0045cd45 movaps xmm0, xmmword [rip + 0x3a9d4]                                                                                                                                  |                 xmm0 = .comment;
    0x0045cd4c movups xmmword [r14 + 0x18], xmm0                                                                                                                                     |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                                                     |             }
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_2:
    0x0045cd51 mov dword [rbx + 0x30], 1                                                                                                                                             |         *((rbx + 0x30)) = 1;
                                                                                                                                                                                     |     }
    0x0045cd58 mov rax, rbx                                                                                                                                                          |     rax = rbx;
    0x0045cd5b add rsp, 8                                                                                                                                                            |     
    0x0045cd5f pop rbx                                                                                                                                                               |     
    0x0045cd60 pop r14                                                                                                                                                               |     
    0x0045cd62 ret                                                                                                                                                                   |     return rax;
                                                                                                                                                                                     | }
