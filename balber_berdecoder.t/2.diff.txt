0000000000442a60 <int BloombergLP::balber::BerEncoder::encode<unsigned long>(std::__1::basic_str   |	0000000000442a10 <int BloombergLP::balber::BerEncoder::encode<unsigned long>(std::__1::basic_str
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r12								   |	0000000000000005: 01	pushq	%rbx
0000000000000007: 01	pushq	%rbx								   |	0000000000000006: 04	subq	$40, %rsp
0000000000000008: 04	subq	$16, %rsp							   |	000000000000000a: 03	movq	%rdx, %r15
000000000000000c: 03	movq	%rdx, %r12							   |	000000000000000d: 03	movq	%rsi, %r14
000000000000000f: 03	movq	%rsi, %r14							   |	0000000000000010: 03	movq	%rdi, %rbx
0000000000000012: 03	movq	%rdi, %rbx							   |	0000000000000013: 07	movq	%rsi, 264(%rdi)
0000000000000015: 07	movq	%rsi, 264(%rdi)							   |	000000000000001a: 10	movl	$0, 256(%rdi)
000000000000001c: 10	movl	$0, 256(%rdi)							   |	0000000000000024: 07	movq	248(%rdi), %rbp
0000000000000026: 07	movq	248(%rdi), %rbp							   |	000000000000002b: 03	testq	%rbp, %rbp
000000000000002d: 03	testq	%rbp, %rbp							   |	000000000000002e: 02	je	0x442a5d <int BloombergLP::balber::BerEncoder::encode<unsigned l
0000000000000030: 02	je	0x442aaf <int BloombergLP::balber::BerEncoder::encode<unsigned l   |	0000000000000030: 04	movq	48(%rbp), %rsi
0000000000000032: 04	movq	48(%rbp), %rsi							   |	0000000000000034: 04	movq	72(%rbp), %rdi
0000000000000036: 04	movq	72(%rbp), %rdi							   |	0000000000000038: 03	movq	(%rdi), %rax
000000000000003a: 03	movq	(%rdi), %rax							   |	000000000000003b: 03	callq	*24(%rax)
000000000000003d: 03	callq	*24(%rax)							   |	000000000000003e: 03	xorps	%xmm0, %xmm0
0000000000000040: 03	xorps	%xmm0, %xmm0							   |	0000000000000041: 04	movups	%xmm0, 48(%rbp)
0000000000000043: 04	movups	%xmm0, 48(%rbp)							   |	0000000000000045: 08	movq	$0, 64(%rbp)
0000000000000047: 08	movq	$0, 64(%rbp)							   |	000000000000004d: 10	movl	$0, 272(%rbx)
000000000000004f: 10	movl	$0, 272(%rbx)							   |	0000000000000057: 04	cmpq	$0, (%rbx)
0000000000000059: 04	cmpq	$0, (%rbx)							   |	000000000000005b: 02	je	0x442aa2 <int BloombergLP::balber::BerEncoder::encode<unsigned l
000000000000005d: 02	je	0x442b0a <int BloombergLP::balber::BerEncoder::encode<unsigned l   |	000000000000005d: 04	movq	%rbx, (%rsp)
000000000000005f: 10	movl	$1, 272(%rbx)							   |	0000000000000061: 08	movl	$0, 8(%rsp)
0000000000000069: 03	xorl	%r15d, %r15d							   |	0000000000000069: 05	movq	%rbx, 16(%rsp)
000000000000006c: 03	movq	%rbx, %rdi							   |	000000000000006e: 10	movl	$1, 272(%rbx)
000000000000006f: 03	movq	%r12, %rsi							   |	0000000000000078: 03	movq	%rsp, %rdi
0000000000000072: 02	xorl	%edx, %edx							   |	000000000000007b: 03	movq	%r15, %rsi
0000000000000074: 05	movl	$2, %ecx							   |	000000000000007e: 05	callq	0x44db40 <int BloombergLP::balber::BerEncoder_UniversalElementVi
0000000000000079: 03	xorl	%r8d, %r8d							   |	0000000000000083: 02	movl	%eax, %ebp
000000000000007c: 05	callq	0x44dc00 <int BloombergLP::balber::BerEncoder::encodeImpl<unsign   |	0000000000000085: 05	movq	16(%rsp), %rax
0000000000000081: 02	testl	%eax, %eax							   |	000000000000008a: 06	decl	272(%rax)
0000000000000083: 02	je	0x442b02 <int BloombergLP::balber::BerEncoder::encode<unsigned l   |	0000000000000090: 02	jmp	0x442af2 <int BloombergLP::balber::BerEncoder::encode<unsigned l
0000000000000085: 06	movl	$4294967295, %r15d						   |	0000000000000092: 05	leaq	24(%rsp), %rbp
000000000000008b: 03	movq	%rbx, %rdi							   |	0000000000000097: 03	movq	%rbp, %rdi
000000000000008e: 02	xorl	%esi, %esi							   |	000000000000009a: 05	callq	0x453210 <BloombergLP::balber::BerEncoderOptions::BerEncoderOpti
0000000000000090: 05	movl	$2, %edx							   |	000000000000009f: 03	movq	%rbp, (%rbx)
0000000000000095: 02	xorl	%ecx, %ecx							   |	00000000000000a2: 04	movq	%rbx, (%rsp)
0000000000000097: 06	movl	$4294967295, %r8d						   |	00000000000000a6: 08	movl	$0, 8(%rsp)
000000000000009d: 05	callq	0x452720 <BloombergLP::balber::BerEncoder::logError(BloombergLP:   |	00000000000000ae: 05	movq	%rbx, 16(%rsp)
00000000000000a2: 06	decl	272(%rbx)							   |	00000000000000b3: 06	incl	272(%rbx)
00000000000000a8: 02	jmp	0x442b6c <int BloombergLP::balber::BerEncoder::encode<unsigned l   |	00000000000000b9: 03	movq	%rsp, %rdi
00000000000000aa: 03	movq	%rsp, %r15							   |	00000000000000bc: 03	movq	%r15, %rsi
00000000000000ad: 03	movq	%r15, %rdi							   |	00000000000000bf: 05	callq	0x44db40 <int BloombergLP::balber::BerEncoder_UniversalElementVi
00000000000000b0: 05	callq	0x453260 <BloombergLP::balber::BerEncoderOptions::BerEncoderOpti   |	00000000000000c4: 02	movl	%eax, %ebp
00000000000000b5: 03	movq	%r15, (%rbx)							   |	00000000000000c6: 07	movq	$0, (%rbx)
00000000000000b8: 06	incl	272(%rbx)							   |	00000000000000cd: 05	movq	16(%rsp), %rax
00000000000000be: 03	xorl	%r15d, %r15d							   |	00000000000000d2: 06	decl	272(%rax)
00000000000000c1: 03	movq	%rbx, %rdi							   |	00000000000000d8: 05	leaq	24(%rsp), %rdi
00000000000000c4: 03	movq	%r12, %rsi							   |	00000000000000dd: 05	callq	0x453260 <BloombergLP::balber::BerEncoderOptions::~BerEncoderOpt
00000000000000c7: 02	xorl	%edx, %edx							   |	00000000000000e2: 11	movq	$0, 264(%rbx)
00000000000000c9: 05	movl	$2, %ecx							   |	00000000000000ed: 03	movq	(%r14), %rax
00000000000000ce: 03	xorl	%r8d, %r8d							   |	00000000000000f0: 03	movq	%r14, %rdi
00000000000000d1: 05	callq	0x44dc00 <int BloombergLP::balber::BerEncoder::encodeImpl<unsign   |	00000000000000f3: 03	callq	*48(%rax)
00000000000000d6: 02	testl	%eax, %eax							   |	00000000000000f6: 02	movl	%ebp, %eax
00000000000000d8: 02	je	0x442b57 <int BloombergLP::balber::BerEncoder::encode<unsigned l   |	00000000000000f8: 04	addq	$40, %rsp
00000000000000da: 06	movl	$4294967295, %r15d						   |	00000000000000fc: 01	popq	%rbx
00000000000000e0: 03	movq	%rbx, %rdi							   |	00000000000000fd: 02	popq	%r14
00000000000000e3: 02	xorl	%esi, %esi							   |	00000000000000ff: 02	popq	%r15
00000000000000e5: 05	movl	$2, %edx							   |	0000000000000101: 01	popq	%rbp
00000000000000ea: 02	xorl	%ecx, %ecx							   |	0000000000000102: 01	retq	
00000000000000ec: 06	movl	$4294967295, %r8d						   |	0000000000000103: 03	movq	%rax, %rbx
00000000000000f2: 05	callq	0x452720 <BloombergLP::balber::BerEncoder::logError(BloombergLP:   |	0000000000000106: 05	movq	16(%rsp), %rax
00000000000000f7: 07	movq	$0, (%rbx)							   |	000000000000010b: 06	decl	272(%rax)
00000000000000fe: 06	decl	272(%rbx)							   |	0000000000000111: 05	leaq	24(%rsp), %rdi
0000000000000104: 03	movq	%rsp, %rdi							   |	0000000000000116: 05	callq	0x453260 <BloombergLP::balber::BerEncoderOptions::~BerEncoderOpt
0000000000000107: 05	callq	0x4532b0 <BloombergLP::balber::BerEncoderOptions::~BerEncoderOpt   |	000000000000011b: 03	movq	%rbx, %rdi
000000000000010c: 11	movq	$0, 264(%rbx)							   |	000000000000011e: 05	callq	0x404910 <_Unwind_Resume@plt>
0000000000000117: 03	movq	(%r14), %rax							   |	0000000000000123: 03	movq	%rax, %rbx
000000000000011a: 03	movq	%r14, %rdi							   |	0000000000000126: 05	movq	16(%rsp), %rax
000000000000011d: 03	callq	*48(%rax)							   |	000000000000012b: 06	decl	272(%rax)
0000000000000120: 03	movl	%r15d, %eax							   |	0000000000000131: 03	movq	%rbx, %rdi
0000000000000123: 04	addq	$16, %rsp							   |	0000000000000134: 05	callq	0x404910 <_Unwind_Resume@plt>
0000000000000127: 01	popq	%rbx								   |	0000000000000139: 07	nopl	(%rax)
0000000000000128: 02	popq	%r12								   <
000000000000012a: 02	popq	%r14								   <
000000000000012c: 02	popq	%r15								   <
000000000000012e: 01	popq	%rbp								   <
000000000000012f: 01	retq									   <
0000000000000130: 03	movq	%rax, %rbp							   <
0000000000000133: 06	decl	272(%rbx)							   <
0000000000000139: 03	movq	%rsp, %rdi							   <
000000000000013c: 05	callq	0x4532b0 <BloombergLP::balber::BerEncoderOptions::~BerEncoderOpt   <
0000000000000141: 03	movq	%rbp, %rdi							   <
0000000000000144: 05	callq	0x404910 <_Unwind_Resume@plt>					   <
0000000000000149: 06	decl	272(%rbx)							   <
000000000000014f: 03	movq	%rax, %rdi							   <
0000000000000152: 05	callq	0x404910 <_Unwind_Resume@plt>					   <
0000000000000157: 09	nopw	(%rax,%rax)							   <
