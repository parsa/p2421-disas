    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x45c880 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice.operator_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_const_ ()          | int64_t method_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_operator_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_const_ (int64_t arg2, uint32_t arg1) {
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::operator=(BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice const&) */
    0x0045c880 push rbp                                                                                                                                              |     
    0x0045c881 push rbx                                                                                                                                              |     
    0x0045c882 push rax                                                                                                                                              |     
    0x0045c883 mov rbx, rdi                                                                                                                                          |     rbx = rdi;
    0x0045c886 cmp rdi, rsi                                                                                                                                          |     
                                                                                                                                                                     |     if (rdi != rsi) {
    0x0045c889 je 0x45c903                                                                                                                                           |         
    0x0045c88b mov eax, dword [rsi + 0x30]                                                                                                                           |         eax = *((rsi + 0x30));
    0x0045c88e cmp eax, 1                                                                                                                                            |         
                                                                                                                                                                     |         if (eax != 1) {
    0x0045c891 je 0x45c8a9                                                                                                                                           |             
    0x0045c893 test eax, eax                                                                                                                                         |             
                                                                                                                                                                     |             if (eax == 0) {
    0x0045c895 jne 0x45c8b3                                                                                                                                          |                 
    0x0045c897 mov ebp, dword [rsi]                                                                                                                                  |                 ebp = *(rsi);
    0x0045c899 mov eax, dword [rbx + 0x30]                                                                                                                           |                 eax = *((rbx + 0x30));
    0x0045c89c cmp eax, 1                                                                                                                                            |                 
                                                                                                                                                                     |                 if (eax != 1) {
    0x0045c89f je 0x45c8de                                                                                                                                           |                     
    0x0045c8a1 test eax, eax                                                                                                                                         |                     
                                                                                                                                                                     |                     if (eax == 0) {
    0x0045c8a3 jne 0x45c8fa                                                                                                                                          |                         
    0x0045c8a5 mov dword [rbx], ebp                                                                                                                                  |                         *(rbx) = ebp;
    0x0045c8a7 jmp 0x45c903                                                                                                                                          |                         
                                                                                                                                                                     |                     } else {
    0x0045c8a9 mov rdi, rbx                                                                                                                                          |                         
    0x0045c8ac call 0x45c970                                                                                                                                         |                         BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::makeMyChoice2(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rbx, rsi);
    0x0045c8b1 jmp 0x45c903                                                                                                                                          |                         
                                                                                                                                                                     |                     } else {
    0x0045c8b3 cmp dword [rbx + 0x30], 1                                                                                                                             |                         
                                                                                                                                                                     |                     }
                                                                                                                                                                     |                     if (*((rbx + 0x30)) == 1) {
    0x0045c8b7 jne 0x45c8d5                                                                                                                                          |                         
    0x0045c8b9 cmp qword [rbx + 0x20], 0x17                                                                                                                          |                         
                                                                                                                                                                     |                         if (*((rbx + 0x20)) != 0x17) {
    0x0045c8be je 0x45c8cd                                                                                                                                           |                             
    0x0045c8c0 mov rsi, qword [rbx]                                                                                                                                  |                             rsi = *(rbx);
    0x0045c8c3 mov rdi, qword [rbx + 0x28]                                                                                                                           |                             rdi = *((rbx + 0x28));
    0x0045c8c7 mov rax, qword [rdi]                                                                                                                                  |                             rax = *(rdi);
    0x0045c8ca call qword [rax + 0x18]                                                                                                                               |                             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                     |                         }
    0x0045c8cd mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                                            |                         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                                                     |                     }
    0x0045c8d5 mov dword [rbx + 0x30], 0xffffffff                                                                                                                    |                     *((rbx + 0x30)) = 0xffffffff;
    0x0045c8dc jmp 0x45c903                                                                                                                                          |                     
                                                                                                                                                                     |                 } else {
    0x0045c8de cmp qword [rbx + 0x20], 0x17                                                                                                                          |                     
                                                                                                                                                                     |                 }
                                                                                                                                                                     |             }
                                                                                                                                                                     |             if (*((rbx + 0x20)) != 0x17) {
    0x0045c8e3 je 0x45c8f2                                                                                                                                           |                 
    0x0045c8e5 mov rsi, qword [rbx]                                                                                                                                  |                 rsi = *(rbx);
    0x0045c8e8 mov rdi, qword [rbx + 0x28]                                                                                                                           |                 rdi = *((rbx + 0x28));
    0x0045c8ec mov rax, qword [rdi]                                                                                                                                  |                 rax = *(rdi);
    0x0045c8ef call qword [rax + 0x18]                                                                                                                               |                 uint64_t (*rax + 0x18)() ();
                                                                                                                                                                     |             }
    0x0045c8f2 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                                            |             *((rbx + 0x18)) = 0xffffffffffffffff;
    0x0045c8fa mov dword [rbx], ebp                                                                                                                                  |             *(rbx) = ebp;
    0x0045c8fc mov dword [rbx + 0x30], 0                                                                                                                             |             *((rbx + 0x30)) = 0;
                                                                                                                                                                     |         }
                                                                                                                                                                     |     }
    0x0045c903 mov rax, rbx                                                                                                                                          |     rax = rbx;
    0x0045c906 add rsp, 8                                                                                                                                            |     
    0x0045c90a pop rbx                                                                                                                                               |     
    0x0045c90b pop rbp                                                                                                                                               |     
    0x0045c90c ret                                                                                                                                                   |     return rax;
                                                                                                                                                                     | }
