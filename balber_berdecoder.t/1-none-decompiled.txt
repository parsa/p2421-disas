    ; assembly                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x4434c0 */
                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::balber::BerEncoder.encode_unsigned_long_long__std::__1::basic_streambuf_char__std::__1::char_traits_char_____unsigned_long_long_const_ ()        | int64_t method_int_BloombergLP::balber::BerEncoder_encode_unsigned_long_long_std::_1::basic_streambuf_char_std::_1::char_traits_char_unsigned_long_long_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                     |     /* int BloombergLP::balber::BerEncoder::encode<unsigned long long>(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, unsigned long long const&) */
    0x004434c0 push rbp                                                                                                                                                              |     
    0x004434c1 push r15                                                                                                                                                              |     
    0x004434c3 push r14                                                                                                                                                              |     
    0x004434c5 push rbx                                                                                                                                                              |     
    0x004434c6 sub rsp, 0x28                                                                                                                                                         |     
    0x004434ca mov r15, rdx                                                                                                                                                          |     r15 = rdx;
    0x004434cd mov r14, rsi                                                                                                                                                          |     r14 = rsi;
    0x004434d0 mov rbx, rdi                                                                                                                                                          |     rbx = rdi;
    0x004434d3 mov qword [rdi + 0x108], rsi                                                                                                                                          |     *((rdi + 0x108)) = rsi;
    0x004434da mov dword [rdi + 0x100], 0                                                                                                                                            |     *((rdi + 0x100)) = 0;
    0x004434e4 mov rbp, qword [rdi + 0xf8]                                                                                                                                           |     rbp = *((rdi + 0xf8));
    0x004434eb test rbp, rbp                                                                                                                                                         |     
                                                                                                                                                                                     |     if (rbp != 0) {
    0x004434ee je 0x44350d                                                                                                                                                           |         
    0x004434f0 mov rsi, qword [rbp + 0x30]                                                                                                                                           |         rsi = *((rbp + 0x30));
    0x004434f4 mov rdi, qword [rbp + 0x48]                                                                                                                                           |         rdi = *((rbp + 0x48));
    0x004434f8 mov rax, qword [rdi]                                                                                                                                                  |         rax = *(rdi);
    0x004434fb call qword [rax + 0x18]                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
    0x004434fe xorps xmm0, xmm0                                                                                                                                                      |         __asm ("xorps xmm0, xmm0");
    0x00443501 movups xmmword [rbp + 0x30], xmm0                                                                                                                                     |         __asm ("movups xmmword [rbp + 0x30], xmm0");
    0x00443505 mov qword [rbp + 0x40], 0                                                                                                                                             |         *((rbp + 0x40)) = 0;
                                                                                                                                                                                     |     }
    0x0044350d mov dword [rbx + 0x110], 0                                                                                                                                            |     *((rbx + 0x110)) = 0;
    0x00443517 cmp qword [rbx], 0                                                                                                                                                    |     
                                                                                                                                                                                     |     if (*(rbx) != 0) {
    0x0044351b je 0x443552                                                                                                                                                           |         
    0x0044351d mov qword [rsp], rbx                                                                                                                                                  |         *(rsp) = rbx;
    0x00443521 mov dword [rsp + 8], 0                                                                                                                                                |         *((rsp + 8)) = 0;
    0x00443529 mov qword [rsp + 0x10], rbx                                                                                                                                           |         *((rsp + 0x10)) = rbx;
    0x0044352e mov dword [rbx + 0x110], 1                                                                                                                                            |         *((rbx + 0x110)) = 1;
    0x00443538 mov rdi, rsp                                                                                                                                                          |         
    0x0044353b mov rsi, r15                                                                                                                                                          |         
    0x0044353e call 0x44e260                                                                                                                                                         |         eax = intBloombergLP::balber::BerEncoder_UniversalElementVisitor::operator()<unsigned long long>(unsigned long longconst&) (rsp, r15);
    0x00443543 mov ebp, eax                                                                                                                                                          |         
    0x00443545 mov rax, qword [rsp + 0x10]                                                                                                                                           |         rax = *((rsp + 0x10));
    0x0044354a dec dword [rax + 0x110]                                                                                                                                               |         *((rax + 0x110))--;
    0x00443550 jmp 0x4435a2                                                                                                                                                          |         
                                                                                                                                                                                     |     } else {
    0x00443552 lea rbp, [rsp + 0x18]                                                                                                                                                 |         rbp = rsp + 0x18;
    0x00443557 mov rdi, rbp                                                                                                                                                          |         rdi = rbp;
    0x0044355a call 0x453210                                                                                                                                                         |         BloombergLP::balber::BerEncoderOptions::BerEncoderOptions() ();
    0x0044355f mov qword [rbx], rbp                                                                                                                                                  |         *(rbx) = rbp;
    0x00443562 mov qword [rsp], rbx                                                                                                                                                  |         *(rsp) = rbx;
    0x00443566 mov dword [rsp + 8], 0                                                                                                                                                |         *((rsp + 8)) = 0;
    0x0044356e mov qword [rsp + 0x10], rbx                                                                                                                                           |         *((rsp + 0x10)) = rbx;
    0x00443573 inc dword [rbx + 0x110]                                                                                                                                               |         *((rbx + 0x110))++;
    0x00443579 mov rdi, rsp                                                                                                                                                          |         
    0x0044357c mov rsi, r15                                                                                                                                                          |         
    0x0044357f call 0x44e260                                                                                                                                                         |         eax = intBloombergLP::balber::BerEncoder_UniversalElementVisitor::operator()<unsigned long long>(unsigned long longconst&) (rsp, r15);
    0x00443584 mov ebp, eax                                                                                                                                                          |         
    0x00443586 mov qword [rbx], 0                                                                                                                                                    |         *(rbx) = 0;
    0x0044358d mov rax, qword [rsp + 0x10]                                                                                                                                           |         rax = *((rsp + 0x10));
    0x00443592 dec dword [rax + 0x110]                                                                                                                                               |         *((rax + 0x110))--;
    0x00443598 lea rdi, [rsp + 0x18]                                                                                                                                                 |         rdi = rsp + 0x18;
    0x0044359d call 0x453260                                                                                                                                                         |         BloombergLP::balber::BerEncoderOptions::~BerEncoderOptions() ();
                                                                                                                                                                                     |     }
    0x004435a2 mov qword [rbx + 0x108], 0                                                                                                                                            |     *((rbx + 0x108)) = 0;
    0x004435ad mov rax, qword [r14]                                                                                                                                                  |     rax = *(r14);
    0x004435b0 mov rdi, r14                                                                                                                                                          |     rdi = r14;
    0x004435b3 call qword [rax + 0x30]                                                                                                                                               |     uint64_t (*rax + 0x30)() ();
    0x004435b6 mov eax, ebp                                                                                                                                                          |     eax = ebp;
    0x004435b8 add rsp, 0x28                                                                                                                                                         |     
    0x004435bc pop rbx                                                                                                                                                               |     
    0x004435bd pop r14                                                                                                                                                               |     
    0x004435bf pop r15                                                                                                                                                               |     
    0x004435c1 pop rbp                                                                                                                                                               |     
    0x004435c2 ret                                                                                                                                                                   |     return rax;
                                                                                                                                                                                     | }
