    ; assembly                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                         | /* balber_berdecoder.t/assume @ 0x454e10 */
                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::balber::BerUtil_Iso8601ImpUtil.putDatetimeValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Datetime_const__BloombergLP::balber::BerEncoderOptions_const_ ()       | uint64_t method_BloombergLP::balber::BerUtil_Iso8601ImpUtil_putDatetimeValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Datetime_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                         |     int64_t var_8h;
                                                                                                                                                                                                                                         |     int64_t var_10h;
                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                         |     /* BloombergLP::balber::BerUtil_Iso8601ImpUtil::putDatetimeValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Datetime const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00454e10 push r14                                                                                                                                                                                                                  |     
    0x00454e12 push rbx                                                                                                                                                                                                                  |     
    0x00454e13 sub rsp, 0x38                                                                                                                                                                                                             |     
    0x00454e17 mov rbx, rsi                                                                                                                                                                                                              |     rbx = rsi;
    0x00454e1a mov r14, rdi                                                                                                                                                                                                              |     r14 = rdi;
    0x00454e1d mov dword [rsp + 8], 3                                                                                                                                                                                                    |     *((rsp + 8)) = 3;
    0x00454e25 test rdx, rdx                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                         |     if (rdx != 0) {
    0x00454e28 je 0x454e2e                                                                                                                                                                                                               |         
    0x00454e2a mov esi, dword [rdx]                                                                                                                                                                                                      |         esi = *(rdx);
    0x00454e2c jmp 0x454e33                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                         |     } else {
    0x00454e2e mov esi, 6                                                                                                                                                                                                                |         
                                                                                                                                                                                                                                         |     }
    0x00454e33 lea rdi, [rsp + 8]                                                                                                                                                                                                        |     
    0x00454e38 call 0x469860                                                                                                                                                                                                             |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x00454e3d lea rdi, [rsp + 0x10]                                                                                                                                                                                                     |     
    0x00454e42 lea rcx, [rsp + 8]                                                                                                                                                                                                        |     
    0x00454e47 mov esi, 0x26                                                                                                                                                                                                             |     
    0x00454e4c mov rdx, rbx                                                                                                                                                                                                              |     
    0x00454e4f call 0x466ca0                                                                                                                                                                                                             |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Datetimeconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, rbx, rsp + 8);
    0x00454e54 mov ebx, eax                                                                                                                                                                                                              |     ebx = eax;
    0x00454e56 mov rdi, r14                                                                                                                                                                                                              |     
    0x00454e59 mov esi, eax                                                                                                                                                                                                              |     
    0x00454e5b call 0x453df0                                                                                                                                                                                                             |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00454e60 mov ecx, 0xffffffff                                                                                                                                                                                                       |     ecx = 0xffffffff;
    0x00454e65 test eax, eax                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                         |     if (eax == 0) {
    0x00454e67 jne 0x454e87                                                                                                                                                                                                              |         
    0x00454e69 movsxd rbx, ebx                                                                                                                                                                                                           |         rbx = (int64_t) ebx;
    0x00454e6c mov rax, qword [r14]                                                                                                                                                                                                      |         rax = *(r14);
    0x00454e6f lea rsi, [rsp + 0x10]                                                                                                                                                                                                     |         rsi = rsp + 0x10;
    0x00454e74 mov rdi, r14                                                                                                                                                                                                              |         rdi = r14;
    0x00454e77 mov rdx, rbx                                                                                                                                                                                                              |         rdx = rbx;
    0x00454e7a call qword [rax + 0x60]                                                                                                                                                                                                   |         rax = uint64_t (*rax + 0x60)() ();
    0x00454e7d xor ecx, ecx                                                                                                                                                                                                              |         ecx = 0;
    0x00454e7f cmp rax, rbx                                                                                                                                                                                                              |         
    0x00454e82 setne cl                                                                                                                                                                                                                  |         cl = (rax != rbx) ? 1 : 0;
    0x00454e85 neg ecx                                                                                                                                                                                                                   |         ecx = -ecx;
                                                                                                                                                                                                                                         |     }
    0x00454e87 mov eax, ecx                                                                                                                                                                                                              |     eax = ecx;
    0x00454e89 add rsp, 0x38                                                                                                                                                                                                             |     
    0x00454e8d pop rbx                                                                                                                                                                                                                   |     
    0x00454e8e pop r14                                                                                                                                                                                                                   |     
    0x00454e90 ret                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                         | }
