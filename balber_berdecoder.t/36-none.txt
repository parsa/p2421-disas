    ; assembly                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x454ca0 */
                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balber::BerUtil_Iso8601ImpUtil.putDateValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Date_const__BloombergLP::balber::BerEncoderOptions_const_ ()           | uint64_t method_BloombergLP::balber::BerUtil_Iso8601ImpUtil_putDateValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Date_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                     |     /* BloombergLP::balber::BerUtil_Iso8601ImpUtil::putDateValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Date const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00454ca0 push r15                                                                                                                                                                                                              |     
    0x00454ca2 push r14                                                                                                                                                                                                              |     
    0x00454ca4 push rbx                                                                                                                                                                                                              |     
    0x00454ca5 sub rsp, 0x40                                                                                                                                                                                                         |     
    0x00454ca9 mov r15, rsi                                                                                                                                                                                                          |     r15 = rsi;
    0x00454cac mov r14, rdi                                                                                                                                                                                                          |     r14 = rdi;
    0x00454caf mov dword [rsp + 8], 3                                                                                                                                                                                                |     *((rsp + 8)) = 3;
    0x00454cb7 test rdx, rdx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (rdx != 0) {
    0x00454cba je 0x454cc0                                                                                                                                                                                                           |         
    0x00454cbc mov esi, dword [rdx]                                                                                                                                                                                                  |         esi = *(rdx);
    0x00454cbe jmp 0x454cc5                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                     |     } else {
    0x00454cc0 mov esi, 6                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                     |     }
    0x00454cc5 lea rbx, [rsp + 8]                                                                                                                                                                                                    |     rbx = rsp + 8;
    0x00454cca mov rdi, rbx                                                                                                                                                                                                          |     
    0x00454ccd call 0x469bc0                                                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x00454cd2 lea rdi, [rsp + 0x10]                                                                                                                                                                                                 |     
    0x00454cd7 mov esi, 0x26                                                                                                                                                                                                         |     
    0x00454cdc mov rdx, r15                                                                                                                                                                                                          |     
    0x00454cdf mov rcx, rbx                                                                                                                                                                                                          |     rcx = rbx;
    0x00454ce2 call 0x4662f0                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Dateconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15);
    0x00454ce7 mov ebx, eax                                                                                                                                                                                                          |     ebx = eax;
    0x00454ce9 mov rdi, r14                                                                                                                                                                                                          |     
    0x00454cec mov esi, eax                                                                                                                                                                                                          |     
    0x00454cee call 0x453da0                                                                                                                                                                                                         |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00454cf3 mov ecx, eax                                                                                                                                                                                                          |     ecx = eax;
    0x00454cf5 mov eax, 0xffffffff                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x00454cfa test ecx, ecx                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                     |     if (ecx == 0) {
    0x00454cfc jne 0x454d1f                                                                                                                                                                                                          |         
    0x00454cfe movsxd rbx, ebx                                                                                                                                                                                                       |         rbx = (int64_t) ebx;
    0x00454d01 mov rax, qword [r14]                                                                                                                                                                                                  |         rax = *(r14);
    0x00454d04 lea rsi, [rsp + 0x10]                                                                                                                                                                                                 |         rsi = rsp + 0x10;
    0x00454d09 mov rdi, r14                                                                                                                                                                                                          |         rdi = r14;
    0x00454d0c mov rdx, rbx                                                                                                                                                                                                          |         rdx = rbx;
    0x00454d0f call qword [rax + 0x60]                                                                                                                                                                                               |         rax = uint64_t (*rax + 0x60)() ();
    0x00454d12 mov rcx, rax                                                                                                                                                                                                          |         rcx = rax;
    0x00454d15 xor eax, eax                                                                                                                                                                                                          |         eax = 0;
    0x00454d17 cmp rcx, rbx                                                                                                                                                                                                          |         
    0x00454d1a setne al                                                                                                                                                                                                              |         al = (rcx != rbx) ? 1 : 0;
    0x00454d1d neg eax                                                                                                                                                                                                               |         eax = -eax;
                                                                                                                                                                                                                                     |     }
    0x00454d1f add rsp, 0x40                                                                                                                                                                                                         |     
    0x00454d23 pop rbx                                                                                                                                                                                                               |     
    0x00454d24 pop r14                                                                                                                                                                                                               |     
    0x00454d26 pop r15                                                                                                                                                                                                               |     
    0x00454d28 ret                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                     | }
