    ; assembly                                                           | /* r2dec pseudo code output */
                                                                         | /* balber_berdecoder.t/assume @ 0x46b880 */
                                                                         | #include <stdint.h>
                                                                         |  
    ; (fcn) method.BloombergLP::bdlt::Time.setMicrosecond_int_ ()        | int64_t method_BloombergLP::bdlt::Time_setMicrosecond_int_ (int64_t arg2, int64_t arg1) {
                                                                         |     char * var_8h;
                                                                         |     char * var_10h;
                                                                         |     int64_t var_18h;
                                                                         |     char * var_20h;
                                                                         |     int64_t var_28h;
                                                                         |     rsi = arg2;
                                                                         |     rdi = arg1;
                                                                         |     /* BloombergLP::bdlt::Time::setMicrosecond(int) */
    0x0046b880 push rbp                                                  |     
    0x0046b881 push r14                                                  |     
    0x0046b883 push rbx                                                  |     
    0x0046b884 sub rsp, 0x30                                             |     
    0x0046b888 mov ebp, esi                                              |     
    0x0046b88a mov rbx, rdi                                              |     rbx = rdi;
    0x0046b88d movabs r14, 0x4000000000                                  |     r14 = 0x4000000000;
    0x0046b897 mov rcx, qword [rdi]                                      |     rcx = *(rdi);
    0x0046b89a cmp rcx, r14                                              |     
                                                                         |     if (rcx < r14) {
    0x0046b89d jl 0x46b8fe                                               |         goto label_0;
                                                                         |     }
    0x0046b89f movabs rax, 0xffffffbfffffffff                            |     rax = 0xffffffbfffffffff;
    0x0046b8a9 and rcx, rax                                              |     rcx &= rax;
                                                                         |     do {
    0x0046b8ac movabs rax, 0x141dd75fff                                  |         rax = 0x141dd75fff;
    0x0046b8b6 cmp rcx, rax                                              |         
                                                                         |         if (rcx <= rax) {
    0x0046b8b9 jg 0x46b8ed                                               |             
    0x0046b8bb movabs rdx, 0x20c49ba5e353f7cf                            |             rdx = 0x20c49ba5e353f7cf;
    0x0046b8c5 mov rax, rcx                                              |             rax = rcx;
    0x0046b8c8 imul rdx                                                  |             rdx:rax = rax * rdx;
    0x0046b8cb mov rax, rdx                                              |             rax = rdx;
    0x0046b8ce shr rax, 0x3f                                             |             rax >>= 0x3f;
    0x0046b8d2 sar rdx, 7                                                |             rdx >>= 7;
    0x0046b8d6 add rdx, rax                                              |             rdx += rax;
    0x0046b8d9 imul rax, rdx, 0x3e8                                      |             rax = rdx * 0x3e8;
    0x0046b8e0 mov edx, ebp                                              |             edx = ebp;
    0x0046b8e2 add rdx, rcx                                              |             rdx += rcx;
    0x0046b8e5 sub rax, rcx                                              |             rax -= rcx;
    0x0046b8e8 add rax, rdx                                              |             rax += rdx;
    0x0046b8eb jmp 0x46b8ef                                              |             
                                                                         |         } else {
    0x0046b8ed mov eax, ebp                                              |             eax = ebp;
                                                                         |         }
    0x0046b8ef or rax, r14                                               |         rax |= r14;
    0x0046b8f2 mov qword [rbx], rax                                      |         *(rbx) = rax;
    0x0046b8f5 add rsp, 0x30                                             |         
    0x0046b8f9 pop rbx                                                   |         
    0x0046b8fa pop r14                                                   |         
    0x0046b8fc pop rbp                                                   |         
    0x0046b8fd ret                                                       |         return rax;
                                                                         | label_0:
    0x0046b8fe mov edi, 0x6f73e0                                         |         
    0x0046b903 call 0x46f120                                             |         eax = BloombergLP::bsls::Review::updateCount(BloombergLP::bsls::Atomic_TypeTraits<BloombergLP::bsls::AtomicOperations_ALL_ALL_ClangIntrinsics>::Int*) (method.BloombergLP::bdlt::Time.invalidMicrosecondsFromMidnight___const::__0::operator_____const::count);
    0x0046b908 mov qword [rsp + 8], 0x4cc7d0                             |         *((rsp + 8)) = "detected invalid 'bdlt::Time'; see TEAM 579660115";
    0x0046b911 mov qword [rsp + 0x10], 0x4cc802                          |         *((rsp + 0x10)) = "/home/parsa/experiments/assumptions/crush/ccm-assume/groups/bdl/bdlt/bdlt_time.cpp";
    0x0046b91a mov dword [rsp + 0x18], 0xcb                              |         *((rsp + 0x18)) = 0xcb;
    0x0046b922 mov qword [rsp + 0x20], 0x4cd41a                          |         *((rsp + 0x20)) = "R-INV";
    0x0046b92b mov dword [rsp + 0x28], eax                               |         *((rsp + 0x28)) = eax;
    0x0046b92f lea rdi, [rsp + 8]                                        |         rdi = rsp + 8;
    0x0046b934 call 0x46f140                                             |         BloombergLP::bsls::Review::invokeHandler(BloombergLP::bsls::ReviewViolationconst&) ();
    0x0046b939 imul rcx, qword [rbx], 0x3e8                              |         rcx = *(rbx) * 0x3e8;
    0x0046b940 jmp 0x46b8ac                                              |         
                                                                         |     } while (1);
                                                                         | }
