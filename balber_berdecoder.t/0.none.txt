    ; assembly                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                         | /* balber_berdecoder.t/none @ 0x442310 */
                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::balber::BerEncoder.encode_unsigned_int__std::__1::basic_streambuf_char__std::__1::char_traits_char_____unsigned_int_const_ ()        | int64_t method_int_BloombergLP::balber::BerEncoder_encode_unsigned_int_std::_1::basic_streambuf_char_std::_1::char_traits_char_unsigned_int_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                         |     int64_t var_8h;
                                                                                                                                                                         |     int64_t var_10h;
                                                                                                                                                                         |     int64_t var_18h;
                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                         |     /* int BloombergLP::balber::BerEncoder::encode<unsigned int>(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, unsigned int const&) */
    0x00442310 push rbp                                                                                                                                                  |     
    0x00442311 push r15                                                                                                                                                  |     
    0x00442313 push r14                                                                                                                                                  |     
    0x00442315 push rbx                                                                                                                                                  |     
    0x00442316 sub rsp, 0x28                                                                                                                                             |     
    0x0044231a mov r15, rdx                                                                                                                                              |     r15 = rdx;
    0x0044231d mov r14, rsi                                                                                                                                              |     r14 = rsi;
    0x00442320 mov rbx, rdi                                                                                                                                              |     rbx = rdi;
    0x00442323 mov qword [rdi + 0x108], rsi                                                                                                                              |     *((rdi + 0x108)) = rsi;
    0x0044232a mov dword [rdi + 0x100], 0                                                                                                                                |     *((rdi + 0x100)) = 0;
    0x00442334 mov rbp, qword [rdi + 0xf8]                                                                                                                               |     rbp = *((rdi + 0xf8));
    0x0044233b test rbp, rbp                                                                                                                                             |     
                                                                                                                                                                         |     if (rbp != 0) {
    0x0044233e je 0x44235d                                                                                                                                               |         
    0x00442340 mov rsi, qword [rbp + 0x30]                                                                                                                               |         rsi = *((rbp + 0x30));
    0x00442344 mov rdi, qword [rbp + 0x48]                                                                                                                               |         rdi = *((rbp + 0x48));
    0x00442348 mov rax, qword [rdi]                                                                                                                                      |         rax = *(rdi);
    0x0044234b call qword [rax + 0x18]                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
    0x0044234e xorps xmm0, xmm0                                                                                                                                          |         __asm ("xorps xmm0, xmm0");
    0x00442351 movups xmmword [rbp + 0x30], xmm0                                                                                                                         |         __asm ("movups xmmword [rbp + 0x30], xmm0");
    0x00442355 mov qword [rbp + 0x40], 0                                                                                                                                 |         *((rbp + 0x40)) = 0;
                                                                                                                                                                         |     }
    0x0044235d mov dword [rbx + 0x110], 0                                                                                                                                |     *((rbx + 0x110)) = 0;
    0x00442367 cmp qword [rbx], 0                                                                                                                                        |     
                                                                                                                                                                         |     if (*(rbx) != 0) {
    0x0044236b je 0x4423a2                                                                                                                                               |         
    0x0044236d mov qword [rsp], rbx                                                                                                                                      |         *(rsp) = rbx;
    0x00442371 mov dword [rsp + 8], 0                                                                                                                                    |         *((rsp + 8)) = 0;
    0x00442379 mov qword [rsp + 0x10], rbx                                                                                                                               |         *((rsp + 0x10)) = rbx;
    0x0044237e mov dword [rbx + 0x110], 1                                                                                                                                |         *((rbx + 0x110)) = 1;
    0x00442388 mov rdi, rsp                                                                                                                                              |         
    0x0044238b mov rsi, r15                                                                                                                                              |         
    0x0044238e call 0x44d6d0                                                                                                                                             |         eax = intBloombergLP::balber::BerEncoder_UniversalElementVisitor::operator()<unsignedint>(unsignedintconst&) (rsp, r15);
    0x00442393 mov ebp, eax                                                                                                                                              |         
    0x00442395 mov rax, qword [rsp + 0x10]                                                                                                                               |         rax = *((rsp + 0x10));
    0x0044239a dec dword [rax + 0x110]                                                                                                                                   |         *((rax + 0x110))--;
    0x004423a0 jmp 0x4423f2                                                                                                                                              |         
                                                                                                                                                                         |     } else {
    0x004423a2 lea rbp, [rsp + 0x18]                                                                                                                                     |         rbp = rsp + 0x18;
    0x004423a7 mov rdi, rbp                                                                                                                                              |         rdi = rbp;
    0x004423aa call 0x453210                                                                                                                                             |         BloombergLP::balber::BerEncoderOptions::BerEncoderOptions() ();
    0x004423af mov qword [rbx], rbp                                                                                                                                      |         *(rbx) = rbp;
    0x004423b2 mov qword [rsp], rbx                                                                                                                                      |         *(rsp) = rbx;
    0x004423b6 mov dword [rsp + 8], 0                                                                                                                                    |         *((rsp + 8)) = 0;
    0x004423be mov qword [rsp + 0x10], rbx                                                                                                                               |         *((rsp + 0x10)) = rbx;
    0x004423c3 inc dword [rbx + 0x110]                                                                                                                                   |         *((rbx + 0x110))++;
    0x004423c9 mov rdi, rsp                                                                                                                                              |         
    0x004423cc mov rsi, r15                                                                                                                                              |         
    0x004423cf call 0x44d6d0                                                                                                                                             |         eax = intBloombergLP::balber::BerEncoder_UniversalElementVisitor::operator()<unsignedint>(unsignedintconst&) (rsp, r15);
    0x004423d4 mov ebp, eax                                                                                                                                              |         
    0x004423d6 mov qword [rbx], 0                                                                                                                                        |         *(rbx) = 0;
    0x004423dd mov rax, qword [rsp + 0x10]                                                                                                                               |         rax = *((rsp + 0x10));
    0x004423e2 dec dword [rax + 0x110]                                                                                                                                   |         *((rax + 0x110))--;
    0x004423e8 lea rdi, [rsp + 0x18]                                                                                                                                     |         rdi = rsp + 0x18;
    0x004423ed call 0x453260                                                                                                                                             |         BloombergLP::balber::BerEncoderOptions::~BerEncoderOptions() ();
                                                                                                                                                                         |     }
    0x004423f2 mov qword [rbx + 0x108], 0                                                                                                                                |     *((rbx + 0x108)) = 0;
    0x004423fd mov rax, qword [r14]                                                                                                                                      |     rax = *(r14);
    0x00442400 mov rdi, r14                                                                                                                                              |     rdi = r14;
    0x00442403 call qword [rax + 0x30]                                                                                                                                   |     uint64_t (*rax + 0x30)() ();
    0x00442406 mov eax, ebp                                                                                                                                              |     eax = ebp;
    0x00442408 add rsp, 0x28                                                                                                                                             |     
    0x0044240c pop rbx                                                                                                                                                   |     
    0x0044240d pop r14                                                                                                                                                   |     
    0x0044240f pop r15                                                                                                                                                   |     
    0x00442411 pop rbp                                                                                                                                                   |     
    0x00442412 ret                                                                                                                                                       |     return rax;
                                                                                                                                                                         | }
