    ; assembly                                                                                               | /* r2dec pseudo code output */
                                                                                                             | /* balber_berdecoder.t/assume @ 0x4696b0 */
                                                                                                             | #include <stdint.h>
                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlt::Iso8601Util.parse_BloombergLP::bdlt::TimeTz__char_const__int_ ()       | int64_t method_BloombergLP::bdlt::Iso8601Util_parse_BloombergLP::bdlt::TimeTz_char_const_int_ (uint32_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                             |     uint32_t var_bh;
                                                                                                             |     int64_t var_4h;
                                                                                                             |     int64_t var_8h;
                                                                                                             |     int64_t var_18h_2;
                                                                                                             |     uint32_t var_1ch;
                                                                                                             |     uint32_t var_18h;
                                                                                                             |     int64_t var_28h;
                                                                                                             |     int64_t var_2ch;
                                                                                                             |     uint32_t var_30h;
                                                                                                             |     rdx = arg3;
                                                                                                             |     rsi = arg2;
                                                                                                             |     rdi = arg1;
                                                                                                             |     /* BloombergLP::bdlt::Iso8601Util::parse(BloombergLP::bdlt::TimeTz*, char const*, int) */
    0x004696b0 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x004696b5 cmp edx, 8                                                                                    |     
                                                                                                             |     if (edx < 8) {
    0x004696b8 jb 0x46972b                                                                                   |         goto label_1;
                                                                                                             |     }
    0x004696ba push r15                                                                                      |     
    0x004696bc push r14                                                                                      |     
    0x004696be push rbx                                                                                      |     
    0x004696bf sub rsp, 0x30                                                                                 |     
    0x004696c3 mov rbx, rsi                                                                                  |     rbx = rsi;
    0x004696c6 mov r14, rdi                                                                                  |     r14 = rdi;
    0x004696c9 mov qword [rsp + 0x18], rsi                                                                   |     *((rsp + 0x18)) = rsi;
    0x004696ce mov r15d, edx                                                                                 |     r15d = edx;
    0x004696d1 add r15, rsi                                                                                  |     r15 += rsi;
    0x004696d4 movabs rax, 0x541dd76000                                                                      |     rax = 0x541dd76000;
    0x004696de mov qword [rsp + 8], rax                                                                      |     *((rsp + 8)) = rax;
    0x004696e3 sub rsp, 8                                                                                    |     
    0x004696e7 lea rax, [rsp + 0xb]                                                                          |     rax = rsp + 0xb;
    0x004696ec lea rdi, [rsp + 0x20]                                                                         |     rdi = rsp + 0x20;
    0x004696f1 lea rsi, [rsp + 0x1c]                                                                         |     rsi = rsp + 0x1c;
    0x004696f6 lea rdx, [rsp + 0x2c]                                                                         |     rdx = rsp + 0x2c;
    0x004696fb lea rcx, [rsp + 0x28]                                                                         |     rcx = rsp + 0x28;
    0x00469700 lea r8, [rsp + 0x18]                                                                          |     r8 = rsp + 0x18;
    0x00469705 lea r9, [rsp + 0x30]                                                                          |     r9 = rsp + 0x30;
    0x0046970a push r15                                                                                      |     
    0x0046970c push rbx                                                                                      |     
    0x0046970d push rax                                                                                      |     
    0x0046970e call 0x468a80                                                                                 |     eax = (anonymousnamespace)::u::parseTime(char const**,int*,int*,int*,int*,long long*,bool*,char const*,char const*,int) ();
    0x00469713 add rsp, 0x20                                                                                 |     
    0x00469717 mov ecx, eax                                                                                  |     ecx = eax;
    0x00469719 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x0046971e test ecx, ecx                                                                                 |     
    0x00469720 je 0x46972c                                                                                   |     
                                                                                                             |     while (esi != 0x18) {
                                                                                                             | label_0:
    0x00469722 add rsp, 0x30                                                                                 |         
    0x00469726 pop rbx                                                                                       |         
    0x00469727 pop r14                                                                                       |         
    0x00469729 pop r15                                                                                       |         
                                                                                                             | label_1:
    0x0046972b ret                                                                                           |         return rax;
    0x0046972c mov esi, dword [rsp + 0x14]                                                                   |         esi = *((rsp + 0x14));
    0x00469730 mov edx, dword [rsp + 0x24]                                                                   |         edx = *((rsp + 0x24));
    0x00469734 mov ecx, dword [rsp + 0x20]                                                                   |         ecx = *((rsp + 0x20));
    0x00469738 cmp ecx, 0x3b                                                                                 |         
                                                                                                             |         if (ecx <= 0x3b) {
    0x0046973b ja 0x469747                                                                                   |             
    0x0046973d cmp esi, 0x17                                                                                 |             
                                                                                                             |             if (esi > 0x17) {
    0x00469740 ja 0x469747                                                                                   |                 goto label_2;
                                                                                                             |             }
    0x00469742 cmp edx, 0x3c                                                                                 |             
                                                                                                             |             if (edx < 0x3c) {
    0x00469745 jb 0x469752                                                                                   |                 goto label_3;
                                                                                                             |             }
                                                                                                             |         }
                                                                                                             | label_2:
    0x00469747 cmp esi, 0x18                                                                                 |         
    0x0046974a jne 0x469722                                                                                  |         
                                                                                                             |     }
    0x0046974c mov edi, ecx                                                                                  |     edi = ecx;
    0x0046974e or edi, edx                                                                                   |     edi |= edx;
                                                                                                             |     if (edi != 0) {
    0x00469750 jne 0x469722                                                                                  |         goto label_0;
                                                                                                             |     }
                                                                                                             | label_3:
    0x00469752 lea rdi, [rsp + 8]                                                                            |     
    0x00469757 xor r8d, r8d                                                                                  |     
    0x0046975a xor r9d, r9d                                                                                  |     
    0x0046975d call 0x46bc70                                                                                 |     BloombergLP::bdlt::Time::setTime(int,int,int,int,int) (rsp + 8, rsi, rdx, rcx, 0, 0);
    0x00469762 cmp byte [rsp + 3], 0                                                                         |     
                                                                                                             |     if (*((rsp + 3)) != 0) {
    0x00469767 je 0x469778                                                                                   |         
    0x00469769 lea rdi, [rsp + 8]                                                                            |         
    0x0046976e mov esi, 1                                                                                    |         
    0x00469773 call 0x46b170                                                                                 |         BloombergLP::bdlt::Time::addSeconds(int) (rsp + 8, 1);
                                                                                                             |     }
    0x00469778 mov esi, dword [rsp + 0x10]                                                                   |     esi = *((rsp + 0x10));
    0x0046977c test esi, esi                                                                                 |     
                                                                                                             |     if (esi != 0) {
    0x0046977e je 0x46978a                                                                                   |         
    0x00469780 lea rdi, [rsp + 8]                                                                            |         
    0x00469785 call 0x46b290                                                                                 |         BloombergLP::bdlt::Time::addMilliseconds(int) (rsp + 8, rsi);
                                                                                                             |     }
    0x0046978a mov rsi, qword [rsp + 0x28]                                                                   |     rsi = *((rsp + 0x28));
    0x0046978f test rsi, rsi                                                                                 |     
                                                                                                             |     if (rsi != 0) {
    0x00469792 je 0x46979e                                                                                   |         
    0x00469794 lea rdi, [rsp + 8]                                                                            |         
    0x00469799 call 0x46b3b0                                                                                 |         BloombergLP::bdlt::Time::addMicroseconds(long long) (rsp + 8, rsi);
                                                                                                             |     }
    0x0046979e mov dword [rsp + 4], 0                                                                        |     *((rsp + 4)) = 0;
    0x004697a6 mov rdx, qword [rsp + 0x18]                                                                   |     rdx = *((rsp + 0x18));
    0x004697ab cmp rdx, r15                                                                                  |     
                                                                                                             |     if (rdx == r15) {
    0x004697ae je 0x4697dc                                                                                   |         goto label_4;
                                                                                                             |     }
    0x004697b0 lea rdi, [rsp + 0x18]                                                                         |     rdi = rsp + 0x18;
    0x004697b5 lea rsi, [rsp + 4]                                                                            |     rsi = rsp + 4;
    0x004697ba mov rcx, r15                                                                                  |     rcx = r15;
    0x004697bd call 0x4687b0                                                                                 |     eax = (anonymousnamespace)::u::parseZoneDesignator(char const**,int*,char const*,char const*) ();
    0x004697c2 mov ecx, eax                                                                                  |     ecx = eax;
    0x004697c4 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
    0x004697c9 test ecx, ecx                                                                                 |     
                                                                                                             |     if (ecx != 0) {
    0x004697cb jne 0x469722                                                                                  |         goto label_0;
                                                                                                             |     }
    0x004697d1 cmp qword [rsp + 0x18], r15                                                                   |     
                                                                                                             |     if (*((rsp + 0x18)) != r15) {
    0x004697d6 jne 0x469722                                                                                  |         goto label_0;
                                                                                                             |     }
                                                                                                             | label_4:
    0x004697dc cmp dword [rsp + 0x14], 0x18                                                                  |     
                                                                                                             |     if (*((rsp + 0x14)) != 0x18) {
    0x004697e1 jne 0x469805                                                                                  |         goto label_5;
                                                                                                             |     }
    0x004697e3 cmp qword [rsp + 0x28], 0                                                                     |     
    0x004697e9 mov eax, 0xffffffff                                                                           |     eax = 0xffffffff;
                                                                                                             |     if (*((rsp + 0x28)) != 0) {
    0x004697ee jne 0x469722                                                                                  |         goto label_0;
                                                                                                             |     }
    0x004697f4 mov ebx, dword [rsp + 4]                                                                      |     ebx = *((rsp + 4));
    0x004697f8 mov ecx, dword [rsp + 0x10]                                                                   |     ecx = *((rsp + 0x10));
    0x004697fc or ecx, ebx                                                                                   |     ecx |= ebx;
                                                                                                             |     if (ecx != 0) {
    0x004697fe je 0x469809                                                                                   |         
    0x00469800 jmp 0x469722                                                                                  |         goto label_0;
                                                                                                             | label_5:
    0x00469805 mov ebx, dword [rsp + 4]                                                                      |         ebx = *((rsp + 4));
                                                                                                             |     }
    0x00469809 movabs r15, 0x4000000000                                                                      |     r15 = 0x4000000000;
    0x00469813 mov rax, qword [rsp + 8]                                                                      |     rax = *((rsp + 8));
    0x00469818 mov qword [r14], rax                                                                          |     *(r14) = rax;
    0x0046981b cmp rax, r15                                                                                  |     
                                                                                                             |     if (rax < r15) {
    0x0046981e jl 0x46983e                                                                                   |         goto label_6;
                                                                                                             |     }
    0x00469820 movabs rcx, 0xffffffbfffffffff                                                                |     rcx = 0xffffffbfffffffff;
    0x0046982a and rax, rcx                                                                                  |     rax &= rcx;
                                                                                                             |     do {
    0x0046982d or rax, r15                                                                                   |         rax |= r15;
    0x00469830 mov qword [r14], rax                                                                          |         *(r14) = rax;
    0x00469833 mov dword [r14 + 8], ebx                                                                      |         *((r14 + 8)) = ebx;
    0x00469837 xor eax, eax                                                                                  |         eax = 0;
    0x00469839 jmp 0x469722                                                                                  |         goto label_0;
                                                                                                             | label_6:
    0x0046983e mov rdi, r14                                                                                  |         
    0x00469841 call 0x46aee0                                                                                 |         BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnight()const (r14);
    0x00469846 jmp 0x46982d                                                                                  |         
                                                                                                             |     } while (1);
                                                                                                             | }
