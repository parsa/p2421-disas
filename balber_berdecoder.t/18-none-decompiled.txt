    ; assembly                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                     | /* balber_berdecoder.t/none @ 0x45cb60 */
                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice.makeMyChoice2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()          | uint64_t method_BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice_makeMyChoice2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (uint32_t arg2, uint32_t arg1) {
                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                     |     /* BloombergLP::s_baltst::MySequenceWithAnonymousChoiceChoice::makeMyChoice2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x0045cb60 push r14                                                                                                                                                              |     
    0x0045cb62 push rbx                                                                                                                                                              |     
    0x0045cb63 push rax                                                                                                                                                              |     
    0x0045cb64 mov r14, rsi                                                                                                                                                          |     r14 = rsi;
    0x0045cb67 mov rbx, rdi                                                                                                                                                          |     rbx = rdi;
    0x0045cb6a cmp dword [rdi + 0x30], 1                                                                                                                                             |     
                                                                                                                                                                                     |     if (*((rdi + 0x30)) == 1) {
    0x0045cb6e jne 0x45cb80                                                                                                                                                          |         
    0x0045cb70 mov rdi, rbx                                                                                                                                                          |         
    0x0045cb73 mov rsi, r14                                                                                                                                                          |         
    0x0045cb76 call 0x4731f0                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x0045cb7b jmp 0x45cc42                                                                                                                                                          |         
                                                                                                                                                                                     |     } else {
    0x0045cb80 mov dword [rbx + 0x30], 0xffffffff                                                                                                                                    |         *((rbx + 0x30)) = 0xffffffff;
    0x0045cb87 mov rdi, qword [rbx + 0x38]                                                                                                                                           |         rdi = *((rbx + 0x38));
    0x0045cb8b test rdi, rdi                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rdi == 0) {
    0x0045cb8e jne 0x45cba4                                                                                                                                                          |             
    0x0045cb90 mov rdi, qword [rip + 0x29a859]                                                                                                                                       |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045cb97 test rdi, rdi                                                                                                                                                         |             
                                                                                                                                                                                     |             if (rdi != 0) {
    0x0045cb9a jne 0x45cba4                                                                                                                                                          |                 goto label_0;
                                                                                                                                                                                     |             }
    0x0045cb9c call 0x46d5b0                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045cba1 mov rdi, rax                                                                                                                                                          |             rdi = rax;
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_0:
    0x0045cba4 mov rax, qword [r14 + 0x20]                                                                                                                                           |         rax = *((r14 + 0x20));
    0x0045cba8 mov qword [rbx + 0x20], rax                                                                                                                                           |         *((rbx + 0x20)) = rax;
    0x0045cbac movups xmm0, xmmword [r14]                                                                                                                                            |         __asm ("movups xmm0, xmmword [r14]");
    0x0045cbb0 movups xmm1, xmmword [r14 + 0x10]                                                                                                                                     |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045cbb5 movups xmmword [rbx + 0x10], xmm1                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045cbb9 movups xmmword [rbx], xmm0                                                                                                                                            |         __asm ("movups xmmword [rbx], xmm0");
    0x0045cbbc mov qword [rbx + 0x28], rdi                                                                                                                                           |         *((rbx + 0x28)) = rdi;
    0x0045cbc0 cmp rax, 0x17                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rax != 0x17) {
    0x0045cbc4 je 0x45cc3b                                                                                                                                                           |             
    0x0045cbc6 cmp rdi, qword [r14 + 0x28]                                                                                                                                           |             
                                                                                                                                                                                     |             if (rdi != *((r14 + 0x28))) {
    0x0045cbca je 0x45cc28                                                                                                                                                           |                 
    0x0045cbcc mov rax, qword [r14 + 0x18]                                                                                                                                           |                 rax = *((r14 + 0x18));
    0x0045cbd0 cmp rax, 0x17                                                                                                                                                         |                 
    0x0045cbd4 mov esi, 0x17                                                                                                                                                         |                 esi = 0x17;
                                                                                                                                                                                     |                 if (rax > 0x17) {
    0x0045cbd9 cmova rsi, rax                                                                                                                                                        |                     rsi = rax;
                                                                                                                                                                                     |                 }
    0x0045cbdd mov qword [rbx], 0                                                                                                                                                    |                 *(rbx) = 0;
    0x0045cbe4 mov qword [rbx + 0x18], rax                                                                                                                                           |                 *((rbx + 0x18)) = rax;
    0x0045cbe8 mov qword [rbx + 0x20], rsi                                                                                                                                           |                 *((rbx + 0x20)) = rsi;
    0x0045cbec cmp rax, 0x18                                                                                                                                                         |                 
                                                                                                                                                                                     |                 if (rax >= 0x18) {
    0x0045cbf0 jb 0x45cc05                                                                                                                                                           |                     
    0x0045cbf2 inc rsi                                                                                                                                                               |                     rsi++;
    0x0045cbf5 mov rax, qword [rdi]                                                                                                                                                  |                     rax = *(rdi);
    0x0045cbf8 call qword [rax + 0x10]                                                                                                                                               |                     rax = uint64_t (*rax + 0x10)() ();
    0x0045cbfb mov qword [rbx], rax                                                                                                                                                  |                     *(rbx) = rax;
    0x0045cbfe cmp qword [rbx + 0x20], 0x17                                                                                                                                          |                     
                                                                                                                                                                                     |                     if (*((rbx + 0x20)) != 0x17) {
    0x0045cc03 jne 0x45cc08                                                                                                                                                          |                         goto label_1;
                                                                                                                                                                                     |                     }
                                                                                                                                                                                     |                 }
    0x0045cc05 mov rax, rbx                                                                                                                                                          |                 rax = rbx;
                                                                                                                                                                                     | label_1:
    0x0045cc08 mov rdx, qword [rbx + 0x18]                                                                                                                                           |                 rdx = *((rbx + 0x18));
    0x0045cc0c inc rdx                                                                                                                                                               |                 rdx++;
                                                                                                                                                                                     |                 if (rdx == 0) {
    0x0045cc0f je 0x45cc3b                                                                                                                                                           |                     goto label_2;
                                                                                                                                                                                     |                 }
    0x0045cc11 cmp qword [r14 + 0x20], 0x17                                                                                                                                          |                 
                                                                                                                                                                                     |                 if (*((r14 + 0x20)) != 0x17) {
    0x0045cc16 je 0x45cc1b                                                                                                                                                           |                     
    0x0045cc18 mov r14, qword [r14]                                                                                                                                                  |                     r14 = *(r14);
                                                                                                                                                                                     |                 }
    0x0045cc1b mov rdi, rax                                                                                                                                                          |                 
    0x0045cc1e mov rsi, r14                                                                                                                                                          |                 
    0x0045cc21 call 0x404980                                                                                                                                                         |                 memcpy (rax, r14, rdx);
    0x0045cc26 jmp 0x45cc3b                                                                                                                                                          |                 
                                                                                                                                                                                     |             } else {
    0x0045cc28 mov qword [r14], 0                                                                                                                                                    |                 *(r14) = 0;
    0x0045cc2f movaps xmm0, xmmword [rip + 0x3809a]                                                                                                                                  |                 xmm0 = .comment;
    0x0045cc36 movups xmmword [r14 + 0x18], xmm0                                                                                                                                     |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                                                     |             }
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_2:
    0x0045cc3b mov dword [rbx + 0x30], 1                                                                                                                                             |         *((rbx + 0x30)) = 1;
                                                                                                                                                                                     |     }
    0x0045cc42 mov rax, rbx                                                                                                                                                          |     rax = rbx;
    0x0045cc45 add rsp, 8                                                                                                                                                            |     
    0x0045cc49 pop rbx                                                                                                                                                               |     
    0x0045cc4a pop r14                                                                                                                                                               |     
    0x0045cc4c ret                                                                                                                                                                   |     return rax;
                                                                                                                                                                                     | }
