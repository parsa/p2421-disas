    ; assembly                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                 | /* balber_berdecoder.t/assume @ 0x405150 */
                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoiceWithDefaultValues.makeSelection1_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()         | uint64_t method_BloombergLP::s_baltst::MyChoiceWithDefaultValues_makeSelection1_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                 |     /* BloombergLP::s_baltst::MyChoiceWithDefaultValues::makeSelection1(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x00405150 push r15                                                                                                                                                          |     
    0x00405152 push r14                                                                                                                                                          |     
    0x00405154 push rbx                                                                                                                                                          |     
    0x00405155 mov r14, rsi                                                                                                                                                      |     r14 = rsi;
    0x00405158 mov rbx, rdi                                                                                                                                                      |     rbx = rdi;
    0x0040515b mov eax, dword [rdi + 0x30]                                                                                                                                       |     eax = *((rdi + 0x30));
    0x0040515e test eax, eax                                                                                                                                                     |     
                                                                                                                                                                                 |     if (eax != 0) {
    0x00405160 je 0x4051a4                                                                                                                                                       |         
    0x00405162 cmp eax, 2                                                                                                                                                        |         
                                                                                                                                                                                 |         if (eax != 2) {
    0x00405165 je 0x4051a4                                                                                                                                                       |             
    0x00405167 cmp eax, 1                                                                                                                                                        |             
                                                                                                                                                                                 |             if (eax != 1) {
    0x0040516a jne 0x4051a4                                                                                                                                                      |                 goto label_0;
                                                                                                                                                                                 |             }
    0x0040516c cmp rbx, r14                                                                                                                                                      |             
                                                                                                                                                                                 |             if (rbx == r14) {
    0x0040516f je 0x40524b                                                                                                                                                       |                 goto label_1;
                                                                                                                                                                                 |             }
    0x00405175 mov rdx, qword [r14 + 0x18]                                                                                                                                       |             rdx = *((r14 + 0x18));
    0x00405179 cmp qword [r14 + 0x20], 0x17                                                                                                                                      |             
                                                                                                                                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x0040517e je 0x405183                                                                                                                                                       |                 
    0x00405180 mov r14, qword [r14]                                                                                                                                              |                 r14 = *(r14);
                                                                                                                                                                                 |             }
    0x00405183 mov r15, qword [rbx + 0x18]                                                                                                                                       |             r15 = *((rbx + 0x18));
    0x00405187 mov qword [rbx + 0x18], 0                                                                                                                                         |             *((rbx + 0x18)) = 0;
    0x0040518f mov ecx, 0x49a630                                                                                                                                                 |             
    0x00405194 mov rdi, rbx                                                                                                                                                      |             
    0x00405197 mov rsi, r14                                                                                                                                                      |             
    0x0040519a call 0x471870                                                                                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x0040519f jmp 0x40524b                                                                                                                                                      |             
                                                                                                                                                                                 |         }
                                                                                                                                                                                 |     } else {
                                                                                                                                                                                 | label_0:
    0x004051a4 mov dword [rbx + 0x30], 0xffffffff                                                                                                                                |         *((rbx + 0x30)) = 0xffffffff;
    0x004051ab mov rdi, qword [rbx + 0x38]                                                                                                                                       |         rdi = *((rbx + 0x38));
    0x004051af test rdi, rdi                                                                                                                                                     |         
                                                                                                                                                                                 |         if (rdi == 0) {
    0x004051b2 jne 0x4051c8                                                                                                                                                      |             
    0x004051b4 mov rdi, qword [rip + 0x2f2235]                                                                                                                                   |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004051bb test rdi, rdi                                                                                                                                                     |             
                                                                                                                                                                                 |             if (rdi != 0) {
    0x004051be jne 0x4051c8                                                                                                                                                      |                 goto label_2;
                                                                                                                                                                                 |             }
    0x004051c0 call 0x46d200                                                                                                                                                     |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004051c5 mov rdi, rax                                                                                                                                                      |             rdi = rax;
                                                                                                                                                                                 |         }
                                                                                                                                                                                 | label_2:
    0x004051c8 mov rax, qword [r14 + 0x20]                                                                                                                                       |         rax = *((r14 + 0x20));
    0x004051cc mov qword [rbx + 0x20], rax                                                                                                                                       |         *((rbx + 0x20)) = rax;
    0x004051d0 movups xmm0, xmmword [r14]                                                                                                                                        |         __asm ("movups xmm0, xmmword [r14]");
    0x004051d4 movups xmm1, xmmword [r14 + 0x10]                                                                                                                                 |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004051d9 movups xmmword [rbx + 0x10], xmm1                                                                                                                                 |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004051dd movups xmmword [rbx], xmm0                                                                                                                                        |         __asm ("movups xmmword [rbx], xmm0");
    0x004051e0 mov qword [rbx + 0x28], rdi                                                                                                                                       |         *((rbx + 0x28)) = rdi;
    0x004051e4 cmp rax, 0x17                                                                                                                                                     |         
                                                                                                                                                                                 |         if (rax != 0x17) {
    0x004051e8 je 0x405244                                                                                                                                                       |             
    0x004051ea mov rax, qword [r14 + 0x18]                                                                                                                                       |             rax = *((r14 + 0x18));
    0x004051ee cmp rax, 0x17                                                                                                                                                     |             
    0x004051f2 mov esi, 0x17                                                                                                                                                     |             esi = 0x17;
                                                                                                                                                                                 |             if (rax > 0x17) {
    0x004051f7 cmova rsi, rax                                                                                                                                                    |                 rsi = rax;
                                                                                                                                                                                 |             }
    0x004051fb mov qword [rbx], 0                                                                                                                                                |             *(rbx) = 0;
    0x00405202 mov qword [rbx + 0x18], rax                                                                                                                                       |             *((rbx + 0x18)) = rax;
    0x00405206 mov qword [rbx + 0x20], rsi                                                                                                                                       |             *((rbx + 0x20)) = rsi;
    0x0040520a cmp rax, 0x18                                                                                                                                                     |             
                                                                                                                                                                                 |             if (rax >= 0x18) {
    0x0040520e jb 0x405223                                                                                                                                                       |                 
    0x00405210 inc rsi                                                                                                                                                           |                 rsi++;
    0x00405213 mov rax, qword [rdi]                                                                                                                                              |                 rax = *(rdi);
    0x00405216 call qword [rax + 0x10]                                                                                                                                           |                 rax = uint64_t (*rax + 0x10)() ();
    0x00405219 mov qword [rbx], rax                                                                                                                                              |                 *(rbx) = rax;
    0x0040521c cmp qword [rbx + 0x20], 0x17                                                                                                                                      |                 
                                                                                                                                                                                 |                 if (*((rbx + 0x20)) != 0x17) {
    0x00405221 jne 0x405226                                                                                                                                                      |                     goto label_3;
                                                                                                                                                                                 |                 }
                                                                                                                                                                                 |             }
    0x00405223 mov rax, rbx                                                                                                                                                      |             rax = rbx;
                                                                                                                                                                                 | label_3:
    0x00405226 mov rdx, qword [rbx + 0x18]                                                                                                                                       |             rdx = *((rbx + 0x18));
    0x0040522a inc rdx                                                                                                                                                           |             rdx++;
                                                                                                                                                                                 |             if (rdx == 0) {
    0x0040522d je 0x405244                                                                                                                                                       |                 goto label_4;
                                                                                                                                                                                 |             }
    0x0040522f cmp qword [r14 + 0x20], 0x17                                                                                                                                      |             
                                                                                                                                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x00405234 je 0x405239                                                                                                                                                       |                 
    0x00405236 mov r14, qword [r14]                                                                                                                                              |                 r14 = *(r14);
                                                                                                                                                                                 |             }
    0x00405239 mov rdi, rax                                                                                                                                                      |             
    0x0040523c mov rsi, r14                                                                                                                                                      |             
    0x0040523f call 0x404980                                                                                                                                                     |             memcpy (rax, r14, rdx);
                                                                                                                                                                                 |         }
                                                                                                                                                                                 | label_4:
    0x00405244 mov dword [rbx + 0x30], 1                                                                                                                                         |         *((rbx + 0x30)) = 1;
                                                                                                                                                                                 |     }
                                                                                                                                                                                 | label_1:
    0x0040524b mov rax, rbx                                                                                                                                                      |     rax = rbx;
    0x0040524e pop rbx                                                                                                                                                           |     
    0x0040524f pop r14                                                                                                                                                           |     
    0x00405251 pop r15                                                                                                                                                           |     
    0x00405253 ret                                                                                                                                                               |     return rax;
                                                                                                                                                                                 | }
