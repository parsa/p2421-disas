    ; assembly                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                 | /* balber_berdecoder.t/assume @ 0x454eb0 */
                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balber::BerUtil_Iso8601ImpUtil.putDatetimeTzValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::DatetimeTz_const__BloombergLP::balber::BerEncoderOptions_const_ ()           | uint64_t method_BloombergLP::balber::BerUtil_Iso8601ImpUtil_putDatetimeTzValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::DatetimeTz_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                 |     /* BloombergLP::balber::BerUtil_Iso8601ImpUtil::putDatetimeTzValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::DatetimeTz const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x00454eb0 push r14                                                                                                                                                                                                                          |     
    0x00454eb2 push rbx                                                                                                                                                                                                                          |     
    0x00454eb3 sub rsp, 0x38                                                                                                                                                                                                                     |     
    0x00454eb7 mov rbx, rsi                                                                                                                                                                                                                      |     rbx = rsi;
    0x00454eba mov r14, rdi                                                                                                                                                                                                                      |     r14 = rdi;
    0x00454ebd mov dword [rsp + 8], 3                                                                                                                                                                                                            |     *((rsp + 8)) = 3;
    0x00454ec5 test rdx, rdx                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (rdx != 0) {
    0x00454ec8 je 0x454ece                                                                                                                                                                                                                       |         
    0x00454eca mov esi, dword [rdx]                                                                                                                                                                                                              |         esi = *(rdx);
    0x00454ecc jmp 0x454ed3                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                 |     } else {
    0x00454ece mov esi, 6                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                 |     }
    0x00454ed3 lea rdi, [rsp + 8]                                                                                                                                                                                                                |     
    0x00454ed8 call 0x469860                                                                                                                                                                                                                     |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x00454edd lea rdi, [rsp + 0x10]                                                                                                                                                                                                             |     
    0x00454ee2 lea rcx, [rsp + 8]                                                                                                                                                                                                                |     
    0x00454ee7 mov esi, 0x26                                                                                                                                                                                                                     |     
    0x00454eec mov rdx, rbx                                                                                                                                                                                                                      |     
    0x00454eef call 0x467980                                                                                                                                                                                                                     |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::DatetimeTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, rbx, rsp + 8);
    0x00454ef4 mov ebx, eax                                                                                                                                                                                                                      |     ebx = eax;
    0x00454ef6 mov rdi, r14                                                                                                                                                                                                                      |     
    0x00454ef9 mov esi, eax                                                                                                                                                                                                                      |     
    0x00454efb call 0x453df0                                                                                                                                                                                                                     |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00454f00 mov ecx, 0xffffffff                                                                                                                                                                                                               |     ecx = 0xffffffff;
    0x00454f05 test eax, eax                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x00454f07 jne 0x454f27                                                                                                                                                                                                                      |         
    0x00454f09 movsxd rbx, ebx                                                                                                                                                                                                                   |         rbx = (int64_t) ebx;
    0x00454f0c mov rax, qword [r14]                                                                                                                                                                                                              |         rax = *(r14);
    0x00454f0f lea rsi, [rsp + 0x10]                                                                                                                                                                                                             |         rsi = rsp + 0x10;
    0x00454f14 mov rdi, r14                                                                                                                                                                                                                      |         rdi = r14;
    0x00454f17 mov rdx, rbx                                                                                                                                                                                                                      |         rdx = rbx;
    0x00454f1a call qword [rax + 0x60]                                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x60)() ();
    0x00454f1d xor ecx, ecx                                                                                                                                                                                                                      |         ecx = 0;
    0x00454f1f cmp rax, rbx                                                                                                                                                                                                                      |         
    0x00454f22 setne cl                                                                                                                                                                                                                          |         cl = (rax != rbx) ? 1 : 0;
    0x00454f25 neg ecx                                                                                                                                                                                                                           |         ecx = -ecx;
                                                                                                                                                                                                                                                 |     }
    0x00454f27 mov eax, ecx                                                                                                                                                                                                                      |     eax = ecx;
    0x00454f29 add rsp, 0x38                                                                                                                                                                                                                     |     
    0x00454f2d pop rbx                                                                                                                                                                                                                           |     
    0x00454f2e pop r14                                                                                                                                                                                                                           |     
    0x00454f30 ret                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                 | }
