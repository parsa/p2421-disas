    ; assembly                                                                                                   | /* r2dec pseudo code output */
                                                                                                                 | /* balber_berdecoder.t/none @ 0x469a00 */
                                                                                                                 | #include <stdint.h>
                                                                                                                 |  
    ; (fcn) method.BloombergLP::bdlt::Iso8601Util.parse_BloombergLP::bdlt::TimeTz__char_const__int_ ()           | int64_t method_BloombergLP::bdlt::Iso8601Util_parse_BloombergLP::bdlt::TimeTz_char_const_int_ (signed int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                 |     uint32_t var_bh;
                                                                                                                 |     int64_t var_4h;
                                                                                                                 |     int64_t var_8h;
                                                                                                                 |     uint32_t var_10h;
                                                                                                                 |     int64_t var_20h;
                                                                                                                 |     int64_t var_24h;
                                                                                                                 |     int64_t var_28h;
                                                                                                                 |     int64_t var_2ch;
                                                                                                                 |     int64_t var_30h;
                                                                                                                 |     rdx = arg3;
                                                                                                                 |     rsi = arg2;
                                                                                                                 |     rdi = arg1;
                                                                                                                 |     /* BloombergLP::bdlt::Iso8601Util::parse(BloombergLP::bdlt::TimeTz*, char const*, int) */
    0x00469a00 mov eax, 0xffffffff                                                                               |     eax = 0xffffffff;
    0x00469a05 cmp edx, 8                                                                                        |     
                                                                                                                 |     if (edx < 8) {
    0x00469a08 jl 0x469a7f                                                                                       |         goto label_1;
                                                                                                                 |     }
    0x00469a0a push rbp                                                                                          |     
    0x00469a0b push r15                                                                                          |     
    0x00469a0d push r14                                                                                          |     
    0x00469a0f push r12                                                                                          |     
    0x00469a11 push rbx                                                                                          |     
    0x00469a12 sub rsp, 0x30                                                                                     |     
    0x00469a16 mov rbp, rsi                                                                                      |     
    0x00469a19 mov r14, rdi                                                                                      |     r14 = rdi;
    0x00469a1c mov qword [rsp + 0x10], rsi                                                                       |     *((rsp + 0x10)) = rsi;
    0x00469a21 mov ebx, edx                                                                                      |     ebx = edx;
    0x00469a23 add rbx, rsi                                                                                      |     rbx += rsi;
    0x00469a26 movabs rax, 0x541dd76000                                                                          |     rax = 0x541dd76000;
    0x00469a30 mov qword [rsp + 8], rax                                                                          |     *((rsp + 8)) = rax;
    0x00469a35 sub rsp, 8                                                                                        |     
    0x00469a39 lea rax, [rsp + 0xb]                                                                              |     rax = rsp + 0xb;
    0x00469a3e lea rdi, [rsp + 0x18]                                                                             |     rdi = rsp + 0x18;
    0x00469a43 lea rsi, [rsp + 0x2c]                                                                             |     rsi = rsp + 0x2c;
    0x00469a48 lea rdx, [rsp + 0x28]                                                                             |     rdx = rsp + 0x28;
    0x00469a4d lea rcx, [rsp + 0x24]                                                                             |     rcx = rsp + 0x24;
    0x00469a52 lea r8, [rsp + 0x20]                                                                              |     r8 = rsp + 0x20;
    0x00469a57 lea r9, [rsp + 0x30]                                                                              |     r9 = rsp + 0x30;
    0x00469a5c push rbx                                                                                          |     
    0x00469a5d push rbp                                                                                          |     
    0x00469a5e push rax                                                                                          |     
    0x00469a5f call 0x468dc0                                                                                     |     eax = (anonymousnamespace)::u::parseTime(char const**,int*,int*,int*,int*,long long*,bool*,char const*,char const*,int) ();
    0x00469a64 add rsp, 0x20                                                                                     |     
    0x00469a68 mov ecx, eax                                                                                      |     ecx = eax;
    0x00469a6a mov eax, 0xffffffff                                                                               |     eax = 0xffffffff;
    0x00469a6f test ecx, ecx                                                                                     |     
    0x00469a71 je 0x469a80                                                                                       |     
                                                                                                                 |     while (r12d != 0x18) {
                                                                                                                 | label_0:
    0x00469a73 add rsp, 0x30                                                                                     |         
    0x00469a77 pop rbx                                                                                           |         
    0x00469a78 pop r12                                                                                           |         
    0x00469a7a pop r14                                                                                           |         
    0x00469a7c pop r15                                                                                           |         
    0x00469a7e pop rbp                                                                                           |         
                                                                                                                 | label_1:
    0x00469a7f ret                                                                                               |         return rax;
    0x00469a80 mov r12d, dword [rsp + 0x24]                                                                      |         r12d = *((rsp + 0x24));
    0x00469a85 mov edx, dword [rsp + 0x20]                                                                       |         edx = *((rsp + 0x20));
    0x00469a89 mov ecx, dword [rsp + 0x1c]                                                                       |         ecx = *((rsp + 0x1c));
    0x00469a8d cmp ecx, 0x3b                                                                                     |         
                                                                                                                 |         if (ecx <= 0x3b) {
    0x00469a90 ja 0x469a9d                                                                                       |             
    0x00469a92 cmp r12d, 0x17                                                                                    |             
                                                                                                                 |             if (r12d > 0x17) {
    0x00469a96 ja 0x469a9d                                                                                       |                 goto label_2;
                                                                                                                 |             }
    0x00469a98 cmp edx, 0x3c                                                                                     |             
                                                                                                                 |             if (edx < 0x3c) {
    0x00469a9b jb 0x469aa9                                                                                       |                 goto label_3;
                                                                                                                 |             }
                                                                                                                 |         }
                                                                                                                 | label_2:
    0x00469a9d cmp r12d, 0x18                                                                                    |         
    0x00469aa1 jne 0x469a73                                                                                      |         
                                                                                                                 |     }
    0x00469aa3 mov esi, ecx                                                                                      |     esi = ecx;
    0x00469aa5 or esi, edx                                                                                       |     esi |= edx;
                                                                                                                 |     if (esi != 0) {
    0x00469aa7 jne 0x469a73                                                                                      |         goto label_0;
                                                                                                                 |     }
                                                                                                                 | label_3:
    0x00469aa9 lea rdi, [rsp + 8]                                                                                |     
    0x00469aae mov esi, r12d                                                                                     |     
    0x00469ab1 xor r8d, r8d                                                                                      |     
    0x00469ab4 xor r9d, r9d                                                                                      |     
    0x00469ab7 call 0x46c020                                                                                     |     BloombergLP::bdlt::Time::setTime(int,int,int,int,int) (rsp + 8, r12d, rdx, rcx, 0, 0);
    0x00469abc cmp byte [rsp + 3], 0                                                                             |     
                                                                                                                 |     if (*((rsp + 3)) != 0) {
    0x00469ac1 je 0x469ad2                                                                                       |         
    0x00469ac3 lea rdi, [rsp + 8]                                                                                |         
    0x00469ac8 mov esi, 1                                                                                        |         
    0x00469acd call 0x46b510                                                                                     |         BloombergLP::bdlt::Time::addSeconds(int) (rsp + 8, 1);
                                                                                                                 |     }
    0x00469ad2 mov r15d, dword [rsp + 0x18]                                                                      |     r15d = *((rsp + 0x18));
    0x00469ad7 test r15d, r15d                                                                                   |     
                                                                                                                 |     if (r15d != 0) {
    0x00469ada je 0x469ae9                                                                                       |         
    0x00469adc lea rdi, [rsp + 8]                                                                                |         
    0x00469ae1 mov esi, r15d                                                                                     |         
    0x00469ae4 call 0x46b630                                                                                     |         BloombergLP::bdlt::Time::addMilliseconds(int) (rsp + 8, r15d);
                                                                                                                 |     }
    0x00469ae9 mov rbp, qword [rsp + 0x28]                                                                       |     rbp = *((rsp + 0x28));
    0x00469aee test rbp, rbp                                                                                     |     
                                                                                                                 |     if (rbp != 0) {
    0x00469af1 je 0x469b00                                                                                       |         
    0x00469af3 lea rdi, [rsp + 8]                                                                                |         
    0x00469af8 mov rsi, rbp                                                                                      |         
    0x00469afb call 0x46b750                                                                                     |         BloombergLP::bdlt::Time::addMicroseconds(long long) (rsp + 8, rbp);
                                                                                                                 |     }
    0x00469b00 mov dword [rsp + 4], 0                                                                            |     *((rsp + 4)) = 0;
    0x00469b08 mov rdx, qword [rsp + 0x10]                                                                       |     rdx = *((rsp + 0x10));
    0x00469b0d cmp rdx, rbx                                                                                      |     
                                                                                                                 |     if (rdx == rbx) {
    0x00469b10 je 0x469b3e                                                                                       |         goto label_4;
                                                                                                                 |     }
    0x00469b12 lea rdi, [rsp + 0x10]                                                                             |     rdi = rsp + 0x10;
    0x00469b17 lea rsi, [rsp + 4]                                                                                |     rsi = rsp + 4;
    0x00469b1c mov rcx, rbx                                                                                      |     rcx = rbx;
    0x00469b1f call 0x468ae0                                                                                     |     eax = (anonymousnamespace)::u::parseZoneDesignator(char const**,int*,char const*,char const*) ();
    0x00469b24 mov ecx, eax                                                                                      |     ecx = eax;
    0x00469b26 mov eax, 0xffffffff                                                                               |     eax = 0xffffffff;
    0x00469b2b test ecx, ecx                                                                                     |     
                                                                                                                 |     if (ecx != 0) {
    0x00469b2d jne 0x469a73                                                                                      |         goto label_0;
                                                                                                                 |     }
    0x00469b33 cmp qword [rsp + 0x10], rbx                                                                       |     
                                                                                                                 |     if (*((rsp + 0x10)) != rbx) {
    0x00469b38 jne 0x469a73                                                                                      |         goto label_0;
                                                                                                                 |     }
                                                                                                                 | label_4:
    0x00469b3e cmp r12d, 0x18                                                                                    |     
                                                                                                                 |     if (r12d != 0x18) {
    0x00469b42 jne 0x469b60                                                                                      |         goto label_5;
                                                                                                                 |     }
    0x00469b44 mov eax, 0xffffffff                                                                               |     eax = 0xffffffff;
    0x00469b49 test rbp, rbp                                                                                     |     
                                                                                                                 |     if (rbp != 0) {
    0x00469b4c jne 0x469a73                                                                                      |         goto label_0;
                                                                                                                 |     }
    0x00469b52 mov ebx, dword [rsp + 4]                                                                          |     ebx = *((rsp + 4));
    0x00469b56 or r15d, ebx                                                                                      |     r15d |= ebx;
                                                                                                                 |     if (r15d != 0) {
    0x00469b59 je 0x469b64                                                                                       |         
    0x00469b5b jmp 0x469a73                                                                                      |         goto label_0;
                                                                                                                 | label_5:
    0x00469b60 mov ebx, dword [rsp + 4]                                                                          |         ebx = *((rsp + 4));
                                                                                                                 |     }
    0x00469b64 movabs rbp, 0x4000000000                                                                          |     
    0x00469b6e mov rax, qword [rsp + 8]                                                                          |     rax = *((rsp + 8));
    0x00469b73 mov qword [r14], rax                                                                              |     *(r14) = rax;
    0x00469b76 cmp rax, rbp                                                                                      |     
                                                                                                                 |     if (rax < rbp) {
    0x00469b79 jl 0x469b99                                                                                       |         goto label_6;
                                                                                                                 |     }
    0x00469b7b movabs rcx, 0xffffffbfffffffff                                                                    |     rcx = 0xffffffbfffffffff;
    0x00469b85 and rax, rcx                                                                                      |     rax &= rcx;
                                                                                                                 |     do {
    0x00469b88 or rax, rbp                                                                                       |         rax |= rbp;
    0x00469b8b mov qword [r14], rax                                                                              |         *(r14) = rax;
    0x00469b8e mov dword [r14 + 8], ebx                                                                          |         *((r14 + 8)) = ebx;
    0x00469b92 xor eax, eax                                                                                      |         eax = 0;
    0x00469b94 jmp 0x469a73                                                                                      |         goto label_0;
                                                                                                                 | label_6:
    0x00469b99 mov rdi, r14                                                                                      |         
    0x00469b9c call 0x46b280                                                                                     |         BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnight()const (r14);
    0x00469ba1 jmp 0x469b88                                                                                      |         
                                                                                                                 |     } while (1);
                                                                                                                 | }
