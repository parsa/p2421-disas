    ; assembly                                                       | /* r2dec pseudo code output */
                                                                     | /* balber_berdecoder.t/none @ 0x45af90 */
                                                                     | #include <stdint.h>
                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoice.reset__ ()        | int64_t method_BloombergLP::s_baltst::MyChoice_reset_ (uint32_t arg1) {
                                                                     |     rdi = arg1;
                                                                     |     /* BloombergLP::s_baltst::MyChoice::reset() */
    0x0045af90 push rbx                                              |     
    0x0045af91 mov rbx, rdi                                          |     rbx = rdi;
    0x0045af94 cmp dword [rdi + 0x30], 1                             |     
                                                                     |     if (*((rdi + 0x30)) == 1) {
    0x0045af98 jne 0x45afb6                                          |         
    0x0045af9a cmp qword [rbx + 0x20], 0x17                          |         
                                                                     |         if (*((rbx + 0x20)) != 0x17) {
    0x0045af9f je 0x45afae                                           |             
    0x0045afa1 mov rsi, qword [rbx]                                  |             rsi = *(rbx);
    0x0045afa4 mov rdi, qword [rbx + 0x28]                           |             rdi = *((rbx + 0x28));
    0x0045afa8 mov rax, qword [rdi]                                  |             rax = *(rdi);
    0x0045afab call qword [rax + 0x18]                               |             uint64_t (*rax + 0x18)() ();
                                                                     |         }
    0x0045afae mov qword [rbx + 0x18], 0xffffffffffffffff            |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                     |     }
    0x0045afb6 mov dword [rbx + 0x30], 0xffffffff                    |     *((rbx + 0x30)) = 0xffffffff;
    0x0045afbd pop rbx                                               |     
    0x0045afbe ret                                                   |     return rax;
                                                                     | }
