    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* balber_berdecoder.t/none @ 0x4558b0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::balber::BerUtil_DateImpUtil.putDateValue_std::__1::basic_streambuf_char__std::__1::char_traits_char_____BloombergLP::bdlt::Date_const__BloombergLP::balber::BerEncoderOptions_const_ ()      | int64_t method_BloombergLP::balber::BerUtil_DateImpUtil_putDateValue_std::_1::basic_streambuf_char_std::_1::char_traits_char_BloombergLP::bdlt::Date_const_BloombergLP::balber::BerEncoderOptions_const_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* BloombergLP::balber::BerUtil_DateImpUtil::putDateValue(std::__1::basic_streambuf<char, std::__1::char_traits<char> >*, BloombergLP::bdlt::Date const&, BloombergLP::balber::BerEncoderOptions const*) */
    0x004558b0 push r15                                                                                                                                                                                                      |     
    0x004558b2 push r14                                                                                                                                                                                                      |     
    0x004558b4 push rbx                                                                                                                                                                                                      |     
    0x004558b5 sub rsp, 0x40                                                                                                                                                                                                 |     
    0x004558b9 mov rbx, rdx                                                                                                                                                                                                  |     rbx = rdx;
    0x004558bc mov r15, rsi                                                                                                                                                                                                  |     r15 = rsi;
    0x004558bf mov r14, rdi                                                                                                                                                                                                  |     r14 = rdi;
    0x004558c2 mov eax, dword [rsi]                                                                                                                                                                                          |     eax = *(rsi);
    0x004558c4 mov dword [rsp], eax                                                                                                                                                                                          |     *(rsp) = eax;
    0x004558c7 mov rdi, rsp                                                                                                                                                                                                  |     
    0x004558ca xor esi, esi                                                                                                                                                                                                  |     
    0x004558cc call 0x463c40                                                                                                                                                                                                 |     eax = BloombergLP::bdlt::Date::addDaysIfValid(int) (rsp, 0);
    0x004558d1 mov ecx, eax                                                                                                                                                                                                  |     ecx = eax;
    0x004558d3 mov eax, 0xffffffff                                                                                                                                                                                           |     eax = 0xffffffff;
    0x004558d8 test ecx, ecx                                                                                                                                                                                                 |     
    0x004558da je 0x4558e6                                                                                                                                                                                                   |     
                                                                                                                                                                                                                             |     while (1) {
                                                                                                                                                                                                                             | label_0:
    0x004558dc add rsp, 0x40                                                                                                                                                                                                 |         
    0x004558e0 pop rbx                                                                                                                                                                                                       |         
    0x004558e1 pop r14                                                                                                                                                                                                       |         
    0x004558e3 pop r15                                                                                                                                                                                                       |         
    0x004558e5 ret                                                                                                                                                                                                           |         return eax;
    0x004558e6 test rbx, rbx                                                                                                                                                                                                 |         
                                                                                                                                                                                                                             |         if (rbx == 0) {
    0x004558e9 je 0x4558fe                                                                                                                                                                                                   |             goto label_1;
                                                                                                                                                                                                                             |         }
    0x004558eb cmp byte [rbx + 0xd], 0                                                                                                                                                                                       |         
                                                                                                                                                                                                                             |         if (*((rbx + 0xd)) == 0) {
    0x004558ef je 0x4558fe                                                                                                                                                                                                   |             goto label_1;
                                                                                                                                                                                                                             |         }
    0x004558f1 mov rdi, r14                                                                                                                                                                                                  |         
    0x004558f4 mov rsi, r15                                                                                                                                                                                                  |         
    0x004558f7 call 0x455200                                                                                                                                                                                                 |         BloombergLP::balber::BerUtil_DateImpUtil::putCompactBinaryDateValue(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,BloombergLP::bdlt::Dateconst&,BloombergLP::balber::BerEncoderOptionsconst*) (r14, r15);
    0x004558fc jmp 0x4558dc                                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                             | label_1:
    0x004558fe mov dword [rsp + 8], 3                                                                                                                                                                                        |     *((rsp + 8)) = 3;
    0x00455906 test rbx, rbx                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (rbx != 0) {
    0x00455909 je 0x45590f                                                                                                                                                                                                   |         
    0x0045590b mov esi, dword [rbx]                                                                                                                                                                                          |         esi = *(rbx);
    0x0045590d jmp 0x455914                                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |     } else {
    0x0045590f mov esi, 6                                                                                                                                                                                                    |         
                                                                                                                                                                                                                             |     }
    0x00455914 lea rbx, [rsp + 8]                                                                                                                                                                                            |     rbx = rsp + 8;
    0x00455919 mov rdi, rbx                                                                                                                                                                                                  |     
    0x0045591c call 0x469bc0                                                                                                                                                                                                 |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rbx, 6);
    0x00455921 lea rdi, [rsp + 0x10]                                                                                                                                                                                         |     
    0x00455926 mov esi, 0x26                                                                                                                                                                                                 |     
    0x0045592b mov rdx, r15                                                                                                                                                                                                  |     
    0x0045592e mov rcx, rbx                                                                                                                                                                                                  |     rcx = rbx;
    0x00455931 call 0x4662f0                                                                                                                                                                                                 |     eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Dateconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rsp + 0x10, 0x26, r15);
    0x00455936 mov ebx, eax                                                                                                                                                                                                  |     ebx = eax;
    0x00455938 mov rdi, r14                                                                                                                                                                                                  |     
    0x0045593b mov esi, eax                                                                                                                                                                                                  |     
    0x0045593d call 0x453da0                                                                                                                                                                                                 |     eax = BloombergLP::balber::BerUtil_LengthImpUtil::putLength(std::_1::basic_streambuf<char,std::_1::char_traits<char>>*,int) (r14, eax);
    0x00455942 mov ecx, eax                                                                                                                                                                                                  |     ecx = eax;
    0x00455944 mov eax, 0xffffffff                                                                                                                                                                                           |     eax = 0xffffffff;
    0x00455949 test ecx, ecx                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ecx != 0) {
    0x0045594b jne 0x4558dc                                                                                                                                                                                                  |         goto label_0;
                                                                                                                                                                                                                             |     }
    0x0045594d movsxd rbx, ebx                                                                                                                                                                                               |     rbx = (int64_t) ebx;
    0x00455950 mov rax, qword [r14]                                                                                                                                                                                          |     rax = *(r14);
    0x00455953 lea rsi, [rsp + 0x10]                                                                                                                                                                                         |     rsi = rsp + 0x10;
    0x00455958 mov rdi, r14                                                                                                                                                                                                  |     rdi = r14;
    0x0045595b mov rdx, rbx                                                                                                                                                                                                  |     rdx = rbx;
    0x0045595e call qword [rax + 0x60]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x60)() ();
    0x00455961 mov rcx, rax                                                                                                                                                                                                  |     rcx = rax;
    0x00455964 xor eax, eax                                                                                                                                                                                                  |     eax = 0;
    0x00455966 cmp rcx, rbx                                                                                                                                                                                                  |     
    0x00455969 setne al                                                                                                                                                                                                      |     al = (rcx != rbx) ? 1 : 0;
    0x0045596c neg eax                                                                                                                                                                                                       |     eax = -eax;
    0x0045596e jmp 0x4558dc                                                                                                                                                                                                  |     goto label_0;
                                                                                                                                                                                                                             | }
