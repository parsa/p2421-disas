    ; assembly                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                 | /* balber_berdecoder.t/assume @ 0x45af40 */
                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::MyChoice.makeSelection2_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()          | uint64_t method_BloombergLP::s_baltst::MyChoice_makeSelection2_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                 |     /* BloombergLP::s_baltst::MyChoice::makeSelection2(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x0045af40 push r15                                                                                                                                          |     
    0x0045af42 push r14                                                                                                                                          |     
    0x0045af44 push rbx                                                                                                                                          |     
    0x0045af45 mov r14, rsi                                                                                                                                      |     r14 = rsi;
    0x0045af48 mov rbx, rdi                                                                                                                                      |     rbx = rdi;
    0x0045af4b mov eax, dword [rdi + 0x30]                                                                                                                       |     eax = *((rdi + 0x30));
    0x0045af4e test eax, eax                                                                                                                                     |     
                                                                                                                                                                 |     if (eax != 0) {
    0x0045af50 je 0x45af8f                                                                                                                                       |         
    0x0045af52 cmp eax, 1                                                                                                                                        |         
                                                                                                                                                                 |         if (eax == 1) {
    0x0045af55 jne 0x45af8f                                                                                                                                      |             
    0x0045af57 cmp rbx, r14                                                                                                                                      |             
                                                                                                                                                                 |             if (rbx == r14) {
    0x0045af5a je 0x45b036                                                                                                                                       |                 goto label_0;
                                                                                                                                                                 |             }
    0x0045af60 mov rdx, qword [r14 + 0x18]                                                                                                                       |             rdx = *((r14 + 0x18));
    0x0045af64 cmp qword [r14 + 0x20], 0x17                                                                                                                      |             
                                                                                                                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x0045af69 je 0x45af6e                                                                                                                                       |                 
    0x0045af6b mov r14, qword [r14]                                                                                                                              |                 r14 = *(r14);
                                                                                                                                                                 |             }
    0x0045af6e mov r15, qword [rbx + 0x18]                                                                                                                       |             r15 = *((rbx + 0x18));
    0x0045af72 mov qword [rbx + 0x18], 0                                                                                                                         |             *((rbx + 0x18)) = 0;
    0x0045af7a mov ecx, 0x49a630                                                                                                                                 |             
    0x0045af7f mov rdi, rbx                                                                                                                                      |             
    0x0045af82 mov rsi, r14                                                                                                                                      |             
    0x0045af85 call 0x471870                                                                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x0045af8a jmp 0x45b036                                                                                                                                      |             
                                                                                                                                                                 |         }
                                                                                                                                                                 |     } else {
    0x0045af8f mov dword [rbx + 0x30], 0xffffffff                                                                                                                |         *((rbx + 0x30)) = 0xffffffff;
    0x0045af96 mov rdi, qword [rbx + 0x38]                                                                                                                       |         rdi = *((rbx + 0x38));
    0x0045af9a test rdi, rdi                                                                                                                                     |         
                                                                                                                                                                 |         if (rdi == 0) {
    0x0045af9d jne 0x45afb3                                                                                                                                      |             
    0x0045af9f mov rdi, qword [rip + 0x29c44a]                                                                                                                   |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0045afa6 test rdi, rdi                                                                                                                                     |             
                                                                                                                                                                 |             if (rdi != 0) {
    0x0045afa9 jne 0x45afb3                                                                                                                                      |                 goto label_1;
                                                                                                                                                                 |             }
    0x0045afab call 0x46d200                                                                                                                                     |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045afb0 mov rdi, rax                                                                                                                                      |             rdi = rax;
                                                                                                                                                                 |         }
                                                                                                                                                                 | label_1:
    0x0045afb3 mov rax, qword [r14 + 0x20]                                                                                                                       |         rax = *((r14 + 0x20));
    0x0045afb7 mov qword [rbx + 0x20], rax                                                                                                                       |         *((rbx + 0x20)) = rax;
    0x0045afbb movups xmm0, xmmword [r14]                                                                                                                        |         __asm ("movups xmm0, xmmword [r14]");
    0x0045afbf movups xmm1, xmmword [r14 + 0x10]                                                                                                                 |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x0045afc4 movups xmmword [rbx + 0x10], xmm1                                                                                                                 |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x0045afc8 movups xmmword [rbx], xmm0                                                                                                                        |         __asm ("movups xmmword [rbx], xmm0");
    0x0045afcb mov qword [rbx + 0x28], rdi                                                                                                                       |         *((rbx + 0x28)) = rdi;
    0x0045afcf cmp rax, 0x17                                                                                                                                     |         
                                                                                                                                                                 |         if (rax != 0x17) {
    0x0045afd3 je 0x45b02f                                                                                                                                       |             
    0x0045afd5 mov rax, qword [r14 + 0x18]                                                                                                                       |             rax = *((r14 + 0x18));
    0x0045afd9 cmp rax, 0x17                                                                                                                                     |             
    0x0045afdd mov esi, 0x17                                                                                                                                     |             esi = 0x17;
                                                                                                                                                                 |             if (rax > 0x17) {
    0x0045afe2 cmova rsi, rax                                                                                                                                    |                 rsi = rax;
                                                                                                                                                                 |             }
    0x0045afe6 mov qword [rbx], 0                                                                                                                                |             *(rbx) = 0;
    0x0045afed mov qword [rbx + 0x18], rax                                                                                                                       |             *((rbx + 0x18)) = rax;
    0x0045aff1 mov qword [rbx + 0x20], rsi                                                                                                                       |             *((rbx + 0x20)) = rsi;
    0x0045aff5 cmp rax, 0x18                                                                                                                                     |             
                                                                                                                                                                 |             if (rax >= 0x18) {
    0x0045aff9 jb 0x45b00e                                                                                                                                       |                 
    0x0045affb inc rsi                                                                                                                                           |                 rsi++;
    0x0045affe mov rax, qword [rdi]                                                                                                                              |                 rax = *(rdi);
    0x0045b001 call qword [rax + 0x10]                                                                                                                           |                 rax = uint64_t (*rax + 0x10)() ();
    0x0045b004 mov qword [rbx], rax                                                                                                                              |                 *(rbx) = rax;
    0x0045b007 cmp qword [rbx + 0x20], 0x17                                                                                                                      |                 
                                                                                                                                                                 |                 if (*((rbx + 0x20)) != 0x17) {
    0x0045b00c jne 0x45b011                                                                                                                                      |                     goto label_2;
                                                                                                                                                                 |                 }
                                                                                                                                                                 |             }
    0x0045b00e mov rax, rbx                                                                                                                                      |             rax = rbx;
                                                                                                                                                                 | label_2:
    0x0045b011 mov rdx, qword [rbx + 0x18]                                                                                                                       |             rdx = *((rbx + 0x18));
    0x0045b015 inc rdx                                                                                                                                           |             rdx++;
                                                                                                                                                                 |             if (rdx == 0) {
    0x0045b018 je 0x45b02f                                                                                                                                       |                 goto label_3;
                                                                                                                                                                 |             }
    0x0045b01a cmp qword [r14 + 0x20], 0x17                                                                                                                      |             
                                                                                                                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x0045b01f je 0x45b024                                                                                                                                       |                 
    0x0045b021 mov r14, qword [r14]                                                                                                                              |                 r14 = *(r14);
                                                                                                                                                                 |             }
    0x0045b024 mov rdi, rax                                                                                                                                      |             
    0x0045b027 mov rsi, r14                                                                                                                                      |             
    0x0045b02a call 0x404980                                                                                                                                     |             memcpy (rax, r14, rdx);
                                                                                                                                                                 |         }
                                                                                                                                                                 | label_3:
    0x0045b02f mov dword [rbx + 0x30], 1                                                                                                                         |         *((rbx + 0x30)) = 1;
                                                                                                                                                                 |     }
                                                                                                                                                                 | label_0:
    0x0045b036 mov rax, rbx                                                                                                                                      |     rax = rbx;
    0x0045b039 pop rbx                                                                                                                                           |     
    0x0045b03a pop r14                                                                                                                                           |     
    0x0045b03c pop r15                                                                                                                                           |     
    0x0045b03e ret                                                                                                                                               |     return rax;
                                                                                                                                                                 | }
