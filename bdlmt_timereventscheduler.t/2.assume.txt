    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_timereventscheduler.t/assume @ 0x420650 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::TimerEventScheduler__BloombergLP::bslmt::TimedSemaphore___BloombergLP::bdlf::Bind_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bslmt::Barrier_BloombergLP::bdlmt::TimerEventScheduler_BloombergLP::bslmt::TimedSemaphore_BloombergLP::bdlf::Bind_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                                                                                                 |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::TimerEventScheduler*, BloombergLP::bslmt::TimedSemaphore*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::TimerEventScheduler*, BloombergLP::bslmt::TimedSemaphore*> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::TimerEventScheduler*, BloombergLP::bslmt::TimedSemaphore*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::TimerEventScheduler*, BloombergLP::bslmt::TimedSemaphore*> > const&, BloombergLP::bslma::Allocator*) */
    0x00420650 push rbp                                                                                                                                                                                                                                                          |     
    0x00420651 push r15                                                                                                                                                                                                                                                          |     
    0x00420653 push r14                                                                                                                                                                                                                                                          |     
    0x00420655 push rbx                                                                                                                                                                                                                                                          |     
    0x00420656 sub rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x0042065a mov r14, rdx                                                                                                                                                                                                                                                      |     r14 = rdx;
    0x0042065d mov rbp, rsi                                                                                                                                                                                                                                                      |     
    0x00420660 mov r15, rdi                                                                                                                                                                                                                                                      |     r15 = rdi;
    0x00420663 mov rax, qword [rdx]                                                                                                                                                                                                                                              |     rax = *(rdx);
    0x00420666 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x0042066b mov rdi, rdx                                                                                                                                                                                                                                                      |     rdi = rdx;
    0x0042066e call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00420671 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00420674 mov qword [rax], 0x4207e0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::TimerEventScheduler__BloombergLP::bslmt::TimedSemaphore___BloombergLP::bdlf::Bind_BoundTuple3;
    0x0042067b mov rax, qword [rbp]                                                                                                                                                                                                                                              |     rax = *(rbp);
    0x0042067f mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00420683 mov rax, qword [rbp + 8]                                                                                                                                                                                                                                          |     rax = *((rbp + 8));
    0x00420687 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0042068b mov rax, qword [rbp + 0x10]                                                                                                                                                                                                                                       |     rax = *((rbp + 0x10));
    0x0042068f mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00420693 mov rax, qword [rbp + 0x18]                                                                                                                                                                                                                                       |     rax = *((rbp + 0x18));
    0x00420697 mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = rax;
    0x0042069b lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                             |     
    0x0042069f mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                         |     *((rbx + 0x28)) = 0;
    0x004206a7 mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                       |     *((rbx + 0x50)) = r14;
    0x004206ab movaps xmm0, xmmword [rip + 0x32bde]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x004206b2 movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x004206b6 mov ecx, 0x45554b                                                                                                                                                                                                                                                 |     
    0x004206bb xor esi, esi                                                                                                                                                                                                                                                      |     
    0x004206bd xor edx, edx                                                                                                                                                                                                                                                      |     
    0x004206bf call 0x42ee70                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004206c4 mov rdi, rsp                                                                                                                                                                                                                                                      |     
    0x004206c7 call 0x42b620                                                                                                                                                                                                                                                     |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004206cc mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x004206cf mov edx, 0x42b110                                                                                                                                                                                                                                                 |     
    0x004206d4 mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x004206d7 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004206da call 0x42be20                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004206df mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004206e1 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsp + 0x38)) != 0x17) {
    0x004206e7 je 0x4206f9                                                                                                                                                                                                                                                       |         
    0x004206e9 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                       |         rsi = *((rsp + 0x18));
    0x004206ee mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x40));
    0x004206f3 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x004206f6 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x004206f9 test ebp, ebp                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (ebp != 0) {
    0x004206fb je 0x420726                                                                                                                                                                                                                                                       |         
    0x004206fd cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x00420702 je 0x420712                                                                                                                                                                                                                                                       |             
    0x00420704 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x00420708 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x0042070c mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0042070f call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00420712 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x0042071a mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0042071d mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00420720 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00420723 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00420726 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00420728 add rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x0042072c pop rbx                                                                                                                                                                                                                                                           |     
    0x0042072d pop r14                                                                                                                                                                                                                                                           |     
    0x0042072f pop r15                                                                                                                                                                                                                                                           |     
    0x00420731 pop rbp                                                                                                                                                                                                                                                           |     
    0x00420732 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
