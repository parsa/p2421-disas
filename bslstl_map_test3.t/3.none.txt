    ; assembly                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                 | /* bslstl_map_test3.t/none @ 0x57d210 */
                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                 |  
    ; (fcn) sym._anonymous_namespace_::IntToPairConverter_void_______void_______bsl::allocator_bsl::pair_void___const_____void__________::createInplace_bsl::pair_void_______void________int__bsl::allocator_bsl::pair_void___const_____void_________ ()         | uint64_t anonymous_namespace_::IntToPairConverter_void_void_bsl::allocator_bsl::pair_void_const_void_::createInplace_bsl::pair_void_void_int_bsl::allocator_bsl::pair_void_const_void_ (char * arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                 |     /* (anonymous namespace)::IntToPairConverter<void (*)(), void (*)(), bsl::allocator<bsl::pair<void (* const)(), void (*)()> > >::createInplace(bsl::pair<void (*)(), void (*)()>*, int, bsl::allocator<bsl::pair<void (* const)(), void (*)()> >) */
    0x0057d210 push rbp                                                                                                                                                                                                                                          |     
    0x0057d211 push r14                                                                                                                                                                                                                                          |     
    0x0057d213 push rbx                                                                                                                                                                                                                                          |     
    0x0057d214 mov ebx, esi                                                                                                                                                                                                                                      |     ebx = esi;
    0x0057d216 mov r14, rdi                                                                                                                                                                                                                                      |     r14 = rdi;
    0x0057d219 call 0x402b40                                                                                                                                                                                                                                     |     rax = ctype_b_loc ();
    0x0057d21e mov rax, qword [rax]                                                                                                                                                                                                                              |     rax = *(rax);
    0x0057d221 movsxd rbp, ebx                                                                                                                                                                                                                                   |     rbp = (int64_t) ebx;
    0x0057d224 test byte [rax + rbp*2 + 1], 2                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                 |     if ((*((rax + rbp*2 + 1)) & 2) == 0) {
    0x0057d229 jne 0x57d230                                                                                                                                                                                                                                      |         
    0x0057d22b lea ebp, [rbx - 0x11]                                                                                                                                                                                                                             |         ebp = rbx - 0x11;
    0x0057d22e jmp 0x57d24b                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                 |     } else {
    0x0057d230 lea eax, [rbx + 0x80]                                                                                                                                                                                                                             |         eax = rbx + 0x80;
    0x0057d236 cmp eax, 0x17f                                                                                                                                                                                                                                    |         
                                                                                                                                                                                                                                                                 |         if (eax <= 0x17f) {
    0x0057d23b ja 0x57d248                                                                                                                                                                                                                                       |             
    0x0057d23d call 0x402ad0                                                                                                                                                                                                                                     |             rax = ctype_toupper_loc ();
    0x0057d242 mov rax, qword [rax]                                                                                                                                                                                                                              |             rax = *(rax);
    0x0057d245 mov ebx, dword [rax + rbp*4]                                                                                                                                                                                                                      |             ebx = *((rax + rbp*4));
                                                                                                                                                                                                                                                                 |         }
    0x0057d248 lea ebp, [rbx + 1]                                                                                                                                                                                                                                |         ebp = rbx + 1;
                                                                                                                                                                                                                                                                 |     }
    0x0057d24b mov al, byte [rip + 0x2b17cf]                                                                                                                                                                                                                     |     al = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057d251 test al, al                                                                                                                                                                                                                                       |     
    0x0057d253 je 0x57d267                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                 |     while (eax == 0) {
                                                                                                                                                                                                                                                                 | label_0:
    0x0057d255 movsxd rax, ebx                                                                                                                                                                                                                                   |         rax = (int64_t) ebx;
    0x0057d258 movsxd rcx, ebp                                                                                                                                                                                                                                   |         rcx = (int64_t) ebp;
    0x0057d25b mov qword [r14], rax                                                                                                                                                                                                                              |         *(r14) = rax;
    0x0057d25e mov qword [r14 + 8], rcx                                                                                                                                                                                                                          |         *((r14 + 8)) = rcx;
    0x0057d262 pop rbx                                                                                                                                                                                                                                           |         
    0x0057d263 pop r14                                                                                                                                                                                                                                           |         
    0x0057d265 pop rbp                                                                                                                                                                                                                                           |         
    0x0057d266 ret                                                                                                                                                                                                                                               |         return rax;
    0x0057d267 mov edi, 0x82ea20                                                                                                                                                                                                                                 |         edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057d26c call 0x402c90                                                                                                                                                                                                                                     |         eax = cxa_guard_acquire ();
    0x0057d271 test eax, eax                                                                                                                                                                                                                                     |         
    0x0057d273 je 0x57d255                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                 |     }
    0x0057d275 movzx edx, byte [rip + 0x2b15a7]                                                                                                                                                                                                                  |     edx = *(obj.veryVeryVeryVerbose);
    0x0057d27c mov edi, 0x82e950                                                                                                                                                                                                                                 |     
    0x0057d281 mov esi, 0x5f72a5                                                                                                                                                                                                                                 |     
    0x0057d286 xor ecx, ecx                                                                                                                                                                                                                                      |     
    0x0057d288 call 0x5ef430                                                                                                                                                                                                                                     |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (obj._anonymous_namespace_::scratchSingleton__::scratch, "scratch singleton", rdx, 0);
    0x0057d28d mov edi, 0x5ef500                                                                                                                                                                                                                                 |     edi = BloombergLP::bslma::TestAllocator::~TestAllocator();
    0x0057d292 mov esi, 0x82e950                                                                                                                                                                                                                                 |     esi = (anonymous namespace)::scratchSingleton()::scratch;
    0x0057d297 mov edx, 0x5f1dc8                                                                                                                                                                                                                                 |     edx = obj.__dso_handle;
    0x0057d29c call 0x402aa0                                                                                                                                                                                                                                     |     cxa_atexit ();
    0x0057d2a1 mov edi, 0x82ea20                                                                                                                                                                                                                                 |     edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057d2a6 call 0x402a70                                                                                                                                                                                                                                     |     cxa_guard_release ();
    0x0057d2ab jmp 0x57d255                                                                                                                                                                                                                                      |     goto label_0;
                                                                                                                                                                                                                                                                 | }
