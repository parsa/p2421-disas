    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslstl_map_test3.t/none @ 0x57b2a0 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) sym._anonymous_namespace_::IntToPairConverter_char_const__char_const__bsl::allocator_bsl::pair_char_const_const__char_const_____::createInplace_bsl::pair_char_const__char_const___int__bsl::allocator_bsl::pair_char_const_const__char_const____ ()         | uint64_t anonymous_namespace_::IntToPairConverter_char_const_char_const_bsl::allocator_bsl::pair_char_const_const_char_const_::createInplace_bsl::pair_char_const_char_const_int_bsl::allocator_bsl::pair_char_const_const_char_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* (anonymous namespace)::IntToPairConverter<char const*, char const*, bsl::allocator<bsl::pair<char const* const, char const*> > >::createInplace(bsl::pair<char const*, char const*>*, int, bsl::allocator<bsl::pair<char const* const, char const*> >) */
    0x0057b2a0 push rbp                                                                                                                                                                                                                                                  |     
    0x0057b2a1 push r14                                                                                                                                                                                                                                                  |     
    0x0057b2a3 push rbx                                                                                                                                                                                                                                                  |     
    0x0057b2a4 mov ebx, esi                                                                                                                                                                                                                                              |     ebx = esi;
    0x0057b2a6 mov r14, rdi                                                                                                                                                                                                                                              |     r14 = rdi;
    0x0057b2a9 call 0x402b40                                                                                                                                                                                                                                             |     rax = ctype_b_loc ();
    0x0057b2ae mov rax, qword [rax]                                                                                                                                                                                                                                      |     rax = *(rax);
    0x0057b2b1 movsxd rbp, ebx                                                                                                                                                                                                                                           |     rbp = (int64_t) ebx;
    0x0057b2b4 test byte [rax + rbp*2 + 1], 2                                                                                                                                                                                                                            |     
                                                                                                                                                                                                                                                                         |     if ((*((rax + rbp*2 + 1)) & 2) == 0) {
    0x0057b2b9 jne 0x57b2c0                                                                                                                                                                                                                                              |         
    0x0057b2bb lea ebp, [rbx - 0x11]                                                                                                                                                                                                                                     |         ebp = rbx - 0x11;
    0x0057b2be jmp 0x57b2db                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x0057b2c0 lea eax, [rbx + 0x80]                                                                                                                                                                                                                                     |         eax = rbx + 0x80;
    0x0057b2c6 cmp eax, 0x17f                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                         |         if (eax <= 0x17f) {
    0x0057b2cb ja 0x57b2d8                                                                                                                                                                                                                                               |             
    0x0057b2cd call 0x402ad0                                                                                                                                                                                                                                             |             rax = ctype_toupper_loc ();
    0x0057b2d2 mov rax, qword [rax]                                                                                                                                                                                                                                      |             rax = *(rax);
    0x0057b2d5 mov ebx, dword [rax + rbp*4]                                                                                                                                                                                                                              |             ebx = *((rax + rbp*4));
                                                                                                                                                                                                                                                                         |         }
    0x0057b2d8 lea ebp, [rbx + 1]                                                                                                                                                                                                                                        |         ebp = rbx + 1;
                                                                                                                                                                                                                                                                         |     }
    0x0057b2db mov al, byte [rip + 0x2b373f]                                                                                                                                                                                                                             |     al = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057b2e1 test al, al                                                                                                                                                                                                                                               |     
    0x0057b2e3 je 0x57b302                                                                                                                                                                                                                                               |     
                                                                                                                                                                                                                                                                         |     while (eax == 0) {
                                                                                                                                                                                                                                                                         | label_0:
    0x0057b2e5 mov edi, ebx                                                                                                                                                                                                                                              |         
    0x0057b2e7 call 0x5eebe0                                                                                                                                                                                                                                             |         rax = BloombergLP::bsltf::TemplateTestFacility::nullTerminatedStringForIdentifier(int) (ebx);
    0x0057b2ec mov rbx, rax                                                                                                                                                                                                                                              |         rbx = rax;
    0x0057b2ef mov edi, ebp                                                                                                                                                                                                                                              |         
    0x0057b2f1 call 0x5eebe0                                                                                                                                                                                                                                             |         rax = BloombergLP::bsltf::TemplateTestFacility::nullTerminatedStringForIdentifier(int) (ebp);
    0x0057b2f6 mov qword [r14], rbx                                                                                                                                                                                                                                      |         *(r14) = rbx;
    0x0057b2f9 mov qword [r14 + 8], rax                                                                                                                                                                                                                                  |         *((r14 + 8)) = rax;
    0x0057b2fd pop rbx                                                                                                                                                                                                                                                   |         
    0x0057b2fe pop r14                                                                                                                                                                                                                                                   |         
    0x0057b300 pop rbp                                                                                                                                                                                                                                                   |         
    0x0057b301 ret                                                                                                                                                                                                                                                       |         return rax;
    0x0057b302 mov edi, 0x82ea20                                                                                                                                                                                                                                         |         edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057b307 call 0x402c90                                                                                                                                                                                                                                             |         eax = cxa_guard_acquire ();
    0x0057b30c test eax, eax                                                                                                                                                                                                                                             |         
    0x0057b30e je 0x57b2e5                                                                                                                                                                                                                                               |         
                                                                                                                                                                                                                                                                         |     }
    0x0057b310 movzx edx, byte [rip + 0x2b350c]                                                                                                                                                                                                                          |     edx = *(obj.veryVeryVeryVerbose);
    0x0057b317 mov edi, 0x82e950                                                                                                                                                                                                                                         |     
    0x0057b31c mov esi, 0x5f72a5                                                                                                                                                                                                                                         |     
    0x0057b321 xor ecx, ecx                                                                                                                                                                                                                                              |     
    0x0057b323 call 0x5ef430                                                                                                                                                                                                                                             |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (obj._anonymous_namespace_::scratchSingleton__::scratch, "scratch singleton", rdx, 0);
    0x0057b328 mov edi, 0x5ef500                                                                                                                                                                                                                                         |     edi = BloombergLP::bslma::TestAllocator::~TestAllocator();
    0x0057b32d mov esi, 0x82e950                                                                                                                                                                                                                                         |     esi = (anonymous namespace)::scratchSingleton()::scratch;
    0x0057b332 mov edx, 0x5f1dc8                                                                                                                                                                                                                                         |     edx = obj.__dso_handle;
    0x0057b337 call 0x402aa0                                                                                                                                                                                                                                             |     cxa_atexit ();
    0x0057b33c mov edi, 0x82ea20                                                                                                                                                                                                                                         |     edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x0057b341 call 0x402a70                                                                                                                                                                                                                                             |     cxa_guard_release ();
    0x0057b346 jmp 0x57b2e5                                                                                                                                                                                                                                              |     goto label_0;
                                                                                                                                                                                                                                                                         | }
