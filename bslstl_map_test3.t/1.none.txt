    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslstl_map_test3.t/none @ 0x5794d0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) sym._anonymous_namespace_::IntToPairConverter_signed_char__signed_char__bsl::allocator_bsl::pair_signed_char_const__signed_char_____::createInplace_bsl::pair_signed_char__signed_char___int__bsl::allocator_bsl::pair_signed_char_const__signed_char____ ()         | uint64_t anonymous_namespace_::IntToPairConverter_signed_char_signed_char_bsl::allocator_bsl::pair_signed_char_const_signed_char_::createInplace_bsl::pair_signed_char_signed_char_int_bsl::allocator_bsl::pair_signed_char_const_signed_char_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* (anonymous namespace)::IntToPairConverter<signed char, signed char, bsl::allocator<bsl::pair<signed char const, signed char> > >::createInplace(bsl::pair<signed char, signed char>*, int, bsl::allocator<bsl::pair<signed char const, signed char> >) */
    0x005794d0 push rbp                                                                                                                                                                                                                                                          |     
    0x005794d1 push r14                                                                                                                                                                                                                                                          |     
    0x005794d3 push rbx                                                                                                                                                                                                                                                          |     
    0x005794d4 mov ebx, esi                                                                                                                                                                                                                                                      |     ebx = esi;
    0x005794d6 mov r14, rdi                                                                                                                                                                                                                                                      |     r14 = rdi;
    0x005794d9 call 0x402b40                                                                                                                                                                                                                                                     |     rax = ctype_b_loc ();
    0x005794de mov rax, qword [rax]                                                                                                                                                                                                                                              |     rax = *(rax);
    0x005794e1 movsxd rbp, ebx                                                                                                                                                                                                                                                   |     rbp = (int64_t) ebx;
    0x005794e4 test byte [rax + rbp*2 + 1], 2                                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                                 |     if ((*((rax + rbp*2 + 1)) & 2) == 0) {
    0x005794e9 jne 0x5794f0                                                                                                                                                                                                                                                      |         
    0x005794eb lea ebp, [rbx - 0x11]                                                                                                                                                                                                                                             |         ebp = rbx - 0x11;
    0x005794ee jmp 0x57950b                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x005794f0 lea eax, [rbx + 0x80]                                                                                                                                                                                                                                             |         eax = rbx + 0x80;
    0x005794f6 cmp eax, 0x17f                                                                                                                                                                                                                                                    |         
                                                                                                                                                                                                                                                                                 |         if (eax <= 0x17f) {
    0x005794fb ja 0x579508                                                                                                                                                                                                                                                       |             
    0x005794fd call 0x402ad0                                                                                                                                                                                                                                                     |             rax = ctype_toupper_loc ();
    0x00579502 mov rax, qword [rax]                                                                                                                                                                                                                                              |             rax = *(rax);
    0x00579505 mov ebx, dword [rax + rbp*4]                                                                                                                                                                                                                                      |             ebx = *((rax + rbp*4));
                                                                                                                                                                                                                                                                                 |         }
    0x00579508 lea ebp, [rbx + 1]                                                                                                                                                                                                                                                |         ebp = rbx + 1;
                                                                                                                                                                                                                                                                                 |     }
    0x0057950b mov al, byte [rip + 0x2b550f]                                                                                                                                                                                                                                     |     al = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x00579511 test al, al                                                                                                                                                                                                                                                       |     
    0x00579513 je 0x579521                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                 |     while (eax == 0) {
                                                                                                                                                                                                                                                                                 | label_0:
    0x00579515 mov byte [r14], bl                                                                                                                                                                                                                                                |         *(r14) = bl;
    0x00579518 mov byte [r14 + 1], bpl                                                                                                                                                                                                                                           |         *((r14 + 1)) = bpl;
    0x0057951c pop rbx                                                                                                                                                                                                                                                           |         
    0x0057951d pop r14                                                                                                                                                                                                                                                           |         
    0x0057951f pop rbp                                                                                                                                                                                                                                                           |         
    0x00579520 ret                                                                                                                                                                                                                                                               |         return rax;
    0x00579521 mov edi, 0x82ea20                                                                                                                                                                                                                                                 |         edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x00579526 call 0x402c90                                                                                                                                                                                                                                                     |         eax = cxa_guard_acquire ();
    0x0057952b test eax, eax                                                                                                                                                                                                                                                     |         
    0x0057952d je 0x579515                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                 |     }
    0x0057952f movzx edx, byte [rip + 0x2b52ed]                                                                                                                                                                                                                                  |     edx = *(obj.veryVeryVeryVerbose);
    0x00579536 mov edi, 0x82e950                                                                                                                                                                                                                                                 |     
    0x0057953b mov esi, 0x5f72a5                                                                                                                                                                                                                                                 |     
    0x00579540 xor ecx, ecx                                                                                                                                                                                                                                                      |     
    0x00579542 call 0x5ef430                                                                                                                                                                                                                                                     |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (obj._anonymous_namespace_::scratchSingleton__::scratch, "scratch singleton", rdx, 0);
    0x00579547 mov edi, 0x5ef500                                                                                                                                                                                                                                                 |     edi = BloombergLP::bslma::TestAllocator::~TestAllocator();
    0x0057954c mov esi, 0x82e950                                                                                                                                                                                                                                                 |     esi = (anonymous namespace)::scratchSingleton()::scratch;
    0x00579551 mov edx, 0x5f1dc8                                                                                                                                                                                                                                                 |     edx = obj.__dso_handle;
    0x00579556 call 0x402aa0                                                                                                                                                                                                                                                     |     cxa_atexit ();
    0x0057955b mov edi, 0x82ea20                                                                                                                                                                                                                                                 |     edi = guard variable for (anonymous namespace)::scratchSingleton()::scratch;
    0x00579560 call 0x402a70                                                                                                                                                                                                                                                     |     cxa_guard_release ();
    0x00579565 jmp 0x579515                                                                                                                                                                                                                                                      |     goto label_0;
                                                                                                                                                                                                                                                                                 | }
