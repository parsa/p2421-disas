    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlb_variant.t/none @ 0x4ea9f0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____BloombergLP::bdlb::VariantImp_BloombergLP::bslmf::TypeList_int__double__bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_______::doApplyR_ThirdPart ()        | int64_t method_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_BloombergLP::bdlb::VariantImp_BloombergLP::bslmf::TypeList_int_double_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_::doApplyR_ThirdPart (uint32_t arg4, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<int, double, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > > >::doApplyR<ThirdPartyVisitor&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > >(ThirdPartyVisitor&, int) */
    0x004ea9f0 push rbx                                                                                                                                                                                                                                                              |     
    0x004ea9f1 mov rbx, rdi                                                                                                                                                                                                                                                          |     rbx = rdi;
    0x004ea9f4 dec ecx                                                                                                                                                                                                                                                               |     ecx--;
    0x004ea9f6 cmp ecx, 0x13                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (ecx <= 0x13) {
    0x004ea9f9 ja 0x4eaa45                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |         /* switch table (20 cases) at 0x526b00 */
    0x004ea9fb jmp qword [rcx*8 + 0x526b00]                                                                                                                                                                                                                                          |         
    0x004eaa02 mov rax, qword [rip + 0x279bc7]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaa09 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaa0c jne 0x4eaa13                                                                                                                                                                                                                                                          |             
    0x004eaa0e call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaa13 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaa1a mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaa1e movaps xmm0, xmmword [rip + 0x33c1b]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaa25 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaa29 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaa2e mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaa33 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaa38 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaa3b call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eaa40 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x004eaa45 mov rax, qword [0x20]                                                                                                                                                                                                                                                 |         rax = *(0x20);
    0x004eaa4d mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                           |         *((rbx + 0x20)) = rax;
    0x004eaa51 movups xmm0, xmmword [0]                                                                                                                                                                                                                                              |         __asm ("movups xmm0, xmmword [0]");
    0x004eaa59 movups xmm1, xmmword [0x10]                                                                                                                                                                                                                                           |         __asm ("movups xmm1, xmmword [0x10]");
    0x004eaa61 movups xmmword [rbx + 0x10], xmm1                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004eaa65 movups xmmword [rbx], xmm0                                                                                                                                                                                                                                            |         __asm ("movups xmmword [rbx], xmm0");
    0x004eaa68 mov rcx, qword [0x28]                                                                                                                                                                                                                                                 |         rcx = *(0x28);
    0x004eaa70 mov qword [rbx + 0x28], rcx                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rcx;
    0x004eaa74 cmp rax, 0x17                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0x17) {
    0x004eaa78 je 0x4eaf6e                                                                                                                                                                                                                                                           |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x004eaa7e ud2                                                                                                                                                                                                                                                                   |         __asm ("ud2");
    0x004eaa80 mov rax, qword [rip + 0x279b49]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaa87 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaa8a jne 0x4eaa91                                                                                                                                                                                                                                                          |             
    0x004eaa8c call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaa91 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaa98 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaa9c movaps xmm0, xmmword [rip + 0x33b9d]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaaa3 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaaa7 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaaac mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaab1 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaab6 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaab9 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eaabe jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eaac3 mov rax, qword [rip + 0x279b06]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaaca test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaacd jne 0x4eaad4                                                                                                                                                                                                                                                          |             
    0x004eaacf call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaad4 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaadb mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaadf movaps xmm0, xmmword [rip + 0x33b5a]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaae6 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaaea mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaaef mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaaf4 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaaf9 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaafc call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eab01 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eab06 mov rax, qword [rip + 0x279ac3]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eab0d test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eab10 jne 0x4eab17                                                                                                                                                                                                                                                          |             
    0x004eab12 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eab17 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eab1e mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eab22 movaps xmm0, xmmword [rip + 0x33b17]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eab29 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eab2d mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eab32 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eab37 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eab3c mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eab3f call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eab44 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eab49 mov rax, qword [rip + 0x279a80]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eab50 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eab53 jne 0x4eab5a                                                                                                                                                                                                                                                          |             
    0x004eab55 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eab5a mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eab61 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eab65 movaps xmm0, xmmword [rip + 0x33ad4]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eab6c movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eab70 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eab75 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eab7a mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eab7f mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eab82 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eab87 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eab8c mov rax, qword [rip + 0x279a3d]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eab93 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eab96 jne 0x4eab9d                                                                                                                                                                                                                                                          |             
    0x004eab98 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eab9d mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaba4 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaba8 movaps xmm0, xmmword [rip + 0x33a91]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eabaf movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eabb3 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eabb8 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eabbd mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eabc2 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eabc5 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eabca jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eabcf mov rax, qword [rip + 0x2799fa]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eabd6 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eabd9 jne 0x4eabe0                                                                                                                                                                                                                                                          |             
    0x004eabdb call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eabe0 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eabe7 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eabeb movaps xmm0, xmmword [rip + 0x33a4e]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eabf2 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eabf6 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eabfb mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eac00 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eac05 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eac08 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eac0d jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eac12 mov rax, qword [rip + 0x2799b7]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eac19 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eac1c jne 0x4eac23                                                                                                                                                                                                                                                          |             
    0x004eac1e call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eac23 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eac2a mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eac2e movaps xmm0, xmmword [rip + 0x33a0b]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eac35 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eac39 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eac3e mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eac43 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eac48 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eac4b call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eac50 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eac55 mov rax, qword [rip + 0x279974]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eac5c test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eac5f jne 0x4eac66                                                                                                                                                                                                                                                          |             
    0x004eac61 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eac66 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eac6d mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eac71 movaps xmm0, xmmword [rip + 0x339c8]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eac78 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eac7c mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eac81 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eac86 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eac8b mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eac8e call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eac93 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eac98 mov rax, qword [rip + 0x279931]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eac9f test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaca2 jne 0x4eaca9                                                                                                                                                                                                                                                          |             
    0x004eaca4 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaca9 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eacb0 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eacb4 movaps xmm0, xmmword [rip + 0x33985]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eacbb movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eacbf mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eacc4 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eacc9 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eacce mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eacd1 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eacd6 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eacdb mov rax, qword [rip + 0x2798ee]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eace2 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eace5 jne 0x4eacec                                                                                                                                                                                                                                                          |             
    0x004eace7 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eacec mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eacf3 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eacf7 movaps xmm0, xmmword [rip + 0x33942]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eacfe movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004ead02 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004ead07 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004ead0c mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004ead11 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004ead14 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004ead19 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004ead1e mov rax, qword [rip + 0x2798ab]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004ead25 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004ead28 jne 0x4ead2f                                                                                                                                                                                                                                                          |             
    0x004ead2a call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004ead2f mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004ead36 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004ead3a movaps xmm0, xmmword [rip + 0x338ff]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004ead41 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004ead45 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004ead4a mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004ead4f mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004ead54 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004ead57 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004ead5c jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004ead61 mov rax, qword [rip + 0x279868]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004ead68 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004ead6b jne 0x4ead72                                                                                                                                                                                                                                                          |             
    0x004ead6d call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004ead72 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004ead79 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004ead7d movaps xmm0, xmmword [rip + 0x338bc]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004ead84 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004ead88 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004ead8d mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004ead92 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004ead97 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004ead9a call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004ead9f jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eada4 mov rax, qword [rip + 0x279825]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eadab test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eadae jne 0x4eadb5                                                                                                                                                                                                                                                          |             
    0x004eadb0 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eadb5 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eadbc mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eadc0 movaps xmm0, xmmword [rip + 0x33879]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eadc7 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eadcb mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eadd0 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eadd5 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eadda mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaddd call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eade2 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eade7 mov rax, qword [rip + 0x2797e2]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eadee test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eadf1 jne 0x4eadf8                                                                                                                                                                                                                                                          |             
    0x004eadf3 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eadf8 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eadff mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eae03 movaps xmm0, xmmword [rip + 0x33836]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eae0a movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eae0e mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eae13 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eae18 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eae1d mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eae20 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eae25 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eae2a mov rax, qword [rip + 0x27979f]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eae31 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eae34 jne 0x4eae3b                                                                                                                                                                                                                                                          |             
    0x004eae36 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eae3b mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eae42 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eae46 movaps xmm0, xmmword [rip + 0x337f3]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eae4d movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eae51 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eae56 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eae5b mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eae60 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eae63 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eae68 jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eae6d mov rax, qword [rip + 0x27975c]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eae74 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eae77 jne 0x4eae7e                                                                                                                                                                                                                                                          |             
    0x004eae79 call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eae7e mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eae85 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eae89 movaps xmm0, xmmword [rip + 0x337b0]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eae90 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eae94 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eae99 mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eae9e mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaea3 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaea6 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eaeab jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eaeb0 mov rax, qword [rip + 0x279719]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaeb7 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaeba jne 0x4eaec1                                                                                                                                                                                                                                                          |             
    0x004eaebc call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaec1 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaec8 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaecc movaps xmm0, xmmword [rip + 0x3376d]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaed3 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaed7 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaedc mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaee1 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaee6 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaee9 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eaeee jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eaef0 mov rax, qword [rip + 0x2796d9]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaef7 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaefa jne 0x4eaf01                                                                                                                                                                                                                                                          |             
    0x004eaefc call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaf01 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaf08 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaf0c movaps xmm0, xmmword [rip + 0x3372d]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaf13 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaf17 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaf1c mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaf21 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaf26 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaf29 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
    0x004eaf2e jmp 0x4eaf6e                                                                                                                                                                                                                                                          |         goto label_0;
    0x004eaf30 mov rax, qword [rip + 0x279699]                                                                                                                                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004eaf37 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x004eaf3a jne 0x4eaf41                                                                                                                                                                                                                                                          |             
    0x004eaf3c call 0x4ed7c0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004eaf41 mov qword [rbx], 0                                                                                                                                                                                                                                                    |         *(rbx) = 0;
    0x004eaf48 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                           |         *((rbx + 0x28)) = rax;
    0x004eaf4c movaps xmm0, xmmword [rip + 0x336ed]                                                                                                                                                                                                                                  |         xmm0 = .comment;
    0x004eaf53 movups xmmword [rbx + 0x18], xmm0                                                                                                                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x18], xmm0");
    0x004eaf57 mov esi, 0x52c692                                                                                                                                                                                                                                                     |         
    0x004eaf5c mov edx, 5                                                                                                                                                                                                                                                            |         
    0x004eaf61 mov ecx, 0x52befb                                                                                                                                                                                                                                                     |         
    0x004eaf66 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004eaf69 call 0x4f1d30                                                                                                                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, "dummy", 5, "string<...>::assign(char*...): string too long");
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x004eaf6e mov rax, rbx                                                                                                                                                                                                                                                          |     rax = rbx;
    0x004eaf71 pop rbx                                                                                                                                                                                                                                                               |     
    0x004eaf72 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
