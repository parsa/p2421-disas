    ; assembly                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                         | /* bslmt_sluice.t/assume @ 0x406100 */
                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_EnterPostSleepAndWaitJob__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__EnterPostSleepAndWaitJob_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_EnterPostSleepAndWaitJob_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_EnterPostSleepAndWaitJob_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<EnterPostSleepAndWaitJob>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, EnterPostSleepAndWaitJob const&, BloombergLP::bslma::Allocator*) */
    0x00406100 push rbp                                                                                                                                                                                                                  |     
    0x00406101 push r15                                                                                                                                                                                                                  |     
    0x00406103 push r14                                                                                                                                                                                                                  |     
    0x00406105 push r13                                                                                                                                                                                                                  |     
    0x00406107 push r12                                                                                                                                                                                                                  |     
    0x00406109 push rbx                                                                                                                                                                                                                  |     
    0x0040610a push rax                                                                                                                                                                                                                  |     
    0x0040610b mov r14, rcx                                                                                                                                                                                                              |     r14 = rcx;
    0x0040610e mov r12, rdx                                                                                                                                                                                                              |     r12 = rdx;
    0x00406111 mov r15, rsi                                                                                                                                                                                                              |     r15 = rsi;
    0x00406114 mov qword [rsp], rdi                                                                                                                                                                                                      |     *(rsp) = rdi;
    0x00406118 mov r13, qword [rsi + 0x30]                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x0040611c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                              |     
                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00406121 je 0x406129                                                                                                                                                                                                               |         
    0x00406123 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00406127 jmp 0x40612d                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                         |     } else {
    0x00406129 lea rbp, [r15 + 0x18]                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                         |     }
    0x0040612d mov rax, qword [r14]                                                                                                                                                                                                      |     rax = *(r14);
    0x00406130 mov esi, 0x48                                                                                                                                                                                                             |     esi = 0x48;
    0x00406135 mov rdi, r14                                                                                                                                                                                                              |     rdi = r14;
    0x00406138 call qword [rax + 0x10]                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0040613b mov rbx, rax                                                                                                                                                                                                              |     rbx = rax;
    0x0040613e mov qword [rax], 0x405f40                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_EnterPostSleepAndWaitJob_.invokerFunction_void_;
    0x00406145 movups xmm0, xmmword [r12]                                                                                                                                                                                                |     __asm ("movups xmm0, xmmword [r12]");
    0x0040614a movups xmmword [rax + 8], xmm0                                                                                                                                                                                            |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0040614e lea rdi, [rax + 0x18]                                                                                                                                                                                                     |     
    0x00406152 mov qword [rax + 0x18], 0                                                                                                                                                                                                 |     *((rax + 0x18)) = 0;
    0x0040615a mov qword [rax + 0x40], r14                                                                                                                                                                                               |     *((rax + 0x40)) = r14;
    0x0040615e movaps xmm0, xmmword [rip + 0x27f5b]                                                                                                                                                                                      |     xmm0 = .comment;
    0x00406165 movups xmmword [rax + 0x30], xmm0                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x00406169 mov ecx, 0x42e5a7                                                                                                                                                                                                         |     
    0x0040616e mov rsi, rbp                                                                                                                                                                                                              |     
    0x00406171 mov rdx, r13                                                                                                                                                                                                              |     
    0x00406174 call 0x409680                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00406179 mov edx, 0x406910                                                                                                                                                                                                         |     
    0x0040617e mov rdi, qword [rsp]                                                                                                                                                                                                      |     
    0x00406182 mov rsi, r15                                                                                                                                                                                                              |     
    0x00406185 mov rcx, rbx                                                                                                                                                                                                              |     
    0x00406188 call 0x407350                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040618d mov ebp, eax                                                                                                                                                                                                              |     
    0x0040618f test eax, eax                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00406191 je 0x4061bc                                                                                                                                                                                                               |         
    0x00406193 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                              |         
                                                                                                                                                                                                                                         |         if (*((rbx + 0x38)) != 0x17) {
    0x00406198 je 0x4061a8                                                                                                                                                                                                               |             
    0x0040619a mov rsi, qword [rbx + 0x18]                                                                                                                                                                                               |             rsi = *((rbx + 0x18));
    0x0040619e mov rdi, qword [rbx + 0x40]                                                                                                                                                                                               |             rdi = *((rbx + 0x40));
    0x004061a2 mov rax, qword [rdi]                                                                                                                                                                                                      |             rax = *(rdi);
    0x004061a5 call qword [rax + 0x18]                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                         |         }
    0x004061a8 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x004061b0 mov rax, qword [r14]                                                                                                                                                                                                      |         rax = *(r14);
    0x004061b3 mov rdi, r14                                                                                                                                                                                                              |         rdi = r14;
    0x004061b6 mov rsi, rbx                                                                                                                                                                                                              |         rsi = rbx;
    0x004061b9 call qword [rax + 0x18]                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                         |     }
    0x004061bc mov eax, ebp                                                                                                                                                                                                              |     eax = ebp;
    0x004061be add rsp, 8                                                                                                                                                                                                                |     
    0x004061c2 pop rbx                                                                                                                                                                                                                   |     
    0x004061c3 pop r12                                                                                                                                                                                                                   |     
    0x004061c5 pop r13                                                                                                                                                                                                                   |     
    0x004061c7 pop r14                                                                                                                                                                                                                   |     
    0x004061c9 pop r15                                                                                                                                                                                                                   |     
    0x004061cb pop rbp                                                                                                                                                                                                                   |     
    0x004061cc ret                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                         | }
