    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_sluice.t/none @ 0x406430 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore__std::__1::chrono::steady_clock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::TimedSemaphore__std::__1::chrono::time ()         | int64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore_std::_1::chrono::steady_clock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::TimedSemaphore_std::_1::chrono::time (int64_t arg2, uint32_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::TimedSemaphore, std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::TimedSemaphore*, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x00406430 push rbp                                                                                                                                                                                                                                                              |     
    0x00406431 push r15                                                                                                                                                                                                                                                              |     
    0x00406433 push r14                                                                                                                                                                                                                                                              |     
    0x00406435 push r13                                                                                                                                                                                                                                                              |     
    0x00406437 push r12                                                                                                                                                                                                                                                              |     
    0x00406439 push rbx                                                                                                                                                                                                                                                              |     
    0x0040643a sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x0040643e mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x00406441 mov r13, rdi                                                                                                                                                                                                                                                          |     r13 = rdi;
    0x00406444 cmp dword [rdi + 0x20], 1                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                                     |     if (*((rdi + 0x20)) == 1) {
    0x00406448 jne 0x4064d9                                                                                                                                                                                                                                                          |         
    0x0040644e mov rcx, qword [rbp]                                                                                                                                                                                                                                                  |         rcx = *(rbp);
    0x00406452 movabs rdx, 0x112e0be826d694b3                                                                                                                                                                                                                                        |         rdx = 0x112e0be826d694b3;
    0x0040645c mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x0040645f imul rdx                                                                                                                                                                                                                                                              |         rdx:rax = rax * rdx;
    0x00406462 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x00406465 shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00406469 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x0040646d add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00406470 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x00406476 mov qword [rsp], rdx                                                                                                                                                                                                                                                  |         *(rsp) = rdx;
    0x0040647a lea esi, [rax + rcx + 0x3b9ac9ff]                                                                                                                                                                                                                                     |         esi = rax + rcx + 0x3b9ac9ff;
    0x00406481 add eax, ecx                                                                                                                                                                                                                                                          |         eax += ecx;
    0x00406483 cmp esi, 0x773593ff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (esi >= 0x773593ff) {
    0x00406489 jb 0x4064b3                                                                                                                                                                                                                                                           |             
    0x0040648b cdqe                                                                                                                                                                                                                                                                  |             rax = (int64_t) eax;
    0x0040648d imul rcx, rax, 0x44b82fa1                                                                                                                                                                                                                                             |             rcx = rax * 0x44b82fa1;
    0x00406494 mov rsi, rcx                                                                                                                                                                                                                                                          |             rsi = rcx;
    0x00406497 shr rsi, 0x3f                                                                                                                                                                                                                                                         |             rsi >>= 0x3f;
    0x0040649b sar rcx, 0x3c                                                                                                                                                                                                                                                         |             rcx >>= 0x3c;
    0x0040649f add ecx, esi                                                                                                                                                                                                                                                          |             ecx += esi;
    0x004064a1 movsxd rcx, ecx                                                                                                                                                                                                                                                       |             rcx = (int64_t) ecx;
    0x004064a4 add rdx, rcx                                                                                                                                                                                                                                                          |             rdx += rcx;
    0x004064a7 mov qword [rsp], rdx                                                                                                                                                                                                                                                  |             *(rsp) = rdx;
    0x004064ab imul ecx, ecx, 0x3b9aca00                                                                                                                                                                                                                                             |             ecx *= 0x3b9aca00;
    0x004064b1 sub eax, ecx                                                                                                                                                                                                                                                          |             eax -= ecx;
                                                                                                                                                                                                                                                                                     |         }
    0x004064b3 mov dword [rsp + 8], eax                                                                                                                                                                                                                                              |         *((rsp + 8)) = eax;
    0x004064b7 test rdx, rdx                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rdx <= 0) {
    0x004064ba jle 0x4065ad                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x004064c0 test eax, eax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax >= 0) {
    0x004064c2 jns 0x4065c6                                                                                                                                                                                                                                                          |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
    0x004064c8 dec rdx                                                                                                                                                                                                                                                               |         rdx--;
    0x004064cb mov qword [rsp], rdx                                                                                                                                                                                                                                                  |         *(rsp) = rdx;
    0x004064cf add eax, 0x3b9aca00                                                                                                                                                                                                                                                   |         eax += 0x3b9aca00;
    0x004064d4 jmp 0x4065c2                                                                                                                                                                                                                                                          |         goto label_2;
                                                                                                                                                                                                                                                                                     |     }
    0x004064d9 call 0x403840                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x004064de mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x004064e1 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x004064e6 cmp rbx, qword [rbp]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (rbx >= *(rbp)) {
    0x004064ea jge 0x4065d1                                                                                                                                                                                                                                                          |         goto label_3;
                                                                                                                                                                                                                                                                                     |     }
    0x004064f0 movabs r14, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r14 = 0x112e0be826d694b3;
    0x004064fa lea r15, [rsp + 0x18]                                                                                                                                                                                                                                                 |     r15 = rsp + 0x18;
    0x004064ff mov r12, rsp                                                                                                                                                                                                                                                          |     r12 = rsp;
    0x00406502 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x0040650c nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00406510 mov eax, dword [r13 + 0x20]                                                                                                                                                                                                                                           |         eax = *((r13 + 0x20));
    0x00406514 test eax, eax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0) {
    0x00406516 je 0x406530                                                                                                                                                                                                                                                           |             
    0x00406518 cmp eax, 1                                                                                                                                                                                                                                                            |             
                                                                                                                                                                                                                                                                                     |             if (eax != 1) {
    0x0040651b jne 0x406540                                                                                                                                                                                                                                                          |                 goto label_4;
                                                                                                                                                                                                                                                                                     |             }
    0x0040651d call 0x42dc50                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x00406522 jmp 0x406535                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00406530 call 0x42dce0                                                                                                                                                                                                                                                         |             eax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00406535 jmp 0x406544                                                                                                                                                                                                                                                          |         goto label_5;
                                                                                                                                                                                                                                                                                     | label_4:
    0x00406540 xor edx, edx                                                                                                                                                                                                                                                          |         edx = 0;
    0x00406542 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     | label_5:
    0x00406544 mov qword [rsp + 0x18], rax                                                                                                                                                                                                                                           |         *((rsp + 0x18)) = rax;
    0x00406549 mov dword [rsp + 0x20], edx                                                                                                                                                                                                                                           |         *((rsp + 0x20)) = edx;
    0x0040654d mov rcx, qword [rbp]                                                                                                                                                                                                                                                  |         rcx = *(rbp);
    0x00406551 sub rcx, rbx                                                                                                                                                                                                                                                          |         rcx -= rbx;
    0x00406554 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x00406557 imul r14                                                                                                                                                                                                                                                              |         rdx:rax = rax * r14;
    0x0040655a mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x0040655d shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00406561 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x00406565 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00406568 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x0040656e add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x00406570 mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x00406573 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x00406576 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x00406578 call 0x42de00                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r15, rdx, ecx);
    0x0040657d movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x00406580 movaps xmmword [rsp], xmm0                                                                                                                                                                                                                                            |         *(rsp) = xmm0;
    0x00406584 mov rdi, r13                                                                                                                                                                                                                                                          |         
    0x00406587 mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x0040658a call 0x4078f0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::TimedSemaphoreImpl<BloombergLP::bslmt::Platform::PosixAdvTimedSemaphore>::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r13, r12);
    0x0040658f cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x00406592 jne 0x4065d1                                                                                                                                                                                                                                                          |             goto label_3;
                                                                                                                                                                                                                                                                                     |         }
    0x00406594 call 0x403840                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x00406599 mov rbx, rax                                                                                                                                                                                                                                                          |         rbx = rax;
    0x0040659c cmp rax, qword [rbp]                                                                                                                                                                                                                                                  |         
    0x004065a0 jl 0x406510                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rax < *(rbp));
    0x004065a6 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x004065ab jmp 0x4065d1                                                                                                                                                                                                                                                          |     goto label_3;
                                                                                                                                                                                                                                                                                     | label_0:
    0x004065ad test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax > 0) {
    0x004065af jle 0x4065c6                                                                                                                                                                                                                                                          |         
    0x004065b1 test rdx, rdx                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rdx == 0) {
    0x004065b4 je 0x4065c6                                                                                                                                                                                                                                                           |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
    0x004065b6 inc rdx                                                                                                                                                                                                                                                               |         rdx++;
    0x004065b9 mov qword [rsp], rdx                                                                                                                                                                                                                                                  |         *(rsp) = rdx;
    0x004065bd add eax, 0xc4653600                                                                                                                                                                                                                                                   |         eax += 0xc4653600;
                                                                                                                                                                                                                                                                                     | label_2:
    0x004065c2 mov dword [rsp + 8], eax                                                                                                                                                                                                                                              |         *((rsp + 8)) = eax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_1:
    0x004065c6 mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x004065c9 mov rdi, r13                                                                                                                                                                                                                                                          |     
    0x004065cc call 0x4078f0                                                                                                                                                                                                                                                         |     BloombergLP::bslmt::TimedSemaphoreImpl<BloombergLP::bslmt::Platform::PosixAdvTimedSemaphore>::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r13, rsp);
                                                                                                                                                                                                                                                                                     | label_3:
    0x004065d1 add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x004065d5 pop rbx                                                                                                                                                                                                                                                               |     
    0x004065d6 pop r12                                                                                                                                                                                                                                                               |     
    0x004065d8 pop r13                                                                                                                                                                                                                                                               |     
    0x004065da pop r14                                                                                                                                                                                                                                                               |     
    0x004065dc pop r15                                                                                                                                                                                                                                                               |     
    0x004065de pop rbp                                                                                                                                                                                                                                                               |     
    0x004065df ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
