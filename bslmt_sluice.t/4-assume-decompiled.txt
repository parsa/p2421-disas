    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_sluice.t/assume @ 0x406830 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore__AnotherClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::TimedSemaphore__std::__1::chrono::time_point_AnotherCloc ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore_AnotherClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::TimedSemaphore_std::_1::chrono::time_point_AnotherCloc (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::TimedSemaphore, AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::TimedSemaphore*, std::__1::chrono::time_point<AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x00406830 push rbp                                                                                                                                                                                                                                                              |     
    0x00406831 push r15                                                                                                                                                                                                                                                              |     
    0x00406833 push r14                                                                                                                                                                                                                                                              |     
    0x00406835 push r13                                                                                                                                                                                                                                                              |     
    0x00406837 push r12                                                                                                                                                                                                                                                              |     
    0x00406839 push rbx                                                                                                                                                                                                                                                              |     
    0x0040683a sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x0040683e mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x00406841 mov r13, rdi                                                                                                                                                                                                                                                          |     r13 = rdi;
    0x00406844 call 0x403840                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x00406849 mov rbp, rax                                                                                                                                                                                                                                                          |     
    0x0040684c add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |     rbp += 0xffffffffffffd8f0;
    0x00406853 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x00406858 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (rbp >= *(rbx)) {
    0x0040685b jge 0x4068fd                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00406861 movabs r14, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r14 = 0x112e0be826d694b3;
    0x0040686b mov r15, rsp                                                                                                                                                                                                                                                          |     r15 = rsp;
    0x0040686e lea r12, [rsp + 0x10]                                                                                                                                                                                                                                                 |     r12 = rsp + 0x10;
    0x00406873 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x0040687d nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00406880 cmp dword [r13 + 0x20], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((r13 + 0x20)) == 1) {
    0x00406885 jne 0x406890                                                                                                                                                                                                                                                          |             
    0x00406887 call 0x42db40                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x0040688c jmp 0x406895                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00406890 call 0x42dbd0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00406895 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x00406899 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x0040689d mov rcx, qword [rbx]                                                                                                                                                                                                                                                  |         rcx = *(rbx);
    0x004068a0 sub rcx, rbp                                                                                                                                                                                                                                                          |         rcx -= rbp;
    0x004068a3 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x004068a6 imul r14                                                                                                                                                                                                                                                              |         rdx:rax = rax * r14;
    0x004068a9 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x004068ac shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x004068b0 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x004068b4 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x004068b7 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x004068bd add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x004068bf mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x004068c2 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x004068c5 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x004068c7 call 0x42dcf0                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r15, rdx, ecx);
    0x004068cc movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x004068cf movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x004068d4 mov rdi, r13                                                                                                                                                                                                                                                          |         
    0x004068d7 mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x004068da call 0x407810                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::TimedSemaphoreImpl<BloombergLP::bslmt::Platform::PosixAdvTimedSemaphore>::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r13, r12);
    0x004068df cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x004068e2 jne 0x4068fd                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x004068e4 call 0x403840                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x004068e9 mov rbp, rax                                                                                                                                                                                                                                                          |         
    0x004068ec add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |         rbp += 0xffffffffffffd8f0;
    0x004068f3 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |         
    0x004068f6 jl 0x406880                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rbp < *(rbx));
    0x004068f8 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                     | label_0:
    0x004068fd add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00406901 pop rbx                                                                                                                                                                                                                                                               |     
    0x00406902 pop r12                                                                                                                                                                                                                                                               |     
    0x00406904 pop r13                                                                                                                                                                                                                                                               |     
    0x00406906 pop r14                                                                                                                                                                                                                                                               |     
    0x00406908 pop r15                                                                                                                                                                                                                                                               |     
    0x0040690a pop rbp                                                                                                                                                                                                                                                               |     
    0x0040690b ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
