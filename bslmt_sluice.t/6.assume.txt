    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_sluice.t/assume @ 0x406250 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore__HalfClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::TimedSemaphore__std::__1::chrono::time_point_HalfClock__std ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::TimedSemaphore_HalfClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::TimedSemaphore_std::_1::chrono::time_point_HalfClock_std (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::TimedSemaphore, HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::TimedSemaphore*, std::__1::chrono::time_point<HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x00406250 push rbp                                                                                                                                                                                                                                                              |     
    0x00406251 push r15                                                                                                                                                                                                                                                              |     
    0x00406253 push r14                                                                                                                                                                                                                                                              |     
    0x00406255 push r13                                                                                                                                                                                                                                                              |     
    0x00406257 push r12                                                                                                                                                                                                                                                              |     
    0x00406259 push rbx                                                                                                                                                                                                                                                              |     
    0x0040625a sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x0040625e mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x00406261 mov r14, rdi                                                                                                                                                                                                                                                          |     r14 = rdi;
    0x00406264 call 0x403840                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x00406269 mov r15, rax                                                                                                                                                                                                                                                          |     r15 = rax;
    0x0040626c shr r15, 0x3f                                                                                                                                                                                                                                                         |     r15 >>= 0x3f;
    0x00406270 add r15, rax                                                                                                                                                                                                                                                          |     r15 += rax;
    0x00406273 sar r15, 1                                                                                                                                                                                                                                                            |     r15 >>= 1;
    0x00406276 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x0040627b cmp r15, qword [rbx]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (r15 >= *(rbx)) {
    0x0040627e jge 0x406320                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00406284 movabs r13, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r13 = 0x112e0be826d694b3;
    0x0040628e mov r12, rsp                                                                                                                                                                                                                                                          |     r12 = rsp;
    0x00406291 lea rbp, [rsp + 0x10]                                                                                                                                                                                                                                                 |     rbp = rsp + 0x10;
    0x00406296 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
                                                                                                                                                                                                                                                                                     |     do {
    0x004062a0 cmp dword [r14 + 0x20], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((r14 + 0x20)) == 1) {
    0x004062a5 jne 0x4062b0                                                                                                                                                                                                                                                          |             
    0x004062a7 call 0x42db40                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x004062ac jmp 0x4062b5                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x004062b0 call 0x42dbd0                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x004062b5 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x004062b9 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x004062bd mov rcx, qword [rbx]                                                                                                                                                                                                                                                  |         rcx = *(rbx);
    0x004062c0 sub rcx, r15                                                                                                                                                                                                                                                          |         rcx -= r15;
    0x004062c3 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x004062c6 imul r13                                                                                                                                                                                                                                                              |         rdx:rax = rax * r13;
    0x004062c9 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x004062cc shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x004062d0 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x004062d4 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x004062d7 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x004062dd add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x004062df mov rdi, r12                                                                                                                                                                                                                                                          |         
    0x004062e2 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x004062e5 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x004062e7 call 0x42dcf0                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r12, rdx, ecx);
    0x004062ec movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x004062ef movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x004062f4 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x004062f7 mov rsi, rbp                                                                                                                                                                                                                                                          |         
    0x004062fa call 0x407810                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::TimedSemaphoreImpl<BloombergLP::bslmt::Platform::PosixAdvTimedSemaphore>::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r14, rbp);
    0x004062ff cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x00406302 jne 0x406320                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00406304 call 0x403840                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x00406309 mov r15, rax                                                                                                                                                                                                                                                          |         r15 = rax;
    0x0040630c shr r15, 0x3f                                                                                                                                                                                                                                                         |         r15 >>= 0x3f;
    0x00406310 add r15, rax                                                                                                                                                                                                                                                          |         r15 += rax;
    0x00406313 sar r15, 1                                                                                                                                                                                                                                                            |         r15 >>= 1;
    0x00406316 cmp r15, qword [rbx]                                                                                                                                                                                                                                                  |         
    0x00406319 jl 0x4062a0                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (r15 < *(rbx));
    0x0040631b mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                     | label_0:
    0x00406320 add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00406324 pop rbx                                                                                                                                                                                                                                                               |     
    0x00406325 pop r12                                                                                                                                                                                                                                                               |     
    0x00406327 pop r13                                                                                                                                                                                                                                                               |     
    0x00406329 pop r14                                                                                                                                                                                                                                                               |     
    0x0040632b pop r15                                                                                                                                                                                                                                                               |     
    0x0040632d pop rbp                                                                                                                                                                                                                                                               |     
    0x0040632e ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
