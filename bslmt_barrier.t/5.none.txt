    ; assembly                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                 | /* bslmt_barrier.t/none @ 0x408880 */
                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_Case7_Driver__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__Case7_Driver_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_Case7_Driver_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_Case7_Driver_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<Case7_Driver>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, Case7_Driver const&, BloombergLP::bslma::Allocator*) */
    0x00408880 push rbp                                                                                                                                                                                          |     
    0x00408881 push r15                                                                                                                                                                                          |     
    0x00408883 push r14                                                                                                                                                                                          |     
    0x00408885 push r13                                                                                                                                                                                          |     
    0x00408887 push r12                                                                                                                                                                                          |     
    0x00408889 push rbx                                                                                                                                                                                          |     
    0x0040888a push rax                                                                                                                                                                                          |     
    0x0040888b mov r14, rcx                                                                                                                                                                                      |     r14 = rcx;
    0x0040888e mov r12, rdx                                                                                                                                                                                      |     r12 = rdx;
    0x00408891 mov r15, rsi                                                                                                                                                                                      |     r15 = rsi;
    0x00408894 mov qword [rsp], rdi                                                                                                                                                                              |     *(rsp) = rdi;
    0x00408898 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                      |     
                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0040889d je 0x4088a5                                                                                                                                                                                       |         
    0x0040889f mov r13, qword [r15 + 0x18]                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004088a3 jmp 0x4088a9                                                                                                                                                                                      |         
                                                                                                                                                                                                                 |     } else {
    0x004088a5 lea r13, [r15 + 0x18]                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                 |     }
    0x004088a9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004088ad test r14, r14                                                                                                                                                                                     |     
                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004088b0 jne 0x4088c6                                                                                                                                                                                      |         
    0x004088b2 mov r14, qword [rip + 0x23df6f]                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004088b9 test r14, r14                                                                                                                                                                                     |         
                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004088bc jne 0x4088c6                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                 |         }
    0x004088be call 0x42ef70                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004088c3 mov r14, rax                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                 | label_0:
    0x004088c6 mov rax, qword [r14]                                                                                                                                                                              |     rax = *(r14);
    0x004088c9 mov esi, 0x50                                                                                                                                                                                     |     esi = 0x50;
    0x004088ce mov rdi, r14                                                                                                                                                                                      |     rdi = r14;
    0x004088d1 call qword [rax + 0x10]                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004088d4 mov rbx, rax                                                                                                                                                                                      |     rbx = rax;
    0x004088d7 mov qword [rax], 0x4089f0                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_Case7_Driver_.invokerFunction_void_;
    0x004088de movups xmm0, xmmword [r12]                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x004088e3 movups xmmword [rax + 8], xmm0                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004088e7 mov rax, qword [r12 + 0x10]                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x004088ec mov qword [rbx + 0x18], rax                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x004088f0 lea rdi, [rbx + 0x20]                                                                                                                                                                             |     
    0x004088f4 mov qword [rbx + 0x20], 0                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x004088fc mov qword [rbx + 0x48], r14                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x00408900 movaps xmm0, xmmword [rip + 0x26d69]                                                                                                                                                              |     xmm0 = .comment;
    0x00408907 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x0040890b mov ecx, 0x42fe7f                                                                                                                                                                                 |     
    0x00408910 mov rsi, r13                                                                                                                                                                                      |     
    0x00408913 mov rdx, rbp                                                                                                                                                                                      |     
    0x00408916 call 0x40c030                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0040891b mov edx, 0x4093b0                                                                                                                                                                                 |     
    0x00408920 mov rdi, qword [rsp]                                                                                                                                                                              |     
    0x00408924 mov rsi, r15                                                                                                                                                                                      |     
    0x00408927 mov rcx, rbx                                                                                                                                                                                      |     
    0x0040892a call 0x409bf0                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040892f mov ebp, eax                                                                                                                                                                                      |     
    0x00408931 test eax, eax                                                                                                                                                                                     |     
                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00408933 je 0x40895e                                                                                                                                                                                       |         
    0x00408935 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                      |         
                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x0040893a je 0x40894a                                                                                                                                                                                       |             
    0x0040893c mov rsi, qword [rbx + 0x20]                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x00408940 mov rdi, qword [rbx + 0x48]                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x00408944 mov rax, qword [rdi]                                                                                                                                                                              |             rax = *(rdi);
    0x00408947 call qword [rax + 0x18]                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                 |         }
    0x0040894a mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00408952 mov rax, qword [r14]                                                                                                                                                                              |         rax = *(r14);
    0x00408955 mov rdi, r14                                                                                                                                                                                      |         rdi = r14;
    0x00408958 mov rsi, rbx                                                                                                                                                                                      |         rsi = rbx;
    0x0040895b call qword [rax + 0x18]                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                 |     }
    0x0040895e mov eax, ebp                                                                                                                                                                                      |     eax = ebp;
    0x00408960 add rsp, 8                                                                                                                                                                                        |     
    0x00408964 pop rbx                                                                                                                                                                                           |     
    0x00408965 pop r12                                                                                                                                                                                           |     
    0x00408967 pop r13                                                                                                                                                                                           |     
    0x00408969 pop r14                                                                                                                                                                                           |     
    0x0040896b pop r15                                                                                                                                                                                           |     
    0x0040896d pop rbp                                                                                                                                                                                           |     
    0x0040896e ret                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                 | }
