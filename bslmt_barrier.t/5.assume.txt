    ; assembly                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                 | /* bslmt_barrier.t/assume @ 0x408820 */
                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_Case7_Driver__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__Case7_Driver_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_Case7_Driver_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_Case7_Driver_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<Case7_Driver>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, Case7_Driver const&, BloombergLP::bslma::Allocator*) */
    0x00408820 push rbp                                                                                                                                                                                          |     
    0x00408821 push r15                                                                                                                                                                                          |     
    0x00408823 push r14                                                                                                                                                                                          |     
    0x00408825 push r13                                                                                                                                                                                          |     
    0x00408827 push r12                                                                                                                                                                                          |     
    0x00408829 push rbx                                                                                                                                                                                          |     
    0x0040882a push rax                                                                                                                                                                                          |     
    0x0040882b mov r14, rcx                                                                                                                                                                                      |     r14 = rcx;
    0x0040882e mov r12, rdx                                                                                                                                                                                      |     r12 = rdx;
    0x00408831 mov r15, rsi                                                                                                                                                                                      |     r15 = rsi;
    0x00408834 mov qword [rsp], rdi                                                                                                                                                                              |     *(rsp) = rdi;
    0x00408838 mov r13, qword [rsi + 0x30]                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0040883c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                      |     
                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00408841 je 0x408849                                                                                                                                                                                       |         
    0x00408843 mov rbp, qword [r15 + 0x18]                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x00408847 jmp 0x40884d                                                                                                                                                                                      |         
                                                                                                                                                                                                                 |     } else {
    0x00408849 lea rbp, [r15 + 0x18]                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                 |     }
    0x0040884d mov rax, qword [r14]                                                                                                                                                                              |     rax = *(r14);
    0x00408850 mov esi, 0x50                                                                                                                                                                                     |     esi = 0x50;
    0x00408855 mov rdi, r14                                                                                                                                                                                      |     rdi = r14;
    0x00408858 call qword [rax + 0x10]                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0040885b mov rbx, rax                                                                                                                                                                                      |     rbx = rax;
    0x0040885e mov qword [rax], 0x408970                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_Case7_Driver_.invokerFunction_void_;
    0x00408865 movups xmm0, xmmword [r12]                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x0040886a movups xmmword [rax + 8], xmm0                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0040886e mov rax, qword [r12 + 0x10]                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x00408873 mov qword [rbx + 0x18], rax                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00408877 lea rdi, [rbx + 0x20]                                                                                                                                                                             |     
    0x0040887b mov qword [rbx + 0x20], 0                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x00408883 mov qword [rbx + 0x48], r14                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x00408887 movaps xmm0, xmmword [rip + 0x26c82]                                                                                                                                                              |     xmm0 = .comment;
    0x0040888e movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x00408892 mov ecx, 0x42fd23                                                                                                                                                                                 |     
    0x00408897 mov rsi, rbp                                                                                                                                                                                      |     
    0x0040889a mov rdx, r13                                                                                                                                                                                      |     
    0x0040889d call 0x40bef0                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004088a2 mov edx, 0x409290                                                                                                                                                                                 |     
    0x004088a7 mov rdi, qword [rsp]                                                                                                                                                                              |     
    0x004088ab mov rsi, r15                                                                                                                                                                                      |     
    0x004088ae mov rcx, rbx                                                                                                                                                                                      |     
    0x004088b1 call 0x409ad0                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004088b6 mov ebp, eax                                                                                                                                                                                      |     
    0x004088b8 test eax, eax                                                                                                                                                                                     |     
                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004088ba je 0x4088e5                                                                                                                                                                                       |         
    0x004088bc cmp qword [rbx + 0x40], 0x17                                                                                                                                                                      |         
                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x004088c1 je 0x4088d1                                                                                                                                                                                       |             
    0x004088c3 mov rsi, qword [rbx + 0x20]                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x004088c7 mov rdi, qword [rbx + 0x48]                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x004088cb mov rax, qword [rdi]                                                                                                                                                                              |             rax = *(rdi);
    0x004088ce call qword [rax + 0x18]                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                 |         }
    0x004088d1 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x004088d9 mov rax, qword [r14]                                                                                                                                                                              |         rax = *(r14);
    0x004088dc mov rdi, r14                                                                                                                                                                                      |         rdi = r14;
    0x004088df mov rsi, rbx                                                                                                                                                                                      |         rsi = rbx;
    0x004088e2 call qword [rax + 0x18]                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                 |     }
    0x004088e5 mov eax, ebp                                                                                                                                                                                      |     eax = ebp;
    0x004088e7 add rsp, 8                                                                                                                                                                                        |     
    0x004088eb pop rbx                                                                                                                                                                                           |     
    0x004088ec pop r12                                                                                                                                                                                           |     
    0x004088ee pop r13                                                                                                                                                                                           |     
    0x004088f0 pop r14                                                                                                                                                                                           |     
    0x004088f2 pop r15                                                                                                                                                                                           |     
    0x004088f4 pop rbp                                                                                                                                                                                           |     
    0x004088f5 ret                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                 | }
