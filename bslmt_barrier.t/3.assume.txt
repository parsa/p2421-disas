    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_barrier.t/assume @ 0x408f40 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Barrier__AnotherClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::Barrier__std::__1::chrono::time_point_AnotherClock__std::__1::c ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Barrier_AnotherClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::Barrier_std::_1::chrono::time_point_AnotherClock_std::_1::c (uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::Barrier, AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::Barrier*, std::__1::chrono::time_point<AnotherClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x00408f40 push rbp                                                                                                                                                                                                                                                              |     
    0x00408f41 push r15                                                                                                                                                                                                                                                              |     
    0x00408f43 push r14                                                                                                                                                                                                                                                              |     
    0x00408f45 push r13                                                                                                                                                                                                                                                              |     
    0x00408f47 push r12                                                                                                                                                                                                                                                              |     
    0x00408f49 push rbx                                                                                                                                                                                                                                                              |     
    0x00408f4a sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00408f4e mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x00408f51 mov r13, rdi                                                                                                                                                                                                                                                          |     r13 = rdi;
    0x00408f54 call 0x403660                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x00408f59 mov rbp, rax                                                                                                                                                                                                                                                          |     
    0x00408f5c add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |     rbp += 0xffffffffffffd8f0;
    0x00408f63 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
    0x00408f68 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (rbp >= *(rbx)) {
    0x00408f6b jge 0x40900d                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00408f71 movabs r14, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r14 = 0x112e0be826d694b3;
    0x00408f7b mov r15, rsp                                                                                                                                                                                                                                                          |     r15 = rsp;
    0x00408f7e lea r12, [rsp + 0x10]                                                                                                                                                                                                                                                 |     r12 = rsp + 0x10;
    0x00408f83 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x00408f8d nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00408f90 cmp dword [r13 + 0x58], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((r13 + 0x58)) == 1) {
    0x00408f95 jne 0x408fa0                                                                                                                                                                                                                                                          |             
    0x00408f97 call 0x42f080                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x00408f9c jmp 0x408fa5                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00408fa0 call 0x42f110                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00408fa5 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x00408fa9 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x00408fad mov rcx, qword [rbx]                                                                                                                                                                                                                                                  |         rcx = *(rbx);
    0x00408fb0 sub rcx, rbp                                                                                                                                                                                                                                                          |         rcx -= rbp;
    0x00408fb3 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x00408fb6 imul r14                                                                                                                                                                                                                                                              |         rdx:rax = rax * r14;
    0x00408fb9 mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x00408fbc shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00408fc0 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x00408fc4 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00408fc7 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x00408fcd add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x00408fcf mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x00408fd2 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x00408fd5 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x00408fd7 call 0x42f230                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r15, rdx, ecx);
    0x00408fdc movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x00408fdf movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x00408fe4 mov rdi, r13                                                                                                                                                                                                                                                          |         
    0x00408fe7 mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x00408fea call 0x4090b0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::Barrier::timedWait(BloombergLP::bsls::TimeIntervalconst&) (r13, r12);
    0x00408fef cmp eax, 0xffffffff                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xffffffff) {
    0x00408ff2 jne 0x40900d                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00408ff4 call 0x403660                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x00408ff9 mov rbp, rax                                                                                                                                                                                                                                                          |         
    0x00408ffc add rbp, 0xffffffffffffd8f0                                                                                                                                                                                                                                           |         rbp += 0xffffffffffffd8f0;
    0x00409003 cmp rbp, qword [rbx]                                                                                                                                                                                                                                                  |         
    0x00409006 jl 0x408f90                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rbp < *(rbx));
    0x00409008 mov eax, 0xffffffff                                                                                                                                                                                                                                                   |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                     | label_0:
    0x0040900d add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00409011 pop rbx                                                                                                                                                                                                                                                               |     
    0x00409012 pop r12                                                                                                                                                                                                                                                               |     
    0x00409014 pop r13                                                                                                                                                                                                                                                               |     
    0x00409016 pop r14                                                                                                                                                                                                                                                               |     
    0x00409018 pop r15                                                                                                                                                                                                                                                               |     
    0x0040901a pop rbp                                                                                                                                                                                                                                                               |     
    0x0040901b ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
