0000000000450a90 <int BloombergLP::balb::Choice3::manipulateSelection<BloombergLP::baljsn::Decod   |	0000000000450b00 <int BloombergLP::balb::Choice3::manipulateSelection<BloombergLP::baljsn::Decod
0000000000000000: 02	pushq	%r14								   |	0000000000000000: 01	pushq	%rbp
0000000000000002: 01	pushq	%rbx								   |	0000000000000001: 02	pushq	%r14
0000000000000003: 04	subq	$24, %rsp							   |	0000000000000003: 01	pushq	%rbx
0000000000000007: 06	movl	368(%rdi), %eax							   |	0000000000000004: 04	subq	$32, %rsp
000000000000000d: 04	cmpq	$3, %rax							   |	0000000000000008: 06	movl	368(%rdi), %eax
0000000000000011: 06	ja	0x450b3e <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	000000000000000e: 05	movl	$4294967295, %ebp
0000000000000017: 03	movq	%rdi, %rbx							   |	0000000000000013: 04	cmpq	$3, %rax
000000000000001a: 07	jmpq	*5201432(,%rax,8)						   |	0000000000000017: 06	ja	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
0000000000000021: 03	movq	(%rsi), %rdi							   |	000000000000001d: 03	movq	%rdi, %rbx
0000000000000024: 06	movl	1876134(%rip), %edx  # 61ab60 <BloombergLP::balb::Choice3::SELEC   |	0000000000000020: 07	jmpq	*5203336(,%rax,8)
000000000000002a: 03	movq	%rbx, %rsi							   |	0000000000000027: 03	movq	(%rsi), %rdi
000000000000002d: 04	addq	$24, %rsp							   |	000000000000002a: 06	movl	1876064(%rip), %edx  # 61ab90 <BloombergLP::balb::Choice3::SELEC
0000000000000031: 01	popq	%rbx								   |	0000000000000030: 03	movq	%rbx, %rsi
0000000000000032: 02	popq	%r14								   |	0000000000000033: 04	addq	$32, %rsp
0000000000000034: 05	jmp	0x450b80 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL   |	0000000000000037: 01	popq	%rbx
0000000000000039: 03	movq	(%rsi), %r14							   |	0000000000000038: 02	popq	%r14
000000000000003c: 08	cmpl	$7, 8960(%r14)							   |	000000000000003a: 01	popq	%rbp
0000000000000044: 02	jne	0x450b2c <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	000000000000003b: 05	jmp	0x450c10 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL
0000000000000046: 07	leaq	288(%r14), %rdi							   |	0000000000000040: 03	movq	(%rsi), %r14
000000000000004d: 03	xorps	%xmm0, %xmm0							   |	0000000000000043: 08	cmpl	$7, 8960(%r14)
0000000000000050: 04	movaps	%xmm0, (%rsp)							   |	000000000000004b: 02	jne	0x450bb2 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
0000000000000054: 03	movq	%rsp, %rsi							   |	000000000000004d: 07	leaq	288(%r14), %rdi
0000000000000057: 05	callq	0x45f7a0 <BloombergLP::baljsn::Tokenizer::value(std::__1::basic_   |	0000000000000054: 03	xorps	%xmm0, %xmm0
000000000000005c: 02	testl	%eax, %eax							   |	0000000000000057: 04	movaps	%xmm0, (%rsp)
000000000000005e: 02	je	0x450b4b <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	000000000000005b: 03	movq	%rsp, %rsi
0000000000000060: 05	movl	$6369766, %esi							   |	000000000000005e: 05	callq	0x45f8a0 <BloombergLP::baljsn::Tokenizer::value(std::__1::basic_
0000000000000065: 05	movl	$27, %edx							   |	0000000000000063: 02	testl	%eax, %eax
000000000000006a: 02	jmp	0x450b36 <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	0000000000000065: 02	je	0x450bcf <int BloombergLP::balb::Choice3::manipulateSelection<Bl
000000000000006c: 03	movq	(%rsi), %rdi							   |	0000000000000067: 05	movl	$6371664, %esi
000000000000006f: 06	movl	1876139(%rip), %edx  # 61abb0 <BloombergLP::balb::Choice3::SELEC   |	000000000000006c: 05	movl	$27, %edx
0000000000000075: 03	movq	%rbx, %rsi							   |	0000000000000071: 03	movq	%r14, %rdi
0000000000000078: 04	addq	$24, %rsp							   |	0000000000000074: 05	callq	0x417b80 <std::__1::basic_ostream<char, std::__1::char_traits<ch
000000000000007c: 01	popq	%rbx								   |	0000000000000079: 05	movl	$4294967295, %ebp
000000000000007d: 02	popq	%r14								   |	000000000000007e: 02	jmp	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
000000000000007f: 05	jmp	0x451510 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL   |	0000000000000080: 03	movq	(%rsi), %rdi
0000000000000084: 03	movq	(%rsi), %rdi							   |	0000000000000083: 06	movl	1876055(%rip), %edx  # 61abe0 <BloombergLP::balb::Choice3::SELEC
0000000000000087: 06	movl	1876155(%rip), %edx  # 61abd8 <BloombergLP::balb::Choice3::SELEC   |	0000000000000089: 03	movq	%rbx, %rsi
000000000000008d: 03	movq	%rbx, %rsi							   |	000000000000008c: 04	addq	$32, %rsp
0000000000000090: 04	addq	$24, %rsp							   |	0000000000000090: 01	popq	%rbx
0000000000000094: 01	popq	%rbx								   |	0000000000000091: 02	popq	%r14
0000000000000095: 02	popq	%r14								   |	0000000000000093: 01	popq	%rbp
0000000000000097: 05	jmp	0x451740 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL   |	0000000000000094: 05	jmp	0x4515a0 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL
000000000000009c: 05	movl	$6369730, %esi							   |	0000000000000099: 03	movq	(%rsi), %rdi
00000000000000a1: 05	movl	$35, %edx							   |	000000000000009c: 06	movl	1876070(%rip), %edx  # 61ac08 <BloombergLP::balb::Choice3::SELEC
00000000000000a6: 03	movq	%r14, %rdi							   |	00000000000000a2: 03	movq	%rbx, %rsi
00000000000000a9: 05	callq	0x417b30 <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	00000000000000a5: 04	addq	$32, %rsp
00000000000000ae: 05	movl	$4294967295, %eax						   |	00000000000000a9: 01	popq	%rbx
00000000000000b3: 04	addq	$24, %rsp							   |	00000000000000aa: 02	popq	%r14
00000000000000b7: 01	popq	%rbx								   |	00000000000000ac: 01	popq	%rbp
00000000000000b8: 02	popq	%r14								   |	00000000000000ad: 05	jmp	0x4517d0 <int BloombergLP::baljsn::Decoder::decodeImp<BloombergL
00000000000000ba: 01	retq									   |	00000000000000b2: 05	movl	$6371628, %esi
00000000000000bb: 06	cmpq	$0, 8(%rsp)							   |	00000000000000b7: 05	movl	$35, %edx
00000000000000c1: 02	je	0x450b3e <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	00000000000000bc: 03	movq	%r14, %rdi
00000000000000c3: 05	leaq	16(%rsp), %rdi							   |	00000000000000bf: 05	callq	0x417b80 <std::__1::basic_ostream<char, std::__1::char_traits<ch
00000000000000c8: 03	movq	%rsp, %rsi							   |	00000000000000c4: 02	movl	%ebp, %eax
00000000000000cb: 05	callq	0x45e240 <BloombergLP::baljsn::ParserUtil::getUint64(unsigned lo   |	00000000000000c6: 04	addq	$32, %rsp
00000000000000d0: 02	movl	%eax, %ecx							   |	00000000000000ca: 01	popq	%rbx
00000000000000d2: 05	movl	$4294967295, %eax						   |	00000000000000cb: 02	popq	%r14
00000000000000d7: 02	testl	%ecx, %ecx							   |	00000000000000cd: 01	popq	%rbp
00000000000000d9: 02	jne	0x450b43 <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	00000000000000ce: 01	retq	
00000000000000db: 05	movq	16(%rsp), %rcx							   |	00000000000000cf: 06	cmpq	$0, 8(%rsp)
00000000000000e0: 07	cmpq	$255, %rcx							   |	00000000000000d5: 02	je	0x450c00 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
00000000000000e7: 02	ja	0x450b43 <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	00000000000000d7: 05	leaq	24(%rsp), %rdi
00000000000000e9: 02	movb	%cl, (%rbx)							   |	00000000000000dc: 03	movq	%rsp, %rsi
00000000000000eb: 02	xorl	%eax, %eax							   |	00000000000000df: 05	callq	0x45e340 <BloombergLP::baljsn::ParserUtil::getUint64(unsigned lo
00000000000000ed: 02	jmp	0x450b43 <int BloombergLP::balb::Choice3::manipulateSelection<Bl   |	00000000000000e4: 05	movl	$4294967295, %ebp
00000000000000ef: 01	nop									   |	00000000000000e9: 02	testl	%eax, %eax
												   >	00000000000000eb: 02	jne	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
												   >	00000000000000ed: 05	movq	24(%rsp), %rax
												   >	00000000000000f2: 06	cmpq	$255, %rax
												   >	00000000000000f8: 02	ja	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
												   >	00000000000000fa: 02	movb	%al, (%rbx)
												   >	00000000000000fc: 02	xorl	%ebp, %ebp
												   >	00000000000000fe: 02	jmp	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
												   >	0000000000000100: 05	movl	$4294967295, %ebp
												   >	0000000000000105: 02	jmp	0x450bc4 <int BloombergLP::balb::Choice3::manipulateSelection<Bl
												   >	0000000000000107: 09	nopw	(%rax,%rax)
