0000000000499e90 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b   |	000000000049aaa0 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b
0000000000000000: 03	movq	%rdi, %rax							   |	0000000000000000: 02	decl	%edx
0000000000000003: 02	decl	%edx								   |	0000000000000002: 03	cmpl	$16, %edx
0000000000000005: 07	jmpq	*5070104(,%rdx,8)						   |	0000000000000005: 06	ja	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000000c: 01	retq									   |	000000000000000b: 03	movq	%rdi, %rax
000000000000000d: 03	movq	(%rsi), %rsi							   |	000000000000000e: 07	jmpq	*5078184(,%rdx,8)
0000000000000010: 03	movb	1(%rsi), %dl							   |	0000000000000015: 03	movq	(%rsi), %rsi
0000000000000013: 02	testb	%dl, %dl							   |	0000000000000018: 03	movb	1(%rsi), %dl
0000000000000015: 04	setne	%dil								   |	000000000000001b: 02	testb	%dl, %dl
0000000000000019: 04	cmpb	$0, 1(%rax)							   |	000000000000001d: 04	setne	%dil
000000000000001d: 03	setne	%cl								   |	0000000000000021: 04	cmpb	$0, 1(%rax)
0000000000000020: 03	xorb	%dil, %cl							   |	0000000000000025: 03	setne	%cl
0000000000000023: 06	je	0x49a076 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000028: 03	xorb	%dil, %cl
0000000000000029: 02	testb	%dl, %dl							   |	000000000000002b: 06	je	0x49ac96 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000002b: 06	je	0x49a0dd <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000031: 02	testb	%dl, %dl
0000000000000031: 02	movb	(%rsi), %cl							   |	0000000000000033: 06	je	0x49acf6 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000033: 02	movb	%cl, (%rax)							   |	0000000000000039: 02	movb	(%rsi), %cl
0000000000000035: 04	movb	$1, 1(%rax)							   |	000000000000003b: 02	movb	%cl, (%rax)
0000000000000039: 04	cmpb	$0, 1(%rsi)							   |	000000000000003d: 04	movb	$1, 1(%rax)
000000000000003d: 02	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000041: 04	cmpb	$0, 1(%rsi)
000000000000003f: 04	movb	$0, 1(%rsi)							   |	0000000000000045: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000043: 01	retq									   |	000000000000004b: 04	movb	$0, 1(%rsi)
0000000000000044: 03	movq	(%rsi), %rsi							   |	000000000000004f: 01	retq	
0000000000000047: 03	movb	1(%rsi), %dl							   |	0000000000000050: 03	movq	(%rsi), %rsi
000000000000004a: 02	testb	%dl, %dl							   |	0000000000000053: 03	movb	1(%rsi), %dl
000000000000004c: 04	setne	%dil								   |	0000000000000056: 02	testb	%dl, %dl
0000000000000050: 04	cmpb	$0, 1(%rax)							   |	0000000000000058: 04	setne	%dil
0000000000000054: 03	setne	%cl								   |	000000000000005c: 04	cmpb	$0, 1(%rax)
0000000000000057: 03	xorb	%dil, %cl							   |	0000000000000060: 03	setne	%cl
000000000000005a: 06	je	0x49a076 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000063: 03	xorb	%dil, %cl
0000000000000060: 02	testb	%dl, %dl							   |	0000000000000066: 06	je	0x49ac96 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000062: 06	je	0x49a0f4 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000006c: 02	testb	%dl, %dl
0000000000000068: 02	movb	(%rsi), %cl							   |	000000000000006e: 06	je	0x49ad09 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000006a: 02	movb	%cl, (%rax)							   |	0000000000000074: 02	movb	(%rsi), %cl
000000000000006c: 04	movb	$1, 1(%rax)							   |	0000000000000076: 02	movb	%cl, (%rax)
0000000000000070: 04	cmpb	$0, 1(%rsi)							   |	0000000000000078: 04	movb	$1, 1(%rax)
0000000000000074: 02	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000007c: 04	cmpb	$0, 1(%rsi)
0000000000000076: 04	movb	$0, 1(%rsi)							   |	0000000000000080: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000007a: 01	retq									   |	0000000000000086: 04	movb	$0, 1(%rsi)
000000000000007b: 03	movq	(%rsi), %rsi							   |	000000000000008a: 01	retq	
000000000000007e: 03	movb	4(%rsi), %dl							   |	000000000000008b: 03	movq	(%rsi), %rsi
0000000000000081: 02	testb	%dl, %dl							   |	000000000000008e: 03	movb	4(%rsi), %dl
0000000000000083: 04	setne	%dil								   |	0000000000000091: 02	testb	%dl, %dl
0000000000000087: 04	cmpb	$0, 4(%rax)							   |	0000000000000093: 04	setne	%dil
000000000000008b: 03	setne	%cl								   |	0000000000000097: 04	cmpb	$0, 4(%rax)
000000000000008e: 03	xorb	%dil, %cl							   |	000000000000009b: 03	setne	%cl
0000000000000091: 06	je	0x49a087 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000009e: 03	xorb	%dil, %cl
0000000000000097: 02	testb	%dl, %dl							   |	00000000000000a1: 06	je	0x49aca7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000099: 06	je	0x49a0c6 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000a7: 02	testb	%dl, %dl
000000000000009f: 02	movl	(%rsi), %ecx							   |	00000000000000a9: 06	je	0x49ace2 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000a1: 02	movl	%ecx, (%rax)							   |	00000000000000af: 02	movl	(%rsi), %ecx
00000000000000a3: 04	movb	$1, 4(%rax)							   |	00000000000000b1: 02	movl	%ecx, (%rax)
00000000000000a7: 04	cmpb	$0, 4(%rsi)							   |	00000000000000b3: 04	movb	$1, 4(%rax)
00000000000000ab: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000b7: 04	cmpb	$0, 4(%rsi)
00000000000000b1: 04	movb	$0, 4(%rsi)							   |	00000000000000bb: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000b5: 01	retq									   |	00000000000000c1: 04	movb	$0, 4(%rsi)
00000000000000b6: 03	movq	(%rsi), %rsi							   |	00000000000000c5: 01	retq	
00000000000000b9: 03	movb	8(%rsi), %dl							   |	00000000000000c6: 03	movq	(%rsi), %rsi
00000000000000bc: 02	testb	%dl, %dl							   |	00000000000000c9: 03	movb	8(%rsi), %dl
00000000000000be: 04	setne	%dil								   |	00000000000000cc: 02	testb	%dl, %dl
00000000000000c2: 04	cmpb	$0, 8(%rax)							   |	00000000000000ce: 04	setne	%dil
00000000000000c6: 03	setne	%cl								   |	00000000000000d2: 04	cmpb	$0, 8(%rax)
00000000000000c9: 03	xorb	%dil, %cl							   |	00000000000000d6: 03	setne	%cl
00000000000000cc: 06	je	0x49a098 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000d9: 03	xorb	%dil, %cl
00000000000000d2: 02	testb	%dl, %dl							   |	00000000000000dc: 06	je	0x49acb8 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000d4: 06	je	0x49a10b <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000e2: 02	testb	%dl, %dl
00000000000000da: 03	movq	(%rsi), %rcx							   |	00000000000000e4: 06	je	0x49ad1c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000dd: 03	movq	%rcx, (%rax)							   |	00000000000000ea: 03	movq	(%rsi), %rcx
00000000000000e0: 04	movb	$1, 8(%rax)							   |	00000000000000ed: 03	movq	%rcx, (%rax)
00000000000000e4: 04	cmpb	$0, 8(%rsi)							   |	00000000000000f0: 04	movb	$1, 8(%rax)
00000000000000e8: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000f4: 04	cmpb	$0, 8(%rsi)
00000000000000ee: 04	movb	$0, 8(%rsi)							   |	00000000000000f8: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000f2: 01	retq									   |	00000000000000fe: 04	movb	$0, 8(%rsi)
00000000000000f3: 03	movq	(%rsi), %rsi							   |	0000000000000102: 01	retq	
00000000000000f6: 03	movb	8(%rsi), %dl							   |	0000000000000103: 03	movq	(%rsi), %rsi
00000000000000f9: 02	testb	%dl, %dl							   |	0000000000000106: 03	movb	8(%rsi), %dl
00000000000000fb: 04	setne	%dil								   |	0000000000000109: 02	testb	%dl, %dl
00000000000000ff: 04	cmpb	$0, 8(%rax)							   |	000000000000010b: 04	setne	%dil
0000000000000103: 03	setne	%cl								   |	000000000000010f: 04	cmpb	$0, 8(%rax)
0000000000000106: 03	xorb	%dil, %cl							   |	0000000000000113: 03	setne	%cl
0000000000000109: 06	je	0x49a0ad <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000116: 03	xorb	%dil, %cl
000000000000010f: 02	testb	%dl, %dl							   |	0000000000000119: 06	je	0x49accd <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000111: 06	je	0x49a124 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000011f: 02	testb	%dl, %dl
0000000000000117: 04	movsd	(%rsi), %xmm0							   |	0000000000000121: 06	je	0x49ad31 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000011b: 04	movsd	%xmm0, (%rax)							   |	0000000000000127: 04	movsd	(%rsi), %xmm0
000000000000011f: 04	movb	$1, 8(%rax)							   |	000000000000012b: 04	movsd	%xmm0, (%rax)
0000000000000123: 04	cmpb	$0, 8(%rsi)							   |	000000000000012f: 04	movb	$1, 8(%rax)
0000000000000127: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000133: 04	cmpb	$0, 8(%rsi)
000000000000012d: 04	movb	$0, 8(%rsi)							   |	0000000000000137: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000131: 01	retq									   |	000000000000013d: 04	movb	$0, 8(%rsi)
0000000000000132: 03	movq	(%rsi), %rdi							   |	0000000000000141: 01	retq	
0000000000000135: 03	movq	%rax, %rsi							   |	0000000000000142: 03	movq	(%rsi), %rdi
0000000000000138: 05	jmp	0x49a140 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	0000000000000145: 03	movq	%rax, %rsi
000000000000013d: 03	movq	(%rsi), %rdi							   |	0000000000000148: 05	jmp	0x49ad50 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
0000000000000140: 03	movq	%rax, %rsi							   |	000000000000014d: 03	movq	(%rsi), %rdi
0000000000000143: 05	jmp	0x49a610 <std::__1::optional<BloombergLP::bdlt::Datetime>::swap(   |	0000000000000150: 03	movq	%rax, %rsi
0000000000000148: 03	movq	(%rsi), %rsi							   |	0000000000000153: 05	jmp	0x49b220 <std::__1::optional<BloombergLP::bdlt::Datetime>::swap(
000000000000014b: 03	movb	4(%rsi), %dl							   |	0000000000000158: 03	movq	(%rsi), %rsi
000000000000014e: 02	testb	%dl, %dl							   |	000000000000015b: 03	movb	4(%rsi), %dl
0000000000000150: 04	setne	%dil								   |	000000000000015e: 02	testb	%dl, %dl
0000000000000154: 04	cmpb	$0, 4(%rax)							   |	0000000000000160: 04	setne	%dil
0000000000000158: 03	setne	%cl								   |	0000000000000164: 04	cmpb	$0, 4(%rax)
000000000000015b: 03	xorb	%dil, %cl							   |	0000000000000168: 03	setne	%cl
000000000000015e: 06	je	0x49a087 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000016b: 03	xorb	%dil, %cl
0000000000000164: 02	testb	%dl, %dl							   |	000000000000016e: 06	je	0x49aca7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000166: 06	je	0x49a0c6 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000174: 02	testb	%dl, %dl
000000000000016c: 02	movl	(%rsi), %ecx							   |	0000000000000176: 06	je	0x49ace2 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000016e: 02	movl	%ecx, (%rax)							   |	000000000000017c: 02	movl	(%rsi), %ecx
0000000000000170: 04	movb	$1, 4(%rax)							   |	000000000000017e: 02	movl	%ecx, (%rax)
0000000000000174: 04	cmpb	$0, 4(%rsi)							   |	0000000000000180: 04	movb	$1, 4(%rax)
0000000000000178: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000184: 04	cmpb	$0, 4(%rsi)
000000000000017e: 04	movb	$0, 4(%rsi)							   |	0000000000000188: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000182: 01	retq									   |	000000000000018e: 04	movb	$0, 4(%rsi)
0000000000000183: 03	movq	(%rsi), %rdi							   |	0000000000000192: 01	retq	
0000000000000186: 03	movq	%rax, %rsi							   |	0000000000000193: 03	movq	(%rsi), %rdi
0000000000000189: 05	jmp	0x49a870 <std::__1::optional<BloombergLP::bdlt::Time>::swap(std:   |	0000000000000196: 03	movq	%rax, %rsi
000000000000018e: 03	movq	(%rsi), %rdi							   |	0000000000000199: 05	jmp	0x49b480 <std::__1::optional<BloombergLP::bdlt::Time>::swap(std:
0000000000000191: 03	movq	%rax, %rsi							   |	000000000000019e: 03	movq	(%rsi), %rdi
0000000000000194: 05	jmp	0x49a9b0 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001a1: 03	movq	%rax, %rsi
0000000000000199: 03	movq	(%rsi), %rdi							   |	00000000000001a4: 05	jmp	0x49b5c0 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
000000000000019c: 03	movq	%rax, %rsi							   |	00000000000001a9: 03	movq	(%rsi), %rdi
000000000000019f: 05	jmp	0x49ac80 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001ac: 03	movq	%rax, %rsi
00000000000001a4: 03	movq	(%rsi), %rdi							   |	00000000000001af: 05	jmp	0x49b890 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001a7: 03	movq	%rax, %rsi							   |	00000000000001b4: 03	movq	(%rsi), %rdi
00000000000001aa: 05	jmp	0x49af50 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001b7: 03	movq	%rax, %rsi
00000000000001af: 03	movq	(%rsi), %rdi							   |	00000000000001ba: 05	jmp	0x49bb60 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001b2: 03	movq	%rax, %rsi							   |	00000000000001bf: 03	movq	(%rsi), %rdi
00000000000001b5: 05	jmp	0x49b220 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001c2: 03	movq	%rax, %rsi
00000000000001ba: 03	movq	(%rsi), %rdi							   |	00000000000001c5: 05	jmp	0x49be30 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001bd: 03	movq	%rax, %rsi							   |	00000000000001ca: 03	movq	(%rsi), %rdi
00000000000001c0: 05	jmp	0x49b4f0 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001cd: 03	movq	%rax, %rsi
00000000000001c5: 03	movq	(%rsi), %rdi							   |	00000000000001d0: 05	jmp	0x49c100 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001c8: 03	movq	%rax, %rsi							   |	00000000000001d5: 03	movq	(%rsi), %rdi
00000000000001cb: 05	jmp	0x49bbd0 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001d8: 03	movq	%rax, %rsi
00000000000001d0: 03	movq	(%rsi), %rdi							   |	00000000000001db: 05	jmp	0x49c7e0 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001d3: 03	movq	%rax, %rsi							   |	00000000000001e0: 03	movq	(%rsi), %rdi
00000000000001d6: 05	jmp	0x49c100 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001e3: 03	movq	%rax, %rsi
00000000000001db: 03	movq	(%rsi), %rdi							   |	00000000000001e6: 05	jmp	0x49cd10 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001de: 03	movq	%rax, %rsi							   |	00000000000001eb: 03	movq	(%rsi), %rdi
00000000000001e1: 05	jmp	0x49c630 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<   |	00000000000001ee: 03	movq	%rax, %rsi
00000000000001e6: 02	testb	%dl, %dl							   |	00000000000001f1: 05	jmp	0x49d240 <bsl::enable_if<BloombergLP::bslma::UsesBslmaAllocator<
00000000000001e8: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001f6: 02	testb	%dl, %dl
00000000000001ee: 02	movb	(%rsi), %cl							   |	00000000000001f8: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001f0: 02	movb	(%rax), %dl							   |	00000000000001fe: 02	movb	(%rsi), %cl
00000000000001f2: 02	movb	%dl, (%rsi)							   |	0000000000000200: 02	movb	(%rax), %dl
00000000000001f4: 02	movb	%cl, (%rax)							   |	0000000000000202: 02	movb	%dl, (%rsi)
00000000000001f6: 01	retq									   |	0000000000000204: 02	movb	%cl, (%rax)
00000000000001f7: 02	testb	%dl, %dl							   |	0000000000000206: 01	retq	
00000000000001f9: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000207: 02	testb	%dl, %dl
00000000000001ff: 02	movl	(%rsi), %ecx							   |	0000000000000209: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000201: 02	movl	(%rax), %edx							   |	000000000000020f: 02	movl	(%rsi), %ecx
0000000000000203: 02	movl	%edx, (%rsi)							   |	0000000000000211: 02	movl	(%rax), %edx
0000000000000205: 02	movl	%ecx, (%rax)							   |	0000000000000213: 02	movl	%edx, (%rsi)
0000000000000207: 01	retq									   |	0000000000000215: 02	movl	%ecx, (%rax)
0000000000000208: 02	testb	%dl, %dl							   |	0000000000000217: 01	retq	
000000000000020a: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000218: 02	testb	%dl, %dl
0000000000000210: 03	movq	(%rsi), %rcx							   |	000000000000021a: 06	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000213: 03	movq	(%rax), %rdx							   |	0000000000000220: 03	movq	(%rsi), %rcx
0000000000000216: 03	movq	%rdx, (%rsi)							   |	0000000000000223: 03	movq	(%rax), %rdx
0000000000000219: 03	movq	%rcx, (%rax)							   |	0000000000000226: 03	movq	%rdx, (%rsi)
000000000000021c: 01	retq									   |	0000000000000229: 03	movq	%rcx, (%rax)
000000000000021d: 02	testb	%dl, %dl							   |	000000000000022c: 01	retq	
000000000000021f: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000022d: 02	testb	%dl, %dl
0000000000000225: 04	movsd	(%rsi), %xmm0							   |	000000000000022f: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000229: 04	movsd	(%rax), %xmm1							   |	0000000000000231: 04	movsd	(%rsi), %xmm0
000000000000022d: 04	movsd	%xmm1, (%rsi)							   |	0000000000000235: 04	movsd	(%rax), %xmm1
0000000000000231: 04	movsd	%xmm0, (%rax)							   |	0000000000000239: 04	movsd	%xmm1, (%rsi)
0000000000000235: 01	retq									   |	000000000000023d: 04	movsd	%xmm0, (%rax)
0000000000000236: 02	movl	(%rax), %ecx							   |	0000000000000241: 01	retq	
0000000000000238: 02	movl	%ecx, (%rsi)							   |	0000000000000242: 02	movl	(%rax), %ecx
000000000000023a: 04	movb	$1, 4(%rsi)							   |	0000000000000244: 02	movl	%ecx, (%rsi)
000000000000023e: 04	cmpb	$0, 4(%rax)							   |	0000000000000246: 04	movb	$1, 4(%rsi)
0000000000000242: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000024a: 04	cmpb	$0, 4(%rax)
0000000000000248: 04	movb	$0, 4(%rax)							   |	000000000000024e: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000024c: 01	retq									   |	0000000000000250: 04	movb	$0, 4(%rax)
000000000000024d: 02	movb	(%rax), %cl							   |	0000000000000254: 02	jmp	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000024f: 02	movb	%cl, (%rsi)							   |	0000000000000256: 02	movb	(%rax), %cl
0000000000000251: 04	movb	$1, 1(%rsi)							   |	0000000000000258: 02	movb	%cl, (%rsi)
0000000000000255: 04	cmpb	$0, 1(%rax)							   |	000000000000025a: 04	movb	$1, 1(%rsi)
0000000000000259: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000025e: 04	cmpb	$0, 1(%rax)
000000000000025f: 04	movb	$0, 1(%rax)							   |	0000000000000262: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000263: 01	retq									   |	0000000000000264: 04	movb	$0, 1(%rax)
0000000000000264: 02	movb	(%rax), %cl							   |	0000000000000268: 01	retq	
0000000000000266: 02	movb	%cl, (%rsi)							   |	0000000000000269: 02	movb	(%rax), %cl
0000000000000268: 04	movb	$1, 1(%rsi)							   |	000000000000026b: 02	movb	%cl, (%rsi)
000000000000026c: 04	cmpb	$0, 1(%rax)							   |	000000000000026d: 04	movb	$1, 1(%rsi)
0000000000000270: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000271: 04	cmpb	$0, 1(%rax)
0000000000000276: 04	movb	$0, 1(%rax)							   |	0000000000000275: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000027a: 01	retq									   |	0000000000000277: 04	movb	$0, 1(%rax)
000000000000027b: 03	movq	(%rax), %rcx							   |	000000000000027b: 01	retq	
000000000000027e: 03	movq	%rcx, (%rsi)							   |	000000000000027c: 03	movq	(%rax), %rcx
0000000000000281: 04	movb	$1, 8(%rsi)							   |	000000000000027f: 03	movq	%rcx, (%rsi)
0000000000000285: 04	cmpb	$0, 8(%rax)							   |	0000000000000282: 04	movb	$1, 8(%rsi)
0000000000000289: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000286: 04	cmpb	$0, 8(%rax)
000000000000028f: 04	movb	$0, 8(%rax)							   |	000000000000028a: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000293: 01	retq									   |	000000000000028c: 04	movb	$0, 8(%rax)
0000000000000294: 04	movsd	(%rax), %xmm0							   |	0000000000000290: 01	retq	
0000000000000298: 04	movsd	%xmm0, (%rsi)							   |	0000000000000291: 04	movsd	(%rax), %xmm0
000000000000029c: 04	movb	$1, 8(%rsi)							   |	0000000000000295: 04	movsd	%xmm0, (%rsi)
00000000000002a0: 04	cmpb	$0, 8(%rax)							   |	0000000000000299: 04	movb	$1, 8(%rsi)
00000000000002a4: 06	je	0x499e9c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000029d: 04	cmpb	$0, 8(%rax)
00000000000002aa: 04	movb	$0, 8(%rax)							   |	00000000000002a1: 02	je	0x49ad47 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002ae: 01	retq									   |	00000000000002a3: 04	movb	$0, 8(%rax)
00000000000002af: 01	nop									   |	00000000000002a7: 01	retq	
												   >	00000000000002a8: 08	nopl	(%rax,%rax)
