000000000049d190 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b   |	000000000049dda0 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b
0000000000000000: 02	pushq	%r14									0000000000000000: 02	pushq	%r14
0000000000000002: 01	pushq	%rbx									0000000000000002: 01	pushq	%rbx
0000000000000003: 01	pushq	%rax									0000000000000003: 01	pushq	%rax
0000000000000004: 03	movq	%rdi, %rax							   |	0000000000000004: 02	decl	%edx
0000000000000007: 02	decl	%edx								   |	0000000000000006: 03	cmpl	$16, %edx
0000000000000009: 07	jmpq	*5070424(,%rdx,8)						   |	0000000000000009: 06	ja	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000010: 03	movq	(%rsi), %rcx							   |	000000000000000f: 03	movq	%rdi, %rax
0000000000000013: 04	cmpb	$0, 1(%rax)							   |	0000000000000012: 07	jmpq	*5078456(,%rdx,8)
0000000000000017: 03	movb	1(%rcx), %dl							   |	0000000000000019: 03	movq	(%rsi), %rcx
000000000000001a: 06	je	0x49d37b <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000001c: 04	cmpb	$0, 1(%rax)
0000000000000020: 02	movb	(%rax), %al							   |	0000000000000020: 03	movb	1(%rcx), %dl
0000000000000022: 02	movb	%al, (%rcx)							   |	0000000000000023: 06	je	0x49df94 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000024: 02	testb	%dl, %dl							   |	0000000000000029: 02	movb	(%rax), %al
0000000000000026: 06	jne	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000002b: 02	movb	%al, (%rcx)
000000000000002c: 04	movb	$1, 1(%rcx)							   |	000000000000002d: 02	testb	%dl, %dl
0000000000000030: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000002f: 06	jne	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000035: 03	movq	(%rsi), %rcx							   |	0000000000000035: 04	movb	$1, 1(%rcx)
0000000000000038: 04	cmpb	$0, 4(%rax)							   |	0000000000000039: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000003c: 03	movb	4(%rcx), %dl							   |	000000000000003e: 03	movq	(%rsi), %rcx
000000000000003f: 06	je	0x49d38c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000041: 04	cmpb	$0, 4(%rax)
0000000000000045: 02	movl	(%rax), %eax							   |	0000000000000045: 03	movb	4(%rcx), %dl
0000000000000047: 02	movl	%eax, (%rcx)							   |	0000000000000048: 06	je	0x49dfa5 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000049: 02	testb	%dl, %dl							   |	000000000000004e: 02	movl	(%rax), %eax
000000000000004b: 06	jne	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000050: 02	movl	%eax, (%rcx)
0000000000000051: 04	movb	$1, 4(%rcx)							   |	0000000000000052: 02	testb	%dl, %dl
0000000000000055: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000054: 06	jne	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000005a: 03	movq	(%rsi), %rcx							   |	000000000000005a: 04	movb	$1, 4(%rcx)
000000000000005d: 04	cmpb	$0, 8(%rax)							   |	000000000000005e: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000061: 03	movb	8(%rcx), %dl							   |	0000000000000063: 03	movq	(%rsi), %rcx
0000000000000064: 06	je	0x49d39d <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000066: 04	cmpb	$0, 8(%rax)
000000000000006a: 03	movq	(%rax), %rax							   |	000000000000006a: 03	movb	8(%rcx), %dl
000000000000006d: 03	movq	%rax, (%rcx)							   |	000000000000006d: 06	je	0x49dfb6 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000070: 02	testb	%dl, %dl							   |	0000000000000073: 03	movq	(%rax), %rax
0000000000000072: 06	jne	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000076: 03	movq	%rax, (%rcx)
0000000000000078: 02	jmp	0x49d22a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000079: 02	testb	%dl, %dl
000000000000007a: 03	movq	(%rsi), %rcx							   |	000000000000007b: 06	jne	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000007d: 04	cmpb	$0, 8(%rax)							   |	0000000000000081: 02	jmp	0x49de43 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000081: 03	movb	8(%rcx), %dl							   |	0000000000000083: 03	movq	(%rsi), %rcx
0000000000000084: 06	je	0x49d39d <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000086: 04	cmpb	$0, 8(%rax)
000000000000008a: 04	movsd	(%rax), %xmm0							   |	000000000000008a: 03	movb	8(%rcx), %dl
000000000000008e: 04	movsd	%xmm0, (%rcx)							   |	000000000000008d: 06	je	0x49dfb6 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000092: 02	testb	%dl, %dl							   |	0000000000000093: 04	movsd	(%rax), %xmm0
0000000000000094: 06	jne	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000097: 04	movsd	%xmm0, (%rcx)
000000000000009a: 04	movb	$1, 8(%rcx)							   |	000000000000009b: 02	testb	%dl, %dl
000000000000009e: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000009d: 06	jne	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000a3: 03	movq	(%rsi), %rbx							   |	00000000000000a3: 04	movb	$1, 8(%rcx)
00000000000000a6: 04	cmpb	$0, 48(%rax)							   |	00000000000000a7: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000aa: 03	movb	48(%rbx), %cl							   |	00000000000000ac: 03	movq	(%rsi), %rbx
00000000000000ad: 06	je	0x49d3ae <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000af: 04	cmpb	$0, 48(%rax)
00000000000000b3: 02	testb	%cl, %cl							   |	00000000000000b3: 03	movb	48(%rbx), %cl
00000000000000b5: 06	je	0x49d466 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000b6: 06	je	0x49dfc7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000bb: 03	movq	%rbx, %rdi							   |	00000000000000bc: 02	testb	%cl, %cl
00000000000000be: 03	movq	%rax, %rsi							   |	00000000000000be: 06	je	0x49e076 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000c1: 05	callq	0x4ab350 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	00000000000000c4: 03	movq	%rbx, %rdi
00000000000000c6: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000c7: 03	movq	%rax, %rsi
00000000000000cb: 03	movq	(%rsi), %rdi							   |	00000000000000ca: 05	callq	0x4ac020 <bsl::basic_string<char, std::__1::char_traits<char>, b
00000000000000ce: 03	movq	%rax, %rsi							   |	00000000000000cf: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000d1: 05	callq	0x49d4d0 <BloombergLP::bdlb::NullableValue<BloombergLP::bdlt::Da   |	00000000000000d4: 03	movq	(%rsi), %rdi
00000000000000d6: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000d7: 03	movq	%rax, %rsi
00000000000000db: 03	movq	(%rsi), %rbx							   |	00000000000000da: 05	callq	0x49e0f0 <BloombergLP::bdlb::NullableValue<BloombergLP::bdlt::Da
00000000000000de: 04	cmpb	$0, 8(%rax)							   |	00000000000000df: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000e2: 03	movb	8(%rbx), %cl							   |	00000000000000e4: 03	movq	(%rsi), %rbx
00000000000000e5: 06	je	0x49d3db <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000e7: 04	cmpb	$0, 8(%rax)
00000000000000eb: 10	movabsq	$274877906944, %r14						   |	00000000000000eb: 03	movb	8(%rbx), %cl
00000000000000f5: 03	movq	(%rax), %rax							   |	00000000000000ee: 06	je	0x49dff4 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000f8: 03	movq	%rax, (%rbx)							   |	00000000000000f4: 10	movabsq	$274877906944, %r14
00000000000000fb: 02	testb	%cl, %cl							   |	00000000000000fe: 03	movq	(%rax), %rax
00000000000000fd: 06	je	0x49d448 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000101: 03	movq	%rax, (%rbx)
0000000000000103: 03	cmpq	%r14, %rax							   |	0000000000000104: 02	testb	%cl, %cl
0000000000000106: 06	jl	0x49d492 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000106: 06	je	0x49e087 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000010c: 10	movabsq	$-274877906945, %rcx						   |	000000000000010c: 03	cmpq	%r14, %rax
0000000000000116: 03	andq	%rcx, %rax							   |	000000000000010f: 06	jl	0x49e0ab <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000119: 03	orq	%r14, %rax							   |	0000000000000115: 10	movabsq	$-274877906945, %rcx
000000000000011c: 03	movq	%rax, (%rbx)							   |	000000000000011f: 03	andq	%rcx, %rax
000000000000011f: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000122: 03	orq	%r14, %rax
0000000000000124: 03	movq	%rsi, %rdi							   |	0000000000000125: 03	movq	%rax, (%rbx)
0000000000000127: 03	movq	%rax, %rsi							   |	0000000000000128: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000012a: 04	addq	$8, %rsp							   |	000000000000012d: 03	movq	%rsi, %rdi
000000000000012e: 01	popq	%rbx								   |	0000000000000130: 03	movq	%rax, %rsi
000000000000012f: 02	popq	%r14								   |	0000000000000133: 04	addq	$8, %rsp
0000000000000131: 05	jmp	0x49d600 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope   |	0000000000000137: 01	popq	%rbx
0000000000000136: 03	movq	%rsi, %rdi							   |	0000000000000138: 02	popq	%r14
0000000000000139: 03	movq	%rax, %rsi							   |	000000000000013a: 05	jmp	0x49e220 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope
000000000000013c: 04	addq	$8, %rsp							   |	000000000000013f: 03	movq	%rsi, %rdi
0000000000000140: 01	popq	%rbx								   |	0000000000000142: 03	movq	%rax, %rsi
0000000000000141: 02	popq	%r14								   |	0000000000000145: 04	addq	$8, %rsp
0000000000000143: 05	jmp	0x49d680 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope   |	0000000000000149: 01	popq	%rbx
0000000000000148: 03	movq	%rsi, %rdi							   |	000000000000014a: 02	popq	%r14
000000000000014b: 03	movq	%rax, %rsi							   |	000000000000014c: 05	jmp	0x49e2a0 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope
000000000000014e: 04	addq	$8, %rsp							   |	0000000000000151: 03	movq	%rsi, %rdi
0000000000000152: 01	popq	%rbx								   |	0000000000000154: 03	movq	%rax, %rsi
0000000000000153: 02	popq	%r14								   |	0000000000000157: 04	addq	$8, %rsp
0000000000000155: 05	jmp	0x49d700 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope   |	000000000000015b: 01	popq	%rbx
000000000000015a: 03	movq	%rsi, %rdi							   |	000000000000015c: 02	popq	%r14
000000000000015d: 03	movq	%rax, %rsi							   |	000000000000015e: 05	jmp	0x49e320 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope
0000000000000160: 04	addq	$8, %rsp							   |	0000000000000163: 03	movq	%rsi, %rdi
0000000000000164: 01	popq	%rbx								   |	0000000000000166: 03	movq	%rax, %rsi
0000000000000165: 02	popq	%r14								   |	0000000000000169: 04	addq	$8, %rsp
0000000000000167: 05	jmp	0x49d780 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope   |	000000000000016d: 01	popq	%rbx
000000000000016c: 03	movq	(%rsi), %rdi							   |	000000000000016e: 02	popq	%r14
000000000000016f: 03	movq	%rax, %rsi							   |	0000000000000170: 05	jmp	0x49e3a0 <void BloombergLP::bdlb::Variant_MoveAssignVisitor::ope
0000000000000172: 05	callq	0x49d800 <BloombergLP::bdlb::NullableValue<bsl::vector<bsl::basi   |	0000000000000175: 03	movq	(%rsi), %rdi
0000000000000177: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000178: 03	movq	%rax, %rsi
000000000000017c: 03	movq	(%rsi), %rdi							   |	000000000000017b: 05	callq	0x49e420 <BloombergLP::bdlb::NullableValue<bsl::vector<bsl::basi
000000000000017f: 04	cmpb	$0, 32(%rax)							   |	0000000000000180: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000183: 03	movb	32(%rdi), %cl							   |	0000000000000185: 03	movq	(%rsi), %rdi
0000000000000186: 06	je	0x49d3ec <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000188: 04	cmpb	$0, 32(%rax)
000000000000018c: 03	movq	%rax, %rsi							   |	000000000000018c: 03	movb	32(%rdi), %cl
000000000000018f: 02	testb	%cl, %cl							   |	000000000000018f: 06	je	0x49e005 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000191: 06	je	0x49d477 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000195: 03	movq	%rax, %rsi
0000000000000197: 05	callq	0x49db00 <bsl::vector<BloombergLP::bdlt::Datetime, bsl::allocato   |	0000000000000198: 02	testb	%cl, %cl
000000000000019c: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000019a: 06	je	0x49e061 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001a1: 03	movq	(%rsi), %rdi							   |	00000000000001a0: 05	callq	0x49e720 <bsl::vector<BloombergLP::bdlt::Datetime, bsl::allocato
00000000000001a4: 04	cmpb	$0, 32(%rax)							   |	00000000000001a5: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001a8: 03	movb	32(%rdi), %cl							   |	00000000000001aa: 03	movq	(%rsi), %rdi
00000000000001ab: 06	je	0x49d410 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001ad: 04	cmpb	$0, 32(%rax)
00000000000001b1: 03	movq	%rax, %rsi							   |	00000000000001b1: 03	movb	32(%rdi), %cl
00000000000001b4: 02	testb	%cl, %cl							   |	00000000000001b4: 06	je	0x49e029 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001b6: 06	je	0x49d47e <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001ba: 03	movq	%rax, %rsi
00000000000001bc: 05	callq	0x49dc60 <bsl::vector<BloombergLP::bdlt::Date, bsl::allocator<Bl   |	00000000000001bd: 02	testb	%cl, %cl
00000000000001c1: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001bf: 06	je	0x49e068 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001c6: 03	movq	(%rsi), %rdi							   |	00000000000001c5: 05	callq	0x49e880 <bsl::vector<BloombergLP::bdlt::Date, bsl::allocator<Bl
00000000000001c9: 04	cmpb	$0, 32(%rax)							   |	00000000000001ca: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001cd: 03	movb	32(%rdi), %cl							   |	00000000000001cf: 03	movq	(%rsi), %rdi
00000000000001d0: 06	je	0x49d42c <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001d2: 04	cmpb	$0, 32(%rax)
00000000000001d6: 03	movq	%rax, %rsi							   |	00000000000001d6: 03	movb	32(%rdi), %cl
00000000000001d9: 02	testb	%cl, %cl							   |	00000000000001d9: 06	je	0x49e045 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001db: 06	je	0x49d485 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001df: 03	movq	%rax, %rsi
00000000000001e1: 05	callq	0x49ddc0 <bsl::vector<BloombergLP::bdlt::Time, bsl::allocator<Bl   |	00000000000001e2: 02	testb	%cl, %cl
00000000000001e6: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001e4: 06	je	0x49e06f <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001eb: 02	testb	%dl, %dl							   |	00000000000001ea: 05	callq	0x49e9e0 <bsl::vector<BloombergLP::bdlt::Time, bsl::allocator<Bl
00000000000001ed: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001ef: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001f3: 04	movb	$0, 1(%rcx)							   |	00000000000001f4: 02	testb	%dl, %dl
00000000000001f7: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001f6: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001fc: 02	testb	%dl, %dl							   |	00000000000001fc: 04	movb	$0, 1(%rcx)
00000000000001fe: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000200: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000204: 04	movb	$0, 4(%rcx)							   |	0000000000000205: 02	testb	%dl, %dl
0000000000000208: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000207: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000020d: 02	testb	%dl, %dl							   |	000000000000020d: 04	movb	$0, 4(%rcx)
000000000000020f: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000211: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000215: 04	movb	$0, 8(%rcx)							   |	0000000000000216: 02	testb	%dl, %dl
0000000000000219: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000218: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000021e: 02	testb	%cl, %cl							   |	000000000000021e: 04	movb	$0, 8(%rcx)
0000000000000220: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000222: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000226: 04	movb	$0, 48(%rbx)							   |	0000000000000227: 02	testb	%cl, %cl
000000000000022a: 05	cmpq	$23, 32(%rbx)							   |	0000000000000229: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000022f: 02	je	0x49d3ce <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000022f: 04	movb	$0, 48(%rbx)
0000000000000231: 03	movq	(%rbx), %rsi							   |	0000000000000233: 05	cmpq	$23, 32(%rbx)
0000000000000234: 04	movq	40(%rbx), %rdi							   |	0000000000000238: 02	je	0x49dfe7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000238: 03	movq	(%rdi), %rax							   |	000000000000023a: 03	movq	(%rbx), %rsi
000000000000023b: 03	callq	*24(%rax)							   |	000000000000023d: 04	movq	40(%rbx), %rdi
000000000000023e: 08	movq	$-1, 24(%rbx)							   |	0000000000000241: 03	movq	(%rdi), %rax
0000000000000246: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000244: 03	callq	*24(%rax)
000000000000024b: 02	testb	%cl, %cl							   |	0000000000000247: 08	movq	$-1, 24(%rbx)
000000000000024d: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000024f: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000253: 04	movb	$0, 8(%rbx)							   |	0000000000000254: 02	testb	%cl, %cl
0000000000000257: 05	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000256: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000025c: 02	testb	%cl, %cl							   |	000000000000025c: 04	movb	$0, 8(%rbx)
000000000000025e: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000260: 05	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000264: 04	movb	$0, 32(%rdi)							   |	0000000000000265: 02	testb	%cl, %cl
0000000000000268: 03	movq	(%rdi), %rsi							   |	0000000000000267: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000026b: 03	testq	%rsi, %rsi							   |	000000000000026d: 04	movb	$0, 32(%rdi)
000000000000026e: 06	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000271: 03	movq	(%rdi), %rsi
0000000000000274: 04	movq	24(%rdi), %rdi							   |	0000000000000274: 03	testq	%rsi, %rsi
0000000000000278: 03	movq	(%rdi), %rax							   |	0000000000000277: 06	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000027b: 03	callq	*24(%rax)							   |	000000000000027d: 04	movq	24(%rdi), %rdi
000000000000027e: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000281: 03	movq	(%rdi), %rax
0000000000000280: 02	testb	%cl, %cl							   |	0000000000000284: 03	callq	*24(%rax)
0000000000000282: 02	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000287: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000284: 04	movb	$0, 32(%rdi)							   |	0000000000000289: 02	testb	%cl, %cl
0000000000000288: 03	movq	(%rdi), %rsi							   |	000000000000028b: 02	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000028b: 03	testq	%rsi, %rsi							   |	000000000000028d: 04	movb	$0, 32(%rdi)
000000000000028e: 02	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000291: 03	movq	(%rdi), %rsi
0000000000000290: 04	movq	24(%rdi), %rdi							   |	0000000000000294: 03	testq	%rsi, %rsi
0000000000000294: 03	movq	(%rdi), %rax							   |	0000000000000297: 02	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000297: 03	callq	*24(%rax)							   |	0000000000000299: 04	movq	24(%rdi), %rdi
000000000000029a: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000029d: 03	movq	(%rdi), %rax
000000000000029c: 02	testb	%cl, %cl							   |	00000000000002a0: 03	callq	*24(%rax)
000000000000029e: 02	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002a3: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002a0: 04	movb	$0, 32(%rdi)							   |	00000000000002a5: 02	testb	%cl, %cl
00000000000002a4: 03	movq	(%rdi), %rsi							   |	00000000000002a7: 02	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002a7: 03	testq	%rsi, %rsi							   |	00000000000002a9: 04	movb	$0, 32(%rdi)
00000000000002aa: 02	je	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002ad: 03	movq	(%rdi), %rsi
00000000000002ac: 04	movq	24(%rdi), %rdi							   |	00000000000002b0: 03	testq	%rsi, %rsi
00000000000002b0: 03	movq	(%rdi), %rax							   |	00000000000002b3: 02	je	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002b3: 03	callq	*24(%rax)							   |	00000000000002b5: 04	movq	24(%rdi), %rdi
00000000000002b6: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002b9: 03	movq	(%rdi), %rax
00000000000002b8: 03	cmpq	%r14, %rax							   |	00000000000002bc: 03	callq	*24(%rax)
00000000000002bb: 02	jl	0x49d49f <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002bf: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002bd: 10	movabsq	$-274877906945, %rcx						   |	00000000000002c1: 05	callq	0x49a510 <bsl::vector<BloombergLP::bdlt::Datetime, bsl::allocato
00000000000002c7: 03	andq	%rcx, %rax							   |	00000000000002c6: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002ca: 03	orq	%r14, %rax							   |	00000000000002c8: 05	callq	0x49a610 <bsl::vector<BloombergLP::bdlt::Date, bsl::allocator<Bl
00000000000002cd: 03	movq	%rax, (%rbx)							   |	00000000000002cd: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002d0: 04	movb	$1, 8(%rbx)							   |	00000000000002cf: 05	callq	0x49a710 <bsl::vector<BloombergLP::bdlt::Time, bsl::allocator<Bl
00000000000002d4: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002d4: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002d6: 04	movq	56(%rbx), %rsi								00000000000002d6: 04	movq	56(%rbx), %rsi
00000000000002da: 03	movq	%rbx, %rdi								00000000000002da: 03	movq	%rbx, %rdi
00000000000002dd: 03	movq	%rax, %rdx								00000000000002dd: 03	movq	%rax, %rdx
00000000000002e0: 05	callq	0x4994a0 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	00000000000002e0: 05	callq	0x49a0b0 <bsl::basic_string<char, std::__1::char_traits<char>, b
00000000000002e5: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002e5: 02	jmp	0x49e0a3 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002e7: 05	callq	0x499900 <bsl::vector<BloombergLP::bdlt::Datetime, bsl::allocato   |	00000000000002e7: 03	cmpq	%r14, %rax
00000000000002ec: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002ea: 02	jl	0x49e0b8 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000002ee: 05	callq	0x499a00 <bsl::vector<BloombergLP::bdlt::Date, bsl::allocator<Bl   |	00000000000002ec: 10	movabsq	$-274877906945, %rcx
00000000000002f3: 02	jmp	0x49d48a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000002f6: 03	andq	%rcx, %rax
00000000000002f5: 05	callq	0x499b00 <bsl::vector<BloombergLP::bdlt::Time, bsl::allocator<Bl   |	00000000000002f9: 03	orq	%r14, %rax
00000000000002fa: 04	addq	$8, %rsp							   |	00000000000002fc: 03	movq	%rax, (%rbx)
00000000000002fe: 01	popq	%rbx								   |	00000000000002ff: 04	movb	$1, 8(%rbx)
00000000000002ff: 02	popq	%r14								   |	0000000000000303: 04	addq	$8, %rsp
0000000000000301: 01	retq									   |	0000000000000307: 01	popq	%rbx
0000000000000302: 03	movq	%rbx, %rdi							   |	0000000000000308: 02	popq	%r14
0000000000000305: 05	callq	0x4a2cb0 <BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnig   |	000000000000030a: 01	retq	
000000000000030a: 05	jmp	0x49d2a9 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000030b: 03	movq	%rbx, %rdi
000000000000030f: 03	movq	%rbx, %rdi							   |	000000000000030e: 05	callq	0x4a3920 <BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnig
0000000000000312: 05	callq	0x4a2cb0 <BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnig   |	0000000000000313: 05	jmp	0x49dec2 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000317: 02	jmp	0x49d45a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000318: 03	movq	%rbx, %rdi
0000000000000319: 03	movq	%rax, %rdi							   |	000000000000031b: 05	callq	0x4a3920 <BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnig
000000000000031c: 05	callq	0x496ad0 <__clang_call_terminate>				   |	0000000000000320: 02	jmp	0x49e099 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000321: 03	movq	%rax, %rdi							   |	0000000000000322: 03	movq	%rax, %rdi
0000000000000324: 05	callq	0x496ad0 <__clang_call_terminate>				   |	0000000000000325: 05	callq	0x4976c0 <__clang_call_terminate>
0000000000000329: 03	movq	%rax, %rdi							   |	000000000000032a: 03	movq	%rax, %rdi
000000000000032c: 05	callq	0x496ad0 <__clang_call_terminate>				   |	000000000000032d: 05	callq	0x4976c0 <__clang_call_terminate>
0000000000000331: 03	movq	%rax, %rdi							   |	0000000000000332: 03	movq	%rax, %rdi
0000000000000334: 05	callq	0x496ad0 <__clang_call_terminate>				   |	0000000000000335: 05	callq	0x4976c0 <__clang_call_terminate>
0000000000000339: 07	nopl	(%rax)								   |	000000000000033a: 03	movq	%rax, %rdi
												   >	000000000000033d: 05	callq	0x4976c0 <__clang_call_terminate>
												   >	0000000000000342: 10	nopw	%cs:(%rax,%rax)
												   >	000000000000034c: 04	nopl	(%rax)
