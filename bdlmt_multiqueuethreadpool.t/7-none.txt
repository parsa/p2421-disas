    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlmt_multiqueuethreadpool.t/none @ 0x431b60 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlmt ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlmt::MultiQueueThreadPool_int_BloombergLP::bsls::AtomicInt_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlmt (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > const&, BloombergLP::bslma::Allocator*) */
    0x00431b60 push rbp                                                                                                                                                                                                                                                              |     
    0x00431b61 push r15                                                                                                                                                                                                                                                              |     
    0x00431b63 push r14                                                                                                                                                                                                                                                              |     
    0x00431b65 push r13                                                                                                                                                                                                                                                              |     
    0x00431b67 push r12                                                                                                                                                                                                                                                              |     
    0x00431b69 push rbx                                                                                                                                                                                                                                                              |     
    0x00431b6a push rax                                                                                                                                                                                                                                                              |     
    0x00431b6b mov r14, rcx                                                                                                                                                                                                                                                          |     r14 = rcx;
    0x00431b6e mov r12, rdx                                                                                                                                                                                                                                                          |     r12 = rdx;
    0x00431b71 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x00431b74 mov qword [rsp], rdi                                                                                                                                                                                                                                                  |     *(rsp) = rdi;
    0x00431b78 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x00431b7d je 0x431b85                                                                                                                                                                                                                                                           |         
    0x00431b7f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                           |         r13 = *((r15 + 0x18));
    0x00431b83 jmp 0x431b89                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x00431b85 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                                 |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                     |     }
    0x00431b89 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                           |     rbp = *((r15 + 0x30));
    0x00431b8d test r14, r14                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (r14 == 0) {
    0x00431b90 jne 0x431ba6                                                                                                                                                                                                                                                          |         
    0x00431b92 mov r14, qword [rip + 0x25b3cf]                                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00431b99 test r14, r14                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x00431b9c jne 0x431ba6                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00431b9e call 0x4391d0                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00431ba3 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x00431ba6 mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x00431ba9 mov esi, 0x58                                                                                                                                                                                                                                                         |     esi = 0x58;
    0x00431bae mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x00431bb1 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00431bb4 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x00431bb7 mov qword [rax], 0x431ce0                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bdlmt::MultiQueu;
    0x00431bbe mov rax, qword [r12]                                                                                                                                                                                                                                                  |     rax = *(r12);
    0x00431bc2 mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x00431bc6 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                              |     rax = *((r12 + 8));
    0x00431bcb mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x00431bcf mov eax, dword [r12 + 0x10]                                                                                                                                                                                                                                           |     eax = *((r12 + 0x10));
    0x00431bd4 mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                           |     *((rbx + 0x18)) = eax;
    0x00431bd7 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                           |     rax = *((r12 + 0x18));
    0x00431bdc mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                           |     *((rbx + 0x20)) = rax;
    0x00431be0 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                                 |     
    0x00431be4 mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                             |     *((rbx + 0x28)) = 0;
    0x00431bec mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                           |     *((rbx + 0x50)) = r14;
    0x00431bf0 movaps xmm0, xmmword [rip + 0x30ef9]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00431bf7 movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x00431bfb mov ecx, 0x465ffd                                                                                                                                                                                                                                                     |     
    0x00431c00 mov rsi, r13                                                                                                                                                                                                                                                          |     
    0x00431c03 mov rdx, rbp                                                                                                                                                                                                                                                          |     
    0x00431c06 call 0x43f300                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00431c0b mov edx, 0x43a310                                                                                                                                                                                                                                                     |     
    0x00431c10 mov rdi, qword [rsp]                                                                                                                                                                                                                                                  |     
    0x00431c14 mov rsi, r15                                                                                                                                                                                                                                                          |     
    0x00431c17 mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x00431c1a call 0x43b260                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00431c1f mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x00431c21 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x00431c23 je 0x431c4e                                                                                                                                                                                                                                                           |         
    0x00431c25 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x48)) != 0x17) {
    0x00431c2a je 0x431c3a                                                                                                                                                                                                                                                           |             
    0x00431c2c mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x28));
    0x00431c30 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x50));
    0x00431c34 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00431c37 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00431c3a mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x00431c42 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x00431c45 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x00431c48 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x00431c4b call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x00431c4e mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x00431c50 add rsp, 8                                                                                                                                                                                                                                                            |     
    0x00431c54 pop rbx                                                                                                                                                                                                                                                               |     
    0x00431c55 pop r12                                                                                                                                                                                                                                                               |     
    0x00431c57 pop r13                                                                                                                                                                                                                                                               |     
    0x00431c59 pop r14                                                                                                                                                                                                                                                               |     
    0x00431c5b pop r15                                                                                                                                                                                                                                                               |     
    0x00431c5d pop rbp                                                                                                                                                                                                                                                               |     
    0x00431c5e ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
