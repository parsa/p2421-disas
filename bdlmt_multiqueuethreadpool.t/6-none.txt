    ; assembly                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                             | /* bdlmt_multiqueuethreadpool.t/none @ 0x4311e0 */
                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator_Case27DrainThread__unsigned_long__Case27DrainThread_const__BloombergLP::bslma::Allocator_ ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_Case27DrainThread_unsigned_long_Case27DrainThread_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<Case27DrainThread>(unsigned long*, Case27DrainThread const&, BloombergLP::bslma::Allocator*) */
    0x004311e0 push rbp                                                                                                                                                      |     
    0x004311e1 push r15                                                                                                                                                      |     
    0x004311e3 push r14                                                                                                                                                      |     
    0x004311e5 push rbx                                                                                                                                                      |     
    0x004311e6 sub rsp, 0x48                                                                                                                                                 |     
    0x004311ea mov r14, rdx                                                                                                                                                  |     r14 = rdx;
    0x004311ed mov rbp, rsi                                                                                                                                                  |     
    0x004311f0 mov r15, rdi                                                                                                                                                  |     r15 = rdi;
    0x004311f3 test rdx, rdx                                                                                                                                                 |     
                                                                                                                                                                             |     if (rdx == 0) {
    0x004311f6 jne 0x43120c                                                                                                                                                  |         
    0x004311f8 mov r14, qword [rip + 0x25bd69]                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004311ff test r14, r14                                                                                                                                                 |         
                                                                                                                                                                             |         if (r14 != 0) {
    0x00431202 jne 0x43120c                                                                                                                                                  |             goto label_0;
                                                                                                                                                                             |         }
    0x00431204 call 0x4391d0                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00431209 mov r14, rax                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                             |     }
                                                                                                                                                                             | label_0:
    0x0043120c mov rax, qword [r14]                                                                                                                                          |     rax = *(r14);
    0x0043120f mov esi, 0x40                                                                                                                                                 |     esi = 0x40;
    0x00431214 mov rdi, r14                                                                                                                                                  |     rdi = r14;
    0x00431217 call qword [rax + 0x10]                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0043121a mov rbx, rax                                                                                                                                                  |     rbx = rax;
    0x0043121d mov qword [rax], 0x431370                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_Case27DrainThread_.invokerFunction_void_;
    0x00431224 mov rax, qword [rbp]                                                                                                                                          |     rax = *(rbp);
    0x00431228 mov qword [rbx + 8], rax                                                                                                                                      |     *((rbx + 8)) = rax;
    0x0043122c lea rdi, [rbx + 0x10]                                                                                                                                         |     
    0x00431230 mov qword [rbx + 0x10], 0                                                                                                                                     |     *((rbx + 0x10)) = 0;
    0x00431238 mov qword [rbx + 0x38], r14                                                                                                                                   |     *((rbx + 0x38)) = r14;
    0x0043123c movaps xmm0, xmmword [rip + 0x318ad]                                                                                                                          |     xmm0 = .comment;
    0x00431243 movups xmmword [rbx + 0x28], xmm0                                                                                                                             |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00431247 mov ecx, 0x465ffd                                                                                                                                             |     
    0x0043124c xor esi, esi                                                                                                                                                  |     
    0x0043124e xor edx, edx                                                                                                                                                  |     
    0x00431250 call 0x43f300                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00431255 mov rdi, rsp                                                                                                                                                  |     
    0x00431258 call 0x43aa60                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0043125d mov rsi, rsp                                                                                                                                                  |     
    0x00431260 mov edx, 0x43a310                                                                                                                                             |     
    0x00431265 mov rdi, r15                                                                                                                                                  |     
    0x00431268 mov rcx, rbx                                                                                                                                                  |     
    0x0043126b call 0x43b260                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00431270 mov ebp, eax                                                                                                                                                  |     
    0x00431272 cmp qword [rsp + 0x38], 0x17                                                                                                                                  |     
                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00431278 je 0x43128a                                                                                                                                                   |         
    0x0043127a mov rsi, qword [rsp + 0x18]                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0043127f mov rdi, qword [rsp + 0x40]                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00431284 mov rax, qword [rdi]                                                                                                                                          |         rax = *(rdi);
    0x00431287 call qword [rax + 0x18]                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                             |     }
    0x0043128a test ebp, ebp                                                                                                                                                 |     
                                                                                                                                                                             |     if (ebp != 0) {
    0x0043128c je 0x4312b7                                                                                                                                                   |         
    0x0043128e cmp qword [rbx + 0x30], 0x17                                                                                                                                  |         
                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00431293 je 0x4312a3                                                                                                                                                   |             
    0x00431295 mov rsi, qword [rbx + 0x10]                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00431299 mov rdi, qword [rbx + 0x38]                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0043129d mov rax, qword [rdi]                                                                                                                                          |             rax = *(rdi);
    0x004312a0 call qword [rax + 0x18]                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                             |         }
    0x004312a3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004312ab mov rax, qword [r14]                                                                                                                                          |         rax = *(r14);
    0x004312ae mov rdi, r14                                                                                                                                                  |         rdi = r14;
    0x004312b1 mov rsi, rbx                                                                                                                                                  |         rsi = rbx;
    0x004312b4 call qword [rax + 0x18]                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                             |     }
    0x004312b7 mov eax, ebp                                                                                                                                                  |     eax = ebp;
    0x004312b9 add rsp, 0x48                                                                                                                                                 |     
    0x004312bd pop rbx                                                                                                                                                       |     
    0x004312be pop r14                                                                                                                                                       |     
    0x004312c0 pop r15                                                                                                                                                       |     
    0x004312c2 pop rbp                                                                                                                                                       |     
    0x004312c3 ret                                                                                                                                                           |     return rax;
                                                                                                                                                                             | }
