    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_multiqueuethreadpool.t/none @ 0x4317f0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bslmt::Barrier_BloombergLP::bdlmt::MultiQueueThreadPool_int_BloombergLP::bsls::AtomicInt_BloombergLP::bdlf::Bind_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple4<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple4<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > const&, BloombergLP::bslma::Allocator*) */
    0x004317f0 push rbp                                                                                                                                                                                                                                                          |     
    0x004317f1 push r15                                                                                                                                                                                                                                                          |     
    0x004317f3 push r14                                                                                                                                                                                                                                                          |     
    0x004317f5 push r13                                                                                                                                                                                                                                                          |     
    0x004317f7 push r12                                                                                                                                                                                                                                                          |     
    0x004317f9 push rbx                                                                                                                                                                                                                                                          |     
    0x004317fa push rax                                                                                                                                                                                                                                                          |     
    0x004317fb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004317fe mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00431801 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00431804 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00431808 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0043180d je 0x431815                                                                                                                                                                                                                                                       |         
    0x0043180f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x00431813 jmp 0x431819                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00431815 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00431819 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0043181d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x00431820 jne 0x431836                                                                                                                                                                                                                                                      |         
    0x00431822 mov r14, qword [rip + 0x25b73f]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00431829 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0043182c jne 0x431836                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0043182e call 0x4391d0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00431833 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00431836 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00431839 mov esi, 0x60                                                                                                                                                                                                                                                     |     esi = 0x60;
    0x0043183e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00431841 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00431844 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00431847 mov qword [rax], 0x431970                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_BoundTuple4;
    0x0043184e mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00431852 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00431856 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x0043185b mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0043185f mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x00431864 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00431868 mov eax, dword [r12 + 0x18]                                                                                                                                                                                                                                       |     eax = *((r12 + 0x18));
    0x0043186d mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = eax;
    0x00431870 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x20));
    0x00431875 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                       |     *((rbx + 0x28)) = rax;
    0x00431879 lea rdi, [rbx + 0x30]                                                                                                                                                                                                                                             |     
    0x0043187d mov qword [rbx + 0x30], 0                                                                                                                                                                                                                                         |     *((rbx + 0x30)) = 0;
    0x00431885 mov qword [rbx + 0x58], r14                                                                                                                                                                                                                                       |     *((rbx + 0x58)) = r14;
    0x00431889 movaps xmm0, xmmword [rip + 0x31260]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00431890 movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x00431894 mov ecx, 0x465ffd                                                                                                                                                                                                                                                 |     
    0x00431899 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0043189c mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0043189f call 0x43f300                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004318a4 mov edx, 0x43a310                                                                                                                                                                                                                                                 |     
    0x004318a9 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004318ad mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004318b0 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004318b3 call 0x43b260                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004318b8 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004318ba test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004318bc je 0x4318e7                                                                                                                                                                                                                                                       |         
    0x004318be cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x50)) != 0x17) {
    0x004318c3 je 0x4318d3                                                                                                                                                                                                                                                       |             
    0x004318c5 mov rsi, qword [rbx + 0x30]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x30));
    0x004318c9 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x58));
    0x004318cd mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004318d0 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004318d3 mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x004318db mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004318de mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004318e1 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x004318e4 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x004318e7 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x004318e9 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x004318ed pop rbx                                                                                                                                                                                                                                                           |     
    0x004318ee pop r12                                                                                                                                                                                                                                                           |     
    0x004318f0 pop r13                                                                                                                                                                                                                                                           |     
    0x004318f2 pop r14                                                                                                                                                                                                                                                           |     
    0x004318f4 pop r15                                                                                                                                                                                                                                                           |     
    0x004318f6 pop rbp                                                                                                                                                                                                                                                           |     
    0x004318f7 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
