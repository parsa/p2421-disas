    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_multiqueuethreadpool.t/none @ 0x430dc0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bslmt: ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bslmt::Barrier_BloombergLP::bdlmt::MultiQueueThreadPool_int_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bslmt_ (int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                                                                                                 |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int> > const&, BloombergLP::bslma::Allocator*) */
    0x00430dc0 push rbp                                                                                                                                                                                                                                                          |     
    0x00430dc1 push r15                                                                                                                                                                                                                                                          |     
    0x00430dc3 push r14                                                                                                                                                                                                                                                          |     
    0x00430dc5 push rbx                                                                                                                                                                                                                                                          |     
    0x00430dc6 sub rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00430dca mov r14, rdx                                                                                                                                                                                                                                                      |     r14 = rdx;
    0x00430dcd mov rbp, rsi                                                                                                                                                                                                                                                      |     
    0x00430dd0 mov r15, rdi                                                                                                                                                                                                                                                      |     r15 = rdi;
    0x00430dd3 test rdx, rdx                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rdx == 0) {
    0x00430dd6 jne 0x430dec                                                                                                                                                                                                                                                      |         
    0x00430dd8 mov r14, qword [rip + 0x25c189]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00430ddf test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x00430de2 jne 0x430dec                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x00430de4 call 0x4391d0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00430de9 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00430dec mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00430def mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x00430df4 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00430df7 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00430dfa mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00430dfd mov qword [rax], 0x430f60                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int___BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bslmt::Barrier__;
    0x00430e04 mov rax, qword [rbp]                                                                                                                                                                                                                                              |     rax = *(rbp);
    0x00430e08 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00430e0c mov rax, qword [rbp + 8]                                                                                                                                                                                                                                          |     rax = *((rbp + 8));
    0x00430e10 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00430e14 mov rax, qword [rbp + 0x10]                                                                                                                                                                                                                                       |     rax = *((rbp + 0x10));
    0x00430e18 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00430e1c mov eax, dword [rbp + 0x18]                                                                                                                                                                                                                                       |     eax = *((rbp + 0x18));
    0x00430e1f mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = eax;
    0x00430e22 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                             |     
    0x00430e26 mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                         |     *((rbx + 0x28)) = 0;
    0x00430e2e mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                       |     *((rbx + 0x50)) = r14;
    0x00430e32 movaps xmm0, xmmword [rip + 0x31cb7]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00430e39 movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x00430e3d mov ecx, 0x465ffd                                                                                                                                                                                                                                                 |     
    0x00430e42 xor esi, esi                                                                                                                                                                                                                                                      |     
    0x00430e44 xor edx, edx                                                                                                                                                                                                                                                      |     
    0x00430e46 call 0x43f300                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00430e4b mov rdi, rsp                                                                                                                                                                                                                                                      |     
    0x00430e4e call 0x43aa60                                                                                                                                                                                                                                                     |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00430e53 mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x00430e56 mov edx, 0x43a310                                                                                                                                                                                                                                                 |     
    0x00430e5b mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x00430e5e mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00430e61 call 0x43b260                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00430e66 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00430e68 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsp + 0x38)) != 0x17) {
    0x00430e6e je 0x430e80                                                                                                                                                                                                                                                       |         
    0x00430e70 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                       |         rsi = *((rsp + 0x18));
    0x00430e75 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x40));
    0x00430e7a mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x00430e7d call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00430e80 test ebp, ebp                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (ebp != 0) {
    0x00430e82 je 0x430ead                                                                                                                                                                                                                                                       |         
    0x00430e84 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x00430e89 je 0x430e99                                                                                                                                                                                                                                                       |             
    0x00430e8b mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x00430e8f mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x00430e93 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00430e96 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00430e99 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x00430ea1 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00430ea4 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00430ea7 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00430eaa call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00430ead mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00430eaf add rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00430eb3 pop rbx                                                                                                                                                                                                                                                           |     
    0x00430eb4 pop r14                                                                                                                                                                                                                                                           |     
    0x00430eb6 pop r15                                                                                                                                                                                                                                                           |     
    0x00430eb8 pop rbp                                                                                                                                                                                                                                                           |     
    0x00430eb9 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
