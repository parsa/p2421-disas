    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_multiqueuethreadpool.t/assume @ 0x4317c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bslmt::Barrier_BloombergLP::bdlmt::MultiQueueThreadPool_int_BloombergLP::bsls::AtomicInt_BloombergLP::bdlf::Bind_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple4<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*), BloombergLP::bdlf::Bind_BoundTuple4<BloombergLP::bslmt::Barrier*, BloombergLP::bdlmt::MultiQueueThreadPool*, int, BloombergLP::bsls::AtomicInt*> > const&, BloombergLP::bslma::Allocator*) */
    0x004317c0 push rbp                                                                                                                                                                                                                                                          |     
    0x004317c1 push r15                                                                                                                                                                                                                                                          |     
    0x004317c3 push r14                                                                                                                                                                                                                                                          |     
    0x004317c5 push r13                                                                                                                                                                                                                                                          |     
    0x004317c7 push r12                                                                                                                                                                                                                                                          |     
    0x004317c9 push rbx                                                                                                                                                                                                                                                          |     
    0x004317ca push rax                                                                                                                                                                                                                                                          |     
    0x004317cb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004317ce mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x004317d1 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004317d4 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x004317d8 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x004317dc cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004317e1 je 0x4317e9                                                                                                                                                                                                                                                       |         
    0x004317e3 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x004317e7 jmp 0x4317ed                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004317e9 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004317ed mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004317f0 mov esi, 0x60                                                                                                                                                                                                                                                     |     esi = 0x60;
    0x004317f5 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004317f8 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004317fb mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004317fe mov qword [rax], 0x431930                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bslmt::Barrier__BloombergLP::bdlmt::MultiQueueThreadPool__int__BloombergLP::bsls::AtomicInt___BloombergLP::bdlf::Bind_BoundTuple4;
    0x00431805 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00431809 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0043180d mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x00431812 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00431816 mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x0043181b mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x0043181f mov eax, dword [r12 + 0x18]                                                                                                                                                                                                                                       |     eax = *((r12 + 0x18));
    0x00431824 mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = eax;
    0x00431827 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x20));
    0x0043182c mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                       |     *((rbx + 0x28)) = rax;
    0x00431830 lea rdi, [rbx + 0x30]                                                                                                                                                                                                                                             |     
    0x00431834 mov qword [rbx + 0x30], 0                                                                                                                                                                                                                                         |     *((rbx + 0x30)) = 0;
    0x0043183c mov qword [rbx + 0x58], r14                                                                                                                                                                                                                                       |     *((rbx + 0x58)) = r14;
    0x00431840 movaps xmm0, xmmword [rip + 0x311f9]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00431847 movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x0043184b mov ecx, 0x465f55                                                                                                                                                                                                                                                 |     
    0x00431850 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x00431853 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x00431856 call 0x43f270                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0043185b mov edx, 0x43a2b0                                                                                                                                                                                                                                                 |     
    0x00431860 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x00431864 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00431867 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0043186a call 0x43b200                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0043186f mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00431871 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00431873 je 0x43189e                                                                                                                                                                                                                                                       |         
    0x00431875 cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x50)) != 0x17) {
    0x0043187a je 0x43188a                                                                                                                                                                                                                                                       |             
    0x0043187c mov rsi, qword [rbx + 0x30]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x30));
    0x00431880 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x58));
    0x00431884 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00431887 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0043188a mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x00431892 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00431895 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00431898 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0043189b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0043189e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x004318a0 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x004318a4 pop rbx                                                                                                                                                                                                                                                           |     
    0x004318a5 pop r12                                                                                                                                                                                                                                                           |     
    0x004318a7 pop r13                                                                                                                                                                                                                                                           |     
    0x004318a9 pop r14                                                                                                                                                                                                                                                           |     
    0x004318ab pop r15                                                                                                                                                                                                                                                           |     
    0x004318ad pop rbp                                                                                                                                                                                                                                                           |     
    0x004318ae ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
