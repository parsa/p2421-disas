00000000004311d0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<Case27DrainThread>(uns   |	00000000004311e0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<Case27DrainThread>(uns
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 01	pushq	%rbx									0000000000000005: 01	pushq	%rbx
0000000000000006: 04	subq	$72, %rsp								0000000000000006: 04	subq	$72, %rsp
000000000000000a: 03	movq	%rdx, %r14								000000000000000a: 03	movq	%rdx, %r14
000000000000000d: 03	movq	%rsi, %rbp								000000000000000d: 03	movq	%rsi, %rbp
0000000000000010: 03	movq	%rdi, %r15								0000000000000010: 03	movq	%rdi, %r15
0000000000000013: 03	movq	(%rdx), %rax							   |	0000000000000013: 03	testq	%rdx, %rdx
0000000000000016: 05	movl	$64, %esi							   |	0000000000000016: 02	jne	0x43120c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000001b: 03	movq	%rdx, %rdi							   |	0000000000000018: 07	movq	2473321(%rip), %r14  # 68cf68 <BloombergLP::bslma::Default::s_de
000000000000001e: 03	callq	*16(%rax)							   |	000000000000001f: 03	testq	%r14, %r14
0000000000000021: 03	movq	%rax, %rbx							   |	0000000000000022: 02	jne	0x43120c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000024: 07	movq	$4395840, (%rax)						   |	0000000000000024: 05	callq	0x4391d0 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000002b: 04	movq	(%rbp), %rax							   |	0000000000000029: 03	movq	%rax, %r14
000000000000002f: 04	movq	%rax, 8(%rbx)							   |	000000000000002c: 03	movq	(%r14), %rax
0000000000000033: 04	leaq	16(%rbx), %rdi							   |	000000000000002f: 05	movl	$64, %esi
0000000000000037: 08	movq	$0, 16(%rbx)							   |	0000000000000034: 03	movq	%r14, %rdi
000000000000003f: 04	movq	%r14, 56(%rbx)							   |	0000000000000037: 03	callq	*16(%rax)
0000000000000043: 07	movaps	202790(%rip), %xmm0  # 462a40 <__dso_handle+0x48>		   |	000000000000003a: 03	movq	%rax, %rbx
000000000000004a: 04	movups	%xmm0, 40(%rbx)							   |	000000000000003d: 07	movq	$4395888, (%rax)
000000000000004e: 05	movl	$4611925, %ecx							   |	0000000000000044: 04	movq	(%rbp), %rax
0000000000000053: 02	xorl	%esi, %esi							   |	0000000000000048: 04	movq	%rax, 8(%rbx)
0000000000000055: 02	xorl	%edx, %edx							   |	000000000000004c: 04	leaq	16(%rbx), %rdi
0000000000000057: 05	callq	0x43f270 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000050: 08	movq	$0, 16(%rbx)
000000000000005c: 03	movq	%rsp, %rdi							   |	0000000000000058: 04	movq	%r14, 56(%rbx)
000000000000005f: 05	callq	0x43aa00 <BloombergLP::bslmt::ThreadAttributes::ThreadAttributes   |	000000000000005c: 07	movaps	202925(%rip), %xmm0  # 462af0 <__dso_handle+0x48>
0000000000000064: 03	movq	%rsp, %rsi							   |	0000000000000063: 04	movups	%xmm0, 40(%rbx)
0000000000000067: 05	movl	$4432560, %edx							   |	0000000000000067: 05	movl	$4612093, %ecx
000000000000006c: 03	movq	%r15, %rdi							   |	000000000000006c: 02	xorl	%esi, %esi
000000000000006f: 03	movq	%rbx, %rcx							   |	000000000000006e: 02	xorl	%edx, %edx
0000000000000072: 05	callq	0x43b200 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	0000000000000070: 05	callq	0x43f300 <bsl::basic_string<char, std::__1::char_traits<char>, b
0000000000000077: 02	movl	%eax, %ebp							   |	0000000000000075: 03	movq	%rsp, %rdi
0000000000000079: 06	cmpq	$23, 56(%rsp)							   |	0000000000000078: 05	callq	0x43aa60 <BloombergLP::bslmt::ThreadAttributes::ThreadAttributes
000000000000007f: 02	je	0x431261 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000007d: 03	movq	%rsp, %rsi
0000000000000081: 05	movq	24(%rsp), %rsi							   |	0000000000000080: 05	movl	$4432656, %edx
0000000000000086: 05	movq	64(%rsp), %rdi							   |	0000000000000085: 03	movq	%r15, %rdi
000000000000008b: 03	movq	(%rdi), %rax							   |	0000000000000088: 03	movq	%rbx, %rcx
000000000000008e: 03	callq	*24(%rax)							   |	000000000000008b: 05	callq	0x43b260 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
0000000000000091: 02	testl	%ebp, %ebp							   |	0000000000000090: 02	movl	%eax, %ebp
0000000000000093: 02	je	0x43128e <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000092: 06	cmpq	$23, 56(%rsp)
0000000000000095: 05	cmpq	$23, 48(%rbx)							   |	0000000000000098: 02	je	0x43128a <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000009a: 02	je	0x43127a <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000009a: 05	movq	24(%rsp), %rsi
000000000000009c: 04	movq	16(%rbx), %rsi							   |	000000000000009f: 05	movq	64(%rsp), %rdi
00000000000000a0: 04	movq	56(%rbx), %rdi							   <
00000000000000a4: 03	movq	(%rdi), %rax								00000000000000a4: 03	movq	(%rdi), %rax
00000000000000a7: 03	callq	*24(%rax)								00000000000000a7: 03	callq	*24(%rax)
00000000000000aa: 08	movq	$-1, 40(%rbx)							   |	00000000000000aa: 02	testl	%ebp, %ebp
00000000000000b2: 03	movq	(%r14), %rax							   |	00000000000000ac: 02	je	0x4312b7 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000b5: 03	movq	%r14, %rdi							   |	00000000000000ae: 05	cmpq	$23, 48(%rbx)
00000000000000b8: 03	movq	%rbx, %rsi							   |	00000000000000b3: 02	je	0x4312a3 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000bb: 03	callq	*24(%rax)							   |	00000000000000b5: 04	movq	16(%rbx), %rsi
00000000000000be: 02	movl	%ebp, %eax							   |	00000000000000b9: 04	movq	56(%rbx), %rdi
00000000000000c0: 04	addq	$72, %rsp							   |	00000000000000bd: 03	movq	(%rdi), %rax
00000000000000c4: 01	popq	%rbx								   |	00000000000000c0: 03	callq	*24(%rax)
00000000000000c5: 02	popq	%r14								   |	00000000000000c3: 08	movq	$-1, 40(%rbx)
00000000000000c7: 02	popq	%r15								   |	00000000000000cb: 03	movq	(%r14), %rax
00000000000000c9: 01	popq	%rbp								   |	00000000000000ce: 03	movq	%r14, %rdi
00000000000000ca: 01	retq									   |	00000000000000d1: 03	movq	%rbx, %rsi
00000000000000cb: 03	movq	%rax, %rdi							   |	00000000000000d4: 03	callq	*24(%rax)
00000000000000ce: 05	callq	0x42e060 <__clang_call_terminate>				   |	00000000000000d7: 02	movl	%ebp, %eax
00000000000000d3: 03	movq	%rax, %rdi							   |	00000000000000d9: 04	addq	$72, %rsp
00000000000000d6: 05	callq	0x42e060 <__clang_call_terminate>				   |	00000000000000dd: 01	popq	%rbx
00000000000000db: 03	movq	%rax, %rdi							   |	00000000000000de: 02	popq	%r14
00000000000000de: 05	callq	0x42e060 <__clang_call_terminate>				   |	00000000000000e0: 02	popq	%r15
00000000000000e3: 03	movq	%rax, %r15							   |	00000000000000e2: 01	popq	%rbp
00000000000000e6: 06	cmpq	$23, 56(%rsp)							   |	00000000000000e3: 01	retq	
00000000000000ec: 02	je	0x4312db <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000e4: 03	movq	%rax, %rdi
00000000000000ee: 05	movq	24(%rsp), %rsi							   |	00000000000000e7: 05	callq	0x42e060 <__clang_call_terminate>
00000000000000f3: 05	movq	64(%rsp), %rdi							   |	00000000000000ec: 03	movq	%rax, %rdi
00000000000000f8: 03	movq	(%rdi), %rax							   |	00000000000000ef: 05	callq	0x42e060 <__clang_call_terminate>
00000000000000fb: 03	callq	*24(%rax)							   |	00000000000000f4: 03	movq	%rax, %rdi
00000000000000fe: 02	jmp	0x4312db <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000f7: 05	callq	0x42e060 <__clang_call_terminate>
0000000000000100: 03	movq	%rax, %rdi							   |	00000000000000fc: 03	movq	%rax, %r15
0000000000000103: 05	callq	0x42e060 <__clang_call_terminate>				   |	00000000000000ff: 06	cmpq	$23, 56(%rsp)
0000000000000108: 03	movq	%rax, %r15							   |	0000000000000105: 02	je	0x431304 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000010b: 05	cmpq	$23, 48(%rbx)							   |	0000000000000107: 05	movq	24(%rsp), %rsi
0000000000000110: 02	je	0x4312f0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000010c: 05	movq	64(%rsp), %rdi
0000000000000112: 04	movq	16(%rbx), %rsi							   |	0000000000000111: 03	movq	(%rdi), %rax
0000000000000116: 04	movq	56(%rbx), %rdi							   |	0000000000000114: 03	callq	*24(%rax)
000000000000011a: 03	movq	(%rdi), %rax							   |	0000000000000117: 02	jmp	0x431304 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000011d: 03	callq	*24(%rax)							   |	0000000000000119: 03	movq	%rax, %rdi
0000000000000120: 08	movq	$-1, 40(%rbx)							   |	000000000000011c: 05	callq	0x42e060 <__clang_call_terminate>
0000000000000128: 03	movq	(%r14), %rax							   |	0000000000000121: 03	movq	%rax, %r15
000000000000012b: 03	movq	%r14, %rdi							   |	0000000000000124: 05	cmpq	$23, 48(%rbx)
000000000000012e: 03	movq	%rbx, %rsi							   |	0000000000000129: 02	je	0x431319 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000131: 03	callq	*24(%rax)							   |	000000000000012b: 04	movq	16(%rbx), %rsi
0000000000000134: 02	jmp	0x43132d <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000012f: 04	movq	56(%rbx), %rdi
0000000000000136: 03	movq	%rax, %rdi							   |	0000000000000133: 03	movq	(%rdi), %rax
0000000000000139: 05	callq	0x42e060 <__clang_call_terminate>				   |	0000000000000136: 03	callq	*24(%rax)
000000000000013e: 03	movq	%rax, %rdi							   |	0000000000000139: 08	movq	$-1, 40(%rbx)
0000000000000141: 05	callq	0x42e060 <__clang_call_terminate>				   |	0000000000000141: 03	movq	(%r14), %rax
0000000000000146: 03	movq	%rax, %r15							   |	0000000000000144: 03	movq	%r14, %rdi
0000000000000149: 08	movq	$0, 40(%rbx)							   |	0000000000000147: 03	movq	%rbx, %rsi
0000000000000151: 03	movq	(%r14), %rax							   |	000000000000014a: 03	callq	*24(%rax)
0000000000000154: 03	movq	%r14, %rdi							   |	000000000000014d: 02	jmp	0x431356 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000157: 03	movq	%rbx, %rsi							   |	000000000000014f: 03	movq	%rax, %rdi
000000000000015a: 03	callq	*24(%rax)							   |	0000000000000152: 05	callq	0x42e060 <__clang_call_terminate>
000000000000015d: 03	movq	%r15, %rdi							   |	0000000000000157: 03	movq	%rax, %rdi
0000000000000160: 05	callq	0x405c80 <_Unwind_Resume@plt>					   |	000000000000015a: 05	callq	0x42e060 <__clang_call_terminate>
0000000000000165: 03	movq	%rax, %rdi							   |	000000000000015f: 03	movq	%rax, %r15
0000000000000168: 05	callq	0x42e060 <__clang_call_terminate>				   |	0000000000000162: 08	movq	$0, 40(%rbx)
000000000000016d: 03	nopl	(%rax)								   |	000000000000016a: 03	movq	(%r14), %rax
												   >	000000000000016d: 03	movq	%r14, %rdi
												   >	0000000000000170: 03	movq	%rbx, %rsi
												   >	0000000000000173: 03	callq	*24(%rax)
												   >	0000000000000176: 03	movq	%r15, %rdi
												   >	0000000000000179: 05	callq	0x405c80 <_Unwind_Resume@plt>
												   >	000000000000017e: 03	movq	%rax, %rdi
												   >	0000000000000181: 05	callq	0x42e060 <__clang_call_terminate>
												   >	0000000000000186: 10	nopw	%cs:(%rax,%rax)
