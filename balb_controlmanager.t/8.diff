000000000040d0c0 <BloombergLP::bdlb::String::areEqualCaseless(char const*, int, char const*, int   |	000000000040cfb0 <BloombergLP::bdlb::String::areEqualCaseless(char const*, int, char const*, int
0000000000000000: 02	cmpl	%ecx, %esi							   |	0000000000000000: 02	xorl	%eax, %eax
0000000000000002: 02	jne	0x40d0f6 <BloombergLP::bdlb::String::areEqualCaseless(char const   |	0000000000000002: 02	cmpl	%ecx, %esi
0000000000000004: 07	movq	172981(%rip), %r8  # 437480 <BloombergLP::bdlb::CharType::s_toLo   |	0000000000000004: 02	jne	0x40cff6 <BloombergLP::bdlb::String::areEqualCaseless(char const
000000000000000b: 03	movl	%esi, %r9d							   |	0000000000000006: 07	movq	173155(%rip), %r9  # 437420 <BloombergLP::bdlb::CharType::s_toLo
000000000000000e: 02	xorl	%ecx, %ecx							   |	000000000000000d: 03	movslq	%esi, %r8
0000000000000010: 03	movq	%rcx, %rsi							   |	0000000000000010: 02	testl	%esi, %esi
0000000000000013: 03	cmpq	%rcx, %r9							   |	0000000000000012: 03	cmovsl	%eax, %esi
0000000000000016: 02	je	0x40d0ef <BloombergLP::bdlb::String::areEqualCaseless(char const   |	0000000000000015: 10	nopw	%cs:(%rax,%rax)
0000000000000018: 04	movzbl	(%rdi,%rsi), %ecx						   |	000000000000001f: 01	nop	
000000000000001c: 05	movzbl	(%r8,%rcx), %r10d						   |	0000000000000020: 03	movq	%rax, %rcx
0000000000000021: 04	movzbl	(%rdx,%rsi), %eax						   |	0000000000000023: 03	cmpq	%rax, %rsi
0000000000000025: 04	leaq	1(%rsi), %rcx							   |	0000000000000026: 02	je	0x40cff0 <BloombergLP::bdlb::String::areEqualCaseless(char const
0000000000000029: 04	cmpb	(%r8,%rax), %r10b						   |	0000000000000028: 04	movzbl	(%rdi,%rcx), %eax
000000000000002d: 02	je	0x40d0d0 <BloombergLP::bdlb::String::areEqualCaseless(char const   |	000000000000002c: 05	movzbl	(%r9,%rax), %r10d
000000000000002f: 03	cmpq	%r9, %rsi							   |	0000000000000031: 05	movzbl	(%rdx,%rcx), %r11d
0000000000000032: 03	setae	%al								   |	0000000000000036: 04	leaq	1(%rcx), %rax
0000000000000035: 01	retq									   |	000000000000003a: 04	cmpb	(%r9,%r11), %r10b
0000000000000036: 02	xorl	%eax, %eax							   |	000000000000003e: 02	je	0x40cfd0 <BloombergLP::bdlb::String::areEqualCaseless(char const
0000000000000038: 01	retq									   |	0000000000000040: 03	cmpq	%r8, %rcx
0000000000000039: 07	nopl	(%rax)								   |	0000000000000043: 03	setge	%al
												   >	0000000000000046: 01	retq	
												   >	0000000000000047: 09	nopw	(%rax,%rax)
