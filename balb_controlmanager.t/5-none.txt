    ; assembly                                                                           | /* r2dec pseudo code output */
                                                                                         | /* balb_controlmanager.t/none @ 0x410470 */
                                                                                         | #include <stdint.h>
                                                                                         |  
    ; (fcn) method.BloombergLP::bslstl::Function_Rep.allocateBuf_unsigned_long_ ()       | uint64_t method_BloombergLP::bslstl::Function_Rep_allocateBuf_unsigned_long_ (uint32_t arg2, int64_t arg1) {
                                                                                         |     rsi = arg2;
                                                                                         |     rdi = arg1;
                                                                                         |     /* BloombergLP::bslstl::Function_Rep::allocateBuf(unsigned long) */
    0x00410470 cmp rsi, 0x31                                                             |     
                                                                                         |     if (rsi >= 0x31) {
    0x00410474 jb 0x410497                                                               |         
    0x00410476 push rbx                                                                  |         
    0x00410477 mov rbx, rdi                                                              |         rbx = rdi;
    0x0041047a lea rax, [rsi + 0x31]                                                     |         rax = rsi + 0x31;
    0x0041047e cmp rsi, 0xffffffffffffffcf                                               |         
                                                                                         |         if (rsi <= 0xffffffffffffffcf) {
    0x00410482 cmovbe rax, rsi                                                           |             rax = rsi;
                                                                                         |         }
    0x00410486 mov rdi, qword [rdi + 0x30]                                               |         rdi = *((rdi + 0x30));
    0x0041048a mov rcx, qword [rdi]                                                      |         rcx = *(rdi);
    0x0041048d mov rsi, rax                                                              |         rsi = rax;
    0x00410490 call qword [rcx + 0x10]                                                   |         rax = uint64_t (*rcx + 0x10)() ();
    0x00410493 mov qword [rbx], rax                                                      |         *(rbx) = rax;
    0x00410496 pop rbx                                                                   |         
                                                                                         |     }
    0x00410497 ret                                                                       |     return rax;
                                                                                         | }
