    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* balb_controlmanager.t/none @ 0x40fd00 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bslmt::ThreadUtilImpl_BloombergLP::bslmt::Platform::PosixThreads_.getMinSchedulingPriority_BloombergLP::bslmt::ThreadAttributes::SchedulingPolicy_ ()        | int64_t method_BloombergLP::bslmt::ThreadUtilImpl_BloombergLP::bslmt::Platform::PosixThreads_getMinSchedulingPriority_BloombergLP::bslmt::ThreadAttributes::SchedulingPolicy_ (int64_t arg1) {
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::getMinSchedulingPriority(BloombergLP::bslmt::ThreadAttributes::SchedulingPolicy) */
    0x0040fd00 mov eax, edi                                                                                                                                                                  |     eax = edi;
    0x0040fd02 xor edi, edi                                                                                                                                                                  |     edi = 0;
    0x0040fd04 cmp eax, 3                                                                                                                                                                    |     
                                                                                                                                                                                             |     if (eax <= 3) {
    0x0040fd07 ja 0x40fd12                                                                                                                                                                   |         
    0x0040fd09 cdqe                                                                                                                                                                          |         rax = (int64_t) eax;
    0x0040fd0b mov edi, dword [rax*4 + 0x438a58]                                                                                                                                             |         edi = *((rax*4 + 0x438a58));
                                                                                                                                                                                             |     }
    0x0040fd12 jmp 0x404aa0                                                                                                                                                                  |     return sched_get_priority_min ();
                                                                                                                                                                                             | }
