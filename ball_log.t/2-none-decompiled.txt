    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* ball_log.t/none @ 0x49d950 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BALL_LOG_TEST_CASE_MINUS_1.ThreadFunctor__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BALL_LOG_TEST_CASE_MINUS_1::ThreadFunctor_const__BloombergLP::bslma::Allocator_ ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BALL_LOG_TEST_CASE_MINUS_1_ThreadFunctor_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BALL_LOG_TEST_CASE_MINUS_1::ThreadFunctor_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BALL_LOG_TEST_CASE_MINUS_1::ThreadFunctor>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BALL_LOG_TEST_CASE_MINUS_1::ThreadFunctor const&, BloombergLP::bslma::Allocator*) */
    0x0049d950 push rbp                                                                                                                                                                                                                                                      |     
    0x0049d951 push r15                                                                                                                                                                                                                                                      |     
    0x0049d953 push r14                                                                                                                                                                                                                                                      |     
    0x0049d955 push r13                                                                                                                                                                                                                                                      |     
    0x0049d957 push r12                                                                                                                                                                                                                                                      |     
    0x0049d959 push rbx                                                                                                                                                                                                                                                      |     
    0x0049d95a push rax                                                                                                                                                                                                                                                      |     
    0x0049d95b mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x0049d95e mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x0049d961 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x0049d964 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x0049d969 je 0x49d971                                                                                                                                                                                                                                                   |         
    0x0049d96b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x0049d96f jmp 0x49d975                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x0049d971 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x0049d975 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x0049d979 test r14, r14                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x0049d97c jne 0x49d992                                                                                                                                                                                                                                                  |         
    0x0049d97e mov r14, qword [rip + 0x2d747b]                                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0049d985 test r14, r14                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x0049d988 jne 0x49d992                                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                                             |         }
    0x0049d98a call 0x4db190                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0049d98f mov r14, rax                                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_0:
    0x0049d992 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x0049d995 mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x0049d99a mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x0049d99d call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0049d9a0 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x0049d9a3 mov qword [rax], 0x49daa0                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BALL_LOG_TEST_CASE_MINUS_1::ThreadFunctor_.invokerFunction_void_;
    0x0049d9aa lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x0049d9ae mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x0049d9b6 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x0049d9ba movaps xmm0, xmmword [rip + 0x64f8f]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x0049d9c1 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0049d9c5 mov ecx, 0x50c2e8                                                                                                                                                                                                                                             |     
    0x0049d9ca mov rsi, r13                                                                                                                                                                                                                                                  |     
    0x0049d9cd mov rdx, rbp                                                                                                                                                                                                                                                  |     
    0x0049d9d0 call 0x4e14b0                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0049d9d5 mov edx, 0x4dc1c0                                                                                                                                                                                                                                             |     
    0x0049d9da mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x0049d9dd mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x0049d9e0 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x0049d9e3 call 0x4dd7e0                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0049d9e8 mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x0049d9ea test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x0049d9ec je 0x49da17                                                                                                                                                                                                                                                   |         
    0x0049d9ee cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x0049d9f3 je 0x49da03                                                                                                                                                                                                                                                   |             
    0x0049d9f5 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x0049d9f9 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0049d9fd mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x0049da00 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x0049da03 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0049da0b mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x0049da0e mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x0049da11 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x0049da14 call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x0049da17 mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x0049da19 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x0049da1d pop rbx                                                                                                                                                                                                                                                       |     
    0x0049da1e pop r12                                                                                                                                                                                                                                                       |     
    0x0049da20 pop r13                                                                                                                                                                                                                                                       |     
    0x0049da22 pop r14                                                                                                                                                                                                                                                       |     
    0x0049da24 pop r15                                                                                                                                                                                                                                                       |     
    0x0049da26 pop rbp                                                                                                                                                                                                                                                       |     
    0x0049da27 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
