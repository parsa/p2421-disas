    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* balxml_configschema.t/assume @ 0x414920 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaRestrictionElementChoice_.parseSubElement_char_const__BloombergLP::balxml::Decoder_ ()       | uint64_t method_BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaRestrictionElementChoice_parseSubElement_char_const_BloombergLP::balxml::Decoder_ (int64_t arg3, char * s, int64_t arg1) {
                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                             |     int64_t var_38h;
                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                             |     int64_t var_f0h;
                                                                                                                                                                                             |     int64_t var_f8h;
                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                             |     rsi = s;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* BloombergLP::balxml::Decoder_ChoiceContext<BloombergLP::s_baltst::BasicSchemaRestrictionElementChoice>::parseSubElement(char const*, BloombergLP::balxml::Decoder*) */
    0x00414920 push rbp                                                                                                                                                                      |     
    0x00414921 push r15                                                                                                                                                                      |     
    0x00414923 push r14                                                                                                                                                                      |     
    0x00414925 push r12                                                                                                                                                                      |     
    0x00414927 push rbx                                                                                                                                                                      |     
    0x00414928 sub rsp, 0x100                                                                                                                                                                |     
    0x0041492f mov r14, rdx                                                                                                                                                                  |     r14 = rdx;
    0x00414932 mov r15, rsi                                                                                                                                                                  |     r15 = rsi;
    0x00414935 mov rbx, rdi                                                                                                                                                                  |     rbx = rdi;
    0x00414938 mov rdi, rsi                                                                                                                                                                  |     
    0x0041493b call 0x404740                                                                                                                                                                 |     rax = strlen (rsi);
    0x00414940 mov r12, rax                                                                                                                                                                  |     r12 = rax;
    0x00414943 mov bpl, byte [rbx + 8]                                                                                                                                                       |     bpl = *((rbx + 8));
    0x00414947 test bpl, bpl                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (bpl == 0) {
    0x0041494a je 0x414a04                                                                                                                                                                   |         goto label_2;
                                                                                                                                                                                             |     }
    0x00414950 cmp byte [rbx + 0x18], 0                                                                                                                                                      |     
                                                                                                                                                                                             |     if (*((rbx + 0x18)) != 0) {
    0x00414954 je 0x41498d                                                                                                                                                                   |         
    0x00414956 mov rdi, r15                                                                                                                                                                  |         
    0x00414959 call 0x404740                                                                                                                                                                 |         rax = strlen (r15);
    0x0041495e cmp qword [rbx + 0x38], rax                                                                                                                                                   |         
                                                                                                                                                                                             |         if (*((rbx + 0x38)) != rax) {
    0x00414962 jne 0x41498d                                                                                                                                                                  |             goto label_3;
                                                                                                                                                                                             |         }
    0x00414964 test rax, rax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (rax == 0) {
    0x00414967 je 0x414a04                                                                                                                                                                   |             goto label_2;
                                                                                                                                                                                             |         }
    0x0041496d cmp qword [rbx + 0x40], 0x17                                                                                                                                                  |         
                                                                                                                                                                                             |         if (*((rbx + 0x40)) != 0x17) {
    0x00414972 je 0x41497a                                                                                                                                                                   |             
    0x00414974 mov rdi, qword [rbx + 0x20]                                                                                                                                                   |             rdi = *((rbx + 0x20));
    0x00414978 jmp 0x41497e                                                                                                                                                                  |             
                                                                                                                                                                                             |         } else {
    0x0041497a lea rdi, [rbx + 0x20]                                                                                                                                                         |             rdi = rbx + 0x20;
                                                                                                                                                                                             |         }
    0x0041497e mov rsi, r15                                                                                                                                                                  |         rsi = r15;
    0x00414981 mov rdx, rax                                                                                                                                                                  |         rdx = rax;
    0x00414984 call 0x404860                                                                                                                                                                 |         eax = bcmp ();
    0x00414989 test eax, eax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (eax == 0) {
    0x0041498b je 0x414a04                                                                                                                                                                   |             goto label_2;
                                                                                                                                                                                             |         }
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_3:
    0x0041498d mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |     
    0x00414994 lea rbx, [rsp + 8]                                                                                                                                                            |     rbx = rsp + 8;
    0x00414999 mov rdi, rbx                                                                                                                                                                  |     
    0x0041499c call 0x40edc0                                                                                                                                                                 |     BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x004149a1 mov dword [rsp + 0xf0], 2                                                                                                                                                     |     *((rsp + 0xf0)) = 2;
    0x004149ac mov qword [rsp + 0xf8], r14                                                                                                                                                   |     *((rsp + 0xf8)) = r14;
    0x004149b4 mov esi, 0x49a751                                                                                                                                                             |     
    0x004149b9 mov edx, 0x2e                                                                                                                                                                 |     
    0x004149be mov rdi, rbx                                                                                                                                                                  |     
    0x004149c1 call 0x40daf0                                                                                                                                                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Only one selection is permitted inside choice.", 0x2e);
    0x004149c6 mov rdi, rax                                                                                                                                                                  |     rdi = rax;
    0x004149c9 call 0x4049b0                                                                                                                                                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004149ce mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |     
    0x004149d6 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |     
    0x004149dd mov rdx, qword [rsp + 0x38]                                                                                                                                                   |     
    0x004149e2 mov eax, dword [rsp + 0x40]                                                                                                                                                   |     eax = *((rsp + 0x40));
    0x004149e6 sub eax, edx                                                                                                                                                                  |     eax -= edx;
    0x004149e8 movsxd rcx, eax                                                                                                                                                               |     rcx = (int64_t) eax;
    0x004149eb call 0x421940                                                                                                                                                                 |     BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
                                                                                                                                                                                             | label_0:
    0x004149f0 lea rdi, [rsp + 8]                                                                                                                                                            |     
    0x004149f5 call 0x420f00                                                                                                                                                                 |     BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
                                                                                                                                                                                             |     do {
    0x004149fa mov ebx, 0xffffffff                                                                                                                                                           |         ebx = 0xffffffff;
    0x004149ff jmp 0x414b72                                                                                                                                                                  |         goto label_4;
                                                                                                                                                                                             | label_2:
    0x00414a04 mov byte [rbx + 8], 1                                                                                                                                                         |         *((rbx + 8)) = 1;
    0x00414a08 mov rax, qword [r14]                                                                                                                                                          |         rax = *(r14);
    0x00414a0b cmp byte [rax + 8], 0                                                                                                                                                         |         
                                                                                                                                                                                             |         if (*((rax + 8)) != 0) {
    0x00414a0f je 0x414a25                                                                                                                                                                   |             
    0x00414a11 mov rdi, r15                                                                                                                                                                  |             
    0x00414a14 mov esi, r12d                                                                                                                                                                 |             
    0x00414a17 call 0x430a80                                                                                                                                                                 |             rax = BloombergLP::s_baltst::BasicSchemaRestrictionElementChoice::lookupSelectionInfo(char const*,int) (r15, r12d);
    0x00414a1c test rax, rax                                                                                                                                                                 |             
                                                                                                                                                                                             |             if (rax == 0) {
    0x00414a1f je 0x414b0f                                                                                                                                                                   |                 goto label_5;
                                                                                                                                                                                             |             }
                                                                                                                                                                                             |         }
    0x00414a25 test bpl, bpl                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (bpl == 0) {
    0x00414a28 je 0x414a65                                                                                                                                                                   |             goto label_6;
                                                                                                                                                                                             |         }
    0x00414a2a movsxd r12, r12d                                                                                                                                                              |         r12 = (int64_t) r12d;
                                                                                                                                                                                             | label_1:
    0x00414a2d mov qword [rsp + 8], r14                                                                                                                                                      |         *((rsp + 8)) = r14;
    0x00414a32 mov qword [rsp + 0x10], r15                                                                                                                                                   |         *((rsp + 0x10)) = r15;
    0x00414a37 mov qword [rsp + 0x18], r12                                                                                                                                                   |         *((rsp + 0x18)) = r12;
    0x00414a3c mov rsi, qword [rbx + 0x10]                                                                                                                                                   |         rsi = *((rbx + 0x10));
    0x00414a40 mov eax, dword [rsi + 0x60]                                                                                                                                                   |         eax = *((rsi + 0x60));
    0x00414a43 cmp eax, 1                                                                                                                                                                    |         
                                                                                                                                                                                             |         if (eax == 1) {
    0x00414a46 je 0x414b60                                                                                                                                                                   |             goto label_7;
                                                                                                                                                                                             |         }
    0x00414a4c test eax, eax                                                                                                                                                                 |         
    0x00414a4e jne 0x4149fa                                                                                                                                                                  |         
                                                                                                                                                                                             |     } while (eax != 0);
    0x00414a50 mov edx, dword [rip + 0x8cd6a]                                                                                                                                                |     
    0x00414a56 lea rdi, [rsp + 8]                                                                                                                                                            |     
    0x00414a5b call 0x410d30                                                                                                                                                                 |     intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaAnnotationElement>(BloombergLP::s_baltst::BasicSchemaAnnotationElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a17c0));
    0x00414a60 jmp 0x414b70                                                                                                                                                                  |     goto label_8;
                                                                                                                                                                                             | label_6:
    0x00414a65 mov rdi, qword [rbx + 0x10]                                                                                                                                                   |     
    0x00414a69 mov rsi, r15                                                                                                                                                                  |     
    0x00414a6c mov edx, r12d                                                                                                                                                                 |     edx = r12d;
    0x00414a6f call 0x4313c0                                                                                                                                                                 |     eax = BloombergLP::s_baltst::BasicSchemaRestrictionElementChoice::makeSelection(char const*,int) (*((rbx + 0x10)), r15);
    0x00414a74 test eax, eax                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (eax != 0) {
    0x00414a76 je 0x414b84                                                                                                                                                                   |         
    0x00414a7c mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |         
    0x00414a83 lea rbx, [rsp + 8]                                                                                                                                                            |         rbx = rsp + 8;
    0x00414a88 mov rdi, rbx                                                                                                                                                                  |         
    0x00414a8b call 0x40edc0                                                                                                                                                                 |         BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x00414a90 mov dword [rsp + 0xf0], 2                                                                                                                                                     |         *((rsp + 0xf0)) = 2;
    0x00414a9b mov qword [rsp + 0xf8], r14                                                                                                                                                   |         *((rsp + 0xf8)) = r14;
    0x00414aa3 mov esi, 0x49a6e9                                                                                                                                                             |         
    0x00414aa8 mov edx, 0x1b                                                                                                                                                                 |         
    0x00414aad mov rdi, rbx                                                                                                                                                                  |         
    0x00414ab0 call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Unable to make selection: \", 0x1b);
    0x00414ab5 mov rbx, rax                                                                                                                                                                  |         rbx = rax;
    0x00414ab8 mov rdi, r15                                                                                                                                                                  |         
    0x00414abb call 0x404740                                                                                                                                                                 |         rax = strlen (r15);
    0x00414ac0 mov rdi, rbx                                                                                                                                                                  |         
    0x00414ac3 mov rsi, r15                                                                                                                                                                  |         
    0x00414ac6 mov rdx, rax                                                                                                                                                                  |         
    0x00414ac9 call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, r15, rax);
    0x00414ace mov esi, 0x49a5ef                                                                                                                                                             |         
    0x00414ad3 mov edx, 2                                                                                                                                                                    |         
    0x00414ad8 mov rdi, rax                                                                                                                                                                  |         
    0x00414adb call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x49a5ef, 2);
    0x00414ae0 mov rdi, rax                                                                                                                                                                  |         rdi = rax;
    0x00414ae3 call 0x4049b0                                                                                                                                                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00414ae8 mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |         
    0x00414af0 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |         
    0x00414af7 mov rdx, qword [rsp + 0x38]                                                                                                                                                   |         
    0x00414afc mov eax, dword [rsp + 0x40]                                                                                                                                                   |         eax = *((rsp + 0x40));
    0x00414b00 sub eax, edx                                                                                                                                                                  |         eax -= edx;
    0x00414b02 movsxd rcx, eax                                                                                                                                                               |         rcx = (int64_t) eax;
    0x00414b05 call 0x421940                                                                                                                                                                 |         BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x00414b0a jmp 0x4149f0                                                                                                                                                                  |         goto label_0;
                                                                                                                                                                                             | label_5:
    0x00414b0f inc dword [r14 + 0x410]                                                                                                                                                       |         *((r14 + 0x410))++;
    0x00414b16 mov byte [rbx + 0x18], 1                                                                                                                                                      |         *((rbx + 0x18)) = 1;
    0x00414b1a lea rdi, [rbx + 0x20]                                                                                                                                                         |         
    0x00414b1e movsxd rdx, r12d                                                                                                                                                              |         rdx = (int64_t) r12d;
    0x00414b21 mov rbp, qword [rbx + 0x38]                                                                                                                                                   |         rbp = *((rbx + 0x38));
    0x00414b25 mov qword [rbx + 0x38], 0                                                                                                                                                     |         *((rbx + 0x38)) = 0;
    0x00414b2d mov ecx, 0x49a26b                                                                                                                                                             |         
    0x00414b32 mov rsi, r15                                                                                                                                                                  |         
    0x00414b35 call 0x476b20                                                                                                                                                                 |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, rdx, "string<...>::assign(char*...): string too long");
    0x00414b3a lea rbx, [rsp + 8]                                                                                                                                                            |         rbx = rsp + 8;
    0x00414b3f mov rdi, rbx                                                                                                                                                                  |         rdi = rbx;
    0x00414b42 call 0x421d50                                                                                                                                                                 |         BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x00414b47 mov rdi, rbx                                                                                                                                                                  |         
    0x00414b4a mov rsi, r14                                                                                                                                                                  |         
    0x00414b4d call 0x420870                                                                                                                                                                 |         eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rbx, r14);
    0x00414b52 mov ebx, eax                                                                                                                                                                  |         ebx = eax;
    0x00414b54 lea rdi, [rsp + 8]                                                                                                                                                            |         rdi = rsp + 8;
    0x00414b59 call 0x422180                                                                                                                                                                 |         BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
    0x00414b5e jmp 0x414b72                                                                                                                                                                  |         goto label_4;
                                                                                                                                                                                             | label_7:
    0x00414b60 mov edx, dword [rip + 0x8cc82]                                                                                                                                                |         
    0x00414b66 lea rdi, [rsp + 8]                                                                                                                                                            |         
    0x00414b6b call 0x412550                                                                                                                                                                 |         eax = intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaEnumerationElement>(BloombergLP::s_baltst::BasicSchemaEnumerationElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a17e8));
                                                                                                                                                                                             | label_8:
    0x00414b70 mov ebx, eax                                                                                                                                                                  |         ebx = eax;
                                                                                                                                                                                             | label_4:
    0x00414b72 mov eax, ebx                                                                                                                                                                  |         
    0x00414b74 add rsp, 0x100                                                                                                                                                                |         
    0x00414b7b pop rbx                                                                                                                                                                       |         
    0x00414b7c pop r12                                                                                                                                                                       |         
    0x00414b7e pop r14                                                                                                                                                                       |         
    0x00414b80 pop r15                                                                                                                                                                       |         
    0x00414b82 pop rbp                                                                                                                                                                       |         
    0x00414b83 ret                                                                                                                                                                           |         return rax;
                                                                                                                                                                                             |     }
    0x00414b84 mov byte [rbx + 0x18], 1                                                                                                                                                      |     *((rbx + 0x18)) = 1;
    0x00414b88 lea rdi, [rbx + 0x20]                                                                                                                                                         |     
    0x00414b8c movsxd r12, r12d                                                                                                                                                              |     r12 = (int64_t) r12d;
    0x00414b8f mov rbp, qword [rbx + 0x38]                                                                                                                                                   |     rbp = *((rbx + 0x38));
    0x00414b93 mov qword [rbx + 0x38], 0                                                                                                                                                     |     *((rbx + 0x38)) = 0;
    0x00414b9b mov ecx, 0x49a26b                                                                                                                                                             |     
    0x00414ba0 mov rsi, r15                                                                                                                                                                  |     
    0x00414ba3 mov rdx, r12                                                                                                                                                                  |     
    0x00414ba6 call 0x476b20                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, r12, "string<...>::assign(char*...): string too long");
    0x00414bab jmp 0x414a2d                                                                                                                                                                  |     goto label_1;
                                                                                                                                                                                             | }
