    ; assembly                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                 | /* balxml_configschema.t/assume @ 0x41ce30 */
                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::balxml::Decoder_ParseObject::executeImp_BloombergLP::s_baltst.BasicSchemaChoiceElementChoice__BloombergLP::s_baltst::BasicSchemaChoiceElementChoice__int__BloombergLP::bdlat_TypeCategory::Choice_ ()        | int64_t method_int_BloombergLP::balxml::Decoder_ParseObject::executeImp_BloombergLP::s_baltst_BasicSchemaChoiceElementChoice_BloombergLP::s_baltst::BasicSchemaChoiceElementChoice_int_BloombergLP::bdlat_TypeCategory::Choice_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                 |     int64_t var_8h_3;
                                                                                                                                                                                                                                                 |     int64_t var_10h_2;
                                                                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                                                                 |     int64_t var_20h;
                                                                                                                                                                                                                                                 |     int64_t var_28h_2;
                                                                                                                                                                                                                                                 |     int64_t var_38h;
                                                                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                                                                 |     uint32_t var_48h;
                                                                                                                                                                                                                                                 |     int64_t var_50h;
                                                                                                                                                                                                                                                 |     int64_t var_28h;
                                                                                                                                                                                                                                                 |     int64_t var_30h;
                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                 |     /* int BloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaChoiceElementChoice>(BloombergLP::s_baltst::BasicSchemaChoiceElementChoice*, int, BloombergLP::bdlat_TypeCategory::Choice) */
    0x0041ce30 push r15                                                                                                                                                                                                                          |     
    0x0041ce32 push r14                                                                                                                                                                                                                          |     
    0x0041ce34 push rbx                                                                                                                                                                                                                          |     
    0x0041ce35 sub rsp, 0x100                                                                                                                                                                                                                    |     
    0x0041ce3c mov r14, rsi                                                                                                                                                                                                                      |     r14 = rsi;
    0x0041ce3f mov rbx, rdi                                                                                                                                                                                                                      |     rbx = rdi;
    0x0041ce42 test edx, 0x10000                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                 |     if ((edx & 0x10000) == 0) {
    0x0041ce48 jne 0x41ce96                                                                                                                                                                                                                      |         
    0x0041ce4a mov qword [rsp + 8], 0x49c0d0                                                                                                                                                                                                     |         *((rsp + 8)) = vtable.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaChoiceElementChoice_.0;
    0x0041ce53 mov byte [rsp + 0x10], 0                                                                                                                                                                                                          |         *((rsp + 0x10)) = 0;
    0x0041ce58 mov qword [rsp + 0x18], r14                                                                                                                                                                                                       |         *((rsp + 0x18)) = r14;
    0x0041ce5d mov byte [rsp + 0x20], 0                                                                                                                                                                                                          |         *((rsp + 0x20)) = 0;
    0x0041ce62 mov qword [rsp + 0x28], 0                                                                                                                                                                                                         |         *((rsp + 0x28)) = 0;
    0x0041ce6b movaps xmm0, xmmword [rip + 0x7cc1e]                                                                                                                                                                                              |         xmm0 = .comment;
    0x0041ce72 movups xmmword [rsp + 0x40], xmm0                                                                                                                                                                                                 |         __asm ("movups xmmword [rsp + 0x40], xmm0");
    0x0041ce77 mov rax, qword [rip + 0x2c3282]                                                                                                                                                                                                   |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041ce7e test rax, rax                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                 |         if (rax == 0) {
    0x0041ce81 je 0x41cf77                                                                                                                                                                                                                       |             goto label_0;
                                                                                                                                                                                                                                                 |         }
    0x0041ce87 mov qword [rsp + 0x50], rax                                                                                                                                                                                                       |         *((rsp + 0x50)) = rax;
    0x0041ce8c lea rcx, [rsp + 0x28]                                                                                                                                                                                                             |         rcx = rsp + 0x28;
    0x0041ce91 jmp 0x41cfe8                                                                                                                                                                                                                      |         goto label_1;
                                                                                                                                                                                                                                                 |     }
    0x0041ce96 mov rax, qword [rbx]                                                                                                                                                                                                              |     rax = *(rbx);
    0x0041ce99 mov rax, qword [rax]                                                                                                                                                                                                              |     rax = *(rax);
    0x0041ce9c cmp byte [rax + 8], 0                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                 |     if (*((rax + 8)) != 0) {
    0x0041cea0 je 0x41ceb7                                                                                                                                                                                                                       |         
    0x0041cea2 mov rdi, qword [rbx + 8]                                                                                                                                                                                                          |         
    0x0041cea6 mov esi, dword [rbx + 0x10]                                                                                                                                                                                                       |         
    0x0041cea9 call 0x433b10                                                                                                                                                                                                                     |         rax = BloombergLP::s_baltst::BasicSchemaChoiceElementChoice::lookupSelectionInfo(char const*,int) (*((rbx + 8)), *((rbx + 0x10)));
    0x0041ceae test rax, rax                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                 |         if (rax == 0) {
    0x0041ceb1 je 0x41cfbe                                                                                                                                                                                                                       |             goto label_2;
                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                 |     }
    0x0041ceb7 mov rsi, qword [rbx + 8]                                                                                                                                                                                                          |     
    0x0041cebb mov edx, dword [rbx + 0x10]                                                                                                                                                                                                       |     edx = *((rbx + 0x10));
    0x0041cebe mov rdi, r14                                                                                                                                                                                                                      |     
    0x0041cec1 call 0x4345e0                                                                                                                                                                                                                     |     eax = BloombergLP::s_baltst::BasicSchemaChoiceElementChoice::makeSelection(char const*,int) (r14, *((rbx + 8)));
    0x0041cec6 test eax, eax                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x0041cec8 je 0x41cf90                                                                                                                                                                                                                       |         goto label_3;
                                                                                                                                                                                                                                                 |     }
    0x0041cece mov r15, qword [rbx]                                                                                                                                                                                                              |     r15 = *(rbx);
    0x0041ced1 mov rsi, qword [r15 + 0x2d0]                                                                                                                                                                                                      |     
    0x0041ced8 lea r14, [rsp + 8]                                                                                                                                                                                                                |     r14 = rsp + 8;
    0x0041cedd mov rdi, r14                                                                                                                                                                                                                      |     
    0x0041cee0 call 0x40edc0                                                                                                                                                                                                                     |     BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (r14, *((r15 + 0x2d0)));
    0x0041cee5 mov dword [rsp + 0xf0], 2                                                                                                                                                                                                         |     *((rsp + 0xf0)) = 2;
    0x0041cef0 mov qword [rsp + 0xf8], r15                                                                                                                                                                                                       |     *((rsp + 0xf8)) = r15;
    0x0041cef8 mov esi, 0x49a6e9                                                                                                                                                                                                                 |     
    0x0041cefd mov edx, 0x1b                                                                                                                                                                                                                     |     
    0x0041cf02 mov rdi, r14                                                                                                                                                                                                                      |     
    0x0041cf05 call 0x40daf0                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, "Unable to make selection: \", 0x1b);
    0x0041cf0a mov r14, rax                                                                                                                                                                                                                      |     r14 = rax;
    0x0041cf0d mov rbx, qword [rbx + 8]                                                                                                                                                                                                          |     rbx = *((rbx + 8));
    0x0041cf11 mov rdi, rbx                                                                                                                                                                                                                      |     
    0x0041cf14 call 0x404740                                                                                                                                                                                                                     |     rax = strlen (*((rbx + 8)));
    0x0041cf19 mov rdi, r14                                                                                                                                                                                                                      |     
    0x0041cf1c mov rsi, rbx                                                                                                                                                                                                                      |     
    0x0041cf1f mov rdx, rax                                                                                                                                                                                                                      |     
    0x0041cf22 call 0x40daf0                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0041cf27 mov esi, 0x49a5ef                                                                                                                                                                                                                 |     
    0x0041cf2c mov edx, 2                                                                                                                                                                                                                        |     
    0x0041cf31 mov rdi, rax                                                                                                                                                                                                                      |     
    0x0041cf34 call 0x40daf0                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x49a5ef, 2);
    0x0041cf39 mov rdi, rax                                                                                                                                                                                                                      |     rdi = rax;
    0x0041cf3c call 0x4049b0                                                                                                                                                                                                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0041cf41 mov rdi, qword [rsp + 0xf8]                                                                                                                                                                                                       |     
    0x0041cf49 mov esi, dword [rsp + 0xf0]                                                                                                                                                                                                       |     
    0x0041cf50 mov rdx, qword [rsp + 0x38]                                                                                                                                                                                                       |     
    0x0041cf55 mov eax, dword [rsp + 0x40]                                                                                                                                                                                                       |     eax = *((rsp + 0x40));
    0x0041cf59 sub eax, edx                                                                                                                                                                                                                      |     eax -= edx;
    0x0041cf5b movsxd rcx, eax                                                                                                                                                                                                                   |     rcx = (int64_t) eax;
    0x0041cf5e call 0x421940                                                                                                                                                                                                                     |     BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x0041cf63 lea rdi, [rsp + 8]                                                                                                                                                                                                                |     
    0x0041cf68 call 0x420f00                                                                                                                                                                                                                     |     BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
                                                                                                                                                                                                                                                 |     do {
    0x0041cf6d mov ebx, 0xffffffff                                                                                                                                                                                                               |         ebx = 0xffffffff;
    0x0041cf72 jmp 0x41d02e                                                                                                                                                                                                                      |         goto label_4;
                                                                                                                                                                                                                                                 | label_0:
    0x0041cf77 call 0x474010                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041cf7c cmp qword [rsp + 0x48], 0x17                                                                                                                                                                                                      |         
    0x0041cf82 mov qword [rsp + 0x50], rax                                                                                                                                                                                                       |         *((rsp + 0x50)) = rax;
                                                                                                                                                                                                                                                 |         if (*((rsp + 0x48)) != 0x17) {
    0x0041cf87 jne 0x41cfe3                                                                                                                                                                                                                      |             goto label_5;
                                                                                                                                                                                                                                                 |         }
    0x0041cf89 lea rcx, [rsp + 0x28]                                                                                                                                                                                                             |         rcx = rsp + 0x28;
    0x0041cf8e jmp 0x41cfe8                                                                                                                                                                                                                      |         goto label_1;
                                                                                                                                                                                                                                                 | label_3:
    0x0041cf90 mov eax, dword [r14 + 0x40]                                                                                                                                                                                                       |         eax = *((r14 + 0x40));
    0x0041cf94 cmp eax, 1                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                 |         if (eax == 1) {
    0x0041cf97 je 0x41d03d                                                                                                                                                                                                                       |             goto label_6;
                                                                                                                                                                                                                                                 |         }
    0x0041cf9d test eax, eax                                                                                                                                                                                                                     |         
    0x0041cf9f jne 0x41cf6d                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                 |     } while (eax != 0);
    0x0041cfa1 mov edx, dword [rip + 0x84a69]                                                                                                                                                                                                    |     edx = .comment;
    0x0041cfa7 mov rdi, rbx                                                                                                                                                                                                                      |     rdi = rbx;
    0x0041cfaa mov rsi, r14                                                                                                                                                                                                                      |     rsi = r14;
    0x0041cfad add rsp, 0x100                                                                                                                                                                                                                    |     
    0x0041cfb4 pop rbx                                                                                                                                                                                                                           |     
    0x0041cfb5 pop r14                                                                                                                                                                                                                           |     
    0x0041cfb7 pop r15                                                                                                                                                                                                                           |     
    0x0041cfb9 jmp 0x410d30                                                                                                                                                                                                                      |     void (*0x410d30)() ();
                                                                                                                                                                                                                                                 | label_2:
    0x0041cfbe mov rax, qword [rbx]                                                                                                                                                                                                              |     rax = *(rbx);
    0x0041cfc1 inc dword [rax + 0x410]                                                                                                                                                                                                           |     *((rax + 0x410))++;
    0x0041cfc7 lea r14, [rsp + 8]                                                                                                                                                                                                                |     r14 = rsp + 8;
    0x0041cfcc mov rdi, r14                                                                                                                                                                                                                      |     rdi = r14;
    0x0041cfcf call 0x421d50                                                                                                                                                                                                                     |     BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x0041cfd4 mov rsi, qword [rbx]                                                                                                                                                                                                              |     
    0x0041cfd7 mov rdi, r14                                                                                                                                                                                                                      |     
    0x0041cfda call 0x420870                                                                                                                                                                                                                     |     eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (r14, *(rbx));
    0x0041cfdf mov ebx, eax                                                                                                                                                                                                                      |     ebx = eax;
    0x0041cfe1 jmp 0x41d024                                                                                                                                                                                                                      |     goto label_7;
                                                                                                                                                                                                                                                 | label_5:
    0x0041cfe3 mov rcx, qword [rsp + 0x28]                                                                                                                                                                                                       |     rcx = *((rsp + 0x28));
                                                                                                                                                                                                                                                 | label_1:
    0x0041cfe8 mov byte [rcx], 0                                                                                                                                                                                                                 |     *(rcx) = 0;
    0x0041cfeb mov rsi, qword [rbx]                                                                                                                                                                                                              |     
    0x0041cfee lea rdi, [rsp + 8]                                                                                                                                                                                                                |     
    0x0041cff3 call 0x420870                                                                                                                                                                                                                     |     eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rsp + 8, *(rbx));
    0x0041cff8 mov ebx, eax                                                                                                                                                                                                                      |     ebx = eax;
    0x0041cffa mov qword [rsp + 8], 0x49c0d0                                                                                                                                                                                                     |     *((rsp + 8)) = vtable.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaChoiceElementChoice_.0;
    0x0041d003 cmp qword [rsp + 0x48], 0x17                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                 |     if (*((rsp + 0x48)) != 0x17) {
    0x0041d009 je 0x41d01b                                                                                                                                                                                                                       |         
    0x0041d00b mov rsi, qword [rsp + 0x28]                                                                                                                                                                                                       |         rsi = *((rsp + 0x28));
    0x0041d010 mov rdi, qword [rsp + 0x50]                                                                                                                                                                                                       |         rdi = *((rsp + 0x50));
    0x0041d015 mov rax, qword [rdi]                                                                                                                                                                                                              |         rax = *(rdi);
    0x0041d018 call qword [rax + 0x18]                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                 |     }
    0x0041d01b mov qword [rsp + 0x40], 0xffffffffffffffff                                                                                                                                                                                        |     *((rsp + 0x40)) = 0xffffffffffffffff;
                                                                                                                                                                                                                                                 | label_7:
    0x0041d024 lea rdi, [rsp + 8]                                                                                                                                                                                                                |     rdi = rsp + 8;
    0x0041d029 call 0x422180                                                                                                                                                                                                                     |     BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
                                                                                                                                                                                                                                                 | label_4:
    0x0041d02e mov eax, ebx                                                                                                                                                                                                                      |     eax = ebx;
    0x0041d030 add rsp, 0x100                                                                                                                                                                                                                    |     
    0x0041d037 pop rbx                                                                                                                                                                                                                           |     
    0x0041d038 pop r14                                                                                                                                                                                                                           |     
    0x0041d03a pop r15                                                                                                                                                                                                                           |     
    0x0041d03c ret                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                 | label_6:
    0x0041d03d mov rsi, qword [r14]                                                                                                                                                                                                              |     rsi = *(r14);
    0x0041d040 mov edx, dword [rip + 0x849f2]                                                                                                                                                                                                    |     edx = .comment;
    0x0041d046 mov rdi, rbx                                                                                                                                                                                                                      |     rdi = rbx;
    0x0041d049 add rsp, 0x100                                                                                                                                                                                                                    |     
    0x0041d050 pop rbx                                                                                                                                                                                                                           |     
    0x0041d051 pop r14                                                                                                                                                                                                                           |     
    0x0041d053 pop r15                                                                                                                                                                                                                           |     
    0x0041d055 jmp 0x418880                                                                                                                                                                                                                      |     return void (*0x418880)() ();
                                                                                                                                                                                                                                                 | }
