    ; assembly                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                 | /* balxml_configschema.t/assume @ 0x41eaa0 */
                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaComplexTypeElementChoice_.parseSubElement_char_const__BloombergLP::balxml::Decoder_ ()           | uint64_t method_BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaComplexTypeElementChoice_parseSubElement_char_const_BloombergLP::balxml::Decoder_ (int64_t arg3, char * s, int64_t arg1) {
                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                 |     int64_t var_38h;
                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                 |     int64_t var_f0h;
                                                                                                                                                                                                 |     int64_t var_f8h;
                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                 |     rsi = s;
                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                 |     /* BloombergLP::balxml::Decoder_ChoiceContext<BloombergLP::s_baltst::BasicSchemaComplexTypeElementChoice>::parseSubElement(char const*, BloombergLP::balxml::Decoder*) */
    0x0041eaa0 push rbp                                                                                                                                                                          |     
    0x0041eaa1 push r15                                                                                                                                                                          |     
    0x0041eaa3 push r14                                                                                                                                                                          |     
    0x0041eaa5 push r12                                                                                                                                                                          |     
    0x0041eaa7 push rbx                                                                                                                                                                          |     
    0x0041eaa8 sub rsp, 0x100                                                                                                                                                                    |     
    0x0041eaaf mov r14, rdx                                                                                                                                                                      |     r14 = rdx;
    0x0041eab2 mov r15, rsi                                                                                                                                                                      |     r15 = rsi;
    0x0041eab5 mov rbx, rdi                                                                                                                                                                      |     rbx = rdi;
    0x0041eab8 mov rdi, rsi                                                                                                                                                                      |     
    0x0041eabb call 0x404740                                                                                                                                                                     |     rax = strlen (rsi);
    0x0041eac0 mov r12, rax                                                                                                                                                                      |     r12 = rax;
    0x0041eac3 mov bpl, byte [rbx + 8]                                                                                                                                                           |     bpl = *((rbx + 8));
    0x0041eac7 test bpl, bpl                                                                                                                                                                     |     
                                                                                                                                                                                                 |     if (bpl == 0) {
    0x0041eaca je 0x41eb84                                                                                                                                                                       |         goto label_2;
                                                                                                                                                                                                 |     }
    0x0041ead0 cmp byte [rbx + 0x18], 0                                                                                                                                                          |     
                                                                                                                                                                                                 |     if (*((rbx + 0x18)) != 0) {
    0x0041ead4 je 0x41eb0d                                                                                                                                                                       |         
    0x0041ead6 mov rdi, r15                                                                                                                                                                      |         
    0x0041ead9 call 0x404740                                                                                                                                                                     |         rax = strlen (r15);
    0x0041eade cmp qword [rbx + 0x38], rax                                                                                                                                                       |         
                                                                                                                                                                                                 |         if (*((rbx + 0x38)) != rax) {
    0x0041eae2 jne 0x41eb0d                                                                                                                                                                      |             goto label_3;
                                                                                                                                                                                                 |         }
    0x0041eae4 test rax, rax                                                                                                                                                                     |         
                                                                                                                                                                                                 |         if (rax == 0) {
    0x0041eae7 je 0x41eb84                                                                                                                                                                       |             goto label_2;
                                                                                                                                                                                                 |         }
    0x0041eaed cmp qword [rbx + 0x40], 0x17                                                                                                                                                      |         
                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x0041eaf2 je 0x41eafa                                                                                                                                                                       |             
    0x0041eaf4 mov rdi, qword [rbx + 0x20]                                                                                                                                                       |             rdi = *((rbx + 0x20));
    0x0041eaf8 jmp 0x41eafe                                                                                                                                                                      |             
                                                                                                                                                                                                 |         } else {
    0x0041eafa lea rdi, [rbx + 0x20]                                                                                                                                                             |             rdi = rbx + 0x20;
                                                                                                                                                                                                 |         }
    0x0041eafe mov rsi, r15                                                                                                                                                                      |         rsi = r15;
    0x0041eb01 mov rdx, rax                                                                                                                                                                      |         rdx = rax;
    0x0041eb04 call 0x404860                                                                                                                                                                     |         eax = bcmp ();
    0x0041eb09 test eax, eax                                                                                                                                                                     |         
                                                                                                                                                                                                 |         if (eax == 0) {
    0x0041eb0b je 0x41eb84                                                                                                                                                                       |             goto label_2;
                                                                                                                                                                                                 |         }
                                                                                                                                                                                                 |     }
                                                                                                                                                                                                 | label_3:
    0x0041eb0d mov rsi, qword [r14 + 0x2d0]                                                                                                                                                      |     
    0x0041eb14 lea rbx, [rsp + 8]                                                                                                                                                                |     rbx = rsp + 8;
    0x0041eb19 mov rdi, rbx                                                                                                                                                                      |     
    0x0041eb1c call 0x40edc0                                                                                                                                                                     |     BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x0041eb21 mov dword [rsp + 0xf0], 2                                                                                                                                                         |     *((rsp + 0xf0)) = 2;
    0x0041eb2c mov qword [rsp + 0xf8], r14                                                                                                                                                       |     *((rsp + 0xf8)) = r14;
    0x0041eb34 mov esi, 0x49a751                                                                                                                                                                 |     
    0x0041eb39 mov edx, 0x2e                                                                                                                                                                     |     
    0x0041eb3e mov rdi, rbx                                                                                                                                                                      |     
    0x0041eb41 call 0x40daf0                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Only one selection is permitted inside choice.", 0x2e);
    0x0041eb46 mov rdi, rax                                                                                                                                                                      |     rdi = rax;
    0x0041eb49 call 0x4049b0                                                                                                                                                                     |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0041eb4e mov rdi, qword [rsp + 0xf8]                                                                                                                                                       |     
    0x0041eb56 mov esi, dword [rsp + 0xf0]                                                                                                                                                       |     
    0x0041eb5d mov rdx, qword [rsp + 0x38]                                                                                                                                                       |     
    0x0041eb62 mov eax, dword [rsp + 0x40]                                                                                                                                                       |     eax = *((rsp + 0x40));
    0x0041eb66 sub eax, edx                                                                                                                                                                      |     eax -= edx;
    0x0041eb68 movsxd rcx, eax                                                                                                                                                                   |     rcx = (int64_t) eax;
    0x0041eb6b call 0x421940                                                                                                                                                                     |     BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
                                                                                                                                                                                                 | label_0:
    0x0041eb70 lea rdi, [rsp + 8]                                                                                                                                                                |     
    0x0041eb75 call 0x420f00                                                                                                                                                                     |     BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
                                                                                                                                                                                                 |     do {
    0x0041eb7a mov ebx, 0xffffffff                                                                                                                                                               |         ebx = 0xffffffff;
    0x0041eb7f jmp 0x41ed13                                                                                                                                                                      |         goto label_4;
                                                                                                                                                                                                 | label_2:
    0x0041eb84 mov byte [rbx + 8], 1                                                                                                                                                             |         *((rbx + 8)) = 1;
    0x0041eb88 mov rax, qword [r14]                                                                                                                                                              |         rax = *(r14);
    0x0041eb8b cmp byte [rax + 8], 0                                                                                                                                                             |         
                                                                                                                                                                                                 |         if (*((rax + 8)) != 0) {
    0x0041eb8f je 0x41eba5                                                                                                                                                                       |             
    0x0041eb91 mov rdi, r15                                                                                                                                                                      |             
    0x0041eb94 mov esi, r12d                                                                                                                                                                     |             
    0x0041eb97 call 0x435460                                                                                                                                                                     |             rax = BloombergLP::s_baltst::BasicSchemaComplexTypeElementChoice::lookupSelectionInfo(char const*,int) (r15, r12d);
    0x0041eb9c test rax, rax                                                                                                                                                                     |             
                                                                                                                                                                                                 |             if (rax == 0) {
    0x0041eb9f je 0x41ec98                                                                                                                                                                       |                 goto label_5;
                                                                                                                                                                                                 |             }
                                                                                                                                                                                                 |         }
    0x0041eba5 test bpl, bpl                                                                                                                                                                     |         
                                                                                                                                                                                                 |         if (bpl == 0) {
    0x0041eba8 je 0x41ebee                                                                                                                                                                       |             goto label_6;
                                                                                                                                                                                                 |         }
    0x0041ebaa movsxd r12, r12d                                                                                                                                                                  |         r12 = (int64_t) r12d;
                                                                                                                                                                                                 | label_1:
    0x0041ebad mov qword [rsp + 8], r14                                                                                                                                                          |         *((rsp + 8)) = r14;
    0x0041ebb2 mov qword [rsp + 0x10], r15                                                                                                                                                       |         *((rsp + 0x10)) = r15;
    0x0041ebb7 mov qword [rsp + 0x18], r12                                                                                                                                                       |         *((rsp + 0x18)) = r12;
    0x0041ebbc mov rsi, qword [rbx + 0x10]                                                                                                                                                       |         rsi = *((rbx + 0x10));
    0x0041ebc0 mov eax, dword [rsi + 0x40]                                                                                                                                                       |         eax = *((rsi + 0x40));
    0x0041ebc3 cmp eax, 2                                                                                                                                                                        |         
                                                                                                                                                                                                 |         if (eax == 2) {
    0x0041ebc6 je 0x41ece9                                                                                                                                                                       |             goto label_7;
                                                                                                                                                                                                 |         }
    0x0041ebcc cmp eax, 1                                                                                                                                                                        |         
                                                                                                                                                                                                 |         if (eax == 1) {
    0x0041ebcf je 0x41ecfe                                                                                                                                                                       |             goto label_8;
                                                                                                                                                                                                 |         }
    0x0041ebd5 test eax, eax                                                                                                                                                                     |         
    0x0041ebd7 jne 0x41eb7a                                                                                                                                                                      |         
                                                                                                                                                                                                 |     } while (eax != 0);
    0x0041ebd9 mov edx, dword [rip + 0x82f21]                                                                                                                                                    |     
    0x0041ebdf lea rdi, [rsp + 8]                                                                                                                                                                |     
    0x0041ebe4 call 0x410d30                                                                                                                                                                     |     intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaAnnotationElement>(BloombergLP::s_baltst::BasicSchemaAnnotationElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a1b00));
    0x0041ebe9 jmp 0x41ed11                                                                                                                                                                      |     goto label_9;
                                                                                                                                                                                                 | label_6:
    0x0041ebee mov rdi, qword [rbx + 0x10]                                                                                                                                                       |     
    0x0041ebf2 mov rsi, r15                                                                                                                                                                      |     
    0x0041ebf5 mov edx, r12d                                                                                                                                                                     |     edx = r12d;
    0x0041ebf8 call 0x436350                                                                                                                                                                     |     eax = BloombergLP::s_baltst::BasicSchemaComplexTypeElementChoice::makeSelection(char const*,int) (*((rbx + 0x10)), r15);
    0x0041ebfd test eax, eax                                                                                                                                                                     |     
                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041ebff je 0x41ed25                                                                                                                                                                       |         
    0x0041ec05 mov rsi, qword [r14 + 0x2d0]                                                                                                                                                      |         
    0x0041ec0c lea rbx, [rsp + 8]                                                                                                                                                                |         rbx = rsp + 8;
    0x0041ec11 mov rdi, rbx                                                                                                                                                                      |         
    0x0041ec14 call 0x40edc0                                                                                                                                                                     |         BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x0041ec19 mov dword [rsp + 0xf0], 2                                                                                                                                                         |         *((rsp + 0xf0)) = 2;
    0x0041ec24 mov qword [rsp + 0xf8], r14                                                                                                                                                       |         *((rsp + 0xf8)) = r14;
    0x0041ec2c mov esi, 0x49a6e9                                                                                                                                                                 |         
    0x0041ec31 mov edx, 0x1b                                                                                                                                                                     |         
    0x0041ec36 mov rdi, rbx                                                                                                                                                                      |         
    0x0041ec39 call 0x40daf0                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Unable to make selection: \", 0x1b);
    0x0041ec3e mov rbx, rax                                                                                                                                                                      |         rbx = rax;
    0x0041ec41 mov rdi, r15                                                                                                                                                                      |         
    0x0041ec44 call 0x404740                                                                                                                                                                     |         rax = strlen (r15);
    0x0041ec49 mov rdi, rbx                                                                                                                                                                      |         
    0x0041ec4c mov rsi, r15                                                                                                                                                                      |         
    0x0041ec4f mov rdx, rax                                                                                                                                                                      |         
    0x0041ec52 call 0x40daf0                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, r15, rax);
    0x0041ec57 mov esi, 0x49a5ef                                                                                                                                                                 |         
    0x0041ec5c mov edx, 2                                                                                                                                                                        |         
    0x0041ec61 mov rdi, rax                                                                                                                                                                      |         
    0x0041ec64 call 0x40daf0                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x49a5ef, 2);
    0x0041ec69 mov rdi, rax                                                                                                                                                                      |         rdi = rax;
    0x0041ec6c call 0x4049b0                                                                                                                                                                     |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0041ec71 mov rdi, qword [rsp + 0xf8]                                                                                                                                                       |         
    0x0041ec79 mov esi, dword [rsp + 0xf0]                                                                                                                                                       |         
    0x0041ec80 mov rdx, qword [rsp + 0x38]                                                                                                                                                       |         
    0x0041ec85 mov eax, dword [rsp + 0x40]                                                                                                                                                       |         eax = *((rsp + 0x40));
    0x0041ec89 sub eax, edx                                                                                                                                                                      |         eax -= edx;
    0x0041ec8b movsxd rcx, eax                                                                                                                                                                   |         rcx = (int64_t) eax;
    0x0041ec8e call 0x421940                                                                                                                                                                     |         BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x0041ec93 jmp 0x41eb70                                                                                                                                                                      |         goto label_0;
                                                                                                                                                                                                 | label_5:
    0x0041ec98 inc dword [r14 + 0x410]                                                                                                                                                           |         *((r14 + 0x410))++;
    0x0041ec9f mov byte [rbx + 0x18], 1                                                                                                                                                          |         *((rbx + 0x18)) = 1;
    0x0041eca3 lea rdi, [rbx + 0x20]                                                                                                                                                             |         
    0x0041eca7 movsxd rdx, r12d                                                                                                                                                                  |         rdx = (int64_t) r12d;
    0x0041ecaa mov rbp, qword [rbx + 0x38]                                                                                                                                                       |         rbp = *((rbx + 0x38));
    0x0041ecae mov qword [rbx + 0x38], 0                                                                                                                                                         |         *((rbx + 0x38)) = 0;
    0x0041ecb6 mov ecx, 0x49a26b                                                                                                                                                                 |         
    0x0041ecbb mov rsi, r15                                                                                                                                                                      |         
    0x0041ecbe call 0x476b20                                                                                                                                                                     |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, rdx, "string<...>::assign(char*...): string too long");
    0x0041ecc3 lea rbx, [rsp + 8]                                                                                                                                                                |         rbx = rsp + 8;
    0x0041ecc8 mov rdi, rbx                                                                                                                                                                      |         rdi = rbx;
    0x0041eccb call 0x421d50                                                                                                                                                                     |         BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x0041ecd0 mov rdi, rbx                                                                                                                                                                      |         
    0x0041ecd3 mov rsi, r14                                                                                                                                                                      |         
    0x0041ecd6 call 0x420870                                                                                                                                                                     |         eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rbx, r14);
    0x0041ecdb mov ebx, eax                                                                                                                                                                      |         ebx = eax;
    0x0041ecdd lea rdi, [rsp + 8]                                                                                                                                                                |         rdi = rsp + 8;
    0x0041ece2 call 0x422180                                                                                                                                                                     |         BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
    0x0041ece7 jmp 0x41ed13                                                                                                                                                                      |         goto label_4;
                                                                                                                                                                                                 | label_7:
    0x0041ece9 mov rsi, qword [rsi]                                                                                                                                                              |         
    0x0041ecec mov edx, dword [rip + 0x82e5e]                                                                                                                                                    |         
    0x0041ecf2 lea rdi, [rsp + 8]                                                                                                                                                                |         
    0x0041ecf7 call 0x41c7d0                                                                                                                                                                     |         intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaChoiceElement>(BloombergLP::s_baltst::BasicSchemaChoiceElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, *(rsi), *(0x004a1b50));
    0x0041ecfc jmp 0x41ed11                                                                                                                                                                      |         goto label_9;
                                                                                                                                                                                                 | label_8:
    0x0041ecfe mov rsi, qword [rsi]                                                                                                                                                              |         
    0x0041ed01 mov edx, dword [rip + 0x82e21]                                                                                                                                                    |         
    0x0041ed07 lea rdi, [rsp + 8]                                                                                                                                                                |         
    0x0041ed0c call 0x417f00                                                                                                                                                                     |         eax = intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaSequenceElement>(BloombergLP::s_baltst::BasicSchemaSequenceElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, *(rsi), *(0x004a1b28));
                                                                                                                                                                                                 | label_9:
    0x0041ed11 mov ebx, eax                                                                                                                                                                      |         ebx = eax;
                                                                                                                                                                                                 | label_4:
    0x0041ed13 mov eax, ebx                                                                                                                                                                      |         
    0x0041ed15 add rsp, 0x100                                                                                                                                                                    |         
    0x0041ed1c pop rbx                                                                                                                                                                           |         
    0x0041ed1d pop r12                                                                                                                                                                           |         
    0x0041ed1f pop r14                                                                                                                                                                           |         
    0x0041ed21 pop r15                                                                                                                                                                           |         
    0x0041ed23 pop rbp                                                                                                                                                                           |         
    0x0041ed24 ret                                                                                                                                                                               |         return rax;
                                                                                                                                                                                                 |     }
    0x0041ed25 mov byte [rbx + 0x18], 1                                                                                                                                                          |     *((rbx + 0x18)) = 1;
    0x0041ed29 lea rdi, [rbx + 0x20]                                                                                                                                                             |     
    0x0041ed2d movsxd r12, r12d                                                                                                                                                                  |     r12 = (int64_t) r12d;
    0x0041ed30 mov rbp, qword [rbx + 0x38]                                                                                                                                                       |     rbp = *((rbx + 0x38));
    0x0041ed34 mov qword [rbx + 0x38], 0                                                                                                                                                         |     *((rbx + 0x38)) = 0;
    0x0041ed3c mov ecx, 0x49a26b                                                                                                                                                                 |     
    0x0041ed41 mov rsi, r15                                                                                                                                                                      |     
    0x0041ed44 mov rdx, r12                                                                                                                                                                      |     
    0x0041ed47 call 0x476b20                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, r12, "string<...>::assign(char*...): string too long");
    0x0041ed4c jmp 0x41ebad                                                                                                                                                                      |     goto label_1;
                                                                                                                                                                                                 | }
