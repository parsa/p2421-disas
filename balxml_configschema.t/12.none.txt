    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* balxml_configschema.t/none @ 0x4160e0 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice_.parseSubElement_char_const__BloombergLP::balxml::Decoder_ ()        | uint64_t method_BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice_parseSubElement_char_const_BloombergLP::balxml::Decoder_ (int64_t arg3, char * s, int64_t arg1) {
                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                             |     int64_t var_38h;
                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                             |     int64_t var_f0h;
                                                                                                                                                                                             |     int64_t var_f8h;
                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                             |     rsi = s;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* BloombergLP::balxml::Decoder_ChoiceContext<BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice>::parseSubElement(char const*, BloombergLP::balxml::Decoder*) */
    0x004160e0 push rbp                                                                                                                                                                      |     
    0x004160e1 push r15                                                                                                                                                                      |     
    0x004160e3 push r14                                                                                                                                                                      |     
    0x004160e5 push r12                                                                                                                                                                      |     
    0x004160e7 push rbx                                                                                                                                                                      |     
    0x004160e8 sub rsp, 0x100                                                                                                                                                                |     
    0x004160ef mov r14, rdx                                                                                                                                                                  |     r14 = rdx;
    0x004160f2 mov r15, rsi                                                                                                                                                                  |     r15 = rsi;
    0x004160f5 mov rbx, rdi                                                                                                                                                                  |     rbx = rdi;
    0x004160f8 mov rdi, rsi                                                                                                                                                                  |     
    0x004160fb call 0x404780                                                                                                                                                                 |     rax = strlen (rsi);
    0x00416100 mov r12, rax                                                                                                                                                                  |     r12 = rax;
    0x00416103 mov bpl, byte [rbx + 8]                                                                                                                                                       |     bpl = *((rbx + 8));
    0x00416107 test bpl, bpl                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (bpl == 0) {
    0x0041610a je 0x4161c4                                                                                                                                                                   |         goto label_1;
                                                                                                                                                                                             |     }
    0x00416110 cmp byte [rbx + 0x18], 0                                                                                                                                                      |     
                                                                                                                                                                                             |     if (*((rbx + 0x18)) != 0) {
    0x00416114 je 0x41614d                                                                                                                                                                   |         
    0x00416116 mov rdi, r15                                                                                                                                                                  |         
    0x00416119 call 0x404780                                                                                                                                                                 |         rax = strlen (r15);
    0x0041611e cmp qword [rbx + 0x38], rax                                                                                                                                                   |         
                                                                                                                                                                                             |         if (*((rbx + 0x38)) != rax) {
    0x00416122 jne 0x41614d                                                                                                                                                                  |             goto label_2;
                                                                                                                                                                                             |         }
    0x00416124 test rax, rax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (rax == 0) {
    0x00416127 je 0x4161c4                                                                                                                                                                   |             goto label_1;
                                                                                                                                                                                             |         }
    0x0041612d cmp qword [rbx + 0x40], 0x17                                                                                                                                                  |         
                                                                                                                                                                                             |         if (*((rbx + 0x40)) != 0x17) {
    0x00416132 je 0x41613a                                                                                                                                                                   |             
    0x00416134 mov rdi, qword [rbx + 0x20]                                                                                                                                                   |             rdi = *((rbx + 0x20));
    0x00416138 jmp 0x41613e                                                                                                                                                                  |             
                                                                                                                                                                                             |         } else {
    0x0041613a lea rdi, [rbx + 0x20]                                                                                                                                                         |             rdi = rbx + 0x20;
                                                                                                                                                                                             |         }
    0x0041613e mov rsi, r15                                                                                                                                                                  |         rsi = r15;
    0x00416141 mov rdx, rax                                                                                                                                                                  |         rdx = rax;
    0x00416144 call 0x4048a0                                                                                                                                                                 |         eax = bcmp ();
    0x00416149 test eax, eax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (eax == 0) {
    0x0041614b je 0x4161c4                                                                                                                                                                   |             goto label_1;
                                                                                                                                                                                             |         }
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_2:
    0x0041614d mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |     
    0x00416154 lea rbx, [rsp + 8]                                                                                                                                                            |     rbx = rsp + 8;
    0x00416159 mov rdi, rbx                                                                                                                                                                  |     
    0x0041615c call 0x40ee30                                                                                                                                                                 |     BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x00416161 mov dword [rsp + 0xf0], 2                                                                                                                                                     |     *((rsp + 0xf0)) = 2;
    0x0041616c mov qword [rsp + 0xf8], r14                                                                                                                                                   |     *((rsp + 0xf8)) = r14;
    0x00416174 mov esi, 0x49aacb                                                                                                                                                             |     
    0x00416179 mov edx, 0x2e                                                                                                                                                                 |     
    0x0041617e mov rdi, rbx                                                                                                                                                                  |     
    0x00416181 call 0x40db40                                                                                                                                                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Only one selection is permitted inside choice.", 0x2e);
    0x00416186 mov rdi, rax                                                                                                                                                                  |     rdi = rax;
    0x00416189 call 0x4049f0                                                                                                                                                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0041618e mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |     
    0x00416196 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |     
    0x0041619d mov rdx, qword [rsp + 0x38]                                                                                                                                                   |     
    0x004161a2 mov eax, dword [rsp + 0x40]                                                                                                                                                   |     eax = *((rsp + 0x40));
    0x004161a6 sub eax, edx                                                                                                                                                                  |     eax -= edx;
    0x004161a8 movsxd rcx, eax                                                                                                                                                               |     rcx = (int64_t) eax;
    0x004161ab call 0x421a30                                                                                                                                                                 |     BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
                                                                                                                                                                                             |     do {
    0x004161b0 lea rdi, [rsp + 8]                                                                                                                                                            |         
    0x004161b5 call 0x420ff0                                                                                                                                                                 |         BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
    0x004161ba mov ebx, 0xffffffff                                                                                                                                                           |         ebx = 0xffffffff;
    0x004161bf jmp 0x41633b                                                                                                                                                                  |         goto label_3;
                                                                                                                                                                                             | label_1:
    0x004161c4 mov byte [rbx + 8], 1                                                                                                                                                         |         *((rbx + 8)) = 1;
    0x004161c8 mov rax, qword [r14]                                                                                                                                                          |         rax = *(r14);
    0x004161cb cmp byte [rax + 8], 0                                                                                                                                                         |         
                                                                                                                                                                                             |         if (*((rax + 8)) != 0) {
    0x004161cf je 0x4161e5                                                                                                                                                                   |             
    0x004161d1 mov rdi, r15                                                                                                                                                                  |             
    0x004161d4 mov esi, r12d                                                                                                                                                                 |             
    0x004161d7 call 0x431f50                                                                                                                                                                 |             rax = BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice::lookupSelectionInfo(char const*,int) (r15, r12d);
    0x004161dc test rax, rax                                                                                                                                                                 |             
                                                                                                                                                                                             |             if (rax == 0) {
    0x004161df je 0x4162d8                                                                                                                                                                   |                 goto label_4;
                                                                                                                                                                                             |             }
                                                                                                                                                                                             |         }
    0x004161e5 test bpl, bpl                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (bpl != 0) {
    0x004161e8 je 0x41622e                                                                                                                                                                   |             
    0x004161ea movsxd r12, r12d                                                                                                                                                              |             r12 = (int64_t) r12d;
                                                                                                                                                                                             | label_0:
    0x004161ed mov qword [rsp + 8], r14                                                                                                                                                      |             *((rsp + 8)) = r14;
    0x004161f2 mov qword [rsp + 0x10], r15                                                                                                                                                   |             *((rsp + 0x10)) = r15;
    0x004161f7 mov qword [rsp + 0x18], r12                                                                                                                                                   |             *((rsp + 0x18)) = r12;
    0x004161fc mov rsi, qword [rbx + 0x10]                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00416200 mov eax, dword [rsi + 0x60]                                                                                                                                                   |             eax = *((rsi + 0x60));
    0x00416203 cmp eax, 1                                                                                                                                                                    |             
                                                                                                                                                                                             |             if (eax == 1) {
    0x00416206 je 0x416329                                                                                                                                                                   |                 goto label_5;
                                                                                                                                                                                             |             }
    0x0041620c mov ebx, 0xffffffff                                                                                                                                                           |             ebx = 0xffffffff;
    0x00416211 test eax, eax                                                                                                                                                                 |             
                                                                                                                                                                                             |             if (eax != 0) {
    0x00416213 jne 0x41633b                                                                                                                                                                  |                 goto label_3;
                                                                                                                                                                                             |             }
    0x00416219 mov edx, dword [rip + 0x8ba01]                                                                                                                                                |             
    0x0041621f lea rdi, [rsp + 8]                                                                                                                                                            |             
    0x00416224 call 0x410db0                                                                                                                                                                 |             intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaAnnotationElement>(BloombergLP::s_baltst::BasicSchemaAnnotationElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a1c20));
    0x00416229 jmp 0x416339                                                                                                                                                                  |             goto label_6;
                                                                                                                                                                                             |         }
    0x0041622e mov rdi, qword [rbx + 0x10]                                                                                                                                                   |         
    0x00416232 mov rsi, r15                                                                                                                                                                  |         
    0x00416235 mov edx, r12d                                                                                                                                                                 |         edx = r12d;
    0x00416238 call 0x4328f0                                                                                                                                                                 |         eax = BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice::makeSelection(char const*,int) (*((rbx + 0x10)), r15);
    0x0041623d test eax, eax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (eax == 0) {
    0x0041623f je 0x41634d                                                                                                                                                                   |             goto label_7;
                                                                                                                                                                                             |         }
    0x00416245 mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |         
    0x0041624c lea rbx, [rsp + 8]                                                                                                                                                            |         rbx = rsp + 8;
    0x00416251 mov rdi, rbx                                                                                                                                                                  |         
    0x00416254 call 0x40ee30                                                                                                                                                                 |         BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x00416259 mov dword [rsp + 0xf0], 2                                                                                                                                                     |         *((rsp + 0xf0)) = 2;
    0x00416264 mov qword [rsp + 0xf8], r14                                                                                                                                                   |         *((rsp + 0xf8)) = r14;
    0x0041626c mov esi, 0x49aa63                                                                                                                                                             |         
    0x00416271 mov edx, 0x1b                                                                                                                                                                 |         
    0x00416276 mov rdi, rbx                                                                                                                                                                  |         
    0x00416279 call 0x40db40                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Unable to make selection: \", 0x1b);
    0x0041627e mov rbx, rax                                                                                                                                                                  |         rbx = rax;
    0x00416281 mov rdi, r15                                                                                                                                                                  |         
    0x00416284 call 0x404780                                                                                                                                                                 |         rax = strlen (r15);
    0x00416289 mov rdi, rbx                                                                                                                                                                  |         
    0x0041628c mov rsi, r15                                                                                                                                                                  |         
    0x0041628f mov rdx, rax                                                                                                                                                                  |         
    0x00416292 call 0x40db40                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, r15, rax);
    0x00416297 mov esi, 0x49a969                                                                                                                                                             |         
    0x0041629c mov edx, 2                                                                                                                                                                    |         
    0x004162a1 mov rdi, rax                                                                                                                                                                  |         
    0x004162a4 call 0x40db40                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x49a969, 2);
    0x004162a9 mov rdi, rax                                                                                                                                                                  |         rdi = rax;
    0x004162ac call 0x4049f0                                                                                                                                                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004162b1 mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |         
    0x004162b9 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |         
    0x004162c0 mov rdx, qword [rsp + 0x38]                                                                                                                                                   |         
    0x004162c5 mov eax, dword [rsp + 0x40]                                                                                                                                                   |         eax = *((rsp + 0x40));
    0x004162c9 sub eax, edx                                                                                                                                                                  |         eax -= edx;
    0x004162cb movsxd rcx, eax                                                                                                                                                               |         rcx = (int64_t) eax;
    0x004162ce call 0x421a30                                                                                                                                                                 |         BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x004162d3 jmp 0x4161b0                                                                                                                                                                  |         
                                                                                                                                                                                             |     } while (1);
                                                                                                                                                                                             | label_4:
    0x004162d8 inc dword [r14 + 0x410]                                                                                                                                                       |     *((r14 + 0x410))++;
    0x004162df mov byte [rbx + 0x18], 1                                                                                                                                                      |     *((rbx + 0x18)) = 1;
    0x004162e3 lea rdi, [rbx + 0x20]                                                                                                                                                         |     
    0x004162e7 movsxd rdx, r12d                                                                                                                                                              |     rdx = (int64_t) r12d;
    0x004162ea mov rbp, qword [rbx + 0x38]                                                                                                                                                   |     rbp = *((rbx + 0x38));
    0x004162ee mov qword [rbx + 0x38], 0                                                                                                                                                     |     *((rbx + 0x38)) = 0;
    0x004162f6 mov ecx, 0x49a5e7                                                                                                                                                             |     
    0x004162fb mov rsi, r15                                                                                                                                                                  |     
    0x004162fe call 0x476e80                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, rdx, "string<...>::assign(char*...): string too long");
    0x00416303 lea rbx, [rsp + 8]                                                                                                                                                            |     rbx = rsp + 8;
    0x00416308 mov rdi, rbx                                                                                                                                                                  |     rdi = rbx;
    0x0041630b call 0x421e30                                                                                                                                                                 |     BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x00416310 mov rdi, rbx                                                                                                                                                                  |     
    0x00416313 mov rsi, r14                                                                                                                                                                  |     
    0x00416316 call 0x420960                                                                                                                                                                 |     eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rbx, r14);
    0x0041631b mov ebx, eax                                                                                                                                                                  |     ebx = eax;
    0x0041631d lea rdi, [rsp + 8]                                                                                                                                                            |     rdi = rsp + 8;
    0x00416322 call 0x422260                                                                                                                                                                 |     BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
    0x00416327 jmp 0x41633b                                                                                                                                                                  |     goto label_3;
                                                                                                                                                                                             | label_5:
    0x00416329 mov edx, dword [rip + 0x8b919]                                                                                                                                                |     
    0x0041632f lea rdi, [rsp + 8]                                                                                                                                                            |     
    0x00416334 call 0x411c60                                                                                                                                                                 |     eax = intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaRestrictionElement>(BloombergLP::s_baltst::BasicSchemaRestrictionElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a1c48));
                                                                                                                                                                                             | label_6:
    0x00416339 mov ebx, eax                                                                                                                                                                  |     ebx = eax;
                                                                                                                                                                                             | label_3:
    0x0041633b mov eax, ebx                                                                                                                                                                  |     
    0x0041633d add rsp, 0x100                                                                                                                                                                |     
    0x00416344 pop rbx                                                                                                                                                                       |     
    0x00416345 pop r12                                                                                                                                                                       |     
    0x00416347 pop r14                                                                                                                                                                       |     
    0x00416349 pop r15                                                                                                                                                                       |     
    0x0041634b pop rbp                                                                                                                                                                       |     
    0x0041634c ret                                                                                                                                                                           |     return rax;
                                                                                                                                                                                             | label_7:
    0x0041634d mov byte [rbx + 0x18], 1                                                                                                                                                      |     *((rbx + 0x18)) = 1;
    0x00416351 lea rdi, [rbx + 0x20]                                                                                                                                                         |     
    0x00416355 movsxd r12, r12d                                                                                                                                                              |     r12 = (int64_t) r12d;
    0x00416358 mov rbp, qword [rbx + 0x38]                                                                                                                                                   |     rbp = *((rbx + 0x38));
    0x0041635c mov qword [rbx + 0x38], 0                                                                                                                                                     |     *((rbx + 0x38)) = 0;
    0x00416364 mov ecx, 0x49a5e7                                                                                                                                                             |     
    0x00416369 mov rsi, r15                                                                                                                                                                  |     
    0x0041636c mov rdx, r12                                                                                                                                                                  |     
    0x0041636f call 0x476e80                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, r12, "string<...>::assign(char*...): string too long");
    0x00416374 jmp 0x4161ed                                                                                                                                                                  |     goto label_0;
                                                                                                                                                                                             | }
