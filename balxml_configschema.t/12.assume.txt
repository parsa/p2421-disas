    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* balxml_configschema.t/assume @ 0x416050 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice_.parseSubElement_char_const__BloombergLP::balxml::Decoder_ ()        | uint64_t method_BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice_parseSubElement_char_const_BloombergLP::balxml::Decoder_ (int64_t arg3, char * s, int64_t arg1) {
                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                             |     int64_t var_38h;
                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                             |     int64_t var_f0h;
                                                                                                                                                                                             |     int64_t var_f8h;
                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                             |     rsi = s;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* BloombergLP::balxml::Decoder_ChoiceContext<BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice>::parseSubElement(char const*, BloombergLP::balxml::Decoder*) */
    0x00416050 push rbp                                                                                                                                                                      |     
    0x00416051 push r15                                                                                                                                                                      |     
    0x00416053 push r14                                                                                                                                                                      |     
    0x00416055 push r12                                                                                                                                                                      |     
    0x00416057 push rbx                                                                                                                                                                      |     
    0x00416058 sub rsp, 0x100                                                                                                                                                                |     
    0x0041605f mov r14, rdx                                                                                                                                                                  |     r14 = rdx;
    0x00416062 mov r15, rsi                                                                                                                                                                  |     r15 = rsi;
    0x00416065 mov rbx, rdi                                                                                                                                                                  |     rbx = rdi;
    0x00416068 mov rdi, rsi                                                                                                                                                                  |     
    0x0041606b call 0x404740                                                                                                                                                                 |     rax = strlen (rsi);
    0x00416070 mov r12, rax                                                                                                                                                                  |     r12 = rax;
    0x00416073 mov bpl, byte [rbx + 8]                                                                                                                                                       |     bpl = *((rbx + 8));
    0x00416077 test bpl, bpl                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (bpl == 0) {
    0x0041607a je 0x416134                                                                                                                                                                   |         goto label_2;
                                                                                                                                                                                             |     }
    0x00416080 cmp byte [rbx + 0x18], 0                                                                                                                                                      |     
                                                                                                                                                                                             |     if (*((rbx + 0x18)) != 0) {
    0x00416084 je 0x4160bd                                                                                                                                                                   |         
    0x00416086 mov rdi, r15                                                                                                                                                                  |         
    0x00416089 call 0x404740                                                                                                                                                                 |         rax = strlen (r15);
    0x0041608e cmp qword [rbx + 0x38], rax                                                                                                                                                   |         
                                                                                                                                                                                             |         if (*((rbx + 0x38)) != rax) {
    0x00416092 jne 0x4160bd                                                                                                                                                                  |             goto label_3;
                                                                                                                                                                                             |         }
    0x00416094 test rax, rax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (rax == 0) {
    0x00416097 je 0x416134                                                                                                                                                                   |             goto label_2;
                                                                                                                                                                                             |         }
    0x0041609d cmp qword [rbx + 0x40], 0x17                                                                                                                                                  |         
                                                                                                                                                                                             |         if (*((rbx + 0x40)) != 0x17) {
    0x004160a2 je 0x4160aa                                                                                                                                                                   |             
    0x004160a4 mov rdi, qword [rbx + 0x20]                                                                                                                                                   |             rdi = *((rbx + 0x20));
    0x004160a8 jmp 0x4160ae                                                                                                                                                                  |             
                                                                                                                                                                                             |         } else {
    0x004160aa lea rdi, [rbx + 0x20]                                                                                                                                                         |             rdi = rbx + 0x20;
                                                                                                                                                                                             |         }
    0x004160ae mov rsi, r15                                                                                                                                                                  |         rsi = r15;
    0x004160b1 mov rdx, rax                                                                                                                                                                  |         rdx = rax;
    0x004160b4 call 0x404860                                                                                                                                                                 |         eax = bcmp ();
    0x004160b9 test eax, eax                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (eax == 0) {
    0x004160bb je 0x416134                                                                                                                                                                   |             goto label_2;
                                                                                                                                                                                             |         }
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_3:
    0x004160bd mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |     
    0x004160c4 lea rbx, [rsp + 8]                                                                                                                                                            |     rbx = rsp + 8;
    0x004160c9 mov rdi, rbx                                                                                                                                                                  |     
    0x004160cc call 0x40edc0                                                                                                                                                                 |     BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x004160d1 mov dword [rsp + 0xf0], 2                                                                                                                                                     |     *((rsp + 0xf0)) = 2;
    0x004160dc mov qword [rsp + 0xf8], r14                                                                                                                                                   |     *((rsp + 0xf8)) = r14;
    0x004160e4 mov esi, 0x49a751                                                                                                                                                             |     
    0x004160e9 mov edx, 0x2e                                                                                                                                                                 |     
    0x004160ee mov rdi, rbx                                                                                                                                                                  |     
    0x004160f1 call 0x40daf0                                                                                                                                                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Only one selection is permitted inside choice.", 0x2e);
    0x004160f6 mov rdi, rax                                                                                                                                                                  |     rdi = rax;
    0x004160f9 call 0x4049b0                                                                                                                                                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004160fe mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |     
    0x00416106 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |     
    0x0041610d mov rdx, qword [rsp + 0x38]                                                                                                                                                   |     
    0x00416112 mov eax, dword [rsp + 0x40]                                                                                                                                                   |     eax = *((rsp + 0x40));
    0x00416116 sub eax, edx                                                                                                                                                                  |     eax -= edx;
    0x00416118 movsxd rcx, eax                                                                                                                                                               |     rcx = (int64_t) eax;
    0x0041611b call 0x421940                                                                                                                                                                 |     BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
                                                                                                                                                                                             | label_0:
    0x00416120 lea rdi, [rsp + 8]                                                                                                                                                            |     
    0x00416125 call 0x420f00                                                                                                                                                                 |     BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
                                                                                                                                                                                             |     do {
    0x0041612a mov ebx, 0xffffffff                                                                                                                                                           |         ebx = 0xffffffff;
    0x0041612f jmp 0x4162a2                                                                                                                                                                  |         goto label_4;
                                                                                                                                                                                             | label_2:
    0x00416134 mov byte [rbx + 8], 1                                                                                                                                                         |         *((rbx + 8)) = 1;
    0x00416138 mov rax, qword [r14]                                                                                                                                                          |         rax = *(r14);
    0x0041613b cmp byte [rax + 8], 0                                                                                                                                                         |         
                                                                                                                                                                                             |         if (*((rax + 8)) != 0) {
    0x0041613f je 0x416155                                                                                                                                                                   |             
    0x00416141 mov rdi, r15                                                                                                                                                                  |             
    0x00416144 mov esi, r12d                                                                                                                                                                 |             
    0x00416147 call 0x431e70                                                                                                                                                                 |             rax = BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice::lookupSelectionInfo(char const*,int) (r15, r12d);
    0x0041614c test rax, rax                                                                                                                                                                 |             
                                                                                                                                                                                             |             if (rax == 0) {
    0x0041614f je 0x41623f                                                                                                                                                                   |                 goto label_5;
                                                                                                                                                                                             |             }
                                                                                                                                                                                             |         }
    0x00416155 test bpl, bpl                                                                                                                                                                 |         
                                                                                                                                                                                             |         if (bpl == 0) {
    0x00416158 je 0x416195                                                                                                                                                                   |             goto label_6;
                                                                                                                                                                                             |         }
    0x0041615a movsxd r12, r12d                                                                                                                                                              |         r12 = (int64_t) r12d;
                                                                                                                                                                                             | label_1:
    0x0041615d mov qword [rsp + 8], r14                                                                                                                                                      |         *((rsp + 8)) = r14;
    0x00416162 mov qword [rsp + 0x10], r15                                                                                                                                                   |         *((rsp + 0x10)) = r15;
    0x00416167 mov qword [rsp + 0x18], r12                                                                                                                                                   |         *((rsp + 0x18)) = r12;
    0x0041616c mov rsi, qword [rbx + 0x10]                                                                                                                                                   |         rsi = *((rbx + 0x10));
    0x00416170 mov eax, dword [rsi + 0x60]                                                                                                                                                   |         eax = *((rsi + 0x60));
    0x00416173 cmp eax, 1                                                                                                                                                                    |         
                                                                                                                                                                                             |         if (eax == 1) {
    0x00416176 je 0x416290                                                                                                                                                                   |             goto label_7;
                                                                                                                                                                                             |         }
    0x0041617c test eax, eax                                                                                                                                                                 |         
    0x0041617e jne 0x41612a                                                                                                                                                                  |         
                                                                                                                                                                                             |     } while (eax != 0);
    0x00416180 mov edx, dword [rip + 0x8b72a]                                                                                                                                                |     
    0x00416186 lea rdi, [rsp + 8]                                                                                                                                                            |     
    0x0041618b call 0x410d30                                                                                                                                                                 |     intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaAnnotationElement>(BloombergLP::s_baltst::BasicSchemaAnnotationElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a18b0));
    0x00416190 jmp 0x4162a0                                                                                                                                                                  |     goto label_8;
                                                                                                                                                                                             | label_6:
    0x00416195 mov rdi, qword [rbx + 0x10]                                                                                                                                                   |     
    0x00416199 mov rsi, r15                                                                                                                                                                  |     
    0x0041619c mov edx, r12d                                                                                                                                                                 |     edx = r12d;
    0x0041619f call 0x432810                                                                                                                                                                 |     eax = BloombergLP::s_baltst::BasicSchemaSimpleTypeElementChoice::makeSelection(char const*,int) (*((rbx + 0x10)), r15);
    0x004161a4 test eax, eax                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (eax != 0) {
    0x004161a6 je 0x4162b4                                                                                                                                                                   |         
    0x004161ac mov rsi, qword [r14 + 0x2d0]                                                                                                                                                  |         
    0x004161b3 lea rbx, [rsp + 8]                                                                                                                                                            |         rbx = rsp + 8;
    0x004161b8 mov rdi, rbx                                                                                                                                                                  |         
    0x004161bb call 0x40edc0                                                                                                                                                                 |         BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (rbx, *((r14 + 0x2d0)));
    0x004161c0 mov dword [rsp + 0xf0], 2                                                                                                                                                     |         *((rsp + 0xf0)) = 2;
    0x004161cb mov qword [rsp + 0xf8], r14                                                                                                                                                   |         *((rsp + 0xf8)) = r14;
    0x004161d3 mov esi, 0x49a6e9                                                                                                                                                             |         
    0x004161d8 mov edx, 0x1b                                                                                                                                                                 |         
    0x004161dd mov rdi, rbx                                                                                                                                                                  |         
    0x004161e0 call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, "Unable to make selection: \", 0x1b);
    0x004161e5 mov rbx, rax                                                                                                                                                                  |         rbx = rax;
    0x004161e8 mov rdi, r15                                                                                                                                                                  |         
    0x004161eb call 0x404740                                                                                                                                                                 |         rax = strlen (r15);
    0x004161f0 mov rdi, rbx                                                                                                                                                                  |         
    0x004161f3 mov rsi, r15                                                                                                                                                                  |         
    0x004161f6 mov rdx, rax                                                                                                                                                                  |         
    0x004161f9 call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, r15, rax);
    0x004161fe mov esi, 0x49a5ef                                                                                                                                                             |         
    0x00416203 mov edx, 2                                                                                                                                                                    |         
    0x00416208 mov rdi, rax                                                                                                                                                                  |         
    0x0041620b call 0x40daf0                                                                                                                                                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x49a5ef, 2);
    0x00416210 mov rdi, rax                                                                                                                                                                  |         rdi = rax;
    0x00416213 call 0x4049b0                                                                                                                                                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00416218 mov rdi, qword [rsp + 0xf8]                                                                                                                                                   |         
    0x00416220 mov esi, dword [rsp + 0xf0]                                                                                                                                                   |         
    0x00416227 mov rdx, qword [rsp + 0x38]                                                                                                                                                   |         
    0x0041622c mov eax, dword [rsp + 0x40]                                                                                                                                                   |         eax = *((rsp + 0x40));
    0x00416230 sub eax, edx                                                                                                                                                                  |         eax -= edx;
    0x00416232 movsxd rcx, eax                                                                                                                                                               |         rcx = (int64_t) eax;
    0x00416235 call 0x421940                                                                                                                                                                 |         BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x0041623a jmp 0x416120                                                                                                                                                                  |         goto label_0;
                                                                                                                                                                                             | label_5:
    0x0041623f inc dword [r14 + 0x410]                                                                                                                                                       |         *((r14 + 0x410))++;
    0x00416246 mov byte [rbx + 0x18], 1                                                                                                                                                      |         *((rbx + 0x18)) = 1;
    0x0041624a lea rdi, [rbx + 0x20]                                                                                                                                                         |         
    0x0041624e movsxd rdx, r12d                                                                                                                                                              |         rdx = (int64_t) r12d;
    0x00416251 mov rbp, qword [rbx + 0x38]                                                                                                                                                   |         rbp = *((rbx + 0x38));
    0x00416255 mov qword [rbx + 0x38], 0                                                                                                                                                     |         *((rbx + 0x38)) = 0;
    0x0041625d mov ecx, 0x49a26b                                                                                                                                                             |         
    0x00416262 mov rsi, r15                                                                                                                                                                  |         
    0x00416265 call 0x476b20                                                                                                                                                                 |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, rdx, "string<...>::assign(char*...): string too long");
    0x0041626a lea rbx, [rsp + 8]                                                                                                                                                            |         rbx = rsp + 8;
    0x0041626f mov rdi, rbx                                                                                                                                                                  |         rdi = rbx;
    0x00416272 call 0x421d50                                                                                                                                                                 |         BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x00416277 mov rdi, rbx                                                                                                                                                                  |         
    0x0041627a mov rsi, r14                                                                                                                                                                  |         
    0x0041627d call 0x420870                                                                                                                                                                 |         eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rbx, r14);
    0x00416282 mov ebx, eax                                                                                                                                                                  |         ebx = eax;
    0x00416284 lea rdi, [rsp + 8]                                                                                                                                                            |         rdi = rsp + 8;
    0x00416289 call 0x422180                                                                                                                                                                 |         BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
    0x0041628e jmp 0x4162a2                                                                                                                                                                  |         goto label_4;
                                                                                                                                                                                             | label_7:
    0x00416290 mov edx, dword [rip + 0x8b642]                                                                                                                                                |         
    0x00416296 lea rdi, [rsp + 8]                                                                                                                                                            |         
    0x0041629b call 0x411be0                                                                                                                                                                 |         eax = intBloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::BasicSchemaRestrictionElement>(BloombergLP::s_baltst::BasicSchemaRestrictionElement*,int,BloombergLP::bdlat_TypeCategory::Sequence) (rsp + 8, rsi, *(0x004a18d8));
                                                                                                                                                                                             | label_8:
    0x004162a0 mov ebx, eax                                                                                                                                                                  |         ebx = eax;
                                                                                                                                                                                             | label_4:
    0x004162a2 mov eax, ebx                                                                                                                                                                  |         
    0x004162a4 add rsp, 0x100                                                                                                                                                                |         
    0x004162ab pop rbx                                                                                                                                                                       |         
    0x004162ac pop r12                                                                                                                                                                       |         
    0x004162ae pop r14                                                                                                                                                                       |         
    0x004162b0 pop r15                                                                                                                                                                       |         
    0x004162b2 pop rbp                                                                                                                                                                       |         
    0x004162b3 ret                                                                                                                                                                           |         return rax;
                                                                                                                                                                                             |     }
    0x004162b4 mov byte [rbx + 0x18], 1                                                                                                                                                      |     *((rbx + 0x18)) = 1;
    0x004162b8 lea rdi, [rbx + 0x20]                                                                                                                                                         |     
    0x004162bc movsxd r12, r12d                                                                                                                                                              |     r12 = (int64_t) r12d;
    0x004162bf mov rbp, qword [rbx + 0x38]                                                                                                                                                   |     rbp = *((rbx + 0x38));
    0x004162c3 mov qword [rbx + 0x38], 0                                                                                                                                                     |     *((rbx + 0x38)) = 0;
    0x004162cb mov ecx, 0x49a26b                                                                                                                                                             |     
    0x004162d0 mov rsi, r15                                                                                                                                                                  |     
    0x004162d3 mov rdx, r12                                                                                                                                                                  |     
    0x004162d6 call 0x476b20                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r15, r12, "string<...>::assign(char*...): string too long");
    0x004162db jmp 0x41615d                                                                                                                                                                  |     goto label_1;
                                                                                                                                                                                             | }
