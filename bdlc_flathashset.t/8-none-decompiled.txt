    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* bdlc_flathashset.t/none @ 0x44ebe0 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
                                                                                                                                                                                                         | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                         |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                         |     count &= mask;
                                                                                                                                                                                                         |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                         | }
                                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__int__BloombergLP::bdlc::FlatHashSet_EntryUtil_int___SeedIsHash_int___bsl::equal_to_int___.indexOfKey_bool__int_const__unsigned_long_ ()         | int64_t method_BloombergLP::bdlc::FlatHashTable_int_int_BloombergLP::bdlc::FlatHashSet_EntryUtil_int_SeedIsHash_int_bsl::equal_to_int_indexOfKey_bool_int_const_unsigned_long_ (size_t arg4, size_t arg3, size_t arg2, size_t arg1, uint32_t arg9, int64_t arg10) {
                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     xmm2 = arg9;
                                                                                                                                                                                                         |     xmm3 = arg10;
                                                                                                                                                                                                         |     /* BloombergLP::bdlc::FlatHashTable<int, int, BloombergLP::bdlc::FlatHashSet_EntryUtil<int>, SeedIsHash<int>, bsl::equal_to<int> >::indexOfKey(bool*, int const&, unsigned long) */
    0x0044ebe0 push rbp                                                                                                                                                                                  |     
    0x0044ebe1 push r15                                                                                                                                                                                  |     
    0x0044ebe3 push r14                                                                                                                                                                                  |     
    0x0044ebe5 push r12                                                                                                                                                                                  |     
    0x0044ebe7 push rbx                                                                                                                                                                                  |     
    0x0044ebe8 mov rbx, rcx                                                                                                                                                                              |     rbx = rcx;
    0x0044ebeb mov r14, rdi                                                                                                                                                                              |     r14 = rdi;
    0x0044ebee mov rdi, qword [rdi + 0x18]                                                                                                                                                               |     rdi = *((rdi + 0x18));
    0x0044ebf2 test rdi, rdi                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdi == 0) {
    0x0044ebf5 je 0x44ed10                                                                                                                                                                               |         goto label_2;
                                                                                                                                                                                                         |     }
    0x0044ebfb mov r10d, ebx                                                                                                                                                                             |     r10d = ebx;
    0x0044ebfe mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044ec02 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
    0x0044ec05 shr rax, cl                                                                                                                                                                               |     rax >>= cl;
    0x0044ec08 and r10b, 0x7f                                                                                                                                                                            |     r10b &= 0x7f;
    0x0044ec0c shl rax, 4                                                                                                                                                                                |     rax <<= 4;
    0x0044ec10 mov r8, qword [r14]                                                                                                                                                                       |     r8 = *(r14);
    0x0044ec13 mov r9, qword [r14 + 8]                                                                                                                                                                   |     r9 = *((r14 + 8));
    0x0044ec17 movzx ecx, r10b                                                                                                                                                                           |     ecx = (int32_t) r10b;
    0x0044ec1b movd xmm0, ecx                                                                                                                                                                            |     xmm0 = ecx;
    0x0044ec1f pxor xmm1, xmm1                                                                                                                                                                           |     xmm1 = 0;
    0x0044ec23 pshufb xmm0, xmm1                                                                                                                                                                         |     __asm ("pshufb xmm0, xmm1");
    0x0044ec28 mov r15d, dword [rdx]                                                                                                                                                                     |     r15d = *(rdx);
    0x0044ec2b lea r10, [rdi - 1]                                                                                                                                                                        |     r10 = rdi - 1;
    0x0044ec2f xor r11d, r11d                                                                                                                                                                            |     r11d = 0;
    0x0044ec32 movdqa xmm1, xmmword [rip + 0x30756]                                                                                                                                                      |     __asm ("movdqa xmm1, xmmword [0x0047f390]");
                                                                                                                                                                                                         | label_0:
    0x0044ec3a movdqu xmm2, xmmword [r9 + rax]                                                                                                                                                           |     __asm ("movdqu xmm2, xmmword [r9 + rax]");
    0x0044ec40 movdqa xmm3, xmm0                                                                                                                                                                         |     __asm ("movdqa xmm3, xmm0");
    0x0044ec44 pcmpeqb xmm3, xmm2                                                                                                                                                                        |     __asm ("pcmpeqb xmm3, xmm2");
    0x0044ec48 pmovmskb ecx, xmm3                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm3");
    0x0044ec4c test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx == 0) {
    0x0044ec4f je 0x44ec70                                                                                                                                                                               |         goto label_3;
                                                                                                                                                                                                         |     }
    0x0044ec51 lea rdx, [r8 + rax*4]                                                                                                                                                                     |     rdx = r8 + rax*4;
    0x0044ec55 movzx ebp, cx                                                                                                                                                                             |     ebp = (int32_t) cx;
                                                                                                                                                                                                         |     do {
    0x0044ec58 bsf ecx, ebp                                                                                                                                                                              |         __asm ("bsf ecx, ebp");
    0x0044ec5b cmp dword [rdx + rcx*4], r15d                                                                                                                                                             |         
                                                                                                                                                                                                         |         if (*((rdx + rcx*4)) == r15d) {
    0x0044ec5f je 0x44ec8f                                                                                                                                                                               |             goto label_4;
                                                                                                                                                                                                         |         }
    0x0044ec61 mov r12d, 0xfffffffe                                                                                                                                                                      |         r12d = 0xfffffffe;
    0x0044ec67 rol r12d, cl                                                                                                                                                                              |         r12d = rotate_left32 (r12d, cl);
    0x0044ec6a and ebp, r12d                                                                                                                                                                             |         ebp &= r12d;
    0x0044ec6d jne 0x44ec58                                                                                                                                                                              |         
                                                                                                                                                                                                         |     } while (ebp != 0);
    0x0044ec6f nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         | label_3:
    0x0044ec70 pcmpeqb xmm2, xmm1                                                                                                                                                                        |     __asm ("pcmpeqb xmm2, xmm1");
    0x0044ec74 pmovmskb ecx, xmm2                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm2");
    0x0044ec78 test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx != 0) {
    0x0044ec7b jne 0x44ec99                                                                                                                                                                              |         goto label_1;
                                                                                                                                                                                                         |     }
    0x0044ec7d add rax, 0x10                                                                                                                                                                             |     rax += 0x10;
    0x0044ec81 and rax, r10                                                                                                                                                                              |     rax &= r10;
    0x0044ec84 add r11, 0x10                                                                                                                                                                             |     r11 += 0x10;
    0x0044ec88 cmp r11, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (r11 < rdi) {
    0x0044ec8b jb 0x44ec3a                                                                                                                                                                               |         goto label_0;
                                                                                                                                                                                                         |     }
    0x0044ec8d jmp 0x44ec99                                                                                                                                                                              |     goto label_1;
                                                                                                                                                                                                         | label_4:
    0x0044ec8f mov ecx, ecx                                                                                                                                                                              |     
    0x0044ec91 add rax, rcx                                                                                                                                                                              |     rax += rcx;
    0x0044ec94 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax != rdi) {
    0x0044ec97 jne 0x44ed17                                                                                                                                                                              |         goto label_5;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_1:
    0x0044ec99 mov byte [rsi], 1                                                                                                                                                                         |     *(rsi) = 1;
    0x0044ec9c mov rax, qword [r14 + 0x18]                                                                                                                                                               |     rax = *((r14 + 0x18));
    0x0044eca0 mov rcx, rax                                                                                                                                                                              |     rcx = *((r14 + 0x18));
    0x0044eca3 shr rcx, 3                                                                                                                                                                                |     rcx >>= 3;
    0x0044eca7 lea rdx, [rcx*8]                                                                                                                                                                          |     rdx = rcx*8;
    0x0044ecaf sub rdx, rcx                                                                                                                                                                              |     rdx -= rcx;
    0x0044ecb2 cmp qword [r14 + 0x10], rdx                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (*((r14 + 0x10)) >= rdx) {
    0x0044ecb6 jb 0x44ecd4                                                                                                                                                                               |         
    0x0044ecb8 lea rcx, [rax + rax]                                                                                                                                                                      |         rcx = rax + rax;
    0x0044ecbc test rax, rax                                                                                                                                                                             |         
    0x0044ecbf mov esi, 0x20                                                                                                                                                                             |         esi = 0x20;
                                                                                                                                                                                                         |         if (rax != 0) {
    0x0044ecc4 cmovne rsi, rcx                                                                                                                                                                           |             rsi = rcx;
                                                                                                                                                                                                         |         }
    0x0044ecc8 mov rdi, r14                                                                                                                                                                              |         
    0x0044eccb call 0x44ed40                                                                                                                                                                             |         BloombergLP::bdlc::FlatHashTable<int,int,BloombergLP::bdlc::FlatHashSet_EntryUtil<int>,SeedIsHash<int>,bsl::equal_to<int>>::rehashRaw(unsigned long) (r14, rsi);
    0x0044ecd0 mov rax, qword [r14 + 0x18]                                                                                                                                                               |         rax = *((r14 + 0x18));
                                                                                                                                                                                                         |     }
    0x0044ecd4 test rax, rax                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rax == 0) {
    0x0044ecd7 je 0x44ed1c                                                                                                                                                                               |         goto label_6;
                                                                                                                                                                                                         |     }
    0x0044ecd9 mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044ecdd shr rbx, cl                                                                                                                                                                               |     rbx >>= cl;
    0x0044ece0 mov rcx, qword [r14 + 8]                                                                                                                                                                  |     rcx = *((r14 + 8));
    0x0044ece4 shl rbx, 4                                                                                                                                                                                |     rbx <<= 4;
    0x0044ece8 lea rdx, [rax - 1]                                                                                                                                                                        |     rdx = rax - 1;
    0x0044ecec xor esi, esi                                                                                                                                                                              |     esi = 0;
    0x0044ecee nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         |     do {
    0x0044ecf0 movdqu xmm0, xmmword [rcx + rbx]                                                                                                                                                          |         __asm ("movdqu xmm0, xmmword [rcx + rbx]");
    0x0044ecf5 pmovmskb edi, xmm0                                                                                                                                                                        |         __asm ("pmovmskb edi, xmm0");
    0x0044ecf9 test di, di                                                                                                                                                                               |         
                                                                                                                                                                                                         |         if (di != 0) {
    0x0044ecfc jne 0x44ed20                                                                                                                                                                              |             goto label_7;
                                                                                                                                                                                                         |         }
    0x0044ecfe add rbx, 0x10                                                                                                                                                                             |         rbx += 0x10;
    0x0044ed02 and rbx, rdx                                                                                                                                                                              |         rbx &= rdx;
    0x0044ed05 add rsi, 0x10                                                                                                                                                                             |         rsi += 0x10;
    0x0044ed09 cmp rsi, rax                                                                                                                                                                              |         
    0x0044ed0c jb 0x44ecf0                                                                                                                                                                               |         
                                                                                                                                                                                                         |     } while (rsi < rax);
    0x0044ed0e jmp 0x44ed2c                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_2:
    0x0044ed10 xor eax, eax                                                                                                                                                                              |     eax = 0;
    0x0044ed12 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax == rdi) {
    0x0044ed15 je 0x44ec99                                                                                                                                                                               |         goto label_1;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_5:
    0x0044ed17 mov byte [rsi], 0                                                                                                                                                                         |     *(rsi) = 0;
    0x0044ed1a jmp 0x44ed2c                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_6:
    0x0044ed1c xor eax, eax                                                                                                                                                                              |     eax = 0;
    0x0044ed1e jmp 0x44ed2c                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_7:
    0x0044ed20 movzx eax, di                                                                                                                                                                             |     eax = (int32_t) di;
    0x0044ed23 bsf eax, eax                                                                                                                                                                              |     __asm ("bsf eax, eax");
    0x0044ed26 add rbx, rax                                                                                                                                                                              |     rbx += rax;
    0x0044ed29 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
                                                                                                                                                                                                         | label_8:
    0x0044ed2c pop rbx                                                                                                                                                                                   |     
    0x0044ed2d pop r12                                                                                                                                                                                   |     
    0x0044ed2f pop r14                                                                                                                                                                                   |     
    0x0044ed31 pop r15                                                                                                                                                                                   |     
    0x0044ed33 pop rbp                                                                                                                                                                                   |     
    0x0044ed34 ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
