    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* bdlc_flathashset.t/assume @ 0x44ea90 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
                                                                                                                                                                                                         | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                         |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                         |     count &= mask;
                                                                                                                                                                                                         |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                         | }
                                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__int__BloombergLP::bdlc::FlatHashSet_EntryUtil_int___SeedIsHash_int___bsl::equal_to_int___.indexOfKey_bool__int_const__unsigned_long_ ()         | int64_t method_BloombergLP::bdlc::FlatHashTable_int_int_BloombergLP::bdlc::FlatHashSet_EntryUtil_int_SeedIsHash_int_bsl::equal_to_int_indexOfKey_bool_int_const_unsigned_long_ (size_t arg4, size_t arg3, size_t arg2, size_t arg1, uint32_t arg9, int64_t arg10) {
                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     xmm2 = arg9;
                                                                                                                                                                                                         |     xmm3 = arg10;
                                                                                                                                                                                                         |     /* BloombergLP::bdlc::FlatHashTable<int, int, BloombergLP::bdlc::FlatHashSet_EntryUtil<int>, SeedIsHash<int>, bsl::equal_to<int> >::indexOfKey(bool*, int const&, unsigned long) */
    0x0044ea90 push rbp                                                                                                                                                                                  |     
    0x0044ea91 push r15                                                                                                                                                                                  |     
    0x0044ea93 push r14                                                                                                                                                                                  |     
    0x0044ea95 push r12                                                                                                                                                                                  |     
    0x0044ea97 push rbx                                                                                                                                                                                  |     
    0x0044ea98 mov rbx, rcx                                                                                                                                                                              |     rbx = rcx;
    0x0044ea9b mov r14, rdi                                                                                                                                                                              |     r14 = rdi;
    0x0044ea9e mov rdi, qword [rdi + 0x18]                                                                                                                                                               |     rdi = *((rdi + 0x18));
    0x0044eaa2 test rdi, rdi                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdi == 0) {
    0x0044eaa5 je 0x44ebc0                                                                                                                                                                               |         goto label_2;
                                                                                                                                                                                                         |     }
    0x0044eaab mov r10d, ebx                                                                                                                                                                             |     r10d = ebx;
    0x0044eaae mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044eab2 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
    0x0044eab5 shr rax, cl                                                                                                                                                                               |     rax >>= cl;
    0x0044eab8 and r10b, 0x7f                                                                                                                                                                            |     r10b &= 0x7f;
    0x0044eabc shl rax, 4                                                                                                                                                                                |     rax <<= 4;
    0x0044eac0 mov r8, qword [r14]                                                                                                                                                                       |     r8 = *(r14);
    0x0044eac3 mov r9, qword [r14 + 8]                                                                                                                                                                   |     r9 = *((r14 + 8));
    0x0044eac7 movzx ecx, r10b                                                                                                                                                                           |     ecx = (int32_t) r10b;
    0x0044eacb movd xmm0, ecx                                                                                                                                                                            |     xmm0 = ecx;
    0x0044eacf pxor xmm1, xmm1                                                                                                                                                                           |     xmm1 = 0;
    0x0044ead3 pshufb xmm0, xmm1                                                                                                                                                                         |     __asm ("pshufb xmm0, xmm1");
    0x0044ead8 mov r15d, dword [rdx]                                                                                                                                                                     |     r15d = *(rdx);
    0x0044eadb lea r10, [rdi - 1]                                                                                                                                                                        |     r10 = rdi - 1;
    0x0044eadf xor r11d, r11d                                                                                                                                                                            |     r11d = 0;
    0x0044eae2 movdqa xmm1, xmmword [rip + 0x30726]                                                                                                                                                      |     __asm ("movdqa xmm1, xmmword [0x0047f210]");
                                                                                                                                                                                                         | label_0:
    0x0044eaea movdqu xmm2, xmmword [r9 + rax]                                                                                                                                                           |     __asm ("movdqu xmm2, xmmword [r9 + rax]");
    0x0044eaf0 movdqa xmm3, xmm0                                                                                                                                                                         |     __asm ("movdqa xmm3, xmm0");
    0x0044eaf4 pcmpeqb xmm3, xmm2                                                                                                                                                                        |     __asm ("pcmpeqb xmm3, xmm2");
    0x0044eaf8 pmovmskb ecx, xmm3                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm3");
    0x0044eafc test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx == 0) {
    0x0044eaff je 0x44eb20                                                                                                                                                                               |         goto label_3;
                                                                                                                                                                                                         |     }
    0x0044eb01 lea rdx, [r8 + rax*4]                                                                                                                                                                     |     rdx = r8 + rax*4;
    0x0044eb05 movzx ebp, cx                                                                                                                                                                             |     ebp = (int32_t) cx;
                                                                                                                                                                                                         |     do {
    0x0044eb08 bsf ecx, ebp                                                                                                                                                                              |         __asm ("bsf ecx, ebp");
    0x0044eb0b cmp dword [rdx + rcx*4], r15d                                                                                                                                                             |         
                                                                                                                                                                                                         |         if (*((rdx + rcx*4)) == r15d) {
    0x0044eb0f je 0x44eb3f                                                                                                                                                                               |             goto label_4;
                                                                                                                                                                                                         |         }
    0x0044eb11 mov r12d, 0xfffffffe                                                                                                                                                                      |         r12d = 0xfffffffe;
    0x0044eb17 rol r12d, cl                                                                                                                                                                              |         r12d = rotate_left32 (r12d, cl);
    0x0044eb1a and ebp, r12d                                                                                                                                                                             |         ebp &= r12d;
    0x0044eb1d jne 0x44eb08                                                                                                                                                                              |         
                                                                                                                                                                                                         |     } while (ebp != 0);
    0x0044eb1f nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         | label_3:
    0x0044eb20 pcmpeqb xmm2, xmm1                                                                                                                                                                        |     __asm ("pcmpeqb xmm2, xmm1");
    0x0044eb24 pmovmskb ecx, xmm2                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm2");
    0x0044eb28 test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx != 0) {
    0x0044eb2b jne 0x44eb49                                                                                                                                                                              |         goto label_1;
                                                                                                                                                                                                         |     }
    0x0044eb2d add rax, 0x10                                                                                                                                                                             |     rax += 0x10;
    0x0044eb31 and rax, r10                                                                                                                                                                              |     rax &= r10;
    0x0044eb34 add r11, 0x10                                                                                                                                                                             |     r11 += 0x10;
    0x0044eb38 cmp r11, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (r11 < rdi) {
    0x0044eb3b jb 0x44eaea                                                                                                                                                                               |         goto label_0;
                                                                                                                                                                                                         |     }
    0x0044eb3d jmp 0x44eb49                                                                                                                                                                              |     goto label_1;
                                                                                                                                                                                                         | label_4:
    0x0044eb3f mov ecx, ecx                                                                                                                                                                              |     
    0x0044eb41 add rax, rcx                                                                                                                                                                              |     rax += rcx;
    0x0044eb44 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax != rdi) {
    0x0044eb47 jne 0x44ebc7                                                                                                                                                                              |         goto label_5;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_1:
    0x0044eb49 mov byte [rsi], 1                                                                                                                                                                         |     *(rsi) = 1;
    0x0044eb4c mov rdx, qword [r14 + 0x18]                                                                                                                                                               |     rdx = *((r14 + 0x18));
    0x0044eb50 mov rax, rdx                                                                                                                                                                              |     rax = *((r14 + 0x18));
    0x0044eb53 shr rax, 3                                                                                                                                                                                |     rax >>= 3;
    0x0044eb57 lea rcx, [rax*8]                                                                                                                                                                          |     rcx = rax*8;
    0x0044eb5f sub rcx, rax                                                                                                                                                                              |     rcx -= rax;
    0x0044eb62 cmp qword [r14 + 0x10], rcx                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (*((r14 + 0x10)) >= rcx) {
    0x0044eb66 jb 0x44eb84                                                                                                                                                                               |         
    0x0044eb68 lea rax, [rdx + rdx]                                                                                                                                                                      |         rax = rdx + rdx;
    0x0044eb6c test rdx, rdx                                                                                                                                                                             |         
    0x0044eb6f mov esi, 0x20                                                                                                                                                                             |         esi = 0x20;
                                                                                                                                                                                                         |         if (rdx != 0) {
    0x0044eb74 cmovne rsi, rax                                                                                                                                                                           |             rsi = rax;
                                                                                                                                                                                                         |         }
    0x0044eb78 mov rdi, r14                                                                                                                                                                              |         
    0x0044eb7b call 0x44ebf0                                                                                                                                                                             |         BloombergLP::bdlc::FlatHashTable<int,int,BloombergLP::bdlc::FlatHashSet_EntryUtil<int>,SeedIsHash<int>,bsl::equal_to<int>>::rehashRaw(unsigned long) (r14, rsi);
    0x0044eb80 mov rdx, qword [r14 + 0x18]                                                                                                                                                               |         rdx = *((r14 + 0x18));
                                                                                                                                                                                                         |     }
    0x0044eb84 test rdx, rdx                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdx == 0) {
    0x0044eb87 je 0x44ebcc                                                                                                                                                                               |         goto label_6;
                                                                                                                                                                                                         |     }
    0x0044eb89 mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044eb8d shr rbx, cl                                                                                                                                                                               |     rbx >>= cl;
    0x0044eb90 mov rcx, qword [r14 + 8]                                                                                                                                                                  |     rcx = *((r14 + 8));
    0x0044eb94 shl rbx, 4                                                                                                                                                                                |     rbx <<= 4;
    0x0044eb98 lea rsi, [rdx - 1]                                                                                                                                                                        |     rsi = rdx - 1;
    0x0044eb9c xor edi, edi                                                                                                                                                                              |     edi = 0;
    0x0044eb9e nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         |     do {
    0x0044eba0 movdqu xmm0, xmmword [rcx + rbx]                                                                                                                                                          |         __asm ("movdqu xmm0, xmmword [rcx + rbx]");
    0x0044eba5 pmovmskb eax, xmm0                                                                                                                                                                        |         __asm ("pmovmskb eax, xmm0");
    0x0044eba9 test ax, ax                                                                                                                                                                               |         
                                                                                                                                                                                                         |         if (ax != 0) {
    0x0044ebac jne 0x44ebce                                                                                                                                                                              |             goto label_7;
                                                                                                                                                                                                         |         }
    0x0044ebae add rbx, 0x10                                                                                                                                                                             |         rbx += 0x10;
    0x0044ebb2 and rbx, rsi                                                                                                                                                                              |         rbx &= rsi;
    0x0044ebb5 add rdi, 0x10                                                                                                                                                                             |         rdi += 0x10;
    0x0044ebb9 cmp rdi, rdx                                                                                                                                                                              |         
    0x0044ebbc jb 0x44eba0                                                                                                                                                                               |         
                                                                                                                                                                                                         |     } while (rdi < rdx);
    0x0044ebbe jmp 0x44ebda                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_2:
    0x0044ebc0 xor eax, eax                                                                                                                                                                              |     eax = 0;
    0x0044ebc2 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax == rdi) {
    0x0044ebc5 je 0x44eb49                                                                                                                                                                               |         goto label_1;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_5:
    0x0044ebc7 mov byte [rsi], 0                                                                                                                                                                         |     *(rsi) = 0;
    0x0044ebca jmp 0x44ebda                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_6:
    0x0044ebcc jmp 0x44ebda                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_7:
    0x0044ebce movzx eax, ax                                                                                                                                                                             |     eax = (int32_t) ax;
    0x0044ebd1 bsf eax, eax                                                                                                                                                                              |     __asm ("bsf eax, eax");
    0x0044ebd4 add rbx, rax                                                                                                                                                                              |     rbx += rax;
    0x0044ebd7 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
                                                                                                                                                                                                         | label_8:
    0x0044ebda pop rbx                                                                                                                                                                                   |     
    0x0044ebdb pop r12                                                                                                                                                                                   |     
    0x0044ebdd pop r14                                                                                                                                                                                   |     
    0x0044ebdf pop r15                                                                                                                                                                                   |     
    0x0044ebe1 pop rbp                                                                                                                                                                                   |     
    0x0044ebe2 ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
