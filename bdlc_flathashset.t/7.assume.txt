    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* bdlc_flathashset.t/assume @ 0x44d9a0 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
                                                                                                                                                                                                         | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                         |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                         |     count &= mask;
                                                                                                                                                                                                         |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                         | }
                                                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__int__BloombergLP::bdlc::FlatHashSet_EntryUtil_int___SeedIsHash_int___EqualAndState_int___.indexOfKey_bool__int_const__unsigned_long_ ()         | int64_t method_BloombergLP::bdlc::FlatHashTable_int_int_BloombergLP::bdlc::FlatHashSet_EntryUtil_int_SeedIsHash_int_EqualAndState_int_indexOfKey_bool_int_const_unsigned_long_ (int64_t arg4, int64_t arg3, int64_t arg2, uint32_t arg1, uint32_t arg9, int64_t arg10) {
                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     xmm2 = arg9;
                                                                                                                                                                                                         |     xmm3 = arg10;
                                                                                                                                                                                                         |     /* BloombergLP::bdlc::FlatHashTable<int, int, BloombergLP::bdlc::FlatHashSet_EntryUtil<int>, SeedIsHash<int>, EqualAndState<int> >::indexOfKey(bool*, int const&, unsigned long) */
    0x0044d9a0 push rbp                                                                                                                                                                                  |     
    0x0044d9a1 push r15                                                                                                                                                                                  |     
    0x0044d9a3 push r14                                                                                                                                                                                  |     
    0x0044d9a5 push r12                                                                                                                                                                                  |     
    0x0044d9a7 push rbx                                                                                                                                                                                  |     
    0x0044d9a8 mov rbx, rcx                                                                                                                                                                              |     rbx = rcx;
    0x0044d9ab mov r14, rdi                                                                                                                                                                              |     r14 = rdi;
    0x0044d9ae mov rdi, qword [rdi + 0x18]                                                                                                                                                               |     rdi = *((rdi + 0x18));
    0x0044d9b2 test rdi, rdi                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdi == 0) {
    0x0044d9b5 je 0x44dad0                                                                                                                                                                               |         goto label_2;
                                                                                                                                                                                                         |     }
    0x0044d9bb mov r10d, ebx                                                                                                                                                                             |     r10d = ebx;
    0x0044d9be mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044d9c2 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
    0x0044d9c5 shr rax, cl                                                                                                                                                                               |     rax >>= cl;
    0x0044d9c8 and r10b, 0x7f                                                                                                                                                                            |     r10b &= 0x7f;
    0x0044d9cc shl rax, 4                                                                                                                                                                                |     rax <<= 4;
    0x0044d9d0 mov r8, qword [r14]                                                                                                                                                                       |     r8 = *(r14);
    0x0044d9d3 mov r9, qword [r14 + 8]                                                                                                                                                                   |     r9 = *((r14 + 8));
    0x0044d9d7 movzx ecx, r10b                                                                                                                                                                           |     ecx = (int32_t) r10b;
    0x0044d9db movd xmm0, ecx                                                                                                                                                                            |     xmm0 = ecx;
    0x0044d9df pxor xmm1, xmm1                                                                                                                                                                           |     xmm1 = 0;
    0x0044d9e3 pshufb xmm0, xmm1                                                                                                                                                                         |     __asm ("pshufb xmm0, xmm1");
    0x0044d9e8 mov r15d, dword [rdx]                                                                                                                                                                     |     r15d = *(rdx);
    0x0044d9eb lea r10, [rdi - 1]                                                                                                                                                                        |     r10 = rdi - 1;
    0x0044d9ef xor r11d, r11d                                                                                                                                                                            |     r11d = 0;
    0x0044d9f2 movdqa xmm1, xmmword [rip + 0x31816]                                                                                                                                                      |     __asm ("movdqa xmm1, xmmword [0x0047f210]");
                                                                                                                                                                                                         | label_0:
    0x0044d9fa movdqu xmm2, xmmword [r9 + rax]                                                                                                                                                           |     __asm ("movdqu xmm2, xmmword [r9 + rax]");
    0x0044da00 movdqa xmm3, xmm0                                                                                                                                                                         |     __asm ("movdqa xmm3, xmm0");
    0x0044da04 pcmpeqb xmm3, xmm2                                                                                                                                                                        |     __asm ("pcmpeqb xmm3, xmm2");
    0x0044da08 pmovmskb ecx, xmm3                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm3");
    0x0044da0c test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx == 0) {
    0x0044da0f je 0x44da30                                                                                                                                                                               |         goto label_3;
                                                                                                                                                                                                         |     }
    0x0044da11 lea rdx, [r8 + rax*4]                                                                                                                                                                     |     rdx = r8 + rax*4;
    0x0044da15 movzx ebp, cx                                                                                                                                                                             |     ebp = (int32_t) cx;
                                                                                                                                                                                                         |     do {
    0x0044da18 bsf ecx, ebp                                                                                                                                                                              |         __asm ("bsf ecx, ebp");
    0x0044da1b cmp dword [rdx + rcx*4], r15d                                                                                                                                                             |         
                                                                                                                                                                                                         |         if (*((rdx + rcx*4)) == r15d) {
    0x0044da1f je 0x44da4f                                                                                                                                                                               |             goto label_4;
                                                                                                                                                                                                         |         }
    0x0044da21 mov r12d, 0xfffffffe                                                                                                                                                                      |         r12d = 0xfffffffe;
    0x0044da27 rol r12d, cl                                                                                                                                                                              |         r12d = rotate_left32 (r12d, cl);
    0x0044da2a and ebp, r12d                                                                                                                                                                             |         ebp &= r12d;
    0x0044da2d jne 0x44da18                                                                                                                                                                              |         
                                                                                                                                                                                                         |     } while (ebp != 0);
    0x0044da2f nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         | label_3:
    0x0044da30 pcmpeqb xmm2, xmm1                                                                                                                                                                        |     __asm ("pcmpeqb xmm2, xmm1");
    0x0044da34 pmovmskb ecx, xmm2                                                                                                                                                                        |     __asm ("pmovmskb ecx, xmm2");
    0x0044da38 test cx, cx                                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (cx != 0) {
    0x0044da3b jne 0x44da59                                                                                                                                                                              |         goto label_1;
                                                                                                                                                                                                         |     }
    0x0044da3d add rax, 0x10                                                                                                                                                                             |     rax += 0x10;
    0x0044da41 and rax, r10                                                                                                                                                                              |     rax &= r10;
    0x0044da44 add r11, 0x10                                                                                                                                                                             |     r11 += 0x10;
    0x0044da48 cmp r11, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (r11 < rdi) {
    0x0044da4b jb 0x44d9fa                                                                                                                                                                               |         goto label_0;
                                                                                                                                                                                                         |     }
    0x0044da4d jmp 0x44da59                                                                                                                                                                              |     goto label_1;
                                                                                                                                                                                                         | label_4:
    0x0044da4f mov ecx, ecx                                                                                                                                                                              |     
    0x0044da51 add rax, rcx                                                                                                                                                                              |     rax += rcx;
    0x0044da54 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax != rdi) {
    0x0044da57 jne 0x44dad7                                                                                                                                                                              |         goto label_5;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_1:
    0x0044da59 mov byte [rsi], 1                                                                                                                                                                         |     *(rsi) = 1;
    0x0044da5c mov rdx, qword [r14 + 0x18]                                                                                                                                                               |     rdx = *((r14 + 0x18));
    0x0044da60 mov rax, rdx                                                                                                                                                                              |     rax = *((r14 + 0x18));
    0x0044da63 shr rax, 3                                                                                                                                                                                |     rax >>= 3;
    0x0044da67 lea rcx, [rax*8]                                                                                                                                                                          |     rcx = rax*8;
    0x0044da6f sub rcx, rax                                                                                                                                                                              |     rcx -= rax;
    0x0044da72 cmp qword [r14 + 0x10], rcx                                                                                                                                                               |     
                                                                                                                                                                                                         |     if (*((r14 + 0x10)) >= rcx) {
    0x0044da76 jb 0x44da94                                                                                                                                                                               |         
    0x0044da78 lea rax, [rdx + rdx]                                                                                                                                                                      |         rax = rdx + rdx;
    0x0044da7c test rdx, rdx                                                                                                                                                                             |         
    0x0044da7f mov esi, 0x20                                                                                                                                                                             |         esi = 0x20;
                                                                                                                                                                                                         |         if (rdx != 0) {
    0x0044da84 cmovne rsi, rax                                                                                                                                                                           |             rsi = rax;
                                                                                                                                                                                                         |         }
    0x0044da88 mov rdi, r14                                                                                                                                                                              |         
    0x0044da8b call 0x44db00                                                                                                                                                                             |         BloombergLP::bdlc::FlatHashTable<int,int,BloombergLP::bdlc::FlatHashSet_EntryUtil<int>,SeedIsHash<int>,EqualAndState<int>>::rehashRaw(unsigned long) (r14, rsi);
    0x0044da90 mov rdx, qword [r14 + 0x18]                                                                                                                                                               |         rdx = *((r14 + 0x18));
                                                                                                                                                                                                         |     }
    0x0044da94 test rdx, rdx                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdx == 0) {
    0x0044da97 je 0x44dadc                                                                                                                                                                               |         goto label_6;
                                                                                                                                                                                                         |     }
    0x0044da99 mov cl, byte [r14 + 0x20]                                                                                                                                                                 |     cl = *((r14 + 0x20));
    0x0044da9d shr rbx, cl                                                                                                                                                                               |     rbx >>= cl;
    0x0044daa0 mov rcx, qword [r14 + 8]                                                                                                                                                                  |     rcx = *((r14 + 8));
    0x0044daa4 shl rbx, 4                                                                                                                                                                                |     rbx <<= 4;
    0x0044daa8 lea rsi, [rdx - 1]                                                                                                                                                                        |     rsi = rdx - 1;
    0x0044daac xor edi, edi                                                                                                                                                                              |     edi = 0;
    0x0044daae nop                                                                                                                                                                                       |     
                                                                                                                                                                                                         |     do {
    0x0044dab0 movdqu xmm0, xmmword [rcx + rbx]                                                                                                                                                          |         __asm ("movdqu xmm0, xmmword [rcx + rbx]");
    0x0044dab5 pmovmskb eax, xmm0                                                                                                                                                                        |         __asm ("pmovmskb eax, xmm0");
    0x0044dab9 test ax, ax                                                                                                                                                                               |         
                                                                                                                                                                                                         |         if (ax != 0) {
    0x0044dabc jne 0x44dade                                                                                                                                                                              |             goto label_7;
                                                                                                                                                                                                         |         }
    0x0044dabe add rbx, 0x10                                                                                                                                                                             |         rbx += 0x10;
    0x0044dac2 and rbx, rsi                                                                                                                                                                              |         rbx &= rsi;
    0x0044dac5 add rdi, 0x10                                                                                                                                                                             |         rdi += 0x10;
    0x0044dac9 cmp rdi, rdx                                                                                                                                                                              |         
    0x0044dacc jb 0x44dab0                                                                                                                                                                               |         
                                                                                                                                                                                                         |     } while (rdi < rdx);
    0x0044dace jmp 0x44daea                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_2:
    0x0044dad0 xor eax, eax                                                                                                                                                                              |     eax = 0;
    0x0044dad2 cmp rax, rdi                                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (rax == rdi) {
    0x0044dad5 je 0x44da59                                                                                                                                                                               |         goto label_1;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_5:
    0x0044dad7 mov byte [rsi], 0                                                                                                                                                                         |     *(rsi) = 0;
    0x0044dada jmp 0x44daea                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_6:
    0x0044dadc jmp 0x44daea                                                                                                                                                                              |     goto label_8;
                                                                                                                                                                                                         | label_7:
    0x0044dade movzx eax, ax                                                                                                                                                                             |     eax = (int32_t) ax;
    0x0044dae1 bsf eax, eax                                                                                                                                                                              |     __asm ("bsf eax, eax");
    0x0044dae4 add rbx, rax                                                                                                                                                                              |     rbx += rax;
    0x0044dae7 mov rax, rbx                                                                                                                                                                              |     rax = rbx;
                                                                                                                                                                                                         | label_8:
    0x0044daea pop rbx                                                                                                                                                                                   |     
    0x0044daeb pop r12                                                                                                                                                                                   |     
    0x0044daed pop r14                                                                                                                                                                                   |     
    0x0044daef pop r15                                                                                                                                                                                   |     
    0x0044daf1 pop rbp                                                                                                                                                                                   |     
    0x0044daf2 ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
