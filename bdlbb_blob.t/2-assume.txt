    ; assembly                                               | /* r2dec pseudo code output */
                                                             | /* bdlbb_blob.t/assume @ 0x407c20 */
                                                             | #include <stdint.h>
                                                             |  
    ; (fcn) main ()                                          | int32_t main (char ** str, signed int64_t argc) {
                                                             |     signed int64_t var_ch;
                                                             |     int64_t var_18h;
                                                             |     uint32_t var_20h;
                                                             |     int64_t var_28h;
                                                             |     int64_t var_30h;
                                                             |     uint32_t var_38h;
                                                             |     int64_t var_40h;
                                                             |     int64_t var_48h;
                                                             |     uint32_t var_50h;
                                                             |     uint32_t var_54h;
                                                             |     uint32_t var_58h;
                                                             |     int64_t var_5ch;
                                                             |     int64_t var_70h;
                                                             |     int64_t var_78h;
                                                             |     uint32_t var_80h;
                                                             |     uint32_t var_88h;
                                                             |     uint32_t var_90h;
                                                             |     int64_t var_98h;
                                                             |     uint32_t var_a0h;
                                                             |     uint32_t var_a4h;
                                                             |     uint32_t var_a8h;
                                                             |     uint32_t var_ach;
                                                             |     int64_t var_b0h;
                                                             |     int64_t var_b8h;
                                                             |     int64_t var_c0h;
                                                             |     int64_t var_c8h;
                                                             |     int64_t var_d0h;
                                                             |     int64_t var_d8h;
                                                             |     uint32_t var_e8h;
                                                             |     int64_t var_f0h;
                                                             |     int64_t var_f8h;
                                                             |     int64_t var_100h;
                                                             |     int64_t var_108h;
                                                             |     uint32_t var_110h;
                                                             |     uint32_t var_114h;
                                                             |     uint32_t var_118h;
                                                             |     uint32_t var_11ch;
                                                             |     int64_t var_130h;
                                                             |     uint32_t var_138h;
                                                             |     int64_t var_140h;
                                                             |     int64_t var_148h;
                                                             |     int64_t var_150h;
                                                             |     uint32_t var_160h;
                                                             |     uint32_t var_164h;
                                                             |     uint32_t var_168h;
                                                             |     uint32_t var_16ch;
                                                             |     uint32_t var_178h;
                                                             |     int64_t var_180h;
                                                             |     int64_t var_188h;
                                                             |     int64_t var_190h;
                                                             |     uint32_t var_1a0h;
                                                             |     uint32_t var_1a4h;
                                                             |     uint32_t var_1a8h;
                                                             |     int64_t var_1ach;
                                                             |     uint32_t var_1c0h;
                                                             |     int64_t var_1c8h;
                                                             |     uint32_t var_1d0h;
                                                             |     uint32_t var_1e0h;
                                                             |     uint32_t var_1e4h;
                                                             |     int64_t var_1e8h;
                                                             |     int64_t var_1ech;
                                                             |     int64_t var_1f8h;
                                                             |     int64_t var_210h;
                                                             |     int64_t var_290h;
                                                             |     int64_t var_298h;
                                                             |     int64_t var_2a0h;
                                                             |     int64_t var_2a8h;
                                                             |     int64_t var_2b0h;
                                                             |     int64_t var_2b8h;
                                                             |     int64_t var_2c0h;
                                                             |     int64_t var_2c8h;
                                                             |     uint32_t var_2d0h;
                                                             |     int64_t var_2d8h;
                                                             |     uint32_t var_2e0h;
                                                             |     uint32_t var_2f0h;
                                                             |     uint32_t var_2f4h;
                                                             |     int64_t var_2f8h;
                                                             |     int64_t var_308h;
                                                             |     int64_t var_318h;
                                                             |     int64_t var_320h;
                                                             |     int64_t var_328h;
                                                             |     int64_t var_338h;
                                                             |     int64_t var_3a0h;
                                                             |     int64_t var_3a8h;
                                                             |     int64_t var_3b0h;
                                                             |     int64_t var_3b8h;
                                                             |     int64_t var_3c0h;
                                                             |     int64_t var_3c8h;
                                                             |     int64_t var_3d0h;
                                                             |     int64_t var_3d8h;
                                                             |     int64_t var_3e0h;
                                                             |     int64_t var_3e8h;
                                                             |     int64_t var_3f0h;
                                                             |     int64_t var_3f8h;
                                                             |     int64_t var_400h;
                                                             |     int64_t var_408h;
                                                             |     int64_t var_410h;
                                                             |     int64_t var_420h;
                                                             |     int64_t var_428h;
                                                             |     int64_t var_430h;
                                                             |     int64_t var_438h;
                                                             |     int64_t var_440h;
                                                             |     int64_t var_450h;
                                                             |     int64_t var_458h;
                                                             |     int64_t var_460h;
                                                             |     int64_t var_468h;
                                                             |     int64_t var_470h;
                                                             |     int64_t var_480h;
                                                             |     int64_t var_488h;
                                                             |     int64_t var_490h;
                                                             |     int64_t var_494h;
                                                             |     int64_t var_498h;
                                                             |     int64_t var_49ch;
                                                             |     int64_t var_4a0h;
                                                             |     int64_t var_4b8h;
                                                             |     int64_t var_4c0h;
                                                             |     int64_t var_4c8h;
                                                             |     int64_t var_4d0h;
                                                             |     int64_t var_4dch;
                                                             |     int64_t var_4e0h;
                                                             |     int64_t var_4f8h;
                                                             |     int64_t var_500h;
                                                             |     int64_t var_508h;
                                                             |     int64_t var_510h;
                                                             |     int64_t var_520h;
                                                             |     int64_t var_528h;
                                                             |     int64_t var_530h;
                                                             |     int64_t var_538h;
                                                             |     int64_t var_550h;
                                                             |     int64_t var_558h;
                                                             |     int64_t var_560h;
                                                             |     int64_t var_568h;
                                                             |     int64_t var_570h;
                                                             |     int64_t var_578h;
                                                             |     int64_t var_580h;
                                                             |     int64_t var_588h;
                                                             |     int64_t var_590h;
                                                             |     int64_t var_5a0h;
                                                             |     rsi = str;
                                                             |     rdi = argc;
    0x00404a10 push rbp                                      |     
    0x00404a11 push r15                                      |     
    0x00404a13 push r14                                      |     
    0x00404a15 push r13                                      |     
    0x00404a17 push r12                                      |     
    0x00404a19 push rbx                                      |     
    0x00404a1a sub rsp, 0x5b8                                |     
    0x00404a21 xor r14d, r14d                                |     r14d = 0;
    0x00404a24 mov dword [rsp + 0xc], edi                    |     *((rsp + 0xc)) = edi;
    0x00404a28 cmp edi, 2                                    |     
                                                             |     if (edi >= 2) {
    0x00404a2b jl 0x404a40                                   |         
    0x00404a2d mov rdi, qword [rsi + 8]                      |         
    0x00404a31 xor esi, esi                                  |         
    0x00404a33 mov edx, 0xa                                  |         
    0x00404a38 call 0x4034d0                                 |         rax = strtol (*((rsi + 8)), 0, 0xa);
    0x00404a3d mov r14, rax                                  |         r14 = rax;
                                                             |     }
    0x00404a40 mov edi, 0x6869c8                             |     
    0x00404a45 mov esi, 0x44cced                             |     
    0x00404a4a mov edx, 5                                    |     
    0x00404a4f call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TEST ", 5);
    0x00404a54 mov esi, 0x44ccf3                             |     
    0x00404a59 mov edx, 0x56                                 |     
    0x00404a5e mov rdi, rax                                  |     
    0x00404a61 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "/home/parsa/experiments/assumptions/crush/ccm-assume/groups/bdl/bdlbb/bdlbb_blob.t.cpp", 0x56);
    0x00404a66 mov esi, 0x44cd4a                             |     
    0x00404a6b mov edx, 6                                    |     
    0x00404a70 mov rdi, rax                                  |     
    0x00404a73 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " CASE ", 6);
    0x00404a78 mov rdi, rax                                  |     rdi = rax;
    0x00404a7b mov esi, r14d                                 |     esi = r14d;
    0x00404a7e call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00404a83 mov rbp, rax                                  |     
    0x00404a86 mov rax, qword [rax]                          |     rax = *(rax);
    0x00404a89 mov rsi, qword [rax - 0x18]                   |     rsi = *((rax - 0x18));
    0x00404a8d add rsi, rbp                                  |     rsi += rbp;
    0x00404a90 lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x00404a98 mov rdi, rbx                                  |     rdi = rbx;
    0x00404a9b call 0x4035d0                                 |     std::_1::ios_base::getloc()const ();
    0x00404aa0 mov esi, 0x686910                             |     esi = std::__1::ctype<char>::id;
    0x00404aa5 mov rdi, rbx                                  |     rdi = rbx;
    0x00404aa8 call 0x403680                                 |     rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00404aad mov rcx, qword [rax]                          |     rcx = *(rax);
    0x00404ab0 mov rdi, rax                                  |     rdi = rax;
    0x00404ab3 mov esi, 0xa                                  |     esi = 0xa;
    0x00404ab8 call qword [rcx + 0x38]                       |     eax = uint64_t (*rcx + 0x38)() ();
    0x00404abb mov ebx, eax                                  |     ebx = eax;
    0x00404abd lea rdi, [rsp + 0x2d0]                        |     rdi = rsp + 0x2d0;
    0x00404ac5 call 0x4036f0                                 |     std::_1::locale::~locale() ();
    0x00404aca movsx esi, bl                                 |     esi = (int32_t) bl;
    0x00404acd mov rdi, rbp                                  |     rdi = rbp;
    0x00404ad0 call 0x403420                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00404ad5 mov rdi, rbp                                  |     rdi = rbp;
    0x00404ad8 call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00404add lea rdi, [rsp + 0x588]                        |     
    0x00404ae5 mov esi, 0x4276e0                             |     
    0x00404aea call 0x4277e0                                 |     BloombergLP::bsls::ReviewFailureHandlerGuard::ReviewFailureHandlerGuard(void(*)(BloombergLP::bsls::ReviewViolationconst&)) (rsp + 0x588, method.BloombergLP::bsls::Review.failByAbort_BloombergLP::bsls::ReviewViolation_const_);
    0x00404aef cmp r14d, 0x11                                |     
                                                             |     if (r14d > 0x11) {
    0x00404af3 ja 0x4126d9                                   |         void (*0x4126d9)() ();
                                                             |     }
    0x00404af9 mov eax, r14d                                 |     eax = r14d;
                                                             |     /* switch table (18 cases) at 0x44cab0 */
    0x00404afc jmp qword [rax*8 + 0x44cab0]                  |     
    0x00404b03 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00404b08 jl 0x404c51                                   |         
    0x00404b0e mov rax, qword [rip + 0x281eb3]               |         rax = std::__1::cout;
    0x00404b15 mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00404b1a add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x00404b1e lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404b26 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00404b2b lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404b33 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00404b38 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00404b3d mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00404b40 mov rdi, rax                                  |         rdi = rax;
    0x00404b43 mov esi, 0xa                                  |         esi = 0xa;
    0x00404b48 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00404b4b mov ebx, eax                                  |         ebx = eax;
    0x00404b4d lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404b55 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00404b5a movsx esi, bl                                 |         esi = (int32_t) bl;
    0x00404b5d mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00404b62 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00404b67 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00404b6c call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00404b71 mov edi, 0x6869c8                             |         
    0x00404b76 mov esi, 0x44cd51                             |         
    0x00404b7b mov edx, 0x15                                 |         
    0x00404b80 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING USAGE EXAMPLE", 0x15);
    0x00404b85 mov rbx, rax                                  |         rbx = rax;
    0x00404b88 mov rax, qword [rax]                          |         rax = *(rax);
    0x00404b8b mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00404b8f add rsi, rbx                                  |         rsi += rbx;
    0x00404b92 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404b9a call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00404b9f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404ba7 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00404bac call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00404bb1 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00404bb4 mov rdi, rax                                  |         rdi = rax;
    0x00404bb7 mov esi, 0xa                                  |         esi = 0xa;
    0x00404bbc call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00404bbf mov ebp, eax                                  |         
    0x00404bc1 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404bc9 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00404bce movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00404bd2 mov rdi, rbx                                  |         rdi = rbx;
    0x00404bd5 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00404bda mov rdi, rbx                                  |         rdi = rbx;
    0x00404bdd call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00404be2 mov esi, 0x44e0d8                             |         
    0x00404be7 mov edx, 0x15                                 |         
    0x00404bec mov rdi, rbx                                  |         
    0x00404bef call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0d8, 0x15);
    0x00404bf4 mov rbx, rax                                  |         rbx = rax;
    0x00404bf7 mov rax, qword [rax]                          |         rax = *(rax);
    0x00404bfa mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00404bfe add rsi, rbx                                  |         rsi += rbx;
    0x00404c01 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404c09 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00404c0e lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404c16 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00404c1b call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00404c20 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00404c23 mov rdi, rax                                  |         rdi = rax;
    0x00404c26 mov esi, 0xa                                  |         esi = 0xa;
    0x00404c2b call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00404c2e mov ebp, eax                                  |         
    0x00404c30 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404c38 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00404c3d movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00404c41 mov rdi, rbx                                  |         rdi = rbx;
    0x00404c44 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00404c49 mov rdi, rbx                                  |         rdi = rbx;
    0x00404c4c call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00404c51 mov qword [rsp + 0x80], 0x44cb78              |     *((rsp + 0x80)) = vtable.SimpleBlobBufferFactory.0;
    0x00404c5d mov qword [rsp + 0x88], 0x400                 |     *((rsp + 0x88)) = 0x400;
    0x00404c69 mov rax, qword [rip + 0x281e78]               |     rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00404c70 test rax, rax                                 |     
                                                             |     if (rax == 0) {
    0x00404c73 jne 0x404c7a                                  |         
    0x00404c75 call 0x425630                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                             |     }
    0x00404c7a mov qword [rsp + 0x90], rax                   |     *((rsp + 0x90)) = rax;
    0x00404c82 lea rdi, [rsp + 0x2d0]                        |     
    0x00404c8a lea rsi, [rsp + 0x80]                         |     
    0x00404c92 xor edx, edx                                  |     
    0x00404c94 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x2d0, rsp + 0x80, 0);
    0x00404c99 xor edi, edi                                  |     edi = 0;
    0x00404c9b cmp dword [rsp + 0x2f4], 0                    |     
    0x00404ca3 setne dil                                     |     dil = (*((rsp + 0x2f4)) != 0) ? 1 : 0;
    0x00404ca7 mov esi, 0x4505e2                             |     esi = 0x4505e2;
    0x00404cac mov edx, 0x2f6                                |     edx = 0x2f6;
    0x00404cb1 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404cb6 xor edi, edi                                  |     edi = 0;
    0x00404cb8 cmp dword [rsp + 0x2f0], 0                    |     
    0x00404cc0 setne dil                                     |     dil = (*((rsp + 0x2f0)) != 0) ? 1 : 0;
    0x00404cc4 mov esi, 0x44dc4c                             |     esi = 0x44dc4c;
    0x00404cc9 mov edx, 0x2f7                                |     edx = 0x2f7;
    0x00404cce call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404cd3 lea rdi, [rsp + 0x2d0]                        |     
    0x00404cdb mov esi, 0x200                                |     
    0x00404ce0 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x2d0, 0x200);
    0x00404ce5 xor edi, edi                                  |     edi = 0;
    0x00404ce7 cmp dword [rsp + 0x2f4], 0x200                |     
    0x00404cf2 setne dil                                     |     dil = (*((rsp + 0x2f4)) != 0x200) ? 1 : 0;
    0x00404cf6 mov esi, 0x44cd67                             |     esi = "512 == blob.length()";
    0x00404cfb mov edx, 0x2fa                                |     edx = 0x2fa;
    0x00404d00 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404d05 xor edi, edi                                  |     edi = 0;
    0x00404d07 cmp dword [rsp + 0x2f0], 0x400                |     
    0x00404d12 setne dil                                     |     dil = (*((rsp + 0x2f0)) != 0x400) ? 1 : 0;
    0x00404d16 mov esi, 0x44cd7c                             |     esi = "1024 == blob.totalSize()";
    0x00404d1b mov edx, 0x2fb                                |     edx = 0x2fb;
    0x00404d20 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404d25 mov rax, qword [rsp + 0x2d8]                  |     rax = *((rsp + 0x2d8));
    0x00404d2d sub rax, qword [rsp + 0x2d0]                  |     rax -= *((rsp + 0x2d0));
    0x00404d35 shr rax, 3                                    |     rax >>= 3;
    0x00404d39 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00404d3f xor edi, edi                                  |     edi = 0;
    0x00404d41 test eax, eax                                 |     
    0x00404d43 sete dil                                      |     dil = (eax == 0) ? 1 : 0;
    0x00404d47 mov esi, 0x44cd95                             |     esi = "0 != blob.numBuffers()";
    0x00404d4c mov edx, 0x300                                |     edx = 0x300;
    0x00404d51 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404d56 mov rax, qword [rsp + 0x2d0]                  |     rax = *((rsp + 0x2d0));
    0x00404d5e xor edi, edi                                  |     edi = 0;
    0x00404d60 cmp dword [rax + 0x10], 0x15                  |     
    0x00404d64 setl dil                                      |     dil = (*((rax + 0x10)) < 0x15) ? 1 : 0;
    0x00404d68 mov esi, 0x44cdac                             |     esi = "static_cast<int>(sizeof(data)) <= blob.buffer(0).size()";
    0x00404d6d mov edx, 0x301                                |     edx = 0x301;
    0x00404d72 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404d77 mov rax, qword [rsp + 0x2d0]                  |     rax = *((rsp + 0x2d0));
    0x00404d7f mov rax, qword [rax]                          |     rax = *(rax);
    0x00404d82 movdqa xmm0, xmmword [rip + 0x4ba66]          |     __asm ("movdqa xmm0, xmmword [str.12345678901234567890]");
    0x00404d8a movdqu xmmword [rax], xmm0                    |     __asm ("movdqu xmmword [rax], xmm0");
    0x00404d8e movabs rcx, 0x30393837363534                  |     rcx = 0x30393837363534;
    0x00404d98 mov qword [rax + 0xd], rcx                    |     *((rax + 0xd)) = rcx;
    0x00404d9c lea rdi, [rsp + 0x2d0]                        |     
    0x00404da4 mov esi, 0x15                                 |     
    0x00404da9 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x2d0, 0x15);
    0x00404dae xor edi, edi                                  |     edi = 0;
    0x00404db0 cmp dword [rsp + 0x2f4], 0x15                 |     
    0x00404db8 setne dil                                     |     dil = (*((rsp + 0x2f4)) != 0x15) ? 1 : 0;
    0x00404dbc mov esi, 0x44cde4                             |     esi = "sizeof data == blob.length()";
    0x00404dc1 mov edx, 0x305                                |     edx = 0x305;
    0x00404dc6 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404dcb xor edi, edi                                  |     edi = 0;
    0x00404dcd cmp dword [rsp + 0x2f0], 0x400                |     
    0x00404dd8 setne dil                                     |     dil = (*((rsp + 0x2f0)) != 0x400) ? 1 : 0;
    0x00404ddc mov esi, 0x44cd7c                             |     esi = "1024 == blob.totalSize()";
    0x00404de1 mov edx, 0x306                                |     edx = 0x306;
    0x00404de6 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404deb lea rdi, [rsp + 0x1c0]                        |     
    0x00404df3 xor esi, esi                                  |     
    0x00404df5 call 0x41e170                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bslma::Allocator*) (rsp + 0x1c0, 0);
    0x00404dfa xor edi, edi                                  |     edi = 0;
    0x00404dfc cmp dword [rsp + 0x1e4], 0                    |     
    0x00404e04 setne dil                                     |     dil = (*((rsp + 0x1e4)) != 0) ? 1 : 0;
    0x00404e08 mov esi, 0x44ce01                             |     esi = "0 == dest.length()";
    0x00404e0d mov edx, 0x311                                |     edx = 0x311;
    0x00404e12 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404e17 xor edi, edi                                  |     edi = 0;
    0x00404e19 cmp dword [rsp + 0x1e0], 0                    |     
    0x00404e21 setne dil                                     |     dil = (*((rsp + 0x1e0)) != 0) ? 1 : 0;
    0x00404e25 mov esi, 0x44ce14                             |     esi = "0 == dest.totalSize()";
    0x00404e2a mov edx, 0x312                                |     edx = 0x312;
    0x00404e2f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404e34 mov rax, qword [rsp + 0x2d8]                  |     rax = *((rsp + 0x2d8));
    0x00404e3c sub rax, qword [rsp + 0x2d0]                  |     rax -= *((rsp + 0x2d0));
    0x00404e44 shr rax, 3                                    |     rax >>= 3;
    0x00404e48 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00404e4e xor edi, edi                                  |     edi = 0;
    0x00404e50 test eax, eax                                 |     
    0x00404e52 sete dil                                      |     dil = (eax == 0) ? 1 : 0;
    0x00404e56 mov esi, 0x44cd95                             |     esi = "0 != blob.numBuffers()";
    0x00404e5b mov edx, 0x314                                |     edx = 0x314;
    0x00404e60 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404e65 mov rsi, qword [rsp + 0x2d0]                  |     
    0x00404e6d lea rdi, [rsp + 0x1c0]                        |     
    0x00404e75 call 0x41e150                                 |     BloombergLP::bdlbb::Blob::appendBuffer(BloombergLP::bdlbb::BlobBufferconst&) (rsp + 0x1c0, *((rsp + 0x2d0)));
    0x00404e7a xor edi, edi                                  |     edi = 0;
    0x00404e7c cmp dword [rsp + 0x1e4], 0                    |     
    0x00404e84 setne dil                                     |     dil = (*((rsp + 0x1e4)) != 0) ? 1 : 0;
    0x00404e88 mov esi, 0x44ce01                             |     esi = "0 == dest.length()";
    0x00404e8d mov edx, 0x316                                |     edx = 0x316;
    0x00404e92 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404e97 xor edi, edi                                  |     edi = 0;
    0x00404e99 cmp dword [rsp + 0x1e0], 0x400                |     
    0x00404ea4 setne dil                                     |     dil = (*((rsp + 0x1e0)) != 0x400) ? 1 : 0;
    0x00404ea8 mov esi, 0x44ce2a                             |     esi = "1024 == dest.totalSize()";
    0x00404ead mov edx, 0x317                                |     edx = 0x317;
    0x00404eb2 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404eb7 mov rax, qword [rsp + 0x1c0]                  |     rax = *((rsp + 0x1c0));
    0x00404ebf mov esi, dword [rax + 0x10]                   |     
    0x00404ec2 lea rdi, [rsp + 0x1c0]                        |     
    0x00404eca call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x1c0, *((rax + 0x10)));
    0x00404ecf xor edi, edi                                  |     edi = 0;
    0x00404ed1 cmp dword [rsp + 0x1e4], 0x400                |     
    0x00404edc setne dil                                     |     dil = (*((rsp + 0x1e4)) != 0x400) ? 1 : 0;
    0x00404ee0 mov esi, 0x44ce43                             |     esi = "1024 == dest.length()";
    0x00404ee5 mov edx, 0x31e                                |     edx = 0x31e;
    0x00404eea call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404eef xor edi, edi                                  |     edi = 0;
    0x00404ef1 cmp dword [rsp + 0x1e0], 0x400                |     
    0x00404efc setne dil                                     |     dil = (*((rsp + 0x1e0)) != 0x400) ? 1 : 0;
    0x00404f00 mov esi, 0x44ce2a                             |     esi = "1024 == dest.totalSize()";
    0x00404f05 mov edx, 0x31f                                |     edx = 0x31f;
    0x00404f0a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404f0f mov rax, qword [rsp + 0x2d8]                  |     rax = *((rsp + 0x2d8));
    0x00404f17 sub rax, qword [rsp + 0x2d0]                  |     rax -= *((rsp + 0x2d0));
    0x00404f1f shr rax, 3                                    |     rax >>= 3;
    0x00404f23 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00404f29 xor edi, edi                                  |     edi = 0;
    0x00404f2b test eax, eax                                 |     
    0x00404f2d sete dil                                      |     dil = (eax == 0) ? 1 : 0;
    0x00404f31 mov esi, 0x44cd95                             |     esi = "0 != blob.numBuffers()";
    0x00404f36 mov edx, 0x325                                |     edx = 0x325;
    0x00404f3b call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404f40 mov rax, qword [rsp + 0x2d0]                  |     rax = *((rsp + 0x2d0));
    0x00404f48 xor edi, edi                                  |     edi = 0;
    0x00404f4a cmp dword [rax + 0x10], 0x10                  |     
    0x00404f4e setl dil                                      |     dil = (*((rax + 0x10)) < 0x10) ? 1 : 0;
    0x00404f52 mov esi, 0x44ce59                             |     esi = "16 <= blob.buffer(0).size()";
    0x00404f57 mov edx, 0x326                                |     edx = 0x326;
    0x00404f5c call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00404f61 mov rcx, qword [rsp + 0x2d0]                  |     rcx = *((rsp + 0x2d0));
    0x00404f69 mov rax, qword [rcx]                          |     rax = *(rcx);
    0x00404f6c mov rbx, qword [rcx + 8]                      |     rbx = *((rcx + 8));
    0x00404f70 add rax, 0xa                                  |     rax += 0xa;
    0x00404f74 test rbx, rbx                                 |     
                                                             |     if (rbx == 0) {
    0x00404f77 je 0x4148f2                                   |         void (*0x4148f2)() ();
                                                             |     }
    0x00404f7d lock add dword [rbx + 8], 2                   |     *((rbx + 8)) += 2;
    0x00404f82 mov qword [rsp + 0x38], rbx                   |     *((rsp + 0x38)) = rbx;
    0x00404f87 lock add dword [rbx + 8], 2                   |     *((rbx + 8)) += 2;
    0x00404f8c jmp 0x4148fb                                  |     void (*0x4148fb)() ();
    0x00404f91 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00404f96 jl 0x405107                                   |         
    0x00404f9c mov rax, qword [rip + 0x281a25]               |         rax = std::__1::cout;
    0x00404fa3 mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00404fa8 add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x00404fac lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404fb4 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00404fb9 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404fc1 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00404fc6 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00404fcb mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00404fce mov rdi, rax                                  |         rdi = rax;
    0x00404fd1 mov esi, 0xa                                  |         esi = 0xa;
    0x00404fd6 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00404fd9 mov ebx, eax                                  |         ebx = eax;
    0x00404fdb lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00404fe3 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00404fe8 movsx esi, bl                                 |         esi = (int32_t) bl;
    0x00404feb mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00404ff0 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00404ff5 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00404ffa call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00404fff mov edi, 0x6869c8                             |         
    0x00405004 mov esi, 0x44d62c                             |         
    0x00405009 mov edx, 0x17                                 |         
    0x0040500e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING MOVE OPERATIONS", 0x17);
    0x00405013 mov rbx, rax                                  |         rbx = rax;
    0x00405016 mov rax, qword [rax]                          |         rax = *(rax);
    0x00405019 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040501d add rsi, rbx                                  |         rsi += rbx;
    0x00405020 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00405028 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040502d lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00405035 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x0040503a call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040503f mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00405042 mov rdi, rax                                  |         rdi = rax;
    0x00405045 mov esi, 0xa                                  |         esi = 0xa;
    0x0040504a call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040504d mov ebp, eax                                  |         
    0x0040504f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00405057 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040505c movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00405060 mov rdi, rbx                                  |         rdi = rbx;
    0x00405063 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00405068 mov rdi, rbx                                  |         rdi = rbx;
    0x0040506b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00405070 mov esi, 0x44e0d6                             |         
    0x00405075 mov edx, 0x17                                 |         
    0x0040507a mov rdi, rbx                                  |         
    0x0040507d call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0d6, 0x17);
    0x00405082 mov rbx, rax                                  |         rbx = rax;
    0x00405085 mov rax, qword [rax]                          |         rax = *(rax);
    0x00405088 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040508c add rsi, rbx                                  |         rsi += rbx;
    0x0040508f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00405097 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040509c lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004050a4 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x004050a9 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004050ae mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004050b1 mov rdi, rax                                  |         rdi = rax;
    0x004050b4 mov esi, 0xa                                  |         esi = 0xa;
    0x004050b9 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004050bc mov ebp, eax                                  |         
    0x004050be lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004050c6 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004050cb movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x004050cf mov rdi, rbx                                  |         rdi = rbx;
    0x004050d2 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004050d7 mov rdi, rbx                                  |         rdi = rbx;
    0x004050da call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004050df mov edi, 0x6869c8                             |         
    0x004050e4 mov esi, 0x44d644                             |         
    0x004050e9 mov edx, 0x2e                                 |         
    0x004050ee call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Testing 'is_nothrow_move_constructible' trait\n", 0x2e);
    0x004050f3 mov edi, 0x6869c8                             |         
    0x004050f8 mov esi, 0x44d673                             |         
    0x004050fd mov edx, 0x27                                 |         
    0x00405102 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Testing 'BlobBuffer' move construction\n", 0x27);
                                                             |     }
    0x00405107 mov edi, 0x100                                |     edi = 0x100;
    0x0040510c call 0x403350                                 |     rax = operatornew[](unsigned long) ();
    0x00405111 mov r14, rax                                  |     r14 = rax;
    0x00405114 mov rbp, qword [rip + 0x2819cd]               |     rbp = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040511b test rbp, rbp                                 |     
                                                             |     if (rbp == 0) {
    0x0040511e jne 0x405128                                  |         
    0x00405120 call 0x425630                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00405125 mov rbp, rax                                  |         
                                                             |     }
    0x00405128 mov rax, qword [rbp]                          |     rax = *(rbp);
    0x0040512c mov esi, 0x28                                 |     esi = 0x28;
    0x00405131 mov rdi, rbp                                  |     rdi = rbp;
    0x00405134 call qword [rax + 0x10]                       |     rax = uint64_t (*rax + 0x10)() ();
    0x00405137 mov rbx, rax                                  |     rbx = rax;
    0x0040513a movabs r15, 0x100000002                       |     r15 = 0x100000002;
    0x00405144 mov qword [rax + 8], r15                      |     *((rax + 8)) = r15;
    0x00405148 mov qword [rax], 0x4509c8                     |     *(rax) = vtable.BloombergLP::bslma::SharedPtrOutofplaceRep_char__BloombergLP::bslstl::SharedPtr_DefaultDeleter_.0;
    0x0040514f mov qword [rax + 0x18], r14                   |     *((rax + 0x18)) = r14;
    0x00405153 mov qword [rax + 0x20], rbp                   |     *((rax + 0x20)) = rbp;
    0x00405157 lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x0040515c lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x00405161 mov rdi, rax                                  |     
    0x00405164 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (rax);
    0x00405169 mov rdi, rbx                                  |     
    0x0040516c call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (rbx);
    0x00405171 mov rdi, rbx                                  |     
    0x00405174 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (rbx);
    0x00405179 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x0040517e jl 0x405194                                   |         
    0x00405180 mov edi, 0x6869c8                             |         
    0x00405185 mov esi, 0x44d69b                             |         
    0x0040518a mov edx, 0x25                                 |         
    0x0040518f call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Testing 'BlobBuffer' move assignment\n", 0x25);
                                                             |     }
    0x00405194 mov edi, 0x100                                |     edi = 0x100;
    0x00405199 call 0x403350                                 |     rax = operatornew[](unsigned long) ();
    0x0040519e mov r14, rax                                  |     r14 = rax;
    0x004051a1 mov rbp, qword [rip + 0x281940]               |     rbp = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004051a8 test rbp, rbp                                 |     
                                                             |     if (rbp == 0) {
    0x004051ab jne 0x4051b5                                  |         
    0x004051ad call 0x425630                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004051b2 mov rbp, rax                                  |         
                                                             |     }
    0x004051b5 mov rax, qword [rbp]                          |     rax = *(rbp);
    0x004051b9 mov esi, 0x28                                 |     esi = 0x28;
    0x004051be mov rdi, rbp                                  |     rdi = rbp;
    0x004051c1 call qword [rax + 0x10]                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004051c4 mov rbx, rax                                  |     rbx = rax;
    0x004051c7 mov qword [rax + 8], r15                      |     *((rax + 8)) = r15;
    0x004051cb mov qword [rax], 0x4509c8                     |     *(rax) = vtable.BloombergLP::bslma::SharedPtrOutofplaceRep_char__BloombergLP::bslstl::SharedPtr_DefaultDeleter_.0;
    0x004051d2 mov qword [rax + 0x18], r14                   |     *((rax + 0x18)) = r14;
    0x004051d6 mov qword [rax + 0x20], rbp                   |     *((rax + 0x20)) = rbp;
    0x004051da mov qword [rsp + 0x2d0], r14                  |     *((rsp + 0x2d0)) = r14;
    0x004051e2 mov qword [rsp + 0x2d8], rax                  |     *((rsp + 0x2d8)) = rax;
    0x004051ea lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x004051ef mov dword [rsp + 0x2e0], 0x100                |     *((rsp + 0x2e0)) = 0x100;
    0x004051fa pxor xmm0, xmm0                               |     xmm0 = 0;
    0x004051fe movdqa xmmword [rsp + 0x1c0], xmm0            |     __asm ("movdqa xmmword [rsp + 0x1c0], xmm0");
    0x00405207 mov dword [rsp + 0x1d0], 0                    |     *((rsp + 0x1d0)) = 0;
    0x00405212 lea rdi, [rsp + 0x1c0]                        |     
    0x0040521a lea rsi, [rsp + 0x2d0]                        |     
    0x00405222 call 0x41db50                                 |     BloombergLP::bdlbb::BlobBuffer::operator=(BloombergLP::bdlbb::BlobBuffer&&) (rsp + 0x1c0, rsp + 0x2d0);
    0x00405227 xor edi, edi                                  |     edi = 0;
    0x00405229 cmp qword [rsp + 0x1c0], r14                  |     
    0x00405231 setne dil                                     |     dil = (*((rsp + 0x1c0)) != r14) ? 1 : 0;
    0x00405235 mov esi, 0x44d6c1                             |     esi = "targetBuffer.data() == aBuffer.get()";
    0x0040523a mov edx, 0x463                                |     edx = 0x463;
    0x0040523f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405244 xor edi, edi                                  |     edi = 0;
    0x00405246 cmp dword [rsp + 0x1d0], 0x100                |     
    0x00405251 setne dil                                     |     dil = (*((rsp + 0x1d0)) != 0x100) ? 1 : 0;
    0x00405255 mov esi, 0x44d6e6                             |     esi = "targetBuffer.size() == SIZE";
    0x0040525a mov edx, 0x464                                |     edx = 0x464;
    0x0040525f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405264 xor edi, edi                                  |     edi = 0;
    0x00405266 cmp qword [rsp + 0x2d0], 0                    |     
    0x0040526f setne dil                                     |     dil = (*((rsp + 0x2d0)) != 0) ? 1 : 0;
    0x00405273 mov esi, 0x44d702                             |     esi = "0 == sourceBuffer.data()";
    0x00405278 mov edx, 0x466                                |     edx = 0x466;
    0x0040527d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405282 xor edi, edi                                  |     edi = 0;
    0x00405284 cmp dword [rsp + 0x2e0], 0                    |     
    0x0040528c setne dil                                     |     dil = (*((rsp + 0x2e0)) != 0) ? 1 : 0;
    0x00405290 mov esi, 0x44d71b                             |     esi = "0 == sourceBuffer.size()";
    0x00405295 mov edx, 0x467                                |     edx = 0x467;
    0x0040529a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040529f pxor xmm0, xmm0                               |     xmm0 = 0;
    0x004052a3 movdqa xmmword [rsp + 0x80], xmm0             |     __asm ("movdqa xmmword [rsp + 0x80], xmm0");
    0x004052ac mov dword [rsp + 0x90], 0                     |     *((rsp + 0x90)) = 0;
    0x004052b7 mov qword [rsp + 0x30], r14                   |     *((rsp + 0x30)) = r14;
    0x004052bc mov qword [rsp + 0x38], rbx                   |     *((rsp + 0x38)) = rbx;
    0x004052c1 lock add dword [rbx + 8], 2                   |     *((rbx + 8)) += 2;
    0x004052c6 mov dword [rsp + 0x40], 0x100                 |     *((rsp + 0x40)) = 0x100;
    0x004052ce lea rdi, [rsp + 0x80]                         |     
    0x004052d6 lea rsi, [rsp + 0x30]                         |     
    0x004052db call 0x41db50                                 |     BloombergLP::bdlbb::BlobBuffer::operator=(BloombergLP::bdlbb::BlobBuffer&&) (rsp + 0x80, rsp + 0x30);
    0x004052e0 mov rdi, qword [rsp + 0x38]                   |     rdi = *((rsp + 0x38));
    0x004052e5 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x004052e8 je 0x4052ef                                   |         
    0x004052ea call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x004052ef xor edi, edi                                  |     edi = 0;
    0x004052f1 cmp qword [rsp + 0x80], r14                   |     
    0x004052f9 setne dil                                     |     dil = (*((rsp + 0x80)) != r14) ? 1 : 0;
    0x004052fd mov esi, 0x44d734                             |     esi = "autoMoved.data() == aBuffer.get()";
    0x00405302 mov edx, 0x46c                                |     edx = 0x46c;
    0x00405307 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040530c xor edi, edi                                  |     edi = 0;
    0x0040530e cmp dword [rsp + 0x90], 0x100                 |     
    0x00405319 setne dil                                     |     dil = (*((rsp + 0x90)) != 0x100) ? 1 : 0;
    0x0040531d mov esi, 0x44d756                             |     esi = "autoMoved.size() == SIZE";
    0x00405322 mov edx, 0x46d                                |     edx = 0x46d;
    0x00405327 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040532c mov rdi, qword [rsp + 0x88]                   |     rdi = *((rsp + 0x88));
    0x00405334 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x00405337 je 0x40533e                                   |         
    0x00405339 call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x0040533e mov rdi, qword [rsp + 0x1c8]                  |     rdi = *((rsp + 0x1c8));
    0x00405346 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x00405349 je 0x405350                                   |         
    0x0040534b call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x00405350 mov rdi, qword [rsp + 0x2d8]                  |     rdi = *((rsp + 0x2d8));
    0x00405358 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x0040535b je 0x405362                                   |         
    0x0040535d call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x00405362 mov rdi, rbx                                  |     
    0x00405365 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (rbx);
    0x0040536a cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x0040536f jl 0x405385                                   |         
    0x00405371 mov edi, 0x6869c8                             |         
    0x00405376 mov esi, 0x44d76f                             |         
    0x0040537b mov edx, 0x21                                 |         
    0x00405380 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Testing 'Blob' move construction\n", 0x21);
                                                             |     }
    0x00405385 xor edx, edx                                  |     
    0x00405387 cmp dword [rsp + 0xc], 4                      |     
    0x0040538c setg dl                                       |     dl = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x0040538f lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x00405397 mov esi, 0x44d791                             |     
    0x0040539c mov rdi, rbx                                  |     
    0x0040539f xor ecx, ecx                                  |     
    0x004053a1 call 0x425ab0                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (rbx, "source", 0, 0);
    0x004053a6 mov qword [rsp + 0x3a0], 0x44cb78             |     *((rsp + method.SimpleBlobBufferFactory.SimpleBlobBufferFactory__)) = 0x44cb78;
    0x004053b2 mov qword [rsp + 0x3a8], 0x100                |     *((rsp + 0x3a8)) = 0x100;
    0x004053be mov qword [rsp + 0x3b0], rbx                  |     *((rsp + 0x3b0)) = rbx;
    0x004053c6 lea rdi, [rsp + 0x80]                         |     
    0x004053ce lea rsi, [rsp + 0x3a0]                        |     
    0x004053d6 mov rdx, rbx                                  |     
    0x004053d9 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x80, rsp + 0x3a0, rbx);
    0x004053de lea rdi, [rsp + 0x80]                         |     
    0x004053e6 mov esi, 0x144                                |     
    0x004053eb call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, 0x144);
    0x004053f0 lea rdi, [rsp + 0x30]                         |     
    0x004053f5 lea rsi, [rsp + 0x80]                         |     
    0x004053fd call 0x41e6e0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::Blob&&) (rsp + 0x30, rsp + 0x80);
    0x00405402 mov eax, dword [rsp + 0x54]                   |     eax = *((rsp + 0x54));
    0x00405406 sub eax, dword [rsp + 0x5c]                   |     eax -= *((rsp + 0x5c));
    0x0040540a xor edi, edi                                  |     edi = 0;
    0x0040540c cmp eax, 0x44                                 |     
    0x0040540f setne dil                                     |     dil = (eax != 0x44) ? 1 : 0;
    0x00405413 mov esi, 0x44d798                             |     esi = "68 == target.lastDataBufferLength()";
    0x00405418 mov edx, 0x47b                                |     edx = 0x47b;
    0x0040541d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405422 xor edi, edi                                  |     edi = 0;
    0x00405424 cmp dword [rsp + 0x54], 0x144                 |     
    0x0040542c setne dil                                     |     dil = (*((rsp + 0x54)) != 0x144) ? 1 : 0;
    0x00405430 mov esi, 0x44d7bc                             |     esi = "324 == target.length()";
    0x00405435 mov edx, 0x47c                                |     edx = 0x47c;
    0x0040543a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040543f xor edi, edi                                  |     edi = 0;
    0x00405441 cmp dword [rsp + 0x58], 1                     |     
    0x00405446 setne dil                                     |     dil = (*((rsp + 0x58)) != 1) ? 1 : 0;
    0x0040544a mov esi, 0x44d7d3                             |     esi = "2 == target.numDataBuffers()";
    0x0040544f mov edx, 0x47d                                |     edx = 0x47d;
    0x00405454 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405459 mov rax, qword [rsp + 0x38]                   |     rax = *((rsp + 0x38));
    0x0040545e sub rax, qword [rsp + 0x30]                   |     rax -= *((rsp + 0x30));
    0x00405463 shr rax, 3                                    |     rax >>= 3;
    0x00405467 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x0040546d xor edi, edi                                  |     edi = 0;
    0x0040546f cmp eax, 2                                    |     
    0x00405472 setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x00405476 mov esi, 0x44d7f0                             |     esi = "2 == target.numBuffers()";
    0x0040547b mov edx, 0x47e                                |     edx = 0x47e;
    0x00405480 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405485 xor edi, edi                                  |     edi = 0;
    0x00405487 cmp dword [rsp + 0x50], 0x200                 |     
    0x0040548f setne dil                                     |     dil = (*((rsp + 0x50)) != 0x200) ? 1 : 0;
    0x00405493 mov esi, 0x44d809                             |     esi = "512 == target.totalSize()";
    0x00405498 mov edx, 0x47f                                |     edx = 0x47f;
    0x0040549d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004054a2 mov rbx, qword [rsp + 0x320]                  |     rbx = *((rsp + 0x320));
    0x004054aa lea rdi, [rsp + 0x30]                         |     
    0x004054af mov esi, 0x400                                |     
    0x004054b4 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x30, 0x400);
    0x004054b9 xor edi, edi                                  |     edi = 0;
    0x004054bb cmp dword [rsp + 0x54], 0x400                 |     
    0x004054c3 setne dil                                     |     dil = (*((rsp + 0x54)) != 0x400) ? 1 : 0;
    0x004054c7 mov esi, 0x44d823                             |     esi = "1024 == target.length()";
    0x004054cc mov edx, 0x488                                |     edx = 0x488;
    0x004054d1 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004054d6 mov rax, qword [rsp + 0x320]                  |     rax = *((rsp + 0x320));
    0x004054de xor edi, edi                                  |     edi = 0;
    0x004054e0 cmp rbx, rax                                  |     
    0x004054e3 setge dil                                     |     dil = (rbx >= rax) ? 1 : 0;
    0x004054e7 mov esi, 0x44d83b                             |     esi = "SOURCE_NUM_BYTES_IN_USE < sa.numBytesInUse()";
    0x004054ec mov edx, 0x48a                                |     edx = 0x48a;
    0x004054f1 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004054f6 mov eax, dword [rsp + 0xa4]                   |     eax = *((rsp + 0xa4));
    0x004054fd xor edi, edi                                  |     edi = 0;
    0x004054ff cmp eax, dword [rsp + 0xac]                   |     
    0x00405506 setne dil                                     |     dil = (eax != *((rsp + 0xac))) ? 1 : 0;
    0x0040550a mov esi, 0x44d868                             |     esi = "0 == source.lastDataBufferLength()";
    0x0040550f mov edx, 0x48e                                |     edx = 0x48e;
    0x00405514 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405519 xor edi, edi                                  |     edi = 0;
    0x0040551b cmp dword [rsp + 0xa4], 0                     |     
    0x00405523 setne dil                                     |     dil = (*((rsp + 0xa4)) != 0) ? 1 : 0;
    0x00405527 mov esi, 0x44d88b                             |     esi = "0 == source.length()";
    0x0040552c mov edx, 0x48f                                |     edx = 0x48f;
    0x00405531 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405536 xor edi, edi                                  |     edi = 0;
    0x00405538 cmp dword [rsp + 0xa8], 0xffffffff            |     
    0x00405540 setne dil                                     |     dil = (*((rsp + 0xa8)) != 0xffffffff) ? 1 : 0;
    0x00405544 mov esi, 0x44d8a0                             |     esi = "0 == source.numDataBuffers()";
    0x00405549 mov edx, 0x490                                |     edx = 0x490;
    0x0040554e call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405553 mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x0040555b sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x00405563 shr rax, 3                                    |     rax >>= 3;
    0x00405567 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x0040556d xor edi, edi                                  |     edi = 0;
    0x0040556f test eax, eax                                 |     
    0x00405571 setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x00405575 mov esi, 0x44d8bd                             |     esi = "0 == source.numBuffers()";
    0x0040557a mov edx, 0x491                                |     edx = 0x491;
    0x0040557f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405584 xor edi, edi                                  |     edi = 0;
    0x00405586 cmp dword [rsp + 0xa0], 0                     |     
    0x0040558e setne dil                                     |     dil = (*((rsp + 0xa0)) != 0) ? 1 : 0;
    0x00405592 mov esi, 0x44d8d6                             |     esi = "0 == source.totalSize()";
    0x00405597 mov edx, 0x492                                |     edx = 0x492;
    0x0040559c call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004055a1 mov edi, 0x100                                |     edi = 0x100;
    0x004055a6 call 0x403350                                 |     rax = operatornew[](unsigned long) ();
    0x004055ab mov rbp, rax                                  |     
    0x004055ae mov rbx, qword [rip + 0x281533]               |     rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004055b5 test rbx, rbx                                 |     
                                                             |     if (rbx == 0) {
    0x004055b8 jne 0x4055c2                                  |         
    0x004055ba call 0x425630                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004055bf mov rbx, rax                                  |         rbx = rax;
                                                             |     }
    0x004055c2 mov rax, qword [rbx]                          |     rax = *(rbx);
    0x004055c5 mov esi, 0x28                                 |     esi = 0x28;
    0x004055ca mov rdi, rbx                                  |     rdi = rbx;
    0x004055cd call qword [rax + 0x10]                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004055d0 mov r14, rax                                  |     r14 = rax;
    0x004055d3 mov qword [rax + 8], r15                      |     *((rax + 8)) = r15;
    0x004055d7 mov qword [rax], 0x4509c8                     |     *(rax) = vtable.BloombergLP::bslma::SharedPtrOutofplaceRep_char__BloombergLP::bslstl::SharedPtr_DefaultDeleter_.0;
    0x004055de mov qword [rax + 0x18], rbp                   |     *((rax + 0x18)) = rbp;
    0x004055e2 mov qword [rax + 0x20], rbx                   |     *((rax + 0x20)) = rbx;
    0x004055e6 mov qword [rsp + 0x2a0], rbp                  |     *((rsp + 0x2a0)) = rbp;
    0x004055ee mov qword [rsp + 0x2a8], rax                  |     *((rsp + 0x2a8)) = rax;
    0x004055f6 lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x004055fb mov dword [rsp + 0x2b0], 0x100                |     *((rsp + 0x2b0)) = 0x100;
    0x00405606 mov qword [rsp + 0x2b8], rbp                  |     *((rsp + 0x2b8)) = rbp;
    0x0040560e mov qword [rsp + 0x2c0], rax                  |     *((rsp + 0x2c0)) = rax;
    0x00405616 lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x0040561b mov dword [rsp + 0x2c8], 0x100                |     *((rsp + 0x2c8)) = 0x100;
    0x00405626 mov rax, qword [rsp + 0x318]                  |     rax = *((rsp + 0x318));
    0x0040562e mov rax, qword [rsp + 0x328]                  |     rax = *((rsp + 0x328));
    0x00405636 mov rbx, qword [rsp + 0x338]                  |     rbx = *((rsp + 0x338));
    0x0040563e lea rdi, [rsp + 0xf0]                         |     
    0x00405646 lea rsi, [rsp + 0x2a0]                        |     
    0x0040564e lea rcx, [rsp + 0x3a0]                        |     
    0x00405656 lea r8, [rsp + 0x2d0]                         |     
    0x0040565e mov edx, 2                                    |     
    0x00405663 call 0x41e280                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferconst*,int,BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0xf0, rsp + 0x2a0, 2, rsp + 0x3a0, rsp + 0x2d0);
    0x00405668 mov rax, qword [rsp + 0x338]                  |     rax = *((rsp + 0x338));
    0x00405670 sub rax, rbx                                  |     rax -= rbx;
    0x00405673 xor edi, edi                                  |     edi = 0;
    0x00405675 cmp rax, 1                                    |     
    0x00405679 setne dil                                     |     dil = (rax != 1) ? 1 : 0;
    0x0040567d mov esi, 0x44d8ee                             |     esi = "sam.numBlocksTotalChange() == 1";
    0x00405682 mov edx, 0x4a2                                |     edx = 0x4a2;
    0x00405687 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040568c mov eax, dword [rsp + 0x114]                  |     eax = *((rsp + 0x114));
    0x00405693 xor edi, edi                                  |     edi = 0;
    0x00405695 cmp eax, dword [rsp + 0x11c]                  |     
    0x0040569c setne dil                                     |     dil = (eax != *((rsp + 0x11c))) ? 1 : 0;
    0x004056a0 mov esi, 0x44d90e                             |     esi = "0 == autoMoved.lastDataBufferLength()";
    0x004056a5 mov edx, 0x4a5                                |     edx = 0x4a5;
    0x004056aa call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004056af xor edi, edi                                  |     edi = 0;
    0x004056b1 cmp dword [rsp + 0x114], 0                    |     
    0x004056b9 setne dil                                     |     dil = (*((rsp + 0x114)) != 0) ? 1 : 0;
    0x004056bd mov esi, 0x44d934                             |     esi = "0 == autoMoved.length()";
    0x004056c2 mov edx, 0x4a6                                |     edx = 0x4a6;
    0x004056c7 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004056cc xor edi, edi                                  |     edi = 0;
    0x004056ce cmp dword [rsp + 0x118], 0xffffffff           |     
    0x004056d6 setne dil                                     |     dil = (*((rsp + 0x118)) != 0xffffffff) ? 1 : 0;
    0x004056da mov esi, 0x44d94c                             |     esi = "0 == autoMoved.numDataBuffers()";
    0x004056df mov edx, 0x4a7                                |     edx = 0x4a7;
    0x004056e4 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004056e9 mov rax, qword [rsp + 0xf8]                   |     rax = *((rsp + 0xf8));
    0x004056f1 sub rax, qword [rsp + 0xf0]                   |     rax -= *((rsp + 0xf0));
    0x004056f9 shr rax, 3                                    |     rax >>= 3;
    0x004056fd imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405703 xor edi, edi                                  |     edi = 0;
    0x00405705 cmp eax, 2                                    |     
    0x00405708 setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x0040570c mov esi, 0x44d96c                             |     esi = "2 == autoMoved.numBuffers()";
    0x00405711 mov edx, 0x4a8                                |     edx = 0x4a8;
    0x00405716 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040571b xor edi, edi                                  |     edi = 0;
    0x0040571d cmp dword [rsp + 0x110], 0x200                |     
    0x00405728 setne dil                                     |     dil = (*((rsp + 0x110)) != 0x200) ? 1 : 0;
    0x0040572c mov esi, 0x44d988                             |     esi = "512 == autoMoved.totalSize()";
    0x00405731 mov edx, 0x4a9                                |     edx = 0x4a9;
    0x00405736 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040573b lea rdi, [rsp + 0x140]                        |     
    0x00405743 lea rsi, [rsp + 0x3a0]                        |     
    0x0040574b lea rdx, [rsp + 0x2d0]                        |     
    0x00405753 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x140, rsp + 0x3a0, rsp + 0x2d0);
    0x00405758 lea rdi, [rsp + 0x140]                        |     
    0x00405760 mov esi, 0x144                                |     
    0x00405765 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x140, 0x144);
    0x0040576a xor edx, edx                                  |     
    0x0040576c cmp dword [rsp + 0xc], 4                      |     
    0x00405771 setg dl                                       |     dl = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x00405774 mov rbx, qword [rsp + 0x320]                  |     rbx = *((rsp + 0x320));
    0x0040577c lea rdi, [rsp + 0x1c0]                        |     
    0x00405784 mov esi, 0x44d9a5                             |     
    0x00405789 xor ecx, ecx                                  |     
    0x0040578b call 0x425ab0                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (rsp + 0x1c0, "target", 0, 0);
    0x00405790 mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00405798 xor edi, edi                                  |     edi = 0;
    0x0040579a test rax, rax                                 |     
    0x0040579d setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x004057a1 mov esi, 0x44d9ac                             |     esi = "0 == ta.numBytesInUse()";
    0x004057a6 mov edx, 0x4b5                                |     edx = 0x4b5;
    0x004057ab call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004057b0 lea rdi, [rsp + 0x180]                        |     
    0x004057b8 lea rsi, [rsp + 0x140]                        |     
    0x004057c0 lea rdx, [rsp + 0x1c0]                        |     
    0x004057c8 call 0x41e7f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::Blob&&,BloombergLP::bslma::Allocator*) (rsp + 0x180, rsp + 0x140, rsp + 0x1c0);
    0x004057cd mov rax, qword [rsp + 0x320]                  |     rax = *((rsp + 0x320));
    0x004057d5 xor edi, edi                                  |     edi = 0;
    0x004057d7 cmp rbx, rax                                  |     
    0x004057da setne dil                                     |     dil = (rbx != rax) ? 1 : 0;
    0x004057de mov esi, 0x44d9c4                             |     esi = "SOURCE_DA_NUM_BYTES_IN_USE == sa.numBytesInUse()";
    0x004057e3 mov edx, 0x4b9                                |     edx = 0x4b9;
    0x004057e8 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004057ed mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x004057f5 xor edi, edi                                  |     edi = 0;
    0x004057f7 test rax, rax                                 |     
    0x004057fa setle dil                                     |     dil = (rax <= 0) ? 1 : 0;
    0x004057fe mov esi, 0x44d9f5                             |     esi = "0 < ta.numBytesInUse()";
    0x00405803 mov edx, 0x4ba                                |     edx = 0x4ba;
    0x00405808 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040580d mov eax, dword [rsp + 0x1a4]                  |     eax = *((rsp + 0x1a4));
    0x00405814 sub eax, dword [rsp + 0x1ac]                  |     eax -= *((rsp + 0x1ac));
    0x0040581b xor edi, edi                                  |     edi = 0;
    0x0040581d cmp eax, 0x44                                 |     
    0x00405820 setne dil                                     |     dil = (eax != 0x44) ? 1 : 0;
    0x00405824 mov esi, 0x44da0c                             |     esi = "68 == targetDA.lastDataBufferLength()";
    0x00405829 mov edx, 0x4bc                                |     edx = 0x4bc;
    0x0040582e call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405833 xor edi, edi                                  |     edi = 0;
    0x00405835 cmp dword [rsp + 0x1a4], 0x144                |     
    0x00405840 setne dil                                     |     dil = (*((rsp + 0x1a4)) != 0x144) ? 1 : 0;
    0x00405844 mov esi, 0x44da32                             |     esi = "324 == targetDA.length()";
    0x00405849 mov edx, 0x4bd                                |     edx = 0x4bd;
    0x0040584e call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405853 xor edi, edi                                  |     edi = 0;
    0x00405855 cmp dword [rsp + 0x1a8], 1                    |     
    0x0040585d setne dil                                     |     dil = (*((rsp + 0x1a8)) != 1) ? 1 : 0;
    0x00405861 mov esi, 0x44da4b                             |     esi = "2 == targetDA.numDataBuffers()";
    0x00405866 mov edx, 0x4be                                |     edx = 0x4be;
    0x0040586b call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405870 mov rax, qword [rsp + 0x188]                  |     rax = *((rsp + 0x188));
    0x00405878 sub rax, qword [rsp + 0x180]                  |     rax -= *((rsp + 0x180));
    0x00405880 shr rax, 3                                    |     rax >>= 3;
    0x00405884 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x0040588a xor edi, edi                                  |     edi = 0;
    0x0040588c cmp eax, 2                                    |     
    0x0040588f setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x00405893 mov esi, 0x44da6a                             |     esi = "2 == targetDA.numBuffers()";
    0x00405898 mov edx, 0x4bf                                |     edx = 0x4bf;
    0x0040589d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004058a2 xor edi, edi                                  |     edi = 0;
    0x004058a4 cmp dword [rsp + 0x1a0], 0x200                |     
    0x004058af setne dil                                     |     dil = (*((rsp + 0x1a0)) != 0x200) ? 1 : 0;
    0x004058b3 mov esi, 0x44da85                             |     esi = "512 == targetDA.totalSize()";
    0x004058b8 mov edx, 0x4c0                                |     edx = 0x4c0;
    0x004058bd call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004058c2 mov rbx, qword [rsp + 0x210]                  |     rbx = *((rsp + 0x210));
    0x004058ca lea rdi, [rsp + 0x180]                        |     
    0x004058d2 mov esi, 0x400                                |     
    0x004058d7 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x180, 0x400);
    0x004058dc xor edi, edi                                  |     edi = 0;
    0x004058de cmp dword [rsp + 0x1a4], 0x400                |     
    0x004058e9 setne dil                                     |     dil = (*((rsp + 0x1a4)) != 0x400) ? 1 : 0;
    0x004058ed mov esi, 0x44daa1                             |     esi = "1024 == targetDA.length()";
    0x004058f2 mov edx, 0x4c8                                |     edx = 0x4c8;
    0x004058f7 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004058fc mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00405904 xor edi, edi                                  |     edi = 0;
    0x00405906 cmp rbx, rax                                  |     
    0x00405909 setge dil                                     |     dil = (rbx >= rax) ? 1 : 0;
    0x0040590d mov esi, 0x44dabb                             |     esi = "TARGET_DA_NUM_BYTES_IN_USE < ta.numBytesInUse()";
    0x00405912 mov edx, 0x4ca                                |     edx = 0x4ca;
    0x00405917 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040591c mov eax, dword [rsp + 0x164]                  |     eax = *((rsp + 0x164));
    0x00405923 xor edi, edi                                  |     edi = 0;
    0x00405925 cmp eax, dword [rsp + 0x16c]                  |     
    0x0040592c setne dil                                     |     dil = (eax != *((rsp + 0x16c))) ? 1 : 0;
    0x00405930 mov esi, 0x44daeb                             |     esi = "0 == sourceDA.lastDataBufferLength()";
    0x00405935 mov edx, 0x4ce                                |     edx = 0x4ce;
    0x0040593a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040593f xor edi, edi                                  |     edi = 0;
    0x00405941 cmp dword [rsp + 0x164], 0                    |     
    0x00405949 setne dil                                     |     dil = (*((rsp + 0x164)) != 0) ? 1 : 0;
    0x0040594d mov esi, 0x44db10                             |     esi = "0 == sourceDA.length()";
    0x00405952 mov edx, 0x4cf                                |     edx = 0x4cf;
    0x00405957 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040595c xor edi, edi                                  |     edi = 0;
    0x0040595e cmp dword [rsp + 0x168], 0xffffffff           |     
    0x00405966 setne dil                                     |     dil = (*((rsp + 0x168)) != 0xffffffff) ? 1 : 0;
    0x0040596a mov esi, 0x44db27                             |     esi = "0 == sourceDA.numDataBuffers()";
    0x0040596f mov edx, 0x4d0                                |     edx = 0x4d0;
    0x00405974 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405979 mov rax, qword [rsp + 0x148]                  |     rax = *((rsp + 0x148));
    0x00405981 sub rax, qword [rsp + 0x140]                  |     rax -= *((rsp + 0x140));
    0x00405989 shr rax, 3                                    |     rax >>= 3;
    0x0040598d imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405993 xor edi, edi                                  |     edi = 0;
    0x00405995 test eax, eax                                 |     
    0x00405997 setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x0040599b mov esi, 0x44db46                             |     esi = "0 == sourceDA.numBuffers()";
    0x004059a0 mov edx, 0x4d1                                |     edx = 0x4d1;
    0x004059a5 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004059aa xor edi, edi                                  |     edi = 0;
    0x004059ac cmp dword [rsp + 0x160], 0                    |     
    0x004059b4 setne dil                                     |     dil = (*((rsp + 0x160)) != 0) ? 1 : 0;
    0x004059b8 mov esi, 0x44db61                             |     esi = "0 == sourceDA.totalSize()";
    0x004059bd mov edx, 0x4d2                                |     edx = 0x4d2;
    0x004059c2 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004059c7 lea rdi, [rsp + 0x180]                        |     
    0x004059cf call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x180);
    0x004059d4 lea rdi, [rsp + 0x1c0]                        |     
    0x004059dc call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rsp + 0x1c0);
    0x004059e1 lea rdi, [rsp + 0x140]                        |     
    0x004059e9 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x140);
    0x004059ee lea rdi, [rsp + 0xf0]                         |     
    0x004059f6 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0xf0);
    0x004059fb mov rdi, qword [rsp + 0x2c0]                  |     rdi = *((rsp + 0x2c0));
    0x00405a03 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x00405a06 je 0x405a0d                                   |         
    0x00405a08 call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x00405a0d mov rdi, qword [rsp + 0x2a8]                  |     rdi = *((rsp + 0x2a8));
    0x00405a15 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x00405a18 je 0x405a1f                                   |         
    0x00405a1a call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x00405a1f mov rdi, r14                                  |     
    0x00405a22 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (r14);
    0x00405a27 lea rdi, [rsp + 0x30]                         |     
    0x00405a2c call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x30);
    0x00405a31 lea rdi, [rsp + 0x80]                         |     
    0x00405a39 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x80);
    0x00405a3e lea rdi, [rsp + 0x3a0]                        |     rdi = rsp + 0x3a0;
    0x00405a46 call 0x41f840                                 |     BloombergLP::bdlbb::BlobBufferFactory::~BlobBufferFactory() (rdi, rsi, rdx, rcx, r8, r9);
    0x00405a4b lea rdi, [rsp + 0x2d0]                        |     
    0x00405a53 call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rsp + 0x2d0);
    0x00405a58 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00405a5d jl 0x405a73                                   |         
    0x00405a5f mov edi, 0x6869c8                             |         
    0x00405a64 mov esi, 0x44db7b                             |         
    0x00405a69 mov edx, 0x1f                                 |         
    0x00405a6e call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "Testing 'Blob' move assignment\n", 0x1f);
                                                             |     }
    0x00405a73 lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x00405a7b mov esi, 0x44d791                             |     
    0x00405a80 mov rdi, rbx                                  |     
    0x00405a83 xor edx, edx                                  |     
    0x00405a85 call 0x4259e0                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,BloombergLP::bslma::Allocator*) (rbx, "source", 0);
    0x00405a8a mov qword [rsp + 0x3a0], 0x44cb78             |     *((rsp + method.SimpleBlobBufferFactory.SimpleBlobBufferFactory__)) = 0x44cb78;
    0x00405a96 mov qword [rsp + 0x3a8], 0x100                |     *((rsp + 0x3a8)) = 0x100;
    0x00405aa2 mov qword [rsp + 0x3b0], rbx                  |     *((rsp + 0x3b0)) = rbx;
    0x00405aaa lea rdi, [rsp + 0x80]                         |     
    0x00405ab2 lea rsi, [rsp + 0x3a0]                        |     
    0x00405aba mov rdx, rbx                                  |     
    0x00405abd call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x80, rsp + 0x3a0, rbx);
    0x00405ac2 lea rdi, [rsp + 0x80]                         |     
    0x00405aca mov esi, 0x144                                |     
    0x00405acf call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, 0x144);
    0x00405ad4 lea rdi, [rsp + 0x30]                         |     
    0x00405ad9 lea rsi, [rsp + 0x2d0]                        |     
    0x00405ae1 call 0x41e170                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bslma::Allocator*) (rsp + 0x30, rsp + 0x2d0);
    0x00405ae6 lea rdi, [rsp + 0x30]                         |     
    0x00405aeb lea rsi, [rsp + 0x80]                         |     
    0x00405af3 call 0x41ea90                                 |     BloombergLP::bdlbb::Blob::operator=(BloombergLP::bdlbb::Blob&&) (rsp + 0x30, rsp + 0x80);
    0x00405af8 mov eax, dword [rsp + 0x54]                   |     eax = *((rsp + 0x54));
    0x00405afc sub eax, dword [rsp + 0x5c]                   |     eax -= *((rsp + 0x5c));
    0x00405b00 xor edi, edi                                  |     edi = 0;
    0x00405b02 cmp eax, 0x44                                 |     
    0x00405b05 setne dil                                     |     dil = (eax != 0x44) ? 1 : 0;
    0x00405b09 mov esi, 0x44d798                             |     esi = "68 == target.lastDataBufferLength()";
    0x00405b0e mov edx, 0x4e0                                |     edx = 0x4e0;
    0x00405b13 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405b18 xor edi, edi                                  |     edi = 0;
    0x00405b1a cmp dword [rsp + 0x54], 0x144                 |     
    0x00405b22 setne dil                                     |     dil = (*((rsp + 0x54)) != 0x144) ? 1 : 0;
    0x00405b26 mov esi, 0x44d7bc                             |     esi = "324 == target.length()";
    0x00405b2b mov edx, 0x4e1                                |     edx = 0x4e1;
    0x00405b30 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405b35 xor edi, edi                                  |     edi = 0;
    0x00405b37 cmp dword [rsp + 0x58], 1                     |     
    0x00405b3c setne dil                                     |     dil = (*((rsp + 0x58)) != 1) ? 1 : 0;
    0x00405b40 mov esi, 0x44d7d3                             |     esi = "2 == target.numDataBuffers()";
    0x00405b45 mov edx, 0x4e2                                |     edx = 0x4e2;
    0x00405b4a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405b4f mov rax, qword [rsp + 0x38]                   |     rax = *((rsp + 0x38));
    0x00405b54 sub rax, qword [rsp + 0x30]                   |     rax -= *((rsp + 0x30));
    0x00405b59 shr rax, 3                                    |     rax >>= 3;
    0x00405b5d imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405b63 xor edi, edi                                  |     edi = 0;
    0x00405b65 cmp eax, 2                                    |     
    0x00405b68 setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x00405b6c mov esi, 0x44d7f0                             |     esi = "2 == target.numBuffers()";
    0x00405b71 mov edx, 0x4e3                                |     edx = 0x4e3;
    0x00405b76 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405b7b xor edi, edi                                  |     edi = 0;
    0x00405b7d cmp dword [rsp + 0x50], 0x200                 |     
    0x00405b85 setne dil                                     |     dil = (*((rsp + 0x50)) != 0x200) ? 1 : 0;
    0x00405b89 mov esi, 0x44d809                             |     esi = "512 == target.totalSize()";
    0x00405b8e mov edx, 0x4e4                                |     edx = 0x4e4;
    0x00405b93 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405b98 mov rbx, qword [rsp + 0x320]                  |     rbx = *((rsp + 0x320));
    0x00405ba0 lea rdi, [rsp + 0x30]                         |     
    0x00405ba5 mov esi, 0x400                                |     
    0x00405baa call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x30, 0x400);
    0x00405baf xor edi, edi                                  |     edi = 0;
    0x00405bb1 cmp dword [rsp + 0x54], 0x400                 |     
    0x00405bb9 setne dil                                     |     dil = (*((rsp + 0x54)) != 0x400) ? 1 : 0;
    0x00405bbd mov esi, 0x44d823                             |     esi = "1024 == target.length()";
    0x00405bc2 mov edx, 0x4ed                                |     edx = 0x4ed;
    0x00405bc7 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405bcc mov rax, qword [rsp + 0x320]                  |     rax = *((rsp + 0x320));
    0x00405bd4 xor edi, edi                                  |     edi = 0;
    0x00405bd6 cmp rbx, rax                                  |     
    0x00405bd9 setge dil                                     |     dil = (rbx >= rax) ? 1 : 0;
    0x00405bdd mov esi, 0x44db9b                             |     esi = "TARGET_NUM_BYTES_IN_USE < sa.numBytesInUse()";
    0x00405be2 mov edx, 0x4ef                                |     edx = 0x4ef;
    0x00405be7 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405bec mov eax, dword [rsp + 0xa4]                   |     eax = *((rsp + 0xa4));
    0x00405bf3 xor edi, edi                                  |     edi = 0;
    0x00405bf5 cmp eax, dword [rsp + 0xac]                   |     
    0x00405bfc setne dil                                     |     dil = (eax != *((rsp + 0xac))) ? 1 : 0;
    0x00405c00 mov esi, 0x44d868                             |     esi = "0 == source.lastDataBufferLength()";
    0x00405c05 mov edx, 0x4f3                                |     edx = 0x4f3;
    0x00405c0a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405c0f xor edi, edi                                  |     edi = 0;
    0x00405c11 cmp dword [rsp + 0xa4], 0                     |     
    0x00405c19 setne dil                                     |     dil = (*((rsp + 0xa4)) != 0) ? 1 : 0;
    0x00405c1d mov esi, 0x44d88b                             |     esi = "0 == source.length()";
    0x00405c22 mov edx, 0x4f4                                |     edx = 0x4f4;
    0x00405c27 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405c2c xor edi, edi                                  |     edi = 0;
    0x00405c2e cmp dword [rsp + 0xa8], 0xffffffff            |     
    0x00405c36 setne dil                                     |     dil = (*((rsp + 0xa8)) != 0xffffffff) ? 1 : 0;
    0x00405c3a mov esi, 0x44d8a0                             |     esi = "0 == source.numDataBuffers()";
    0x00405c3f mov edx, 0x4f5                                |     edx = 0x4f5;
    0x00405c44 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405c49 mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x00405c51 sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x00405c59 shr rax, 3                                    |     rax >>= 3;
    0x00405c5d imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405c63 xor edi, edi                                  |     edi = 0;
    0x00405c65 test eax, eax                                 |     
    0x00405c67 setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x00405c6b mov esi, 0x44d8bd                             |     esi = "0 == source.numBuffers()";
    0x00405c70 mov edx, 0x4f6                                |     edx = 0x4f6;
    0x00405c75 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405c7a xor edi, edi                                  |     edi = 0;
    0x00405c7c cmp dword [rsp + 0xa0], 0                     |     
    0x00405c84 setne dil                                     |     dil = (*((rsp + 0xa0)) != 0) ? 1 : 0;
    0x00405c88 mov esi, 0x44d8d6                             |     esi = "0 == source.totalSize()";
    0x00405c8d mov edx, 0x4f7                                |     edx = 0x4f7;
    0x00405c92 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405c97 mov edi, 0x100                                |     edi = 0x100;
    0x00405c9c call 0x403350                                 |     rax = operatornew[](unsigned long) ();
    0x00405ca1 mov rbp, rax                                  |     
    0x00405ca4 mov rbx, qword [rip + 0x280e3d]               |     rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00405cab test rbx, rbx                                 |     
                                                             |     if (rbx == 0) {
    0x00405cae jne 0x405cb8                                  |         
    0x00405cb0 call 0x425630                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00405cb5 mov rbx, rax                                  |         rbx = rax;
                                                             |     }
    0x00405cb8 mov rax, qword [rbx]                          |     rax = *(rbx);
    0x00405cbb mov esi, 0x28                                 |     esi = 0x28;
    0x00405cc0 mov rdi, rbx                                  |     rdi = rbx;
    0x00405cc3 call qword [rax + 0x10]                       |     rax = uint64_t (*rax + 0x10)() ();
    0x00405cc6 mov r14, rax                                  |     r14 = rax;
    0x00405cc9 mov qword [rax + 8], r15                      |     *((rax + 8)) = r15;
    0x00405ccd mov qword [rax], 0x4509c8                     |     *(rax) = vtable.BloombergLP::bslma::SharedPtrOutofplaceRep_char__BloombergLP::bslstl::SharedPtr_DefaultDeleter_.0;
    0x00405cd4 mov qword [rax + 0x18], rbp                   |     *((rax + 0x18)) = rbp;
    0x00405cd8 mov qword [rax + 0x20], rbx                   |     *((rax + 0x20)) = rbx;
    0x00405cdc mov qword [rsp + 0x2a0], rbp                  |     *((rsp + 0x2a0)) = rbp;
    0x00405ce4 mov qword [rsp + 0x2a8], rax                  |     *((rsp + 0x2a8)) = rax;
    0x00405cec lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x00405cf1 mov dword [rsp + 0x2b0], 0x100                |     *((rsp + 0x2b0)) = 0x100;
    0x00405cfc mov qword [rsp + 0x2b8], rbp                  |     *((rsp + 0x2b8)) = rbp;
    0x00405d04 mov qword [rsp + 0x2c0], rax                  |     *((rsp + 0x2c0)) = rax;
    0x00405d0c lock add dword [rax + 8], 2                   |     *((rax + 8)) += 2;
    0x00405d11 mov dword [rsp + 0x2c8], 0x100                |     *((rsp + 0x2c8)) = 0x100;
    0x00405d1c lea rdi, [rsp + 0xf0]                         |     
    0x00405d24 lea rsi, [rsp + 0x2d0]                        |     
    0x00405d2c call 0x41e170                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bslma::Allocator*) (rsp + 0xf0, rsp + 0x2d0);
    0x00405d31 mov rax, qword [rsp + 0x318]                  |     rax = *((rsp + 0x318));
    0x00405d39 mov rax, qword [rsp + 0x328]                  |     rax = *((rsp + 0x328));
    0x00405d41 mov rbx, qword [rsp + 0x338]                  |     rbx = *((rsp + 0x338));
    0x00405d49 lea rdi, [rsp + 0x1c0]                        |     
    0x00405d51 lea rsi, [rsp + 0x2a0]                        |     
    0x00405d59 lea rcx, [rsp + 0x3a0]                        |     
    0x00405d61 lea r8, [rsp + 0x2d0]                         |     
    0x00405d69 mov edx, 2                                    |     
    0x00405d6e call 0x41e280                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferconst*,int,BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x1c0, rsp + 0x2a0, 2, rsp + 0x3a0, rsp + 0x2d0);
    0x00405d73 lea rdi, [rsp + 0xf0]                         |     
    0x00405d7b lea rsi, [rsp + 0x1c0]                        |     
    0x00405d83 call 0x41ea90                                 |     BloombergLP::bdlbb::Blob::operator=(BloombergLP::bdlbb::Blob&&) (rsp + 0xf0, rsp + 0x1c0);
    0x00405d88 lea rdi, [rsp + 0x1c0]                        |     
    0x00405d90 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x1c0);
    0x00405d95 mov rax, qword [rsp + 0x338]                  |     rax = *((rsp + 0x338));
    0x00405d9d sub rax, rbx                                  |     rax -= rbx;
    0x00405da0 xor edi, edi                                  |     edi = 0;
    0x00405da2 cmp rax, 1                                    |     
    0x00405da6 setne dil                                     |     dil = (rax != 1) ? 1 : 0;
    0x00405daa mov esi, 0x44dbc8                             |     esi = "1 == sam.numBlocksTotalChange()";
    0x00405daf mov edx, 0x505                                |     edx = 0x505;
    0x00405db4 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405db9 mov eax, dword [rsp + 0x114]                  |     eax = *((rsp + 0x114));
    0x00405dc0 xor edi, edi                                  |     edi = 0;
    0x00405dc2 cmp eax, dword [rsp + 0x11c]                  |     
    0x00405dc9 setne dil                                     |     dil = (eax != *((rsp + 0x11c))) ? 1 : 0;
    0x00405dcd mov esi, 0x44d90e                             |     esi = "0 == autoMoved.lastDataBufferLength()";
    0x00405dd2 mov edx, 0x508                                |     edx = 0x508;
    0x00405dd7 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405ddc xor edi, edi                                  |     edi = 0;
    0x00405dde cmp dword [rsp + 0x114], 0                    |     
    0x00405de6 setne dil                                     |     dil = (*((rsp + 0x114)) != 0) ? 1 : 0;
    0x00405dea mov esi, 0x44d934                             |     esi = "0 == autoMoved.length()";
    0x00405def mov edx, 0x509                                |     edx = 0x509;
    0x00405df4 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405df9 xor edi, edi                                  |     edi = 0;
    0x00405dfb cmp dword [rsp + 0x118], 0xffffffff           |     
    0x00405e03 setne dil                                     |     dil = (*((rsp + 0x118)) != 0xffffffff) ? 1 : 0;
    0x00405e07 mov esi, 0x44d94c                             |     esi = "0 == autoMoved.numDataBuffers()";
    0x00405e0c mov edx, 0x50a                                |     edx = 0x50a;
    0x00405e11 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405e16 mov rax, qword [rsp + 0xf8]                   |     rax = *((rsp + 0xf8));
    0x00405e1e sub rax, qword [rsp + 0xf0]                   |     rax -= *((rsp + 0xf0));
    0x00405e26 shr rax, 3                                    |     rax >>= 3;
    0x00405e2a imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405e30 xor edi, edi                                  |     edi = 0;
    0x00405e32 cmp eax, 2                                    |     
    0x00405e35 setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x00405e39 mov esi, 0x44d96c                             |     esi = "2 == autoMoved.numBuffers()";
    0x00405e3e mov edx, 0x50b                                |     edx = 0x50b;
    0x00405e43 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405e48 xor edi, edi                                  |     edi = 0;
    0x00405e4a cmp dword [rsp + 0x110], 0x200                |     
    0x00405e55 setne dil                                     |     dil = (*((rsp + 0x110)) != 0x200) ? 1 : 0;
    0x00405e59 mov esi, 0x44d988                             |     esi = "512 == autoMoved.totalSize()";
    0x00405e5e mov edx, 0x50c                                |     edx = 0x50c;
    0x00405e63 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405e68 lea rdi, [rsp + 0x140]                        |     
    0x00405e70 lea rsi, [rsp + 0x3a0]                        |     
    0x00405e78 lea rdx, [rsp + 0x2d0]                        |     
    0x00405e80 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x140, rsp + 0x3a0, rsp + 0x2d0);
    0x00405e85 lea rdi, [rsp + 0x140]                        |     
    0x00405e8d mov esi, 0x144                                |     
    0x00405e92 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x140, 0x144);
    0x00405e97 xor edx, edx                                  |     
    0x00405e99 cmp dword [rsp + 0xc], 4                      |     
    0x00405e9e setg dl                                       |     dl = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x00405ea1 lea rdi, [rsp + 0x1c0]                        |     
    0x00405ea9 mov esi, 0x44d9a5                             |     
    0x00405eae xor ecx, ecx                                  |     
    0x00405eb0 call 0x425ab0                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(char const*,bool,BloombergLP::bslma::Allocator*) (rsp + 0x1c0, "target", 0, 0);
    0x00405eb5 lea rdi, [rsp + 0x180]                        |     
    0x00405ebd lea rsi, [rsp + 0x1c0]                        |     
    0x00405ec5 call 0x41e170                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bslma::Allocator*) (rsp + 0x180, rsp + 0x1c0);
    0x00405eca lea rdi, [rsp + 0x180]                        |     
    0x00405ed2 lea rsi, [rsp + 0x140]                        |     
    0x00405eda call 0x41ea90                                 |     BloombergLP::bdlbb::Blob::operator=(BloombergLP::bdlbb::Blob&&) (rsp + 0x180, rsp + 0x140);
    0x00405edf mov eax, dword [rsp + 0x1a4]                  |     eax = *((rsp + 0x1a4));
    0x00405ee6 sub eax, dword [rsp + 0x1ac]                  |     eax -= *((rsp + 0x1ac));
    0x00405eed xor edi, edi                                  |     edi = 0;
    0x00405eef cmp eax, 0x44                                 |     
    0x00405ef2 setne dil                                     |     dil = (eax != 0x44) ? 1 : 0;
    0x00405ef6 mov esi, 0x44da0c                             |     esi = "68 == targetDA.lastDataBufferLength()";
    0x00405efb mov edx, 0x518                                |     edx = 0x518;
    0x00405f00 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405f05 xor edi, edi                                  |     edi = 0;
    0x00405f07 cmp dword [rsp + 0x1a4], 0x144                |     
    0x00405f12 setne dil                                     |     dil = (*((rsp + 0x1a4)) != 0x144) ? 1 : 0;
    0x00405f16 mov esi, 0x44da32                             |     esi = "324 == targetDA.length()";
    0x00405f1b mov edx, 0x519                                |     edx = 0x519;
    0x00405f20 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405f25 xor edi, edi                                  |     edi = 0;
    0x00405f27 cmp dword [rsp + 0x1a8], 1                    |     
    0x00405f2f setne dil                                     |     dil = (*((rsp + 0x1a8)) != 1) ? 1 : 0;
    0x00405f33 mov esi, 0x44da4b                             |     esi = "2 == targetDA.numDataBuffers()";
    0x00405f38 mov edx, 0x51a                                |     edx = 0x51a;
    0x00405f3d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405f42 mov rax, qword [rsp + 0x188]                  |     rax = *((rsp + 0x188));
    0x00405f4a sub rax, qword [rsp + 0x180]                  |     rax -= *((rsp + 0x180));
    0x00405f52 shr rax, 3                                    |     rax >>= 3;
    0x00405f56 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00405f5c xor edi, edi                                  |     edi = 0;
    0x00405f5e cmp eax, 2                                    |     
    0x00405f61 setne dil                                     |     dil = (eax != 2) ? 1 : 0;
    0x00405f65 mov esi, 0x44da6a                             |     esi = "2 == targetDA.numBuffers()";
    0x00405f6a mov edx, 0x51b                                |     edx = 0x51b;
    0x00405f6f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405f74 xor edi, edi                                  |     edi = 0;
    0x00405f76 cmp dword [rsp + 0x1a0], 0x200                |     
    0x00405f81 setne dil                                     |     dil = (*((rsp + 0x1a0)) != 0x200) ? 1 : 0;
    0x00405f85 mov esi, 0x44da85                             |     esi = "512 == targetDA.totalSize()";
    0x00405f8a mov edx, 0x51c                                |     edx = 0x51c;
    0x00405f8f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405f94 mov rbx, qword [rsp + 0x210]                  |     rbx = *((rsp + 0x210));
    0x00405f9c lea rdi, [rsp + 0x180]                        |     
    0x00405fa4 mov esi, 0x400                                |     
    0x00405fa9 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x180, 0x400);
    0x00405fae xor edi, edi                                  |     edi = 0;
    0x00405fb0 cmp dword [rsp + 0x1a4], 0x400                |     
    0x00405fbb setne dil                                     |     dil = (*((rsp + 0x1a4)) != 0x400) ? 1 : 0;
    0x00405fbf mov esi, 0x44daa1                             |     esi = "1024 == targetDA.length()";
    0x00405fc4 mov edx, 0x525                                |     edx = 0x525;
    0x00405fc9 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405fce mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00405fd6 xor edi, edi                                  |     edi = 0;
    0x00405fd8 cmp rbx, rax                                  |     
    0x00405fdb setge dil                                     |     dil = (rbx >= rax) ? 1 : 0;
    0x00405fdf mov esi, 0x44dabb                             |     esi = "TARGET_DA_NUM_BYTES_IN_USE < ta.numBytesInUse()";
    0x00405fe4 mov edx, 0x527                                |     edx = 0x527;
    0x00405fe9 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00405fee mov eax, dword [rsp + 0x164]                  |     eax = *((rsp + 0x164));
    0x00405ff5 xor edi, edi                                  |     edi = 0;
    0x00405ff7 cmp eax, dword [rsp + 0x16c]                  |     
    0x00405ffe setne dil                                     |     dil = (eax != *((rsp + 0x16c))) ? 1 : 0;
    0x00406002 mov esi, 0x44daeb                             |     esi = "0 == sourceDA.lastDataBufferLength()";
    0x00406007 mov edx, 0x52b                                |     edx = 0x52b;
    0x0040600c call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406011 xor edi, edi                                  |     edi = 0;
    0x00406013 cmp dword [rsp + 0x164], 0                    |     
    0x0040601b setne dil                                     |     dil = (*((rsp + 0x164)) != 0) ? 1 : 0;
    0x0040601f mov esi, 0x44db10                             |     esi = "0 == sourceDA.length()";
    0x00406024 mov edx, 0x52c                                |     edx = 0x52c;
    0x00406029 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040602e xor edi, edi                                  |     edi = 0;
    0x00406030 cmp dword [rsp + 0x168], 0xffffffff           |     
    0x00406038 setne dil                                     |     dil = (*((rsp + 0x168)) != 0xffffffff) ? 1 : 0;
    0x0040603c mov esi, 0x44db27                             |     esi = "0 == sourceDA.numDataBuffers()";
    0x00406041 mov edx, 0x52d                                |     edx = 0x52d;
    0x00406046 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040604b mov rax, qword [rsp + 0x148]                  |     rax = *((rsp + 0x148));
    0x00406053 sub rax, qword [rsp + 0x140]                  |     rax -= *((rsp + 0x140));
    0x0040605b shr rax, 3                                    |     rax >>= 3;
    0x0040605f imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00406065 xor edi, edi                                  |     edi = 0;
    0x00406067 test eax, eax                                 |     
    0x00406069 setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x0040606d mov esi, 0x44db46                             |     esi = "0 == sourceDA.numBuffers()";
    0x00406072 mov edx, 0x52e                                |     edx = 0x52e;
    0x00406077 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040607c xor edi, edi                                  |     edi = 0;
    0x0040607e cmp dword [rsp + 0x160], 0                    |     
    0x00406086 setne dil                                     |     dil = (*((rsp + 0x160)) != 0) ? 1 : 0;
    0x0040608a mov esi, 0x44db61                             |     esi = "0 == sourceDA.totalSize()";
    0x0040608f mov edx, 0x52f                                |     edx = 0x52f;
    0x00406094 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406099 lea rdi, [rsp + 0x180]                        |     
    0x004060a1 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x180);
    0x004060a6 lea rdi, [rsp + 0x1c0]                        |     
    0x004060ae call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rsp + 0x1c0);
    0x004060b3 lea rdi, [rsp + 0x140]                        |     
    0x004060bb call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x140);
    0x004060c0 lea rdi, [rsp + 0xf0]                         |     
    0x004060c8 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0xf0);
    0x004060cd mov rdi, qword [rsp + 0x2c0]                  |     rdi = *((rsp + 0x2c0));
    0x004060d5 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x004060d8 je 0x4060df                                   |         
    0x004060da call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x004060df mov rdi, qword [rsp + 0x2a8]                  |     rdi = *((rsp + 0x2a8));
    0x004060e7 test rdi, rdi                                 |     
                                                             |     if (rdi != 0) {
    0x004060ea je 0x4060f1                                   |         
    0x004060ec call 0x4257c0                                 |         BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
                                                             |     }
    0x004060f1 mov rdi, r14                                  |     
    0x004060f4 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (r14);
    0x004060f9 lea rdi, [rsp + 0x30]                         |     
    0x004060fe call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x30);
    0x00406103 lea rdi, [rsp + 0x80]                         |     
    0x0040610b call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x80);
    0x00406110 lea rdi, [rsp + 0x3a0]                        |     rdi = rsp + 0x3a0;
    0x00406118 jmp 0x414cd6                                  |     void (*0x414cd6)() ();
    0x0040611d cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00406122 jl 0x40626b                                   |         
    0x00406128 mov rax, qword [rip + 0x280899]               |         rax = std::__1::cout;
    0x0040612f mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00406134 add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x00406138 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406140 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406145 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040614d mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406152 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406157 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x0040615a mov rdi, rax                                  |         rdi = rax;
    0x0040615d mov esi, 0xa                                  |         esi = 0xa;
    0x00406162 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406165 mov ebx, eax                                  |         ebx = eax;
    0x00406167 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040616f call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406174 movsx esi, bl                                 |         esi = (int32_t) bl;
    0x00406177 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x0040617c call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406181 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00406186 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040618b mov edi, 0x6869c8                             |         
    0x00406190 mov esi, 0x44ddca                             |         
    0x00406195 mov edx, 0x20                                 |         
    0x0040619a call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING CONCERN: Buffer aliasing", 0x20);
    0x0040619f mov rbx, rax                                  |         rbx = rax;
    0x004061a2 mov rax, qword [rax]                          |         rax = *(rax);
    0x004061a5 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x004061a9 add rsi, rbx                                  |         rsi += rbx;
    0x004061ac lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004061b4 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x004061b9 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004061c1 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x004061c6 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004061cb mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004061ce mov rdi, rax                                  |         rdi = rax;
    0x004061d1 mov esi, 0xa                                  |         esi = 0xa;
    0x004061d6 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004061d9 mov ebp, eax                                  |         
    0x004061db lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004061e3 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004061e8 movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x004061ec mov rdi, rbx                                  |         rdi = rbx;
    0x004061ef call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004061f4 mov rdi, rbx                                  |         rdi = rbx;
    0x004061f7 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004061fc mov esi, 0x44e0cd                             |         
    0x00406201 mov edx, 0x20                                 |         
    0x00406206 mov rdi, rbx                                  |         
    0x00406209 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0cd, 0x20);
    0x0040620e mov rbx, rax                                  |         rbx = rax;
    0x00406211 mov rax, qword [rax]                          |         rax = *(rax);
    0x00406214 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00406218 add rsi, rbx                                  |         rsi += rbx;
    0x0040621b lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406223 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406228 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406230 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406235 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040623a mov rcx, qword [rax]                          |         rcx = *(rax);
    0x0040623d mov rdi, rax                                  |         rdi = rax;
    0x00406240 mov esi, 0xa                                  |         esi = 0xa;
    0x00406245 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406248 mov ebp, eax                                  |         
    0x0040624a lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406252 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406257 movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x0040625b mov rdi, rbx                                  |         rdi = rbx;
    0x0040625e call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406263 mov rdi, rbx                                  |         rdi = rbx;
    0x00406266 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x0040626b xor esi, esi                                  |     
    0x0040626d cmp dword [rsp + 0xc], 4                      |     
    0x00406272 setg sil                                      |     sil = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x00406276 lea rdi, [rsp + 0x2d0]                        |     
    0x0040627e xor edx, edx                                  |     
    0x00406280 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rsp + 0x2d0, 0, 0);
    0x00406285 lea rdi, [rsp + 0x3d0]                        |     
    0x0040628d lea rsi, [rsp + 0x2d0]                        |     
    0x00406295 call 0x4256b0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::DefaultAllocatorGuard(BloombergLP::bslma::Allocator*) (rsp + 0x3d0, rsp + 0x2d0);
    0x0040629a xor esi, esi                                  |     
    0x0040629c mov ebx, dword [rsp + 0xc]                    |     ebx = *((rsp + 0xc));
    0x004062a0 cmp ebx, 4                                    |     
    0x004062a3 setg sil                                      |     sil = (ebx > 4) ? 1 : 0;
    0x004062a7 lea r14, [rsp + 0x1c0]                        |     r14 = rsp + 0x1c0;
    0x004062af mov rdi, r14                                  |     
    0x004062b2 xor edx, edx                                  |     
    0x004062b4 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (r14, 0, 0);
    0x004062b9 cmp ebx, 4                                    |     
                                                             |     if (ebx >= 4) {
    0x004062bc jl 0x4062d1                                   |         
    0x004062be test byte [rip + 0x2807b3], 1                 |         
                                                             |         if ((*(0x00686a78) & 1) != 0) {
    0x004062c5 jne 0x4062d1                                  |             goto label_10;
                                                             |         }
    0x004062c7 mov edi, 0x44ddeb                             |         
    0x004062cc call 0x4032c0                                 |         puts ("\t\tBSLMA EXCEPTION TEST -- (ENABLED) --");
                                                             |     }
                                                             | label_10:
    0x004062d1 mov byte [rip + 0x2807a0], 1                  |     *(0x00686a78) = 1;
    0x004062d8 cmp dword [rsp + 0xc], 5                      |     
                                                             |     if (*((rsp + 0xc)) >= 5) {
    0x004062dd jl 0x4062e9                                   |         
    0x004062df mov edi, 0x44de12                             |         
    0x004062e4 call 0x4032c0                                 |         puts ("\t\tBegin bslma exception test.");
                                                             |     }
    0x004062e9 mov qword [rsp + 0xf0], 0x450ab0              |     *((rsp + 0xf0)) = vtable.BloombergLP::bslma::TestAllocator_Proxy_BloombergLP::bslma::TestAllocator_.0;
    0x004062f5 mov qword [rsp + 0xf8], r14                   |     *((rsp + 0xf8)) = r14;
    0x004062fd mov qword [rsp + 0x1e0], 0                    |     *((rsp + 0x1e0)) = 0;
    0x00406309 lea r13, [rsp + 0x80]                         |     r13 = rsp + 0x80;
    0x00406311 lea r15, [rsp + 0x30]                         |     r15 = rsp + 0x30;
    0x00406316 xor ebx, ebx                                  |     ebx = 0;
    0x00406318 mov qword [rsp + 0x20], rbx                   |     *((rsp + 0x20)) = rbx;
    0x0040631d mov qword [rsp + 0x30], 0x44cb78              |     *((rsp + 0x30)) = vtable.SimpleBlobBufferFactory.0;
    0x00406326 mov qword [rsp + 0x38], 4                     |     *((rsp + 0x38)) = 4;
    0x0040632f mov qword [rsp + 0x40], r14                   |     *((rsp + 0x40)) = r14;
    0x00406334 mov rdi, r13                                  |     
    0x00406337 mov rsi, r15                                  |     
    0x0040633a mov rdx, r14                                  |     
    0x0040633d call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (r13, r15, r14);
    0x00406342 mov rdi, r13                                  |     
    0x00406345 mov esi, 3                                    |     
    0x0040634a call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (r13, 3);
    0x0040634f xor edi, edi                                  |     edi = 0;
    0x00406351 cmp dword [rsp + 0xa4], 3                     |     
    0x00406359 setne dil                                     |     dil = (*((rsp + 0xa4)) != 3) ? 1 : 0;
    0x0040635d mov esi, 0x44de8e                             |     esi = 0x44de8e;
    0x00406362 mov edx, 0x5f6                                |     edx = 0x5f6;
    0x00406367 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040636c xor edi, edi                                  |     edi = 0;
    0x0040636e cmp dword [rsp + 0xa0], 4                     |     
    0x00406376 setne dil                                     |     dil = (*((rsp + 0xa0)) != 4) ? 1 : 0;
    0x0040637a mov esi, 0x44deb0                             |     esi = 0x44deb0;
    0x0040637f mov edx, 0x5f7                                |     edx = 0x5f7;
    0x00406384 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406389 mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406391 xor edi, edi                                  |     edi = 0;
    0x00406393 cmp dword [rax + 0x10], 4                     |     
    0x00406397 setne dil                                     |     dil = (*((rax + 0x10)) != 4) ? 1 : 0;
    0x0040639b mov esi, 0x44de30                             |     esi = "BUFFER_SIZE == X.buffer(0).size()";
    0x004063a0 mov edx, 0x5f8                                |     edx = 0x5f8;
    0x004063a5 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004063aa cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x004063af jl 0x4064b4                                   |         
    0x004063b5 mov edi, 0x6869c8                             |         
    0x004063ba mov esi, 0x44de52                             |         
    0x004063bf mov edx, 0xd                                  |         
    0x004063c4 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x004063c9 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x004063d0 mov rdi, rax                                  |         rdi = rax;
    0x004063d3 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004063d8 mov esi, 0x44de60                             |         
    0x004063dd mov edx, 2                                    |         
    0x004063e2 mov rdi, rax                                  |         
    0x004063e5 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004063ea mov rdi, rax                                  |         rdi = rax;
    0x004063ed call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004063f2 mov edi, 0x6869c8                             |         
    0x004063f7 mov esi, 0x44de63                             |         
    0x004063fc mov edx, 0x10                                 |         
    0x00406401 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00406406 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x0040640d mov rdi, rax                                  |         rdi = rax;
    0x00406410 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406415 mov esi, 0x44de60                             |         
    0x0040641a mov edx, 2                                    |         
    0x0040641f mov rdi, rax                                  |         
    0x00406422 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406427 mov rdi, rax                                  |         rdi = rax;
    0x0040642a call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040642f mov edi, 0x6869c8                             |         
    0x00406434 mov esi, 0x44de74                             |         
    0x00406439 mov edx, 0x15                                 |         
    0x0040643e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(0).size() = ", 0x15);
    0x00406443 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x0040644b mov esi, dword [rcx + 0x10]                   |         esi = *((rcx + 0x10));
    0x0040644e mov rdi, rax                                  |         rdi = rax;
    0x00406451 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406456 mov rbx, rax                                  |         rbx = rax;
    0x00406459 mov rax, qword [rax]                          |         rax = *(rax);
    0x0040645c mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00406460 add rsi, rbx                                  |         rsi += rbx;
    0x00406463 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x0040646b call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406470 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406475 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x0040647d call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406482 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406485 mov rdi, rax                                  |         rdi = rax;
    0x00406488 mov esi, 0xa                                  |         esi = 0xa;
    0x0040648d call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406490 mov r12d, eax                                 |         r12d = eax;
    0x00406493 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x0040649b call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004064a0 movsx esi, r12b                               |         esi = (int32_t) r12b;
    0x004064a4 mov rdi, rbx                                  |         rdi = rbx;
    0x004064a7 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004064ac mov rdi, rbx                                  |         rdi = rbx;
    0x004064af call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x004064b4 mov rdx, qword [rsp + 0x80]                   |     
    0x004064bc mov rdi, r13                                  |     
    0x004064bf xor esi, esi                                  |     
    0x004064c1 call 0x41ebd0                                 |     BloombergLP::bdlbb::Blob::insertBuffer(int,BloombergLP::bdlbb::BlobBufferconst&) (r13, 0, *((rsp + 0x80)));
    0x004064c6 xor edi, edi                                  |     edi = 0;
    0x004064c8 cmp dword [rsp + 0xa4], 7                     |     
    0x004064d0 setne dil                                     |     dil = (*((rsp + 0xa4)) != 7) ? 1 : 0;
    0x004064d4 mov esi, 0x44de8a                             |     esi = "2 * BUFFER_SIZE - 1 == X.length()";
    0x004064d9 mov edx, 0x5fe                                |     edx = 0x5fe;
    0x004064de call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004064e3 xor edi, edi                                  |     edi = 0;
    0x004064e5 cmp dword [rsp + 0xa0], 8                     |     
    0x004064ed setne dil                                     |     dil = (*((rsp + 0xa0)) != 8) ? 1 : 0;
    0x004064f1 mov esi, 0x44deac                             |     esi = "2 * BUFFER_SIZE == X.totalSize()";
    0x004064f6 mov edx, 0x5ff                                |     edx = 0x5ff;
    0x004064fb call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406500 mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406508 mov rcx, qword [rax]                          |     rcx = *(rax);
    0x0040650b xor edi, edi                                  |     edi = 0;
    0x0040650d cmp rcx, qword [rax + 0x18]                   |     
    0x00406511 setne dil                                     |     dil = (rcx != *((rax + 0x18))) ? 1 : 0;
    0x00406515 mov esi, 0x44decd                             |     esi = "X.buffer(0).data() == X.buffer(1).data()";
    0x0040651a mov edx, 0x600                                |     edx = 0x600;
    0x0040651f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406524 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00406529 jl 0x40666f                                   |         
    0x0040652f mov edi, 0x6869c8                             |         
    0x00406534 mov esi, 0x44de52                             |         
    0x00406539 mov edx, 0xd                                  |         
    0x0040653e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00406543 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x0040654a mov rdi, rax                                  |         rdi = rax;
    0x0040654d call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406552 mov esi, 0x44de60                             |         
    0x00406557 mov edx, 2                                    |         
    0x0040655c mov rdi, rax                                  |         
    0x0040655f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406564 mov rdi, rax                                  |         rdi = rax;
    0x00406567 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040656c mov edi, 0x6869c8                             |         
    0x00406571 mov esi, 0x44de63                             |         
    0x00406576 mov edx, 0x10                                 |         
    0x0040657b call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00406580 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x00406587 mov rdi, rax                                  |         rdi = rax;
    0x0040658a call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040658f mov esi, 0x44de60                             |         
    0x00406594 mov edx, 2                                    |         
    0x00406599 mov rdi, rax                                  |         
    0x0040659c call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004065a1 mov rdi, rax                                  |         rdi = rax;
    0x004065a4 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004065a9 mov edi, 0x6869c8                             |         
    0x004065ae mov esi, 0x44de74                             |         
    0x004065b3 mov edx, 0x15                                 |         
    0x004065b8 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(0).size() = ", 0x15);
    0x004065bd mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x004065c5 mov esi, dword [rcx + 0x10]                   |         esi = *((rcx + 0x10));
    0x004065c8 mov rdi, rax                                  |         rdi = rax;
    0x004065cb call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004065d0 mov esi, 0x44de60                             |         
    0x004065d5 mov edx, 2                                    |         
    0x004065da mov rdi, rax                                  |         
    0x004065dd call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004065e2 mov rdi, rax                                  |         rdi = rax;
    0x004065e5 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004065ea mov edi, 0x6869c8                             |         
    0x004065ef mov esi, 0x44def6                             |         
    0x004065f4 mov edx, 0x15                                 |         
    0x004065f9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(1).size() = ", 0x15);
    0x004065fe mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406606 mov esi, dword [rcx + 0x28]                   |         esi = *((rcx + 0x28));
    0x00406609 mov rdi, rax                                  |         rdi = rax;
    0x0040660c call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406611 mov rbx, rax                                  |         rbx = rax;
    0x00406614 mov rax, qword [rax]                          |         rax = *(rax);
    0x00406617 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040661b add rsi, rbx                                  |         rsi += rbx;
    0x0040661e lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00406626 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040662b mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406630 lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00406638 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040663d mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406640 mov rdi, rax                                  |         rdi = rax;
    0x00406643 mov esi, 0xa                                  |         esi = 0xa;
    0x00406648 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040664b mov r12d, eax                                 |         r12d = eax;
    0x0040664e lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00406656 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040665b movsx esi, r12b                               |         esi = (int32_t) r12b;
    0x0040665f mov rdi, rbx                                  |         rdi = rbx;
    0x00406662 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406667 mov rdi, rbx                                  |         rdi = rbx;
    0x0040666a call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x0040666f mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406677 mov rcx, qword [rsp + 0x88]                   |     rcx = *((rsp + 0x88));
    0x0040667f sub rcx, rax                                  |     rcx -= rax;
    0x00406682 shr rcx, 3                                    |     rcx >>= 3;
    0x00406686 imul ecx, ecx, 0xaaaaaaab                     |     ecx *= 0xaaaaaaab;
    0x0040668c test ecx, ecx                                 |     
                                                             |     if (ecx <= 0) {
    0x0040668e jle 0x40672b                                  |         goto label_11;
                                                             |     }
    0x00406694 xor r12d, r12d                                |     r12d = 0;
    0x00406697 jmp 0x4066c0                                  |     
                                                             |     while (*((rax + rbx + 0x10)) <= 0) {
                                                             | label_0:
    0x004066a0 inc r12                                       |         r12++;
    0x004066a3 mov rcx, qword [rsp + 0x88]                   |         rcx = *((rsp + 0x88));
    0x004066ab sub rcx, rax                                  |         rcx -= rax;
    0x004066ae shr rcx, 3                                    |         rcx >>= 3;
    0x004066b2 imul ecx, ecx, 0xaaaaaaab                     |         ecx *= 0xaaaaaaab;
    0x004066b8 movsxd rcx, ecx                               |         rcx = (int64_t) ecx;
    0x004066bb cmp r12, rcx                                  |         
                                                             |         if (r12 >= rcx) {
    0x004066be jge 0x40672b                                  |             goto label_11;
                                                             |         }
    0x004066c0 lea rcx, [r12*8]                              |         rcx = r12*8;
    0x004066c8 lea rbx, [rcx + rcx*2]                        |         rbx = rcx * 3;
    0x004066cc mov rdi, qword [rax + rbx]                    |         
    0x004066d0 movsxd rdx, dword [rax + rbx + 0x10]          |         rdx = *((rax + rbx + 0x10));
    0x004066d5 mov esi, r12d                                 |         
    0x004066d8 call 0x4031e0                                 |         memset (*((rax + rbx)), r12d, rdx);
    0x004066dd mov rax, qword [rsp + 0x80]                   |         rax = *((rsp + 0x80));
    0x004066e5 cmp dword [rax + rbx + 0x10], 0               |         
    0x004066ea jle 0x4066a0                                  |         
                                                             |     }
    0x004066ec xor ebp, ebp                                  |     ebp = 0;
    0x004066ee nop                                           |     
                                                             |     do {
    0x004066f0 lea rbx, [r12 + r12*2]                        |         rbx = r12 * 3;
    0x004066f4 mov rax, qword [rax + rbx*8]                  |         rax = *((rax + rbx*8));
    0x004066f8 xor edi, edi                                  |         edi = 0;
    0x004066fa cmp byte [rax + rbp], r12b                    |         
    0x004066fe setne dil                                     |         dil = (*((rax + rbp)) != r12b) ? 1 : 0;
    0x00406702 mov esi, 0x44cc26                             |         esi = "blob.buffer(i).data()[j] == filler";
    0x00406707 mov edx, 0xf3                                 |         edx = 0xf3;
    0x0040670c call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406711 inc rbp                                       |         rbp++;
    0x00406714 mov rax, qword [rsp + 0x80]                   |         rax = *((rsp + 0x80));
    0x0040671c movsxd rcx, dword [rax + rbx*8 + 0x10]        |         rcx = *((rax + rbx*8 + 0x10));
    0x00406721 cmp rbp, rcx                                  |         
    0x00406724 jl 0x4066f0                                   |         
                                                             |     } while (rbp < rcx);
    0x00406726 jmp 0x4066a0                                  |     goto label_0;
                                                             | label_11:
    0x0040672b mov rdi, r13                                  |     
    0x0040672e call 0x41f060                                 |     BloombergLP::bdlbb::Blob::trimLastDataBuffer() (r13);
    0x00406733 xor edi, edi                                  |     edi = 0;
    0x00406735 cmp dword [rsp + 0xa4], 7                     |     
    0x0040673d setne dil                                     |     dil = (*((rsp + 0xa4)) != 7) ? 1 : 0;
    0x00406741 mov esi, 0x44de8a                             |     esi = "2 * BUFFER_SIZE - 1 == X.length()";
    0x00406746 mov edx, 0x608                                |     edx = 0x608;
    0x0040674b call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406750 xor edi, edi                                  |     edi = 0;
    0x00406752 cmp dword [rsp + 0xa0], 7                     |     
    0x0040675a setne dil                                     |     dil = (*((rsp + 0xa0)) != 7) ? 1 : 0;
    0x0040675e mov esi, 0x44df0c                             |     esi = "2 * BUFFER_SIZE - 1 == X.totalSize()";
    0x00406763 mov edx, 0x609                                |     edx = 0x609;
    0x00406768 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040676d mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406775 xor edi, edi                                  |     edi = 0;
    0x00406777 cmp dword [rax + 0x10], 4                     |     
    0x0040677b setne dil                                     |     dil = (*((rax + 0x10)) != 4) ? 1 : 0;
    0x0040677f mov esi, 0x44de30                             |     esi = "BUFFER_SIZE == X.buffer(0).size()";
    0x00406784 mov edx, 0x60a                                |     edx = 0x60a;
    0x00406789 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040678e mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406796 xor edi, edi                                  |     edi = 0;
    0x00406798 cmp dword [rax + 0x28], 3                     |     
    0x0040679c setne dil                                     |     dil = (*((rax + 0x28)) != 3) ? 1 : 0;
    0x004067a0 mov esi, 0x44df31                             |     esi = "BUFFER_SIZE - 1 == X.buffer(1).size()";
    0x004067a5 mov edx, 0x60b                                |     edx = 0x60b;
    0x004067aa call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004067af cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x004067b4 jl 0x4068fa                                   |         
    0x004067ba mov edi, 0x6869c8                             |         
    0x004067bf mov esi, 0x44de52                             |         
    0x004067c4 mov edx, 0xd                                  |         
    0x004067c9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x004067ce mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x004067d5 mov rdi, rax                                  |         rdi = rax;
    0x004067d8 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004067dd mov esi, 0x44de60                             |         
    0x004067e2 mov edx, 2                                    |         
    0x004067e7 mov rdi, rax                                  |         
    0x004067ea call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004067ef mov rdi, rax                                  |         rdi = rax;
    0x004067f2 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004067f7 mov edi, 0x6869c8                             |         
    0x004067fc mov esi, 0x44de63                             |         
    0x00406801 mov edx, 0x10                                 |         
    0x00406806 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x0040680b mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x00406812 mov rdi, rax                                  |         rdi = rax;
    0x00406815 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040681a mov esi, 0x44de60                             |         
    0x0040681f mov edx, 2                                    |         
    0x00406824 mov rdi, rax                                  |         
    0x00406827 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x0040682c mov rdi, rax                                  |         rdi = rax;
    0x0040682f call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406834 mov edi, 0x6869c8                             |         
    0x00406839 mov esi, 0x44de74                             |         
    0x0040683e mov edx, 0x15                                 |         
    0x00406843 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(0).size() = ", 0x15);
    0x00406848 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406850 mov esi, dword [rcx + 0x10]                   |         esi = *((rcx + 0x10));
    0x00406853 mov rdi, rax                                  |         rdi = rax;
    0x00406856 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040685b mov esi, 0x44de60                             |         
    0x00406860 mov edx, 2                                    |         
    0x00406865 mov rdi, rax                                  |         
    0x00406868 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x0040686d mov rdi, rax                                  |         rdi = rax;
    0x00406870 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406875 mov edi, 0x6869c8                             |         
    0x0040687a mov esi, 0x44def6                             |         
    0x0040687f mov edx, 0x15                                 |         
    0x00406884 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(1).size() = ", 0x15);
    0x00406889 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406891 mov esi, dword [rcx + 0x28]                   |         esi = *((rcx + 0x28));
    0x00406894 mov rdi, rax                                  |         rdi = rax;
    0x00406897 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040689c mov rbx, rax                                  |         rbx = rax;
    0x0040689f mov rax, qword [rax]                          |         rax = *(rax);
    0x004068a2 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x004068a6 add rsi, rbx                                  |         rsi += rbx;
    0x004068a9 lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x004068b1 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x004068b6 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x004068bb lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x004068c3 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004068c8 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004068cb mov rdi, rax                                  |         rdi = rax;
    0x004068ce mov esi, 0xa                                  |         esi = 0xa;
    0x004068d3 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004068d6 mov r12d, eax                                 |         r12d = eax;
    0x004068d9 lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x004068e1 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004068e6 movsx esi, r12b                               |         esi = (int32_t) r12b;
    0x004068ea mov rdi, rbx                                  |         rdi = rbx;
    0x004068ed call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004068f2 mov rdi, rbx                                  |         rdi = rbx;
    0x004068f5 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x004068fa mov rsi, qword [rsp + 0x80]                   |     rsi = *((rsp + 0x80));
    0x00406902 mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x0040690a sub rax, rsi                                  |     rax -= rsi;
    0x0040690d shr rax, 3                                    |     rax >>= 3;
    0x00406911 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00406917 test eax, eax                                 |     
                                                             |     if (eax <= 0) {
    0x00406919 jle 0x4069bb                                  |         goto label_12;
                                                             |     }
    0x0040691f xor r12d, r12d                                |     r12d = 0;
    0x00406922 jmp 0x40694f                                  |     
                                                             |     while (*((rsi + rbx + 0x10)) <= 0) {
                                                             | label_1:
    0x00406930 inc r12                                       |         r12++;
    0x00406933 mov rax, qword [rsp + 0x88]                   |         rax = *((rsp + 0x88));
    0x0040693b sub rax, rsi                                  |         rax -= rsi;
    0x0040693e shr rax, 3                                    |         rax >>= 3;
    0x00406942 imul eax, eax, 0xaaaaaaab                     |         eax *= 0xaaaaaaab;
    0x00406948 cdqe                                          |         rax = (int64_t) eax;
    0x0040694a cmp r12, rax                                  |         
                                                             |         if (r12 >= rax) {
    0x0040694d jge 0x4069bb                                  |             goto label_12;
                                                             |         }
    0x0040694f lea rax, [r12*8]                              |         rax = r12*8;
    0x00406957 lea rbx, [rax + rax*2]                        |         rbx = rax * 3;
    0x0040695b mov rdi, qword [rsi + rbx]                    |         
    0x0040695f movsxd rdx, dword [rsi + rbx + 0x10]          |         rdx = *((rsi + rbx + 0x10));
    0x00406964 mov esi, r12d                                 |         
    0x00406967 call 0x4031e0                                 |         rax = memset (*((rsi + rbx)), r12d, rdx);
    0x0040696c mov rsi, qword [rsp + 0x80]                   |         rsi = *((rsp + 0x80));
    0x00406974 cmp dword [rsi + rbx + 0x10], 0               |         
    0x00406979 jle 0x406930                                  |         
                                                             |     }
    0x0040697b xor ebp, ebp                                  |     ebp = 0;
    0x0040697d nop dword [rax]                               |     
                                                             |     do {
    0x00406980 lea rbx, [r12 + r12*2]                        |         rbx = r12 * 3;
    0x00406984 mov rax, qword [rsi + rbx*8]                  |         rax = *((rsi + rbx*8));
    0x00406988 xor edi, edi                                  |         edi = 0;
    0x0040698a cmp byte [rax + rbp], r12b                    |         
    0x0040698e setne dil                                     |         dil = (*((rax + rbp)) != r12b) ? 1 : 0;
    0x00406992 mov esi, 0x44cc26                             |         esi = "blob.buffer(i).data()[j] == filler";
    0x00406997 mov edx, 0xf3                                 |         edx = 0xf3;
    0x0040699c call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004069a1 inc rbp                                       |         rbp++;
    0x004069a4 mov rsi, qword [rsp + 0x80]                   |         rsi = *((rsp + 0x80));
    0x004069ac movsxd rax, dword [rsi + rbx*8 + 0x10]        |         rax = *((rsi + rbx*8 + 0x10));
    0x004069b1 cmp rbp, rax                                  |         
    0x004069b4 jl 0x406980                                   |         
                                                             |     } while (rbp < rax);
    0x004069b6 jmp 0x406930                                  |     goto label_1;
                                                             | label_12:
    0x004069bb mov rdi, r13                                  |     
    0x004069be call 0x41eb30                                 |     BloombergLP::bdlbb::Blob::appendDataBuffer(BloombergLP::bdlbb::BlobBufferconst&) (r13, rsi);
    0x004069c3 xor edi, edi                                  |     edi = 0;
    0x004069c5 cmp dword [rsp + 0xa4], 0xb                   |     
    0x004069cd setne dil                                     |     dil = (*((rsp + 0xa4)) != 0xb) ? 1 : 0;
    0x004069d1 mov esi, 0x44df57                             |     esi = "3 * BUFFER_SIZE - 1 == X.length()";
    0x004069d6 mov edx, 0x613                                |     edx = 0x613;
    0x004069db call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004069e0 xor edi, edi                                  |     edi = 0;
    0x004069e2 cmp dword [rsp + 0xa0], 0xb                   |     
    0x004069ea setne dil                                     |     dil = (*((rsp + 0xa0)) != 0xb) ? 1 : 0;
    0x004069ee mov esi, 0x44df79                             |     esi = "3 * BUFFER_SIZE - 1 == X.totalSize()";
    0x004069f3 mov edx, 0x614                                |     edx = 0x614;
    0x004069f8 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004069fd mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406a05 xor edi, edi                                  |     edi = 0;
    0x00406a07 cmp dword [rax + 0x10], 4                     |     
    0x00406a0b setne dil                                     |     dil = (*((rax + 0x10)) != 4) ? 1 : 0;
    0x00406a0f mov esi, 0x44de30                             |     esi = "BUFFER_SIZE == X.buffer(0).size()";
    0x00406a14 mov edx, 0x615                                |     edx = 0x615;
    0x00406a19 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406a1e mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406a26 xor edi, edi                                  |     edi = 0;
    0x00406a28 cmp dword [rax + 0x28], 3                     |     
    0x00406a2c setne dil                                     |     dil = (*((rax + 0x28)) != 3) ? 1 : 0;
    0x00406a30 mov esi, 0x44df31                             |     esi = "BUFFER_SIZE - 1 == X.buffer(1).size()";
    0x00406a35 mov edx, 0x616                                |     edx = 0x616;
    0x00406a3a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406a3f mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406a47 xor edi, edi                                  |     edi = 0;
    0x00406a49 cmp dword [rax + 0x40], 4                     |     
    0x00406a4d setne dil                                     |     dil = (*((rax + 0x40)) != 4) ? 1 : 0;
    0x00406a51 mov esi, 0x44df9e                             |     esi = "BUFFER_SIZE == X.buffer(2).size()";
    0x00406a56 mov edx, 0x617                                |     edx = 0x617;
    0x00406a5b call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406a60 mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406a68 mov rcx, qword [rax]                          |     rcx = *(rax);
    0x00406a6b xor edi, edi                                  |     edi = 0;
    0x00406a6d cmp rcx, qword [rax + 0x18]                   |     
    0x00406a71 setne dil                                     |     dil = (rcx != *((rax + 0x18))) ? 1 : 0;
    0x00406a75 mov esi, 0x44decd                             |     esi = "X.buffer(0).data() == X.buffer(1).data()";
    0x00406a7a mov edx, 0x618                                |     edx = 0x618;
    0x00406a7f call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406a84 mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406a8c mov rcx, qword [rax]                          |     rcx = *(rax);
    0x00406a8f xor edi, edi                                  |     edi = 0;
    0x00406a91 cmp rcx, qword [rax + 0x30]                   |     
    0x00406a95 setne dil                                     |     dil = (rcx != *((rax + 0x30))) ? 1 : 0;
    0x00406a99 mov esi, 0x44dfc0                             |     esi = "X.buffer(0).data() == X.buffer(2).data()";
    0x00406a9e mov edx, 0x619                                |     edx = 0x619;
    0x00406aa3 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406aa8 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00406aad jl 0x406c34                                   |         
    0x00406ab3 mov edi, 0x6869c8                             |         
    0x00406ab8 mov esi, 0x44de52                             |         
    0x00406abd mov edx, 0xd                                  |         
    0x00406ac2 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00406ac7 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x00406ace mov rdi, rax                                  |         rdi = rax;
    0x00406ad1 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406ad6 mov esi, 0x44de60                             |         
    0x00406adb mov edx, 2                                    |         
    0x00406ae0 mov rdi, rax                                  |         
    0x00406ae3 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406ae8 mov rdi, rax                                  |         rdi = rax;
    0x00406aeb call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406af0 mov edi, 0x6869c8                             |         
    0x00406af5 mov esi, 0x44de63                             |         
    0x00406afa mov edx, 0x10                                 |         
    0x00406aff call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00406b04 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x00406b0b mov rdi, rax                                  |         rdi = rax;
    0x00406b0e call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406b13 mov esi, 0x44de60                             |         
    0x00406b18 mov edx, 2                                    |         
    0x00406b1d mov rdi, rax                                  |         
    0x00406b20 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406b25 mov rdi, rax                                  |         rdi = rax;
    0x00406b28 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406b2d mov edi, 0x6869c8                             |         
    0x00406b32 mov esi, 0x44de74                             |         
    0x00406b37 mov edx, 0x15                                 |         
    0x00406b3c call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(0).size() = ", 0x15);
    0x00406b41 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406b49 mov esi, dword [rcx + 0x10]                   |         esi = *((rcx + 0x10));
    0x00406b4c mov rdi, rax                                  |         rdi = rax;
    0x00406b4f call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406b54 mov esi, 0x44de60                             |         
    0x00406b59 mov edx, 2                                    |         
    0x00406b5e mov rdi, rax                                  |         
    0x00406b61 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406b66 mov rdi, rax                                  |         rdi = rax;
    0x00406b69 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406b6e mov edi, 0x6869c8                             |         
    0x00406b73 mov esi, 0x44def6                             |         
    0x00406b78 mov edx, 0x15                                 |         
    0x00406b7d call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(1).size() = ", 0x15);
    0x00406b82 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406b8a mov esi, dword [rcx + 0x28]                   |         esi = *((rcx + 0x28));
    0x00406b8d mov rdi, rax                                  |         rdi = rax;
    0x00406b90 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406b95 mov esi, 0x44de60                             |         
    0x00406b9a mov edx, 2                                    |         
    0x00406b9f mov rdi, rax                                  |         
    0x00406ba2 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00406ba7 mov rdi, rax                                  |         rdi = rax;
    0x00406baa call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406baf mov edi, 0x6869c8                             |         
    0x00406bb4 mov esi, 0x44dfe9                             |         
    0x00406bb9 mov edx, 0x15                                 |         
    0x00406bbe call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.buffer(2).size() = ", 0x15);
    0x00406bc3 mov rcx, qword [rsp + 0x80]                   |         rcx = *((rsp + 0x80));
    0x00406bcb mov esi, dword [rcx + 0x40]                   |         esi = *((rcx + 0x40));
    0x00406bce mov rdi, rax                                  |         rdi = rax;
    0x00406bd1 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00406bd6 mov rbx, rax                                  |         rbx = rax;
    0x00406bd9 mov rax, qword [rax]                          |         rax = *(rax);
    0x00406bdc mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00406be0 add rsi, rbx                                  |         rsi += rbx;
    0x00406be3 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00406beb call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406bf0 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406bf5 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00406bfd call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406c02 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406c05 mov rdi, rax                                  |         rdi = rax;
    0x00406c08 mov esi, 0xa                                  |         esi = 0xa;
    0x00406c0d call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406c10 mov r12d, eax                                 |         r12d = eax;
    0x00406c13 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00406c1b call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406c20 movsx esi, r12b                               |         esi = (int32_t) r12b;
    0x00406c24 mov rdi, rbx                                  |         rdi = rbx;
    0x00406c27 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406c2c mov rdi, rbx                                  |         rdi = rbx;
    0x00406c2f call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00406c34 mov rax, qword [rsp + 0x80]                   |     rax = *((rsp + 0x80));
    0x00406c3c mov rcx, qword [rsp + 0x88]                   |     rcx = *((rsp + 0x88));
    0x00406c44 sub rcx, rax                                  |     rcx -= rax;
    0x00406c47 shr rcx, 3                                    |     rcx >>= 3;
    0x00406c4b imul ecx, ecx, 0xaaaaaaab                     |     ecx *= 0xaaaaaaab;
    0x00406c51 test ecx, ecx                                 |     
                                                             |     if (ecx <= 0) {
    0x00406c53 jle 0x406ceb                                  |         goto label_13;
                                                             |     }
    0x00406c59 xor r12d, r12d                                |     r12d = 0;
    0x00406c5c jmp 0x406c80                                  |     
                                                             |     while (*((rax + rbx + 0x10)) <= 0) {
                                                             | label_2:
    0x00406c60 inc r12                                       |         r12++;
    0x00406c63 mov rcx, qword [rsp + 0x88]                   |         rcx = *((rsp + 0x88));
    0x00406c6b sub rcx, rax                                  |         rcx -= rax;
    0x00406c6e shr rcx, 3                                    |         rcx >>= 3;
    0x00406c72 imul ecx, ecx, 0xaaaaaaab                     |         ecx *= 0xaaaaaaab;
    0x00406c78 movsxd rcx, ecx                               |         rcx = (int64_t) ecx;
    0x00406c7b cmp r12, rcx                                  |         
                                                             |         if (r12 >= rcx) {
    0x00406c7e jge 0x406ceb                                  |             goto label_13;
                                                             |         }
    0x00406c80 lea rcx, [r12*8]                              |         rcx = r12*8;
    0x00406c88 lea rbx, [rcx + rcx*2]                        |         rbx = rcx * 3;
    0x00406c8c mov rdi, qword [rax + rbx]                    |         
    0x00406c90 movsxd rdx, dword [rax + rbx + 0x10]          |         rdx = *((rax + rbx + 0x10));
    0x00406c95 mov esi, r12d                                 |         
    0x00406c98 call 0x4031e0                                 |         memset (*((rax + rbx)), r12d, rdx);
    0x00406c9d mov rax, qword [rsp + 0x80]                   |         rax = *((rsp + 0x80));
    0x00406ca5 cmp dword [rax + rbx + 0x10], 0               |         
    0x00406caa jle 0x406c60                                  |         
                                                             |     }
    0x00406cac xor ebp, ebp                                  |     ebp = 0;
    0x00406cae nop                                           |     
                                                             |     do {
    0x00406cb0 lea rbx, [r12 + r12*2]                        |         rbx = r12 * 3;
    0x00406cb4 mov rax, qword [rax + rbx*8]                  |         rax = *((rax + rbx*8));
    0x00406cb8 xor edi, edi                                  |         edi = 0;
    0x00406cba cmp byte [rax + rbp], r12b                    |         
    0x00406cbe setne dil                                     |         dil = (*((rax + rbp)) != r12b) ? 1 : 0;
    0x00406cc2 mov esi, 0x44cc26                             |         esi = "blob.buffer(i).data()[j] == filler";
    0x00406cc7 mov edx, 0xf3                                 |         edx = 0xf3;
    0x00406ccc call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406cd1 inc rbp                                       |         rbp++;
    0x00406cd4 mov rax, qword [rsp + 0x80]                   |         rax = *((rsp + 0x80));
    0x00406cdc movsxd rcx, dword [rax + rbx*8 + 0x10]        |         rcx = *((rax + rbx*8 + 0x10));
    0x00406ce1 cmp rbp, rcx                                  |         
    0x00406ce4 jl 0x406cb0                                   |         
                                                             |     } while (rbp < rcx);
    0x00406ce6 jmp 0x406c60                                  |     goto label_2;
                                                             | label_13:
    0x00406ceb mov rdi, r13                                  |     
    0x00406cee call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (r13);
    0x00406cf3 mov rdi, r15                                  |     rdi = r15;
    0x00406cf6 call 0x41f840                                 |     BloombergLP::bdlbb::BlobBufferFactory::~BlobBufferFactory() (rdi, rsi, rdx, rcx, r8, r9);
    0x00406cfb mov rax, qword [rsp + 0x1e8]                  |     rax = *((rsp + 0x1e8));
    0x00406d03 xor edi, edi                                  |     edi = 0;
    0x00406d05 test rax, rax                                 |     
    0x00406d08 setle dil                                     |     dil = (rax <= 0) ? 1 : 0;
    0x00406d0c mov esi, 0x44f261                             |     esi = 0x44f261;
    0x00406d11 mov edx, 0x620                                |     edx = 0x620;
    0x00406d16 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406d1b mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00406d23 xor edi, edi                                  |     edi = 0;
    0x00406d25 test rax, rax                                 |     
    0x00406d28 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00406d2c mov esi, 0x44d9ac                             |     esi = "0 == ta.numBytesInUse()";
    0x00406d31 mov edx, 0x621                                |     edx = 0x621;
    0x00406d36 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406d3b mov rax, qword [rsp + 0x1f8]                  |     rax = *((rsp + 0x1f8));
    0x00406d43 xor edi, edi                                  |     edi = 0;
    0x00406d45 test rax, rax                                 |     
    0x00406d48 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00406d4c mov esi, 0x44dfff                             |     esi = "0 == ta.numMismatches()";
    0x00406d51 mov edx, 0x622                                |     edx = 0x622;
    0x00406d56 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406d5b mov rax, qword [rsp + 0x2f8]                  |     rax = *((rsp + 0x2f8));
    0x00406d63 xor edi, edi                                  |     edi = 0;
    0x00406d65 test rax, rax                                 |     
    0x00406d68 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00406d6c mov esi, 0x44e017                             |     esi = "0 == defaultAlloc.numAllocations()";
    0x00406d71 mov edx, 0x623                                |     edx = 0x623;
    0x00406d76 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00406d7b jmp 0x413e44                                  |     void (*0x413e44)() ();
    0x00406e51 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00406e56 jl 0x406f9f                                   |         
    0x00406e5c mov rax, qword [rip + 0x27fb65]               |         rax = std::__1::cout;
    0x00406e63 mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00406e68 add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x00406e6c lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406e74 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406e79 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406e81 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406e86 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406e8b mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406e8e mov rdi, rax                                  |         rdi = rax;
    0x00406e91 mov esi, 0xa                                  |         esi = 0xa;
    0x00406e96 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406e99 mov ebx, eax                                  |         ebx = eax;
    0x00406e9b lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406ea3 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406ea8 movsx esi, bl                                 |         esi = (int32_t) bl;
    0x00406eab mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00406eb0 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406eb5 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00406eba call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406ebf mov edi, 0x6869c8                             |         
    0x00406ec4 mov esi, 0x44ec23                             |         
    0x00406ec9 mov edx, 0x14                                 |         
    0x00406ece call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING: moveBuffers", 0x14);
    0x00406ed3 mov rbx, rax                                  |         rbx = rax;
    0x00406ed6 mov rax, qword [rax]                          |         rax = *(rax);
    0x00406ed9 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00406edd add rsi, rbx                                  |         rsi += rbx;
    0x00406ee0 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406ee8 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406eed lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406ef5 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406efa call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406eff mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406f02 mov rdi, rax                                  |         rdi = rax;
    0x00406f05 mov esi, 0xa                                  |         esi = 0xa;
    0x00406f0a call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406f0d mov ebp, eax                                  |         
    0x00406f0f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406f17 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406f1c movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00406f20 mov rdi, rbx                                  |         rdi = rbx;
    0x00406f23 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406f28 mov rdi, rbx                                  |         rdi = rbx;
    0x00406f2b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00406f30 mov esi, 0x44e0d9                             |         
    0x00406f35 mov edx, 0x14                                 |         
    0x00406f3a mov rdi, rbx                                  |         
    0x00406f3d call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0d9, 0x14);
    0x00406f42 mov rbx, rax                                  |         rbx = rax;
    0x00406f45 mov rax, qword [rax]                          |         rax = *(rax);
    0x00406f48 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00406f4c add rsi, rbx                                  |         rsi += rbx;
    0x00406f4f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406f57 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00406f5c lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406f64 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00406f69 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00406f6e mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00406f71 mov rdi, rax                                  |         rdi = rax;
    0x00406f74 mov esi, 0xa                                  |         esi = 0xa;
    0x00406f79 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00406f7c mov ebp, eax                                  |         
    0x00406f7e lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00406f86 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00406f8b movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00406f8f mov rdi, rbx                                  |         rdi = rbx;
    0x00406f92 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00406f97 mov rdi, rbx                                  |         rdi = rbx;
    0x00406f9a call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00406f9f xor esi, esi                                  |     
    0x00406fa1 cmp dword [rsp + 0xc], 4                      |     
    0x00406fa6 setg sil                                      |     sil = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x00406faa lea rdi, [rsp + 0x2d0]                        |     
    0x00406fb2 xor edx, edx                                  |     
    0x00406fb4 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rsp + 0x2d0, 0, 0);
    0x00406fb9 lea rdi, [rsp + 0x3d0]                        |     
    0x00406fc1 lea rsi, [rsp + 0x2d0]                        |     
    0x00406fc9 call 0x4256b0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::DefaultAllocatorGuard(BloombergLP::bslma::Allocator*) (rsp + 0x3d0, rsp + 0x2d0);
    0x00406fce xor esi, esi                                  |     
    0x00406fd0 mov ebx, dword [rsp + 0xc]                    |     ebx = *((rsp + 0xc));
    0x00406fd4 cmp ebx, 4                                    |     
    0x00406fd7 setg sil                                      |     sil = (ebx > 4) ? 1 : 0;
    0x00406fdb lea r12, [rsp + 0x1c0]                        |     r12 = rsp + 0x1c0;
    0x00406fe3 mov rdi, r12                                  |     
    0x00406fe6 xor edx, edx                                  |     
    0x00406fe8 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (r12, 0, 0);
    0x00406fed cmp ebx, 4                                    |     
                                                             |     if (ebx >= 4) {
    0x00406ff0 jl 0x407005                                   |         
    0x00406ff2 test byte [rip + 0x27fa87], 1                 |         
                                                             |         if ((*(0x00686a80) & 1) != 0) {
    0x00406ff9 jne 0x407005                                  |             goto label_14;
                                                             |         }
    0x00406ffb mov edi, 0x44ddeb                             |         
    0x00407000 call 0x4032c0                                 |         puts ("\t\tBSLMA EXCEPTION TEST -- (ENABLED) --");
                                                             |     }
                                                             | label_14:
    0x00407005 mov byte [rip + 0x27fa74], 1                  |     *(0x00686a80) = 1;
    0x0040700c cmp dword [rsp + 0xc], 5                      |     
                                                             |     if (*((rsp + 0xc)) >= 5) {
    0x00407011 jl 0x40701d                                   |         
    0x00407013 mov edi, 0x44de12                             |         
    0x00407018 call 0x4032c0                                 |         eax = puts ("\t\tBegin bslma exception test.");
                                                             |     }
    0x0040701d mov qword [rsp + 0x2a0], 0x450ab0             |     *((rsp + method.BloombergLP::bslma::TestAllocator_ProxyBase.TestAllocator_ProxyBase__)) = 0x450ab0;
    0x00407029 mov qword [rsp + 0x2a8], r12                  |     *((rsp + 0x2a8)) = r12;
    0x00407031 mov qword [rsp + 0x1e0], 0                    |     *((rsp + 0x1e0)) = 0;
    0x0040703d lea r14, [rsp + 0x140]                        |     r14 = rsp + 0x140;
    0x00407045 xor eax, eax                                  |     eax = 0;
    0x00407047 mov qword [rsp + 0x18], rax                   |     *((rsp + 0x18)) = rax;
    0x0040704c mov eax, 1                                    |     eax = 1;
    0x00407051 mov qword [rsp + 0x20], rax                   |     *((rsp + 0x20)) = rax;
    0x00407056 jmp 0x407078                                  |     
                                                             |     while (r13d == 0xa) {
    0x00407060 mov rcx, qword [rsp + 0x20]                   |         rcx = *((rsp + 0x20));
    0x00407065 lea rax, [rcx + 2]                            |         rax = rcx + 2;
    0x00407069 cmp rcx, 0x12                                 |         
    0x0040706d mov qword [rsp + 0x20], rax                   |         *((rsp + 0x20)) = rax;
                                                             |         if (rcx >= 0x12) {
    0x00407072 jae 0x4074ed                                  |             goto label_15;
                                                             |         }
    0x00407078 xor r15d, r15d                                |         r15d = 0;
    0x0040707b xor r13d, r13d                                |         r13d = 0;
    0x0040707e jmp 0x4070a0                                  |         goto label_16;
                                                             | label_3:
    0x00407080 lea rdi, [rsp + 0x80]                         |         
    0x00407088 call 0x41e960                                 |         BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x80);
    0x0040708d mov rdi, r14                                  |         rdi = r14;
    0x00407090 call 0x41f840                                 |         BloombergLP::bdlbb::BlobBufferFactory::~BlobBufferFactory() (rdi, rsi, rdx, rcx, r8, r9);
    0x00407095 add r15d, dword [rsp + 0x20]                  |         r15d += *((rsp + 0x20));
    0x0040709a cmp r13d, 0xa                                 |         
    0x0040709e je 0x407060                                   |         
                                                             |     }
                                                             | label_16:
    0x004070a0 cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x004070a5 jl 0x407185                                   |         
    0x004070ab mov edi, 0x6869c8                             |         
    0x004070b0 mov esi, 0x468473                             |         
    0x004070b5 mov edx, 1                                    |         
    0x004070ba call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x468473, 1);
    0x004070bf mov rdi, rax                                  |         rdi = rax;
    0x004070c2 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004070c7 mov edi, 0x6869c8                             |         
    0x004070cc mov esi, 0x44ed81                             |         
    0x004070d1 mov edx, 0xe                                  |         
    0x004070d6 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44ed81, 0xe);
    0x004070db mov rdi, rax                                  |         rdi = rax;
    0x004070de mov rsi, qword [rsp + 0x20]                   |         rsi = *((rsp + 0x20));
    0x004070e3 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004070e8 mov esi, 0x44de60                             |         
    0x004070ed mov edx, 2                                    |         
    0x004070f2 mov rdi, rax                                  |         
    0x004070f5 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004070fa mov rdi, rax                                  |         rdi = rax;
    0x004070fd call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407102 mov edi, 0x6869c8                             |         
    0x00407107 mov esi, 0x44eab0                             |         
    0x0040710c mov edx, 0xe                                  |         
    0x00407111 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44eab0, 0xe);
    0x00407116 mov rdi, rax                                  |         rdi = rax;
    0x00407119 mov esi, r13d                                 |         esi = r13d;
    0x0040711c call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407121 mov rbx, rax                                  |         rbx = rax;
    0x00407124 mov rax, qword [rax]                          |         rax = *(rax);
    0x00407127 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040712b add rsi, rbx                                  |         rsi += rbx;
    0x0040712e lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x00407136 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040713b mov rbp, r12                                  |         
    0x0040713e mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407143 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x0040714b call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00407150 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00407153 mov rdi, rax                                  |         rdi = rax;
    0x00407156 mov esi, 0xa                                  |         esi = 0xa;
    0x0040715b call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040715e mov r12d, eax                                 |         r12d = eax;
    0x00407161 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x00407169 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040716e movsx esi, r12b                               |         esi = (int32_t) r12b;
    0x00407172 mov rdi, rbx                                  |         rdi = rbx;
    0x00407175 mov r12, rbp                                  |         r12 = rbp;
    0x00407178 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x0040717d mov rdi, rbx                                  |         rdi = rbx;
    0x00407180 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00407185 mov qword [rsp + 0x140], 0x44cb78             |     *((rsp + method.SimpleBlobBufferFactory.SimpleBlobBufferFactory__)) = 0x44cb78;
    0x00407191 mov rax, qword [rsp + 0x20]                   |     rax = *((rsp + 0x20));
    0x00407196 mov qword [rsp + 0x148], rax                  |     *((rsp + 0x148)) = rax;
    0x0040719e mov qword [rsp + 0x150], r12                  |     *((rsp + 0x150)) = r12;
    0x004071a6 lea rbx, [rsp + 0x80]                         |     rbx = rsp + 0x80;
    0x004071ae mov rdi, rbx                                  |     
    0x004071b1 mov rsi, r14                                  |     
    0x004071b4 mov rdx, r12                                  |     
    0x004071b7 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rbx, r14, r12);
    0x004071bc mov rdi, rbx                                  |     
    0x004071bf mov esi, r15d                                 |     
    0x004071c2 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rbx, r15d);
    0x004071c7 mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x004071cf sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x004071d7 shr rax, 3                                    |     rax >>= 3;
    0x004071db imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x004071e1 xor edi, edi                                  |     edi = 0;
    0x004071e3 cmp r13d, eax                                 |     
    0x004071e6 setne dil                                     |     dil = (r13d != eax) ? 1 : 0;
    0x004071ea mov esi, 0x44eb65                             |     esi = 0x44eb65;
    0x004071ef mov edx, 0x7b6                                |     edx = 0x7b6;
    0x004071f4 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004071f9 xor edi, edi                                  |     edi = 0;
    0x004071fb cmp r15d, dword [rsp + 0xa4]                  |     
    0x00407203 setne dil                                     |     dil = (r15d != *((rsp + 0xa4))) ? 1 : 0;
    0x00407207 mov esi, 0x44ec38                             |     esi = "NUM_BUFFERS * BUFFER_SIZE == X.length()";
    0x0040720c mov edx, 0x7b7                                |     edx = 0x7b7;
    0x00407211 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407216 pxor xmm0, xmm0                               |     xmm0 = 0;
    0x0040721a movdqa xmmword [rsp + 0x180], xmm0            |     __asm ("movdqa xmmword [rsp + 0x180], xmm0");
    0x00407223 mov dword [rsp + 0x190], 0                    |     *((rsp + 0x190)) = 0;
    0x0040722e lea rdi, [rsp + 0x80]                         |     
    0x00407236 lea rsi, [rsp + 0x180]                        |     
    0x0040723e call 0x41e150                                 |     BloombergLP::bdlbb::Blob::appendBuffer(BloombergLP::bdlbb::BlobBufferconst&) (rsp + 0x80, rsp + 0x180);
    0x00407243 inc r13d                                      |     r13d++;
    0x00407246 mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x0040724e sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x00407256 shr rax, 3                                    |     rax >>= 3;
    0x0040725a imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00407260 xor edi, edi                                  |     edi = 0;
    0x00407262 cmp r13d, eax                                 |     
    0x00407265 setne dil                                     |     dil = (r13d != eax) ? 1 : 0;
    0x00407269 mov esi, 0x44ef72                             |     esi = 0x44ef72;
    0x0040726e mov edx, 0x7bc                                |     edx = 0x7bc;
    0x00407273 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407278 xor edi, edi                                  |     edi = 0;
    0x0040727a cmp r15d, dword [rsp + 0xa4]                  |     
    0x00407282 setne dil                                     |     dil = (r15d != *((rsp + 0xa4))) ? 1 : 0;
    0x00407286 mov esi, 0x44ec38                             |     esi = "NUM_BUFFERS * BUFFER_SIZE == X.length()";
    0x0040728b mov edx, 0x7bd                                |     edx = 0x7bd;
    0x00407290 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407295 lea rbp, [rsp + 0x30]                         |     rbp = rsp + 0x30;
    0x0040729a mov rdi, rbp                                  |     
    0x0040729d lea rbx, [rsp + 0x80]                         |     rbx = rsp + 0x80;
    0x004072a5 mov rsi, rbx                                  |     
    0x004072a8 mov rdx, r14                                  |     
    0x004072ab mov rcx, r12                                  |     
    0x004072ae call 0x41e450                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rbp, rbx, r14, r12);
    0x004072b3 mov rdi, rbx                                  |     
    0x004072b6 mov rsi, rbp                                  |     
    0x004072b9 call 0x41f5e0                                 |     al = BloombergLP::bdlbb::operator==(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::Blobconst&) (rbx, rbp);
    0x004072be xor al, 1                                     |     al ^= 1;
    0x004072c0 movzx edi, al                                 |     edi = (int32_t) al;
    0x004072c3 mov esi, 0x44ec60                             |     esi = "X == Y";
    0x004072c8 mov edx, 0x7c1                                |     edx = 0x7c1;
    0x004072cd call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004072d2 mov rax, qword [rsp + 0x38]                   |     rax = *((rsp + 0x38));
    0x004072d7 sub rax, qword [rsp + 0x30]                   |     rax -= *((rsp + 0x30));
    0x004072dc shr rax, 3                                    |     rax >>= 3;
    0x004072e0 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x004072e6 xor edi, edi                                  |     edi = 0;
    0x004072e8 cmp r13d, eax                                 |     
    0x004072eb setne dil                                     |     dil = (r13d != eax) ? 1 : 0;
    0x004072ef mov esi, 0x44ec67                             |     esi = "NUM_BUFFERS + 1 == Y.numBuffers()";
    0x004072f4 mov edx, 0x7c2                                |     edx = 0x7c2;
    0x004072f9 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004072fe xor edi, edi                                  |     edi = 0;
    0x00407300 cmp r15d, dword [rsp + 0x54]                  |     
    0x00407305 setne dil                                     |     dil = (r15d != *((rsp + 0x54))) ? 1 : 0;
    0x00407309 mov esi, 0x44ec89                             |     esi = "NUM_BUFFERS * BUFFER_SIZE == Y.length()";
    0x0040730e mov edx, 0x7c3                                |     edx = 0x7c3;
    0x00407313 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407318 lea rbx, [rsp + 0xf0]                         |     rbx = rsp + 0xf0;
    0x00407320 mov rdi, rbx                                  |     
    0x00407323 mov rsi, r14                                  |     
    0x00407326 mov rdx, r12                                  |     
    0x00407329 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rbx, r14, r12);
    0x0040732e lea rdi, [rsp + 0x30]                         |     
    0x00407333 mov rsi, rbx                                  |     
    0x00407336 call 0x41f660                                 |     al = BloombergLP::bdlbb::operator!=(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::Blobconst&) (rsp + 0x30, rbx);
    0x0040733b xor al, 1                                     |     al ^= 1;
    0x0040733d movzx edi, al                                 |     edi = (int32_t) al;
    0x00407340 mov esi, 0x44ecb1                             |     esi = "Y != Z";
    0x00407345 mov edx, 0x7c7                                |     edx = 0x7c7;
    0x0040734a call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040734f lea rdi, [rsp + 0x80]                         |     
    0x00407357 lea rsi, [rsp + 0xf0]                         |     
    0x0040735f call 0x41f660                                 |     al = BloombergLP::bdlbb::operator!=(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::Blobconst&) (rsp + 0x80, rsp + 0xf0);
    0x00407364 xor al, 1                                     |     al ^= 1;
    0x00407366 movzx edi, al                                 |     edi = (int32_t) al;
    0x00407369 mov esi, 0x44ecb8                             |     esi = "X != Z";
    0x0040736e mov edx, 0x7c8                                |     edx = 0x7c8;
    0x00407373 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407378 mov rax, qword [rsp + 0xf8]                   |     rax = *((rsp + 0xf8));
    0x00407380 sub rax, qword [rsp + 0xf0]                   |     rax -= *((rsp + 0xf0));
    0x00407388 shr rax, 3                                    |     rax >>= 3;
    0x0040738c imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00407392 xor edi, edi                                  |     edi = 0;
    0x00407394 test eax, eax                                 |     
    0x00407396 setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x0040739a mov esi, 0x44ecbf                             |     esi = "0 == Z.numBuffers()";
    0x0040739f mov edx, 0x7ca                                |     edx = 0x7ca;
    0x004073a4 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004073a9 xor edi, edi                                  |     edi = 0;
    0x004073ab cmp dword [rsp + 0x114], 0                    |     
    0x004073b3 setne dil                                     |     dil = (*((rsp + 0x114)) != 0) ? 1 : 0;
    0x004073b7 mov esi, 0x44ecd3                             |     esi = "0 == Z.length()";
    0x004073bc mov edx, 0x7cb                                |     edx = 0x7cb;
    0x004073c1 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004073c6 lea rdi, [rsp + 0xf0]                         |     
    0x004073ce lea rsi, [rsp + 0x30]                         |     
    0x004073d3 call 0x41f0a0                                 |     BloombergLP::bdlbb::Blob::moveBuffers(BloombergLP::bdlbb::Blob*) (rsp + 0xf0, rsp + 0x30, rdx);
    0x004073d8 lea rdi, [rsp + 0x30]                         |     
    0x004073dd lea rsi, [rsp + 0xf0]                         |     
    0x004073e5 call 0x41f660                                 |     al = BloombergLP::bdlbb::operator!=(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::Blobconst&) (rsp + 0x30, rsp + 0xf0);
    0x004073ea xor al, 1                                     |     al ^= 1;
    0x004073ec movzx edi, al                                 |     edi = (int32_t) al;
    0x004073ef mov esi, 0x44ecb1                             |     esi = "Y != Z";
    0x004073f4 mov edx, 0x7ce                                |     edx = 0x7ce;
    0x004073f9 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004073fe lea rdi, [rsp + 0x80]                         |     
    0x00407406 lea rsi, [rsp + 0xf0]                         |     
    0x0040740e call 0x41f5e0                                 |     al = BloombergLP::bdlbb::operator==(BloombergLP::bdlbb::Blobconst&,BloombergLP::bdlbb::Blobconst&) (rsp + 0x80, rsp + 0xf0);
    0x00407413 xor al, 1                                     |     al ^= 1;
    0x00407415 movzx edi, al                                 |     edi = (int32_t) al;
    0x00407418 mov esi, 0x44ece3                             |     esi = "X == Z";
    0x0040741d mov edx, 0x7cf                                |     edx = 0x7cf;
    0x00407422 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407427 mov rax, qword [rsp + 0x38]                   |     rax = *((rsp + 0x38));
    0x0040742c sub rax, qword [rsp + 0x30]                   |     rax -= *((rsp + 0x30));
    0x00407431 shr rax, 3                                    |     rax >>= 3;
    0x00407435 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x0040743b xor edi, edi                                  |     edi = 0;
    0x0040743d test eax, eax                                 |     
    0x0040743f setne dil                                     |     dil = (eax != 0) ? 1 : 0;
    0x00407443 mov esi, 0x44ecea                             |     esi = "0 == Y.numBuffers()";
    0x00407448 mov edx, 0x7d1                                |     edx = 0x7d1;
    0x0040744d call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00407452 xor edi, edi                                  |     edi = 0;
    0x00407454 cmp dword [rsp + 0x54], 0                     |     
    0x00407459 setne dil                                     |     dil = (*((rsp + 0x54)) != 0) ? 1 : 0;
    0x0040745d mov esi, 0x44ecfe                             |     esi = "0 == Y.length()";
    0x00407462 mov edx, 0x7d2                                |     edx = 0x7d2;
    0x00407467 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040746c mov rax, qword [rsp + 0xf8]                   |     rax = *((rsp + 0xf8));
    0x00407474 sub rax, qword [rsp + 0xf0]                   |     rax -= *((rsp + 0xf0));
    0x0040747c shr rax, 3                                    |     rax >>= 3;
    0x00407480 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00407486 xor edi, edi                                  |     edi = 0;
    0x00407488 cmp r13d, eax                                 |     
    0x0040748b setne dil                                     |     dil = (r13d != eax) ? 1 : 0;
    0x0040748f mov esi, 0x44ed0e                             |     esi = "NUM_BUFFERS + 1 == Z.numBuffers()";
    0x00407494 mov edx, 0x7d3                                |     edx = 0x7d3;
    0x00407499 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040749e xor edi, edi                                  |     edi = 0;
    0x004074a0 cmp r15d, dword [rsp + 0x114]                 |     
    0x004074a8 setne dil                                     |     dil = (r15d != *((rsp + 0x114))) ? 1 : 0;
    0x004074ac mov esi, 0x44ed30                             |     esi = "NUM_BUFFERS * BUFFER_SIZE == Z.length()";
    0x004074b1 mov edx, 0x7d4                                |     edx = 0x7d4;
    0x004074b6 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x004074bb lea rdi, [rsp + 0xf0]                         |     
    0x004074c3 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0xf0);
    0x004074c8 lea rdi, [rsp + 0x30]                         |     
    0x004074cd call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x30);
    0x004074d2 mov rdi, qword [rsp + 0x188]                  |     rdi = *((rsp + 0x188));
    0x004074da test rdi, rdi                                 |     
                                                             |     if (rdi == 0) {
    0x004074dd je 0x407080                                   |         goto label_3;
                                                             |     }
    0x004074e3 call 0x4257c0                                 |     BloombergLP::bslma::SharedPtrRep::releaseRef() (rdi);
    0x004074e8 jmp 0x407080                                  |     goto label_3;
                                                             | label_15:
    0x004074ed mov rax, qword [rsp + 0x1e8]                  |     rax = *((rsp + 0x1e8));
    0x004074f5 xor edi, edi                                  |     edi = 0;
    0x004074f7 test rax, rax                                 |     
    0x004074fa setle dil                                     |     dil = (rax <= 0) ? 1 : 0;
    0x004074fe mov esi, 0x44f261                             |     esi = 0x44f261;
    0x00407503 mov edx, 0x7d7                                |     edx = 0x7d7;
    0x00407508 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040750d mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00407515 xor edi, edi                                  |     edi = 0;
    0x00407517 test rax, rax                                 |     
    0x0040751a setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x0040751e mov esi, 0x44d9ac                             |     esi = "0 == ta.numBytesInUse()";
    0x00407523 mov edx, 0x7d8                                |     edx = 0x7d8;
    0x00407528 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040752d mov rax, qword [rsp + 0x1f8]                  |     rax = *((rsp + 0x1f8));
    0x00407535 xor edi, edi                                  |     edi = 0;
    0x00407537 test rax, rax                                 |     
    0x0040753a setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x0040753e mov esi, 0x44dfff                             |     esi = "0 == ta.numMismatches()";
    0x00407543 mov edx, 0x7d9                                |     edx = 0x7d9;
    0x00407548 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040754d mov rax, qword [rsp + 0x2f8]                  |     rax = *((rsp + 0x2f8));
    0x00407555 xor edi, edi                                  |     edi = 0;
    0x00407557 test rax, rax                                 |     
    0x0040755a setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x0040755e mov esi, 0x44e017                             |     esi = "0 == defaultAlloc.numAllocations()";
    0x00407563 mov edx, 0x7da                                |     edx = 0x7da;
    0x00407568 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x0040756d jmp 0x4146b4                                  |     void (*0x4146b4)() ();
    0x0040766f cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00407674 jl 0x4077d1                                   |         
    0x0040767a mov rax, qword [rip + 0x27f347]               |         rax = std::__1::cout;
    0x00407681 mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00407686 add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x0040768a lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407692 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00407697 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040769f mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x004076a4 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004076a9 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004076ac mov rdi, rax                                  |         rdi = rax;
    0x004076af mov esi, 0xa                                  |         esi = 0xa;
    0x004076b4 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004076b7 mov ebx, eax                                  |         ebx = eax;
    0x004076b9 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004076c1 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004076c6 movsx esi, bl                                 |         esi = (int32_t) bl;
    0x004076c9 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x004076ce call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004076d3 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x004076d8 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004076dd mov edi, 0x6869c8                             |         
    0x004076e2 mov esi, 0x44f4d6                             |         
    0x004076e7 mov edx, 0x28                                 |         
    0x004076ec call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING 'setLength' AND LENGTH ACCESSORS", 0x28);
    0x004076f1 mov rbx, rax                                  |         rbx = rax;
    0x004076f4 mov rax, qword [rax]                          |         rax = *(rax);
    0x004076f7 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x004076fb add rsi, rbx                                  |         rsi += rbx;
    0x004076fe lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407706 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040770b lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407713 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407718 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040771d mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00407720 mov rdi, rax                                  |         rdi = rax;
    0x00407723 mov esi, 0xa                                  |         esi = 0xa;
    0x00407728 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040772b mov ebp, eax                                  |         
    0x0040772d lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407735 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040773a movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x0040773e mov rdi, rbx                                  |         rdi = rbx;
    0x00407741 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00407746 mov rdi, rbx                                  |         rdi = rbx;
    0x00407749 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040774e mov esi, 0x44e0c5                             |         
    0x00407753 mov edx, 0x28                                 |         
    0x00407758 mov rdi, rbx                                  |         
    0x0040775b call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0c5, 0x28);
    0x00407760 mov rbx, rax                                  |         rbx = rax;
    0x00407763 mov rax, qword [rax]                          |         rax = *(rax);
    0x00407766 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040776a add rsi, rbx                                  |         rsi += rbx;
    0x0040776d lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407775 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040777a lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00407782 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407787 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040778c mov rcx, qword [rax]                          |         rcx = *(rax);
    0x0040778f mov rdi, rax                                  |         rdi = rax;
    0x00407792 mov esi, 0xa                                  |         esi = 0xa;
    0x00407797 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040779a mov ebp, eax                                  |         
    0x0040779c lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004077a4 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004077a9 movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x004077ad mov rdi, rbx                                  |         rdi = rbx;
    0x004077b0 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004077b5 mov rdi, rbx                                  |         rdi = rbx;
    0x004077b8 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004077bd mov edi, 0x6869c8                             |         
    0x004077c2 mov esi, 0x44ea72                             |         
    0x004077c7 mov edx, 0x2b                                 |         
    0x004077cc call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "\nTesting all blobs with fixed buffer size.\n", 0x2b);
                                                             |     }
    0x004077d1 mov dword [rsp + 0x138], 6                    |     *((rsp + 0x138)) = 6;
    0x004077dc mov r15d, 1                                   |     r15d = 1;
    0x004077e2 lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x004077ea jmp 0x407805                                  |     goto label_17;
                                                             | label_4:
    0x004077f0 inc r15                                       |     r15++;
    0x004077f3 add dword [rsp + 0x138], 5                    |     *((rsp + 0x138)) += 5;
    0x004077fb cmp r15, 6                                    |     
                                                             |     if (r15 == 6) {
    0x004077ff je 0x4146fe                                   |         void (*0x4146fe)() ();
                                                             |     }
                                                             | label_17:
    0x00407805 lea eax, [r15 - 1]                            |     eax = r15 - 1;
    0x00407809 mov qword [rsp + 0x130], rax                  |     *((rsp + 0x130)) = rax;
    0x00407811 mov eax, r15d                                 |     eax = r15d;
    0x00407814 mov qword [rsp + 0x70], rax                   |     *((rsp + 0x70)) = rax;
    0x00407819 mov eax, 1                                    |     eax = 1;
    0x0040781e mov qword [rsp + 0x28], rax                   |     *((rsp + 0x28)) = rax;
    0x00407823 xor r12d, r12d                                |     r12d = 0;
    0x00407826 jmp 0x407889                                  |     goto label_18;
                                                             | label_7:
    0x00407830 lea rdi, [rsp + 0x1c0]                        |     
    0x00407838 call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rsp + 0x1c0);
    0x0040783d lea rdi, [rsp + 0x4e0]                        |     
    0x00407845 call 0x4256e0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::~DefaultAllocatorGuard() (rsp + 0x4e0);
    0x0040784a lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x00407852 mov rdi, rbx                                  |     
    0x00407855 call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rbx);
    0x0040785a mov rax, qword [rsp + 0x28]                   |     rax = *((rsp + 0x28));
    0x0040785f inc eax                                       |     eax++;
    0x00407861 mov qword [rsp + 0x28], rax                   |     *((rsp + 0x28)) = rax;
    0x00407866 mov rax, qword [rsp + 0x70]                   |     rax = *((rsp + 0x70));
    0x0040786b inc eax                                       |     eax++;
    0x0040786d mov qword [rsp + 0x70], rax                   |     *((rsp + 0x70)) = rax;
    0x00407872 mov eax, dword [rsp + 0xe8]                   |     eax = *((rsp + 0xe8));
    0x00407879 mov r12d, eax                                 |     r12d = *((rsp + 0xe8));
    0x0040787c cmp eax, dword [rsp + 0x138]                  |     
                                                             |     if (eax == *((rsp + 0x138))) {
    0x00407883 je 0x4077f0                                   |         goto label_4;
                                                             |     }
                                                             | label_18:
    0x00407889 xor esi, esi                                  |     
    0x0040788b cmp dword [rsp + 0xc], 4                      |     
    0x00407890 setg sil                                      |     sil = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x00407894 mov rdi, rbx                                  |     
    0x00407897 xor edx, edx                                  |     
    0x00407899 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rbx, 0, 0);
    0x0040789e lea rdi, [rsp + 0x4e0]                        |     
    0x004078a6 mov rsi, rbx                                  |     
    0x004078a9 call 0x4256b0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::DefaultAllocatorGuard(BloombergLP::bslma::Allocator*) (rsp + 0x4e0, rbx);
    0x004078ae xor esi, esi                                  |     
    0x004078b0 mov ebx, dword [rsp + 0xc]                    |     ebx = *((rsp + 0xc));
    0x004078b4 cmp ebx, 4                                    |     
    0x004078b7 setg sil                                      |     sil = (ebx > 4) ? 1 : 0;
    0x004078bb lea rdi, [rsp + 0x1c0]                        |     
    0x004078c3 xor edx, edx                                  |     
    0x004078c5 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rsp + 0x1c0, 0, 0);
    0x004078ca cmp ebx, 4                                    |     
                                                             |     if (ebx >= 4) {
    0x004078cd jl 0x4078e2                                   |         
    0x004078cf test byte [rip + 0x27f1d2], 1                 |         
                                                             |         if ((*(0x00686aa8) & 1) != 0) {
    0x004078d6 jne 0x4078e2                                  |             goto label_19;
                                                             |         }
    0x004078d8 mov edi, 0x44ddeb                             |         
    0x004078dd call 0x4032c0                                 |         puts ("\t\tBSLMA EXCEPTION TEST -- (ENABLED) --");
                                                             |     }
                                                             | label_19:
    0x004078e2 mov byte [rip + 0x27f1bf], 1                  |     *(0x00686aa8) = 1;
    0x004078e9 cmp dword [rsp + 0xc], 5                      |     
                                                             |     if (*((rsp + 0xc)) >= 5) {
    0x004078ee jl 0x4078fa                                   |         
    0x004078f0 mov edi, 0x44de12                             |         
    0x004078f5 call 0x4032c0                                 |         puts ("\t\tBegin bslma exception test.");
                                                             |     }
    0x004078fa mov qword [rsp + 0xf0], 0x450ab0              |     *((rsp + 0xf0)) = vtable.BloombergLP::bslma::TestAllocator_Proxy_BloombergLP::bslma::TestAllocator_.0;
    0x00407906 lea rax, [rsp + 0x1c0]                        |     rax = rsp + 0x1c0;
    0x0040790e mov qword [rsp + 0xf8], rax                   |     *((rsp + 0xf8)) = rax;
    0x00407916 mov qword [rsp + 0x1e0], 0                    |     *((rsp + 0x1e0)) = 0;
    0x00407922 mov rax, qword [rsp + 0x130]                  |     rax = *((rsp + 0x130));
    0x0040792a add eax, r12d                                 |     eax += r12d;
    0x0040792d xor edx, edx                                  |     edx = 0;
    0x0040792f div r15d                                      |     eax = edx:eax / r15d;
                                                             |     edx = edx:eax % r15d;
    0x00407932 mov dword [rsp + 0x20], eax                   |     *((rsp + 0x20)) = eax;
    0x00407936 imul eax, r15d                                |     eax *= r15d;
    0x0040793a mov dword [rsp + 0x18], eax                   |     *((rsp + 0x18)) = eax;
    0x0040793e lea eax, [r12 + 1]                            |     eax = r12 + 1;
    0x00407943 mov dword [rsp + 0xe8], eax                   |     *((rsp + 0xe8)) = eax;
    0x0040794a lea eax, [r12 + r12 + 2]                      |     eax = r12 + r12 + 2;
    0x0040794f mov dword [rsp + 0x78], eax                   |     *((rsp + 0x78)) = eax;
    0x00407953 xor eax, eax                                  |     eax = 0;
    0x00407955 mov qword [rsp + 0x178], rax                  |     *((rsp + 0x178)) = rax;
    0x0040795d cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x00407962 jl 0x407b45                                   |         
    0x00407968 mov edi, 0x6869c8                             |         
    0x0040796d mov esi, 0x468473                             |         
    0x00407972 mov edx, 1                                    |         
    0x00407977 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x468473, 1);
    0x0040797c mov rdi, rax                                  |         rdi = rax;
    0x0040797f call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407984 mov edi, 0x6869c8                             |         
    0x00407989 mov esi, 0x44ed81                             |         
    0x0040798e mov edx, 0xe                                  |         
    0x00407993 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44ed81, 0xe);
    0x00407998 mov rdi, rax                                  |         rdi = rax;
    0x0040799b mov esi, r15d                                 |         esi = r15d;
    0x0040799e call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004079a3 mov esi, 0x44de60                             |         
    0x004079a8 mov edx, 2                                    |         
    0x004079ad mov rdi, rax                                  |         
    0x004079b0 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004079b5 mov rdi, rax                                  |         rdi = rax;
    0x004079b8 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004079bd mov edi, 0x6869c8                             |         
    0x004079c2 mov esi, 0x44ed95                             |         
    0x004079c7 mov edx, 9                                    |         
    0x004079cc call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44ed95, 9);
    0x004079d1 mov rdi, rax                                  |         rdi = rax;
    0x004079d4 mov esi, r12d                                 |         esi = r12d;
    0x004079d7 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004079dc mov esi, 0x44de60                             |         
    0x004079e1 mov edx, 2                                    |         
    0x004079e6 mov rdi, rax                                  |         
    0x004079e9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004079ee mov rdi, rax                                  |         rdi = rax;
    0x004079f1 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004079f6 mov edi, 0x6869c8                             |         
    0x004079fb mov esi, 0x44eab0                             |         
    0x00407a00 mov edx, 0xe                                  |         
    0x00407a05 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44eab0, 0xe);
    0x00407a0a mov rdi, rax                                  |         rdi = rax;
    0x00407a0d mov esi, dword [rsp + 0x20]                   |         esi = *((rsp + 0x20));
    0x00407a11 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407a16 mov rbx, rax                                  |         rbx = rax;
    0x00407a19 mov rax, qword [rax]                          |         rax = *(rax);
    0x00407a1c mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00407a20 add rsi, rbx                                  |         rsi += rbx;
    0x00407a23 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00407a2b call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00407a30 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407a35 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00407a3d call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00407a42 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00407a45 mov rdi, rax                                  |         rdi = rax;
    0x00407a48 mov esi, 0xa                                  |         esi = 0xa;
    0x00407a4d call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00407a50 mov ebp, eax                                  |         
    0x00407a52 lea rdi, [rsp + 0x140]                        |         rdi = rsp + 0x140;
    0x00407a5a call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00407a5f movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00407a63 mov rdi, rbx                                  |         rdi = rbx;
    0x00407a66 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00407a6b mov rdi, rbx                                  |         rdi = rbx;
    0x00407a6e call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407a73 mov edi, 0x6869c8                             |         
    0x00407a78 mov esi, 0x468473                             |         
    0x00407a7d mov edx, 1                                    |         
    0x00407a82 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x468473, 1);
    0x00407a87 mov rdi, rax                                  |         rdi = rax;
    0x00407a8a call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407a8f mov edi, 0x6869c8                             |         
    0x00407a94 mov esi, 0x44ea9e                             |         
    0x00407a99 mov edx, 0xd                                  |         
    0x00407a9e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "EXP_LENGTH = ", 0xd);
    0x00407aa3 mov rdi, rax                                  |         rdi = rax;
    0x00407aa6 mov esi, r12d                                 |         esi = r12d;
    0x00407aa9 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407aae mov esi, 0x44de60                             |         
    0x00407ab3 mov edx, 2                                    |         
    0x00407ab8 mov rdi, rax                                  |         
    0x00407abb call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00407ac0 mov rdi, rax                                  |         rdi = rax;
    0x00407ac3 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407ac8 mov edi, 0x6869c8                             |         
    0x00407acd mov esi, 0x44eaac                             |         
    0x00407ad2 mov edx, 0x12                                 |         
    0x00407ad7 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "EXP_NUM_BUFFERS = ", 0x12);
    0x00407adc mov rdi, rax                                  |         rdi = rax;
    0x00407adf mov esi, dword [rsp + 0x20]                   |         esi = *((rsp + 0x20));
    0x00407ae3 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407ae8 mov rbx, rax                                  |         rbx = rax;
    0x00407aeb mov rax, qword [rax]                          |         rax = *(rax);
    0x00407aee mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00407af2 add rsi, rbx                                  |         rsi += rbx;
    0x00407af5 lea rdi, [rsp + 0x440]                        |         rdi = rsp + 0x440;
    0x00407afd call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00407b02 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407b07 lea rdi, [rsp + 0x440]                        |         rdi = rsp + 0x440;
    0x00407b0f call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00407b14 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00407b17 mov rdi, rax                                  |         rdi = rax;
    0x00407b1a mov esi, 0xa                                  |         esi = 0xa;
    0x00407b1f call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00407b22 mov ebp, eax                                  |         
    0x00407b24 lea rdi, [rsp + 0x440]                        |         rdi = rsp + 0x440;
    0x00407b2c call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00407b31 movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00407b35 mov rdi, rbx                                  |         rdi = rbx;
    0x00407b38 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00407b3d mov rdi, rbx                                  |         rdi = rbx;
    0x00407b40 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00407b45 mov qword [rsp + 0x30], 0x44cb78              |     *((rsp + 0x30)) = vtable.SimpleBlobBufferFactory.0;
    0x00407b4e mov qword [rsp + 0x38], r15                   |     *((rsp + 0x38)) = r15;
    0x00407b53 lea rdx, [rsp + 0x1c0]                        |     
    0x00407b5b mov qword [rsp + 0x40], rdx                   |     *((rsp + 0x40)) = rdx;
    0x00407b60 lea rdi, [rsp + 0x80]                         |     
    0x00407b68 lea rsi, [rsp + 0x30]                         |     
    0x00407b6d call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rsp + 0x80, rsp + 0x30, rsp + 0x1c0);
    0x00407b72 cmp dword [rsp + 0xa4], 0                     |     
                                                             |     if (*((rsp + 0xa4)) != 0) {
    0x00407b7a je 0x407c18                                   |         
    0x00407b80 mov edi, 0x6869c8                             |         
    0x00407b85 mov esi, 0x44f3ec                             |         
    0x00407b8a mov edx, 0xa                                  |         
    0x00407b8f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00407b94 mov esi, 0x450690                             |         
    0x00407b99 mov edx, 2                                    |         
    0x00407b9e mov rdi, rax                                  |         
    0x00407ba1 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407ba6 mov rdi, rax                                  |         rdi = rax;
    0x00407ba9 mov esi, r15d                                 |         esi = r15d;
    0x00407bac call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407bb1 mov esi, 0x468473                             |         
    0x00407bb6 mov edx, 1                                    |         
    0x00407bbb mov rdi, rax                                  |         
    0x00407bbe call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00407bc3 mov esi, 0x44f3f7                             |         
    0x00407bc8 mov edx, 0xa                                  |         
    0x00407bcd mov rdi, rax                                  |         
    0x00407bd0 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00407bd5 mov esi, 0x450690                             |         
    0x00407bda mov edx, 2                                    |         
    0x00407bdf mov rdi, rax                                  |         
    0x00407be2 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407be7 mov rdi, rax                                  |         rdi = rax;
    0x00407bea mov esi, r12d                                 |         esi = r12d;
    0x00407bed call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407bf2 mov esi, 0x4683b0                             |         
    0x00407bf7 mov edx, 1                                    |         
    0x00407bfc mov rdi, rax                                  |         
    0x00407bff call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00407c04 mov esi, 0x4501e2                             |         esi = 0x4501e2;
    0x00407c09 mov edi, 1                                    |         edi = 1;
    0x00407c0e mov edx, 0xc96                                |         edx = 0xc96;
    0x00407c13 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00407c18 cmp dword [rsp + 0xa0], 0                     |     
                                                             |     if (*((rsp + 0xa0)) != 0) {
    0x00407c20 je 0x407cbe                                   |         
    0x00407c26 mov edi, 0x6869c8                             |         
    0x00407c2b mov esi, 0x44f3ec                             |         
    0x00407c30 mov edx, 0xa                                  |         
    0x00407c35 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00407c3a mov esi, 0x450690                             |         
    0x00407c3f mov edx, 2                                    |         
    0x00407c44 mov rdi, rax                                  |         
    0x00407c47 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407c4c mov rdi, rax                                  |         rdi = rax;
    0x00407c4f mov esi, r15d                                 |         esi = r15d;
    0x00407c52 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407c57 mov esi, 0x468473                             |         
    0x00407c5c mov edx, 1                                    |         
    0x00407c61 mov rdi, rax                                  |         
    0x00407c64 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00407c69 mov esi, 0x44f3f7                             |         
    0x00407c6e mov edx, 0xa                                  |         
    0x00407c73 mov rdi, rax                                  |         
    0x00407c76 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00407c7b mov esi, 0x450690                             |         
    0x00407c80 mov edx, 2                                    |         
    0x00407c85 mov rdi, rax                                  |         
    0x00407c88 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407c8d mov rdi, rax                                  |         rdi = rax;
    0x00407c90 mov esi, r12d                                 |         esi = r12d;
    0x00407c93 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407c98 mov esi, 0x4683b0                             |         
    0x00407c9d mov edx, 1                                    |         
    0x00407ca2 mov rdi, rax                                  |         
    0x00407ca5 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00407caa mov esi, 0x4504e5                             |         esi = 0x4504e5;
    0x00407caf mov edi, 1                                    |         edi = 1;
    0x00407cb4 mov edx, 0xc97                                |         edx = 0xc97;
    0x00407cb9 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00407cbe mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x00407cc6 sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x00407cce shr rax, 3                                    |     rax >>= 3;
    0x00407cd2 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00407cd8 test eax, eax                                 |     
                                                             |     if (eax != 0) {
    0x00407cda je 0x407d78                                   |         
    0x00407ce0 mov edi, 0x6869c8                             |         
    0x00407ce5 mov esi, 0x44f3ec                             |         
    0x00407cea mov edx, 0xa                                  |         
    0x00407cef call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00407cf4 mov esi, 0x450690                             |         
    0x00407cf9 mov edx, 2                                    |         
    0x00407cfe mov rdi, rax                                  |         
    0x00407d01 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407d06 mov rdi, rax                                  |         rdi = rax;
    0x00407d09 mov esi, r15d                                 |         esi = r15d;
    0x00407d0c call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407d11 mov esi, 0x468473                             |         
    0x00407d16 mov edx, 1                                    |         
    0x00407d1b mov rdi, rax                                  |         
    0x00407d1e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00407d23 mov esi, 0x44f3f7                             |         
    0x00407d28 mov edx, 0xa                                  |         
    0x00407d2d mov rdi, rax                                  |         
    0x00407d30 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00407d35 mov esi, 0x450690                             |         
    0x00407d3a mov edx, 2                                    |         
    0x00407d3f mov rdi, rax                                  |         
    0x00407d42 call 0x41d370                                 |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407d45 add dword [rax], eax                          |         *(rax) += eax;
    0x00407d47 mov rdi, rax                                  |         rdi = rax;
    0x00407d4a mov esi, r12d                                 |         esi = r12d;
    0x00407d4d call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407d52 mov esi, 0x4683b0                             |         
    0x00407d57 mov edx, 1                                    |         
    0x00407d5c mov rdi, rax                                  |         
    0x00407d5f call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00407d64 mov esi, 0x44f222                             |         esi = "0 == X.numBuffers()";
    0x00407d69 mov edi, 1                                    |         edi = 1;
    0x00407d6e mov edx, 0xc98                                |         edx = 0xc98;
    0x00407d73 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00407d78 cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x00407d7d jl 0x407e90                                   |         
    0x00407d83 mov edi, 0x6869c8                             |         
    0x00407d88 mov esi, 0x44de52                             |         
    0x00407d8d mov edx, 0xd                                  |         
    0x00407d92 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00407d97 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x00407d9e mov rdi, rax                                  |         rdi = rax;
    0x00407da1 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407da6 mov esi, 0x44de60                             |         
    0x00407dab mov edx, 2                                    |         
    0x00407db0 mov rdi, rax                                  |         
    0x00407db3 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00407db8 mov rdi, rax                                  |         rdi = rax;
    0x00407dbb call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407dc0 mov edi, 0x6869c8                             |         
    0x00407dc5 mov esi, 0x44f470                             |         
    0x00407dca mov edx, 0x11                                 |         
    0x00407dcf call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.numBuffers() = ", 0x11);
    0x00407dd4 mov rcx, qword [rsp + 0x88]                   |         rcx = *((rsp + 0x88));
    0x00407ddc sub rcx, qword [rsp + 0x80]                   |         rcx -= *((rsp + 0x80));
    0x00407de4 shr rcx, 3                                    |         rcx >>= 3;
    0x00407de8 imul esi, ecx, 0xaaaaaaab                     |         esi = ecx * 0xaaaaaaab;
    0x00407dee mov rdi, rax                                  |         rdi = rax;
    0x00407df1 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407df6 mov esi, 0x44de60                             |         
    0x00407dfb mov edx, 2                                    |         
    0x00407e00 mov rdi, rax                                  |         
    0x00407e03 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00407e08 mov rdi, rax                                  |         rdi = rax;
    0x00407e0b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00407e10 mov edi, 0x6869c8                             |         
    0x00407e15 mov esi, 0x44de63                             |         
    0x00407e1a mov edx, 0x10                                 |         
    0x00407e1f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00407e24 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x00407e2b mov rdi, rax                                  |         rdi = rax;
    0x00407e2e call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407e33 mov rbx, rax                                  |         rbx = rax;
    0x00407e36 mov rax, qword [rax]                          |         rax = *(rax);
    0x00407e39 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00407e3d add rsi, rbx                                  |         rsi += rbx;
    0x00407e40 lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00407e48 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00407e4d mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00407e52 lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00407e5a call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00407e5f mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00407e62 mov rdi, rax                                  |         rdi = rax;
    0x00407e65 mov esi, 0xa                                  |         esi = 0xa;
    0x00407e6a call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00407e6d mov ebp, eax                                  |         
    0x00407e6f lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00407e77 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00407e7c movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00407e80 mov rdi, rbx                                  |         rdi = rbx;
    0x00407e83 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00407e88 mov rdi, rbx                                  |         rdi = rbx;
    0x00407e8b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00407e90 lea rdi, [rsp + 0x80]                         |     
    0x00407e98 mov esi, r12d                                 |     
    0x00407e9b call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, r12d);
    0x00407ea0 cmp r12d, dword [rsp + 0xa4]                  |     
                                                             |     if (r12d != *((rsp + 0xa4))) {
    0x00407ea8 je 0x407f46                                   |         
    0x00407eae mov edi, 0x6869c8                             |         
    0x00407eb3 mov esi, 0x44f3ec                             |         
    0x00407eb8 mov edx, 0xa                                  |         
    0x00407ebd call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00407ec2 mov esi, 0x450690                             |         
    0x00407ec7 mov edx, 2                                    |         
    0x00407ecc mov rdi, rax                                  |         
    0x00407ecf call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407ed4 mov rdi, rax                                  |         rdi = rax;
    0x00407ed7 mov esi, r15d                                 |         esi = r15d;
    0x00407eda call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407edf mov esi, 0x468473                             |         
    0x00407ee4 mov edx, 1                                    |         
    0x00407ee9 mov rdi, rax                                  |         
    0x00407eec call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00407ef1 mov esi, 0x44f3f7                             |         
    0x00407ef6 mov edx, 0xa                                  |         
    0x00407efb mov rdi, rax                                  |         
    0x00407efe call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00407f03 mov esi, 0x450690                             |         
    0x00407f08 mov edx, 2                                    |         
    0x00407f0d mov rdi, rax                                  |         
    0x00407f10 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407f15 mov rdi, rax                                  |         rdi = rax;
    0x00407f18 mov esi, r12d                                 |         esi = r12d;
    0x00407f1b call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407f20 mov esi, 0x4683b0                             |         
    0x00407f25 mov edx, 1                                    |         
    0x00407f2a mov rdi, rax                                  |         
    0x00407f2d call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00407f32 mov esi, 0x44eb28                             |         esi = "EXP_LENGTH == X.length()";
    0x00407f37 mov edi, 1                                    |         edi = 1;
    0x00407f3c mov edx, 0xc9f                                |         edx = 0xc9f;
    0x00407f41 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00407f46 mov eax, dword [rsp + 0x18]                   |     eax = *((rsp + 0x18));
    0x00407f4a cmp eax, dword [rsp + 0xa0]                   |     
                                                             |     if (eax != *((rsp + 0xa0))) {
    0x00407f51 je 0x407fef                                   |         
    0x00407f57 mov edi, 0x6869c8                             |         
    0x00407f5c mov esi, 0x44f3ec                             |         
    0x00407f61 mov edx, 0xa                                  |         
    0x00407f66 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00407f6b mov esi, 0x450690                             |         
    0x00407f70 mov edx, 2                                    |         
    0x00407f75 mov rdi, rax                                  |         
    0x00407f78 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407f7d mov rdi, rax                                  |         rdi = rax;
    0x00407f80 mov esi, r15d                                 |         esi = r15d;
    0x00407f83 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407f88 mov esi, 0x468473                             |         
    0x00407f8d mov edx, 1                                    |         
    0x00407f92 mov rdi, rax                                  |         
    0x00407f95 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00407f9a mov esi, 0x44f3f7                             |         
    0x00407f9f mov edx, 0xa                                  |         
    0x00407fa4 mov rdi, rax                                  |         
    0x00407fa7 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00407fac mov esi, 0x450690                             |         
    0x00407fb1 mov edx, 2                                    |         
    0x00407fb6 mov rdi, rax                                  |         
    0x00407fb9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00407fbe mov rdi, rax                                  |         rdi = rax;
    0x00407fc1 mov esi, r12d                                 |         esi = r12d;
    0x00407fc4 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00407fc9 mov esi, 0x4683b0                             |         
    0x00407fce mov edx, 1                                    |         
    0x00407fd3 mov rdi, rax                                  |         
    0x00407fd6 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00407fdb mov esi, 0x44eb41                             |         esi = "EXP_TOTAL_SIZE == X.totalSize()";
    0x00407fe0 mov edi, 1                                    |         edi = 1;
    0x00407fe5 mov edx, 0xca1                                |         edx = 0xca1;
    0x00407fea call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00407fef mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x00407ff7 sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x00407fff shr rax, 3                                    |     rax >>= 3;
    0x00408003 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00408009 cmp dword [rsp + 0x20], eax                   |     
                                                             |     if (*((rsp + 0x20)) != eax) {
    0x0040800d je 0x4080ab                                   |         
    0x00408013 mov edi, 0x6869c8                             |         
    0x00408018 mov esi, 0x44f3ec                             |         
    0x0040801d mov edx, 0xa                                  |         
    0x00408022 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408027 mov esi, 0x450690                             |         
    0x0040802c mov edx, 2                                    |         
    0x00408031 mov rdi, rax                                  |         
    0x00408034 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408039 mov rdi, rax                                  |         rdi = rax;
    0x0040803c mov esi, r15d                                 |         esi = r15d;
    0x0040803f call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408044 mov esi, 0x468473                             |         
    0x00408049 mov edx, 1                                    |         
    0x0040804e mov rdi, rax                                  |         
    0x00408051 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408056 mov esi, 0x44f3f7                             |         
    0x0040805b mov edx, 0xa                                  |         
    0x00408060 mov rdi, rax                                  |         
    0x00408063 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408068 mov esi, 0x450690                             |         
    0x0040806d mov edx, 2                                    |         
    0x00408072 mov rdi, rax                                  |         
    0x00408075 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x0040807a mov rdi, rax                                  |         rdi = rax;
    0x0040807d mov esi, r12d                                 |         esi = r12d;
    0x00408080 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408085 mov esi, 0x4683b0                             |         
    0x0040808a mov edx, 1                                    |         
    0x0040808f mov rdi, rax                                  |         
    0x00408092 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00408097 mov esi, 0x44eb61                             |         esi = "EXP_NUM_BUFFERS == X.numBuffers()";
    0x0040809c mov edi, 1                                    |         edi = 1;
    0x004080a1 mov edx, 0xca3                                |         edx = 0xca3;
    0x004080a6 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x004080ab lea rdi, [rsp + 0x80]                         |     rdi = rsp + 0x80;
    0x004080b3 call 0x403960                                 |     checkNoAliasedBlobBuffers(BloombergLP::bdlbb::Blobconst&) ();
    0x004080b8 cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x004080bd jl 0x4081d0                                   |         
    0x004080c3 mov edi, 0x6869c8                             |         
    0x004080c8 mov esi, 0x44de52                             |         
    0x004080cd mov edx, 0xd                                  |         
    0x004080d2 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x004080d7 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x004080de mov rdi, rax                                  |         rdi = rax;
    0x004080e1 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004080e6 mov esi, 0x44de60                             |         
    0x004080eb mov edx, 2                                    |         
    0x004080f0 mov rdi, rax                                  |         
    0x004080f3 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004080f8 mov rdi, rax                                  |         rdi = rax;
    0x004080fb call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408100 mov edi, 0x6869c8                             |         
    0x00408105 mov esi, 0x44f470                             |         
    0x0040810a mov edx, 0x11                                 |         
    0x0040810f call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.numBuffers() = ", 0x11);
    0x00408114 mov rcx, qword [rsp + 0x88]                   |         rcx = *((rsp + 0x88));
    0x0040811c sub rcx, qword [rsp + 0x80]                   |         rcx -= *((rsp + 0x80));
    0x00408124 shr rcx, 3                                    |         rcx >>= 3;
    0x00408128 imul esi, ecx, 0xaaaaaaab                     |         esi = ecx * 0xaaaaaaab;
    0x0040812e mov rdi, rax                                  |         rdi = rax;
    0x00408131 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408136 mov esi, 0x44de60                             |         
    0x0040813b mov edx, 2                                    |         
    0x00408140 mov rdi, rax                                  |         
    0x00408143 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408148 mov rdi, rax                                  |         rdi = rax;
    0x0040814b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408150 mov edi, 0x6869c8                             |         
    0x00408155 mov esi, 0x44de63                             |         
    0x0040815a mov edx, 0x10                                 |         
    0x0040815f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00408164 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x0040816b mov rdi, rax                                  |         rdi = rax;
    0x0040816e call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408173 mov rbx, rax                                  |         rbx = rax;
    0x00408176 mov rax, qword [rax]                          |         rax = *(rax);
    0x00408179 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040817d add rsi, rbx                                  |         rsi += rbx;
    0x00408180 lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00408188 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040818d mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00408192 lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x0040819a call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040819f mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004081a2 mov rdi, rax                                  |         rdi = rax;
    0x004081a5 mov esi, 0xa                                  |         esi = 0xa;
    0x004081aa call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004081ad mov ebp, eax                                  |         
    0x004081af lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x004081b7 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004081bc movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x004081c0 mov rdi, rbx                                  |         rdi = rbx;
    0x004081c3 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004081c8 mov rdi, rbx                                  |         rdi = rbx;
    0x004081cb call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x004081d0 lea rdi, [rsp + 0x80]                         |     
    0x004081d8 mov esi, r12d                                 |     
    0x004081db call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, r12d);
    0x004081e0 cmp r12d, dword [rsp + 0xa4]                  |     
                                                             |     if (r12d != *((rsp + 0xa4))) {
    0x004081e8 je 0x408286                                   |         
    0x004081ee mov edi, 0x6869c8                             |         
    0x004081f3 mov esi, 0x44f3ec                             |         
    0x004081f8 mov edx, 0xa                                  |         
    0x004081fd call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408202 mov esi, 0x450690                             |         
    0x00408207 mov edx, 2                                    |         
    0x0040820c mov rdi, rax                                  |         
    0x0040820f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408214 mov rdi, rax                                  |         rdi = rax;
    0x00408217 mov esi, r15d                                 |         esi = r15d;
    0x0040821a call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040821f mov esi, 0x468473                             |         
    0x00408224 mov edx, 1                                    |         
    0x00408229 mov rdi, rax                                  |         
    0x0040822c call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408231 mov esi, 0x44f3f7                             |         
    0x00408236 mov edx, 0xa                                  |         
    0x0040823b mov rdi, rax                                  |         
    0x0040823e call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408243 mov esi, 0x450690                             |         
    0x00408248 mov edx, 2                                    |         
    0x0040824d mov rdi, rax                                  |         
    0x00408250 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408255 mov rdi, rax                                  |         rdi = rax;
    0x00408258 mov esi, r12d                                 |         esi = r12d;
    0x0040825b call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408260 mov esi, 0x4683b0                             |         
    0x00408265 mov edx, 1                                    |         
    0x0040826a mov rdi, rax                                  |         
    0x0040826d call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00408272 mov esi, 0x44eb28                             |         esi = "EXP_LENGTH == X.length()";
    0x00408277 mov edi, 1                                    |         edi = 1;
    0x0040827c mov edx, 0xcab                                |         edx = 0xcab;
    0x00408281 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x00408286 mov eax, dword [rsp + 0x18]                   |     eax = *((rsp + 0x18));
    0x0040828a cmp eax, dword [rsp + 0xa0]                   |     
                                                             |     if (eax != *((rsp + 0xa0))) {
    0x00408291 je 0x40832f                                   |         
    0x00408297 mov edi, 0x6869c8                             |         
    0x0040829c mov esi, 0x44f3ec                             |         
    0x004082a1 mov edx, 0xa                                  |         
    0x004082a6 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x004082ab mov esi, 0x450690                             |         
    0x004082b0 mov edx, 2                                    |         
    0x004082b5 mov rdi, rax                                  |         
    0x004082b8 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004082bd mov rdi, rax                                  |         rdi = rax;
    0x004082c0 mov esi, r15d                                 |         esi = r15d;
    0x004082c3 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004082c8 mov esi, 0x468473                             |         
    0x004082cd mov edx, 1                                    |         
    0x004082d2 mov rdi, rax                                  |         
    0x004082d5 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x004082da mov esi, 0x44f3f7                             |         
    0x004082df mov edx, 0xa                                  |         
    0x004082e4 mov rdi, rax                                  |         
    0x004082e7 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x004082ec mov esi, 0x450690                             |         
    0x004082f1 mov edx, 2                                    |         
    0x004082f6 mov rdi, rax                                  |         
    0x004082f9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004082fe mov rdi, rax                                  |         rdi = rax;
    0x00408301 mov esi, r12d                                 |         esi = r12d;
    0x00408304 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408309 mov esi, 0x4683b0                             |         
    0x0040830e mov edx, 1                                    |         
    0x00408313 mov rdi, rax                                  |         
    0x00408316 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x0040831b mov esi, 0x44eb41                             |         esi = "EXP_TOTAL_SIZE == X.totalSize()";
    0x00408320 mov edi, 1                                    |         edi = 1;
    0x00408325 mov edx, 0xcad                                |         edx = 0xcad;
    0x0040832a call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x0040832f mov rax, qword [rsp + 0x88]                   |     rax = *((rsp + 0x88));
    0x00408337 sub rax, qword [rsp + 0x80]                   |     rax -= *((rsp + 0x80));
    0x0040833f shr rax, 3                                    |     rax >>= 3;
    0x00408343 imul eax, eax, 0xaaaaaaab                     |     eax *= 0xaaaaaaab;
    0x00408349 cmp dword [rsp + 0x20], eax                   |     
                                                             |     if (*((rsp + 0x20)) != eax) {
    0x0040834d je 0x4083eb                                   |         
    0x00408353 mov edi, 0x6869c8                             |         
    0x00408358 mov esi, 0x44f3ec                             |         
    0x0040835d mov edx, 0xa                                  |         
    0x00408362 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408367 mov esi, 0x450690                             |         
    0x0040836c mov edx, 2                                    |         
    0x00408371 mov rdi, rax                                  |         
    0x00408374 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408379 mov rdi, rax                                  |         rdi = rax;
    0x0040837c mov esi, r15d                                 |         esi = r15d;
    0x0040837f call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408384 mov esi, 0x468473                             |         
    0x00408389 mov edx, 1                                    |         
    0x0040838e mov rdi, rax                                  |         
    0x00408391 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408396 mov esi, 0x44f3f7                             |         
    0x0040839b mov edx, 0xa                                  |         
    0x004083a0 mov rdi, rax                                  |         
    0x004083a3 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x004083a8 mov esi, 0x450690                             |         
    0x004083ad mov edx, 2                                    |         
    0x004083b2 mov rdi, rax                                  |         
    0x004083b5 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004083ba mov rdi, rax                                  |         rdi = rax;
    0x004083bd mov esi, r12d                                 |         esi = r12d;
    0x004083c0 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004083c5 mov esi, 0x4683b0                             |         
    0x004083ca mov edx, 1                                    |         
    0x004083cf mov rdi, rax                                  |         
    0x004083d2 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x004083d7 mov esi, 0x44eb61                             |         esi = "EXP_NUM_BUFFERS == X.numBuffers()";
    0x004083dc mov edi, 1                                    |         edi = 1;
    0x004083e1 mov edx, 0xcaf                                |         edx = 0xcaf;
    0x004083e6 call 0x403b00                                 |         (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |     }
    0x004083eb lea rdi, [rsp + 0x80]                         |     rdi = rsp + 0x80;
    0x004083f3 call 0x403960                                 |     checkNoAliasedBlobBuffers(BloombergLP::bdlbb::Blobconst&) ();
    0x004083f8 cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x004083fd jl 0x408510                                   |         
    0x00408403 mov edi, 0x6869c8                             |         
    0x00408408 mov esi, 0x44de52                             |         
    0x0040840d mov edx, 0xd                                  |         
    0x00408412 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00408417 mov esi, dword [rsp + 0xa4]                   |         esi = *((rsp + 0xa4));
    0x0040841e mov rdi, rax                                  |         rdi = rax;
    0x00408421 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408426 mov esi, 0x44de60                             |         
    0x0040842b mov edx, 2                                    |         
    0x00408430 mov rdi, rax                                  |         
    0x00408433 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408438 mov rdi, rax                                  |         rdi = rax;
    0x0040843b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408440 mov edi, 0x6869c8                             |         
    0x00408445 mov esi, 0x44f470                             |         
    0x0040844a mov edx, 0x11                                 |         
    0x0040844f call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.numBuffers() = ", 0x11);
    0x00408454 mov rcx, qword [rsp + 0x88]                   |         rcx = *((rsp + 0x88));
    0x0040845c sub rcx, qword [rsp + 0x80]                   |         rcx -= *((rsp + 0x80));
    0x00408464 shr rcx, 3                                    |         rcx >>= 3;
    0x00408468 imul esi, ecx, 0xaaaaaaab                     |         esi = ecx * 0xaaaaaaab;
    0x0040846e mov rdi, rax                                  |         rdi = rax;
    0x00408471 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408476 mov esi, 0x44de60                             |         
    0x0040847b mov edx, 2                                    |         
    0x00408480 mov rdi, rax                                  |         
    0x00408483 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408488 mov rdi, rax                                  |         rdi = rax;
    0x0040848b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408490 mov edi, 0x6869c8                             |         
    0x00408495 mov esi, 0x44de63                             |         
    0x0040849a mov edx, 0x10                                 |         
    0x0040849f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x004084a4 mov esi, dword [rsp + 0xa0]                   |         esi = *((rsp + 0xa0));
    0x004084ab mov rdi, rax                                  |         rdi = rax;
    0x004084ae call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004084b3 mov rbx, rax                                  |         rbx = rax;
    0x004084b6 mov rax, qword [rax]                          |         rax = *(rax);
    0x004084b9 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x004084bd add rsi, rbx                                  |         rsi += rbx;
    0x004084c0 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x004084c8 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x004084cd mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x004084d2 lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x004084da call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004084df mov rcx, qword [rax]                          |         rcx = *(rax);
    0x004084e2 mov rdi, rax                                  |         rdi = rax;
    0x004084e5 mov esi, 0xa                                  |         esi = 0xa;
    0x004084ea call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x004084ed mov ebp, eax                                  |         
    0x004084ef lea rdi, [rsp + 0x3a0]                        |         rdi = rsp + 0x3a0;
    0x004084f7 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004084fc movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00408500 mov rdi, rbx                                  |         rdi = rbx;
    0x00408503 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00408508 mov rdi, rbx                                  |         rdi = rbx;
    0x0040850b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00408510 test r12d, r12d                               |     
                                                             |     if (r12d == 0) {
    0x00408513 je 0x408940                                   |         goto label_20;
                                                             |     }
    0x00408519 xor r14d, r14d                                |     r14d = 0;
    0x0040851c jmp 0x40852c                                  |     
                                                             |     while (*((rsp + 0xc)) < 4) {
                                                             | label_5:
    0x00408520 inc r14d                                      |         r14d++;
    0x00408523 cmp r12d, r14d                                |         
                                                             |         if (r12d == r14d) {
    0x00408526 je 0x408940                                   |             goto label_20;
                                                             |         }
    0x0040852c lea rdi, [rsp + 0x80]                         |         
    0x00408534 mov esi, r14d                                 |         
    0x00408537 call 0x41ef90                                 |         BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, r14d);
    0x0040853c cmp r14d, dword [rsp + 0xa4]                  |         
                                                             |         if (r14d != *((rsp + 0xa4))) {
    0x00408544 je 0x408623                                   |             
    0x0040854a mov edi, 0x6869c8                             |             
    0x0040854f mov esi, 0x44f3ec                             |             
    0x00408554 mov edx, 0xa                                  |             
    0x00408559 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x0040855e mov esi, 0x450690                             |             
    0x00408563 mov edx, 2                                    |             
    0x00408568 mov rdi, rax                                  |             
    0x0040856b call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408570 mov rdi, rax                                  |             rdi = rax;
    0x00408573 mov esi, r15d                                 |             esi = r15d;
    0x00408576 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040857b mov esi, 0x468473                             |             
    0x00408580 mov edx, 1                                    |             
    0x00408585 mov rdi, rax                                  |             
    0x00408588 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x0040858d mov esi, 0x44f3f7                             |             
    0x00408592 mov edx, 0xa                                  |             
    0x00408597 mov rdi, rax                                  |             
    0x0040859a call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x0040859f mov esi, 0x450690                             |             
    0x004085a4 mov edx, 2                                    |             
    0x004085a9 mov rdi, rax                                  |             
    0x004085ac call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004085b1 mov rdi, rax                                  |             rdi = rax;
    0x004085b4 mov esi, r12d                                 |             esi = r12d;
    0x004085b7 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004085bc mov esi, 0x468473                             |             
    0x004085c1 mov edx, 1                                    |             
    0x004085c6 mov rdi, rax                                  |             
    0x004085c9 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x004085ce mov esi, 0x44f4ff                             |             
    0x004085d3 mov edx, 0xa                                  |             
    0x004085d8 mov rdi, rax                                  |             
    0x004085db call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x004085e0 mov esi, 0x450690                             |             
    0x004085e5 mov edx, 2                                    |             
    0x004085ea mov rdi, rax                                  |             
    0x004085ed call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004085f2 mov rdi, rax                                  |             rdi = rax;
    0x004085f5 mov esi, r14d                                 |             esi = r14d;
    0x004085f8 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004085fd mov esi, 0x4683b0                             |             
    0x00408602 mov edx, 1                                    |             
    0x00408607 mov rdi, rax                                  |             
    0x0040860a call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x0040860f mov esi, 0x44f50a                             |             esi = "blobLength == X.length()";
    0x00408614 mov edi, 1                                    |             edi = 1;
    0x00408619 mov edx, 0xcb9                                |             edx = 0xcb9;
    0x0040861e call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x00408623 mov eax, dword [rsp + 0x18]                   |         eax = *((rsp + 0x18));
    0x00408627 cmp eax, dword [rsp + 0xa0]                   |         
                                                             |         if (eax != *((rsp + 0xa0))) {
    0x0040862e je 0x40870d                                   |             
    0x00408634 mov edi, 0x6869c8                             |             
    0x00408639 mov esi, 0x44f3ec                             |             
    0x0040863e mov edx, 0xa                                  |             
    0x00408643 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408648 mov esi, 0x450690                             |             
    0x0040864d mov edx, 2                                    |             
    0x00408652 mov rdi, rax                                  |             
    0x00408655 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x0040865a mov rdi, rax                                  |             rdi = rax;
    0x0040865d mov esi, r15d                                 |             esi = r15d;
    0x00408660 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408665 mov esi, 0x468473                             |             
    0x0040866a mov edx, 1                                    |             
    0x0040866f mov rdi, rax                                  |             
    0x00408672 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408677 mov esi, 0x44f3f7                             |             
    0x0040867c mov edx, 0xa                                  |             
    0x00408681 mov rdi, rax                                  |             
    0x00408684 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408689 mov esi, 0x450690                             |             
    0x0040868e mov edx, 2                                    |             
    0x00408693 mov rdi, rax                                  |             
    0x00408696 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x0040869b mov rdi, rax                                  |             rdi = rax;
    0x0040869e mov esi, r12d                                 |             esi = r12d;
    0x004086a1 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004086a6 mov esi, 0x468473                             |             
    0x004086ab mov edx, 1                                    |             
    0x004086b0 mov rdi, rax                                  |             
    0x004086b3 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x004086b8 mov esi, 0x44f4ff                             |             
    0x004086bd mov edx, 0xa                                  |             
    0x004086c2 mov rdi, rax                                  |             
    0x004086c5 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x004086ca mov esi, 0x450690                             |             
    0x004086cf mov edx, 2                                    |             
    0x004086d4 mov rdi, rax                                  |             
    0x004086d7 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004086dc mov rdi, rax                                  |             rdi = rax;
    0x004086df mov esi, r14d                                 |             esi = r14d;
    0x004086e2 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004086e7 mov esi, 0x4683b0                             |             
    0x004086ec mov edx, 1                                    |             
    0x004086f1 mov rdi, rax                                  |             
    0x004086f4 call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x004086f9 mov esi, 0x44eb41                             |             esi = "EXP_TOTAL_SIZE == X.totalSize()";
    0x004086fe mov edi, 1                                    |             edi = 1;
    0x00408703 mov edx, 0xcbb                                |             edx = 0xcbb;
    0x00408708 call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x0040870d mov rax, qword [rsp + 0x88]                   |         rax = *((rsp + 0x88));
    0x00408715 sub rax, qword [rsp + 0x80]                   |         rax -= *((rsp + 0x80));
    0x0040871d shr rax, 3                                    |         rax >>= 3;
    0x00408721 imul eax, eax, 0xaaaaaaab                     |         eax *= 0xaaaaaaab;
    0x00408727 cmp dword [rsp + 0x20], eax                   |         
                                                             |         if (*((rsp + 0x20)) != eax) {
    0x0040872b je 0x40880a                                   |             
    0x00408731 mov edi, 0x6869c8                             |             
    0x00408736 mov esi, 0x44f3ec                             |             
    0x0040873b mov edx, 0xa                                  |             
    0x00408740 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408745 mov esi, 0x450690                             |             
    0x0040874a mov edx, 2                                    |             
    0x0040874f mov rdi, rax                                  |             
    0x00408752 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408757 mov rdi, rax                                  |             rdi = rax;
    0x0040875a mov esi, r15d                                 |             esi = r15d;
    0x0040875d call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408762 mov esi, 0x468473                             |             
    0x00408767 mov edx, 1                                    |             
    0x0040876c mov rdi, rax                                  |             
    0x0040876f call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408774 mov esi, 0x44f3f7                             |             
    0x00408779 mov edx, 0xa                                  |             
    0x0040877e mov rdi, rax                                  |             
    0x00408781 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408786 mov esi, 0x450690                             |             
    0x0040878b mov edx, 2                                    |             
    0x00408790 mov rdi, rax                                  |             
    0x00408793 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408798 mov rdi, rax                                  |             rdi = rax;
    0x0040879b mov esi, r12d                                 |             esi = r12d;
    0x0040879e call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004087a3 mov esi, 0x468473                             |             
    0x004087a8 mov edx, 1                                    |             
    0x004087ad mov rdi, rax                                  |             
    0x004087b0 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x004087b5 mov esi, 0x44f4ff                             |             
    0x004087ba mov edx, 0xa                                  |             
    0x004087bf mov rdi, rax                                  |             
    0x004087c2 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x004087c7 mov esi, 0x450690                             |             
    0x004087cc mov edx, 2                                    |             
    0x004087d1 mov rdi, rax                                  |             
    0x004087d4 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004087d9 mov rdi, rax                                  |             rdi = rax;
    0x004087dc mov esi, r14d                                 |             esi = r14d;
    0x004087df call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004087e4 mov esi, 0x4683b0                             |             
    0x004087e9 mov edx, 1                                    |             
    0x004087ee mov rdi, rax                                  |             
    0x004087f1 call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x004087f6 mov esi, 0x44eb61                             |             esi = "EXP_NUM_BUFFERS == X.numBuffers()";
    0x004087fb mov edi, 1                                    |             edi = 1;
    0x00408800 mov edx, 0xcbd                                |             edx = 0xcbd;
    0x00408805 call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x0040880a lea rdi, [rsp + 0x80]                         |         rdi = rsp + 0x80;
    0x00408812 call 0x403960                                 |         checkNoAliasedBlobBuffers(BloombergLP::bdlbb::Blobconst&) ();
    0x00408817 cmp dword [rsp + 0xc], 4                      |         
    0x0040881c jl 0x408520                                   |         
                                                             |     }
    0x00408822 mov edi, 0x6869c8                             |     
    0x00408827 mov esi, 0x44de52                             |     
    0x0040882c mov edx, 0xd                                  |     
    0x00408831 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00408836 mov esi, dword [rsp + 0xa4]                   |     esi = *((rsp + 0xa4));
    0x0040883d mov rdi, rax                                  |     rdi = rax;
    0x00408840 call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408845 mov esi, 0x44de60                             |     
    0x0040884a mov edx, 2                                    |     
    0x0040884f mov rdi, rax                                  |     
    0x00408852 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408857 mov rdi, rax                                  |     rdi = rax;
    0x0040885a call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040885f mov edi, 0x6869c8                             |     
    0x00408864 mov esi, 0x44f470                             |     
    0x00408869 mov edx, 0x11                                 |     
    0x0040886e call 0x41d370                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.numBuffers() = ", 0x11);
    0x00408873 mov rcx, qword [rsp + 0x88]                   |     rcx = *((rsp + 0x88));
    0x0040887b sub rcx, qword [rsp + 0x80]                   |     rcx -= *((rsp + 0x80));
    0x00408883 shr rcx, 3                                    |     rcx >>= 3;
    0x00408887 imul esi, ecx, 0xaaaaaaab                     |     esi = ecx * 0xaaaaaaab;
    0x0040888d mov rdi, rax                                  |     rdi = rax;
    0x00408890 call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408895 mov esi, 0x44de60                             |     
    0x0040889a mov edx, 2                                    |     
    0x0040889f mov rdi, rax                                  |     
    0x004088a2 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004088a7 mov rdi, rax                                  |     rdi = rax;
    0x004088aa call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004088af mov edi, 0x6869c8                             |     
    0x004088b4 mov esi, 0x44de63                             |     
    0x004088b9 mov edx, 0x10                                 |     
    0x004088be call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x004088c3 mov esi, dword [rsp + 0xa0]                   |     esi = *((rsp + 0xa0));
    0x004088ca mov rdi, rax                                  |     rdi = rax;
    0x004088cd call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004088d2 mov rbp, rax                                  |     
    0x004088d5 mov rax, qword [rax]                          |     rax = *(rax);
    0x004088d8 mov rsi, qword [rax - 0x18]                   |     rsi = *((rax - 0x18));
    0x004088dc add rsi, rbp                                  |     rsi += rbp;
    0x004088df lea rdi, [rsp + 0x410]                        |     rdi = rsp + 0x410;
    0x004088e7 call 0x4035d0                                 |     std::_1::ios_base::getloc()const ();
    0x004088ec mov esi, 0x686910                             |     esi = std::__1::ctype<char>::id;
    0x004088f1 lea rdi, [rsp + 0x410]                        |     rdi = rsp + 0x410;
    0x004088f9 call 0x403680                                 |     rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x004088fe mov rcx, qword [rax]                          |     rcx = *(rax);
    0x00408901 mov rdi, rax                                  |     rdi = rax;
    0x00408904 mov esi, 0xa                                  |     esi = 0xa;
    0x00408909 call qword [rcx + 0x38]                       |     eax = uint64_t (*rcx + 0x38)() ();
    0x0040890c mov ebx, eax                                  |     ebx = eax;
    0x0040890e lea rdi, [rsp + 0x410]                        |     rdi = rsp + 0x410;
    0x00408916 call 0x4036f0                                 |     std::_1::locale::~locale() ();
    0x0040891b movsx esi, bl                                 |     esi = (int32_t) bl;
    0x0040891e mov rdi, rbp                                  |     rdi = rbp;
    0x00408921 call 0x403420                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00408926 mov rdi, rbp                                  |     rdi = rbp;
    0x00408929 call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0040892e jmp 0x408520                                  |     goto label_5;
                                                             | label_20:
    0x00408940 mov eax, dword [rsp + 0x78]                   |     eax = *((rsp + 0x78));
    0x00408944 cmp dword [rsp + 0xe8], eax                   |     
    0x0040894b mov rax, qword [rsp + 0x28]                   |     rax = *((rsp + 0x28));
                                                             |     if (*((rsp + 0xe8)) >= eax) {
    0x00408950 jae 0x408d90                                  |         goto label_21;
                                                             |     }
    0x00408956 xor r13d, r13d                                |     r13d = 0;
    0x00408959 jmp 0x408971                                  |     
                                                             |     while (*((rsp + 0xc)) < 4) {
                                                             | label_6:
    0x00408960 inc r13d                                      |         r13d++;
    0x00408963 mov rax, qword [rsp + 0x28]                   |         rax = *((rsp + 0x28));
    0x00408968 cmp eax, r13d                                 |         
                                                             |         if (eax == r13d) {
    0x0040896b je 0x408d90                                   |             goto label_21;
                                                             |         }
    0x00408971 lea ebx, [rax + r13]                          |         ebx = rax + r13;
    0x00408975 mov rax, qword [rsp + 0x70]                   |         rax = *((rsp + 0x70));
    0x0040897a add eax, r13d                                 |         eax += r13d;
    0x0040897d xor edx, edx                                  |         edx = 0;
    0x0040897f div r15d                                      |         eax = edx:eax / r15d;
                                                             |         edx = edx:eax % r15d;
    0x00408982 mov r14d, eax                                 |         r14d = eax;
    0x00408985 lea rdi, [rsp + 0x80]                         |         
    0x0040898d mov esi, ebx                                  |         
    0x0040898f call 0x41ef90                                 |         BloombergLP::bdlbb::Blob::setLength(int) (rsp + 0x80, ebx);
    0x00408994 cmp ebx, dword [rsp + 0xa4]                   |         
                                                             |         if (ebx != *((rsp + 0xa4))) {
    0x0040899b je 0x408a79                                   |             
    0x004089a1 mov edi, 0x6869c8                             |             
    0x004089a6 mov esi, 0x44f3ec                             |             
    0x004089ab mov edx, 0xa                                  |             
    0x004089b0 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x004089b5 mov esi, 0x450690                             |             
    0x004089ba mov edx, 2                                    |             
    0x004089bf mov rdi, rax                                  |             
    0x004089c2 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x004089c7 mov rdi, rax                                  |             rdi = rax;
    0x004089ca mov esi, r15d                                 |             esi = r15d;
    0x004089cd call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004089d2 mov esi, 0x468473                             |             
    0x004089d7 mov edx, 1                                    |             
    0x004089dc mov rdi, rax                                  |             
    0x004089df call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x004089e4 mov esi, 0x44f3f7                             |             
    0x004089e9 mov edx, 0xa                                  |             
    0x004089ee mov rdi, rax                                  |             
    0x004089f1 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x004089f6 mov esi, 0x450690                             |             
    0x004089fb mov edx, 2                                    |             
    0x00408a00 mov rdi, rax                                  |             
    0x00408a03 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408a08 mov rdi, rax                                  |             rdi = rax;
    0x00408a0b mov esi, r12d                                 |             esi = r12d;
    0x00408a0e call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408a13 mov esi, 0x468473                             |             
    0x00408a18 mov edx, 1                                    |             
    0x00408a1d mov rdi, rax                                  |             
    0x00408a20 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408a25 mov esi, 0x44f4ff                             |             
    0x00408a2a mov edx, 0xa                                  |             
    0x00408a2f mov rdi, rax                                  |             
    0x00408a32 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x00408a37 mov esi, 0x450690                             |             
    0x00408a3c mov edx, 2                                    |             
    0x00408a41 mov rdi, rax                                  |             
    0x00408a44 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408a49 mov rdi, rax                                  |             rdi = rax;
    0x00408a4c mov esi, ebx                                  |             esi = ebx;
    0x00408a4e call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408a53 mov esi, 0x4683b0                             |             
    0x00408a58 mov edx, 1                                    |             
    0x00408a5d mov rdi, rax                                  |             
    0x00408a60 call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00408a65 mov esi, 0x44f50a                             |             esi = "blobLength == X.length()";
    0x00408a6a mov edi, 1                                    |             edi = 1;
    0x00408a6f mov edx, 0xccd                                |             edx = 0xccd;
    0x00408a74 call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x00408a79 mov eax, r14d                                 |         eax = r14d;
    0x00408a7c imul eax, r15d                                |         eax *= r15d;
    0x00408a80 cmp eax, dword [rsp + 0xa0]                   |         
                                                             |         if (eax != *((rsp + 0xa0))) {
    0x00408a87 je 0x408b65                                   |             
    0x00408a8d mov edi, 0x6869c8                             |             
    0x00408a92 mov esi, 0x44f3ec                             |             
    0x00408a97 mov edx, 0xa                                  |             
    0x00408a9c call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408aa1 mov esi, 0x450690                             |             
    0x00408aa6 mov edx, 2                                    |             
    0x00408aab mov rdi, rax                                  |             
    0x00408aae call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408ab3 mov rdi, rax                                  |             rdi = rax;
    0x00408ab6 mov esi, r15d                                 |             esi = r15d;
    0x00408ab9 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408abe mov esi, 0x468473                             |             
    0x00408ac3 mov edx, 1                                    |             
    0x00408ac8 mov rdi, rax                                  |             
    0x00408acb call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408ad0 mov esi, 0x44f3f7                             |             
    0x00408ad5 mov edx, 0xa                                  |             
    0x00408ada mov rdi, rax                                  |             
    0x00408add call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408ae2 mov esi, 0x450690                             |             
    0x00408ae7 mov edx, 2                                    |             
    0x00408aec mov rdi, rax                                  |             
    0x00408aef call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408af4 mov rdi, rax                                  |             rdi = rax;
    0x00408af7 mov esi, r12d                                 |             esi = r12d;
    0x00408afa call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408aff mov esi, 0x468473                             |             
    0x00408b04 mov edx, 1                                    |             
    0x00408b09 mov rdi, rax                                  |             
    0x00408b0c call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408b11 mov esi, 0x44f4ff                             |             
    0x00408b16 mov edx, 0xa                                  |             
    0x00408b1b mov rdi, rax                                  |             
    0x00408b1e call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x00408b23 mov esi, 0x450690                             |             
    0x00408b28 mov edx, 2                                    |             
    0x00408b2d mov rdi, rax                                  |             
    0x00408b30 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408b35 mov rdi, rax                                  |             rdi = rax;
    0x00408b38 mov esi, ebx                                  |             esi = ebx;
    0x00408b3a call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408b3f mov esi, 0x4683b0                             |             
    0x00408b44 mov edx, 1                                    |             
    0x00408b49 mov rdi, rax                                  |             
    0x00408b4c call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00408b51 mov esi, 0x44eb41                             |             esi = "EXP_TOTAL_SIZE == X.totalSize()";
    0x00408b56 mov edi, 1                                    |             edi = 1;
    0x00408b5b mov edx, 0xccf                                |             edx = 0xccf;
    0x00408b60 call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x00408b65 mov rax, qword [rsp + 0x88]                   |         rax = *((rsp + 0x88));
    0x00408b6d sub rax, qword [rsp + 0x80]                   |         rax -= *((rsp + 0x80));
    0x00408b75 shr rax, 3                                    |         rax >>= 3;
    0x00408b79 imul eax, eax, 0xaaaaaaab                     |         eax *= 0xaaaaaaab;
    0x00408b7f cmp r14d, eax                                 |         
                                                             |         if (r14d != eax) {
    0x00408b82 je 0x408c60                                   |             
    0x00408b88 mov edi, 0x6869c8                             |             
    0x00408b8d mov esi, 0x44f3ec                             |             
    0x00408b92 mov edx, 0xa                                  |             
    0x00408b97 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "bufferSize", 0xa);
    0x00408b9c mov esi, 0x450690                             |             
    0x00408ba1 mov edx, 2                                    |             
    0x00408ba6 mov rdi, rax                                  |             
    0x00408ba9 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408bae mov rdi, rax                                  |             rdi = rax;
    0x00408bb1 mov esi, r15d                                 |             esi = r15d;
    0x00408bb4 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408bb9 mov esi, 0x468473                             |             
    0x00408bbe mov edx, 1                                    |             
    0x00408bc3 mov rdi, rax                                  |             
    0x00408bc6 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408bcb mov esi, 0x44f3f7                             |             
    0x00408bd0 mov edx, 0xa                                  |             
    0x00408bd5 mov rdi, rax                                  |             
    0x00408bd8 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "dataLength", 0xa);
    0x00408bdd mov esi, 0x450690                             |             
    0x00408be2 mov edx, 2                                    |             
    0x00408be7 mov rdi, rax                                  |             
    0x00408bea call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408bef mov rdi, rax                                  |             rdi = rax;
    0x00408bf2 mov esi, r12d                                 |             esi = r12d;
    0x00408bf5 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408bfa mov esi, 0x468473                             |             
    0x00408bff mov edx, 1                                    |             
    0x00408c04 mov rdi, rax                                  |             
    0x00408c07 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x468473, 1);
    0x00408c0c mov esi, 0x44f4ff                             |             
    0x00408c11 mov edx, 0xa                                  |             
    0x00408c16 mov rdi, rax                                  |             
    0x00408c19 call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, "blobLength", 0xa);
    0x00408c1e mov esi, 0x450690                             |             
    0x00408c23 mov edx, 2                                    |             
    0x00408c28 mov rdi, rax                                  |             
    0x00408c2b call 0x41d370                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x450690, 2);
    0x00408c30 mov rdi, rax                                  |             rdi = rax;
    0x00408c33 mov esi, ebx                                  |             esi = ebx;
    0x00408c35 call 0x403590                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408c3a mov esi, 0x4683b0                             |             
    0x00408c3f mov edx, 1                                    |             
    0x00408c44 mov rdi, rax                                  |             
    0x00408c47 call 0x41d370                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4683b0, 1);
    0x00408c4c mov esi, 0x44eb61                             |             esi = "EXP_NUM_BUFFERS == X.numBuffers()";
    0x00408c51 mov edi, 1                                    |             edi = 1;
    0x00408c56 mov edx, 0xcd1                                |             edx = 0xcd1;
    0x00408c5b call 0x403b00                                 |             (anonymousnamespace)::aSsErT(bool,char const*,int) ();
                                                             |         }
    0x00408c60 lea rdi, [rsp + 0x80]                         |         rdi = rsp + 0x80;
    0x00408c68 call 0x403960                                 |         checkNoAliasedBlobBuffers(BloombergLP::bdlbb::Blobconst&) ();
    0x00408c6d cmp dword [rsp + 0xc], 4                      |         
    0x00408c72 jl 0x408960                                   |         
                                                             |     }
    0x00408c78 mov edi, 0x6869c8                             |     
    0x00408c7d mov esi, 0x44de52                             |     
    0x00408c82 mov edx, 0xd                                  |     
    0x00408c87 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.length() = ", 0xd);
    0x00408c8c mov esi, dword [rsp + 0xa4]                   |     esi = *((rsp + 0xa4));
    0x00408c93 mov rdi, rax                                  |     rdi = rax;
    0x00408c96 call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408c9b mov esi, 0x44de60                             |     
    0x00408ca0 mov edx, 2                                    |     
    0x00408ca5 mov rdi, rax                                  |     
    0x00408ca8 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408cad mov rdi, rax                                  |     rdi = rax;
    0x00408cb0 call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408cb5 mov edi, 0x6869c8                             |     
    0x00408cba mov esi, 0x44f470                             |     
    0x00408cbf mov edx, 0x11                                 |     
    0x00408cc4 call 0x41d370                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.numBuffers() = ", 0x11);
    0x00408cc9 mov rcx, qword [rsp + 0x88]                   |     rcx = *((rsp + 0x88));
    0x00408cd1 sub rcx, qword [rsp + 0x80]                   |     rcx -= *((rsp + 0x80));
    0x00408cd9 shr rcx, 3                                    |     rcx >>= 3;
    0x00408cdd imul esi, ecx, 0xaaaaaaab                     |     esi = ecx * 0xaaaaaaab;
    0x00408ce3 mov rdi, rax                                  |     rdi = rax;
    0x00408ce6 call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408ceb mov esi, 0x44de60                             |     
    0x00408cf0 mov edx, 2                                    |     
    0x00408cf5 mov rdi, rax                                  |     
    0x00408cf8 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00408cfd mov rdi, rax                                  |     rdi = rax;
    0x00408d00 call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408d05 mov edi, 0x6869c8                             |     
    0x00408d0a mov esi, 0x44de63                             |     
    0x00408d0f mov edx, 0x10                                 |     
    0x00408d14 call 0x41d370                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "X.totalSize() = ", 0x10);
    0x00408d19 mov esi, dword [rsp + 0xa0]                   |     esi = *((rsp + 0xa0));
    0x00408d20 mov rdi, rax                                  |     rdi = rax;
    0x00408d23 call 0x403590                                 |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00408d28 mov rbp, rax                                  |     
    0x00408d2b mov rax, qword [rax]                          |     rax = *(rax);
    0x00408d2e mov rsi, qword [rax - 0x18]                   |     rsi = *((rax - 0x18));
    0x00408d32 add rsi, rbp                                  |     rsi += rbp;
    0x00408d35 lea rdi, [rsp + 0x3d0]                        |     rdi = rsp + 0x3d0;
    0x00408d3d call 0x4035d0                                 |     std::_1::ios_base::getloc()const ();
    0x00408d42 mov esi, 0x686910                             |     esi = std::__1::ctype<char>::id;
    0x00408d47 lea rdi, [rsp + 0x3d0]                        |     rdi = rsp + 0x3d0;
    0x00408d4f call 0x403680                                 |     rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00408d54 mov rcx, qword [rax]                          |     rcx = *(rax);
    0x00408d57 mov rdi, rax                                  |     rdi = rax;
    0x00408d5a mov esi, 0xa                                  |     esi = 0xa;
    0x00408d5f call qword [rcx + 0x38]                       |     eax = uint64_t (*rcx + 0x38)() ();
    0x00408d62 mov ebx, eax                                  |     ebx = eax;
    0x00408d64 lea rdi, [rsp + 0x3d0]                        |     rdi = rsp + 0x3d0;
    0x00408d6c call 0x4036f0                                 |     std::_1::locale::~locale() ();
    0x00408d71 movsx esi, bl                                 |     esi = (int32_t) bl;
    0x00408d74 mov rdi, rbp                                  |     rdi = rbp;
    0x00408d77 call 0x403420                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00408d7c mov rdi, rbp                                  |     rdi = rbp;
    0x00408d7f call 0x4035a0                                 |     std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408d84 jmp 0x408960                                  |     goto label_6;
                                                             | label_21:
    0x00408d90 lea rdi, [rsp + 0x80]                         |     
    0x00408d98 call 0x41e960                                 |     BloombergLP::bdlbb::Blob::~Blob() (rsp + 0x80);
    0x00408d9d lea rdi, [rsp + 0x30]                         |     rdi = rsp + 0x30;
    0x00408da2 call 0x41f840                                 |     BloombergLP::bdlbb::BlobBufferFactory::~BlobBufferFactory() (rdi, rsi, rdx, rcx, r8, r9);
    0x00408da7 mov rax, qword [rsp + 0x1e8]                  |     rax = *((rsp + 0x1e8));
    0x00408daf xor edi, edi                                  |     edi = 0;
    0x00408db1 test rax, rax                                 |     
    0x00408db4 setle dil                                     |     dil = (rax <= 0) ? 1 : 0;
    0x00408db8 mov esi, 0x44f261                             |     esi = 0x44f261;
    0x00408dbd mov edx, 0xcd8                                |     edx = 0xcd8;
    0x00408dc2 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00408dc7 mov rax, qword [rsp + 0x210]                  |     rax = *((rsp + 0x210));
    0x00408dcf xor edi, edi                                  |     edi = 0;
    0x00408dd1 test rax, rax                                 |     
    0x00408dd4 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00408dd8 mov esi, 0x44d9ac                             |     esi = "0 == ta.numBytesInUse()";
    0x00408ddd mov edx, 0xcd9                                |     edx = 0xcd9;
    0x00408de2 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00408de7 mov rax, qword [rsp + 0x1f8]                  |     rax = *((rsp + 0x1f8));
    0x00408def xor edi, edi                                  |     edi = 0;
    0x00408df1 test rax, rax                                 |     
    0x00408df4 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00408df8 mov esi, 0x44dfff                             |     esi = "0 == ta.numMismatches()";
    0x00408dfd mov edx, 0xcda                                |     edx = 0xcda;
    0x00408e02 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00408e07 mov rax, qword [rsp + 0x2f8]                  |     rax = *((rsp + 0x2f8));
    0x00408e0f xor edi, edi                                  |     edi = 0;
    0x00408e11 test rax, rax                                 |     
    0x00408e14 setne dil                                     |     dil = (rax != 0) ? 1 : 0;
    0x00408e18 mov esi, 0x44e017                             |     esi = "0 == defaultAlloc.numAllocations()";
    0x00408e1d mov edx, 0xcdb                                |     edx = 0xcdb;
    0x00408e22 call 0x403b00                                 |     (anonymousnamespace)::aSsErT(bool,char const*,int) ();
    0x00408e27 jmp 0x408f40                                  |     
    0x00408f40 mov rax, qword [rsp + 0xf0]                   |     rax = *((rsp + 0xf0));
    0x00408f48 lea rdi, [rsp + 0xf0]                         |     rdi = rsp + 0xf0;
    0x00408f50 mov rsi, 0xffffffffffffffff                   |     rsi = 0xffffffffffffffff;
    0x00408f57 call qword [rax + 0x10]                       |     uint64_t (*rax + 0x10)() ();
    0x00408f5a cmp dword [rsp + 0xc], 5                      |     
                                                             |     if (*((rsp + 0xc)) < 5) {
    0x00408f5f jl 0x407830                                   |         goto label_7;
                                                             |     }
    0x00408f65 mov edi, 0x44e07c                             |     
    0x00408f6a call 0x4032c0                                 |     puts ("\t\tEnd bslma exception test.");
    0x00408f6f jmp 0x407830                                  |     goto label_7;
    0x00408f74 cmp dword [rsp + 0xc], 3                      |     
                                                             |     if (*((rsp + 0xc)) >= 3) {
    0x00408f79 jl 0x4090d6                                   |         
    0x00408f7f mov rax, qword [rip + 0x27da42]               |         rax = std::__1::cout;
    0x00408f86 mov esi, 0x6869c8                             |         esi = std::__1::cout;
    0x00408f8b add rsi, qword [rax - 0x18]                   |         rsi += *((rax - 0x18));
    0x00408f8f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00408f97 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00408f9c lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00408fa4 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00408fa9 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00408fae mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00408fb1 mov rdi, rax                                  |         rdi = rax;
    0x00408fb4 mov esi, 0xa                                  |         esi = 0xa;
    0x00408fb9 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00408fbc mov ebx, eax                                  |         ebx = eax;
    0x00408fbe lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00408fc6 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00408fcb movsx esi, bl                                 |         esi = (int32_t) bl;
    0x00408fce mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00408fd3 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00408fd8 mov edi, 0x6869c8                             |         edi = std::__1::cout;
    0x00408fdd call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00408fe2 mov edi, 0x6869c8                             |         
    0x00408fe7 mov esi, 0x44ea5a                             |         
    0x00408fec mov edx, 0x17                                 |         
    0x00408ff1 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "TESTING 'swapBufferRaw', 0x17);
    0x00408ff6 mov rbx, rax                                  |         rbx = rax;
    0x00408ff9 mov rax, qword [rax]                          |         rax = *(rax);
    0x00408ffc mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00409000 add rsi, rbx                                  |         rsi += rbx;
    0x00409003 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040900b call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00409010 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00409018 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x0040901d call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00409022 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00409025 mov rdi, rax                                  |         rdi = rax;
    0x00409028 mov esi, 0xa                                  |         esi = 0xa;
    0x0040902d call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00409030 mov ebp, eax                                  |         
    0x00409032 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040903a call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040903f movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x00409043 mov rdi, rbx                                  |         rdi = rbx;
    0x00409046 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x0040904b mov rdi, rbx                                  |         rdi = rbx;
    0x0040904e call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00409053 mov esi, 0x44e0d6                             |         
    0x00409058 mov edx, 0x17                                 |         
    0x0040905d mov rdi, rbx                                  |         
    0x00409060 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbx, 0x44e0d6, 0x17);
    0x00409065 mov rbx, rax                                  |         rbx = rax;
    0x00409068 mov rax, qword [rax]                          |         rax = *(rax);
    0x0040906b mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040906f add rsi, rbx                                  |         rsi += rbx;
    0x00409072 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x0040907a call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040907f lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x00409087 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x0040908c call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x00409091 mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00409094 mov rdi, rax                                  |         rdi = rax;
    0x00409097 mov esi, 0xa                                  |         esi = 0xa;
    0x0040909c call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040909f mov ebp, eax                                  |         
    0x004090a1 lea rdi, [rsp + 0x2d0]                        |         rdi = rsp + 0x2d0;
    0x004090a9 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x004090ae movsx esi, bpl                                |         esi = (int32_t) bpl;
    0x004090b2 mov rdi, rbx                                  |         rdi = rbx;
    0x004090b5 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004090ba mov rdi, rbx                                  |         rdi = rbx;
    0x004090bd call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004090c2 mov edi, 0x6869c8                             |         
    0x004090c7 mov esi, 0x44ea72                             |         
    0x004090cc mov edx, 0x2b                                 |         
    0x004090d1 call 0x41d370                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "\nTesting all blobs with fixed buffer size.\n", 0x2b);
                                                             |     }
    0x004090d6 mov eax, 2                                    |     eax = 2;
    0x004090db mov ecx, 1                                    |     ecx = 1;
    0x004090e0 mov qword [rsp + 0x20], rcx                   |     *((rsp + 0x20)) = rcx;
    0x004090e5 lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x004090ed lea rbp, [rsp + 0x80]                         |     rbp = rsp + 0x80;
    0x004090f5 jmp 0x40911b                                  |     goto label_22;
                                                             | label_8:
    0x00409100 inc rcx                                       |     rcx++;
    0x00409103 mov eax, dword [rsp + 0x298]                  |     eax = *((rsp + 0x298));
    0x0040910a inc eax                                       |     eax++;
    0x0040910c mov qword [rsp + 0x20], rcx                   |     *((rsp + 0x20)) = rcx;
    0x00409111 cmp rcx, 6                                    |     
                                                             |     if (rcx == 6) {
    0x00409115 je 0x414ce8                                   |         void (*0x414ce8)() ();
                                                             |     }
                                                             | label_22:
    0x0040911b mov r13d, 1                                   |     r13d = 1;
    0x00409121 mov dword [rsp + 0x298], eax                  |     *((rsp + 0x298)) = eax;
    0x00409128 mov dword [rsp + 0x178], eax                  |     *((rsp + 0x178)) = eax;
    0x0040912f mov rcx, qword [rsp + 0x20]                   |     rcx = *((rsp + 0x20));
    0x00409134 jmp 0x409155                                  |     goto label_23;
                                                             | label_9:
    0x00409140 inc r13                                       |     r13++;
    0x00409143 mov rcx, qword [rsp + 0x20]                   |     rcx = *((rsp + 0x20));
    0x00409148 add dword [rsp + 0x178], ecx                  |     *((rsp + 0x178)) += ecx;
    0x0040914f cmp r13, 6                                    |     
                                                             |     if (r13 == 6) {
    0x00409153 je 0x409100                                   |         goto label_8;
                                                             |     }
                                                             | label_23:
    0x00409155 mov rax, r13                                  |     rax = r13;
    0x00409158 imul rax, rcx                                 |     rax *= rcx;
    0x0040915c mov qword [rsp + 0x70], rax                   |     *((rsp + 0x70)) = rax;
    0x00409161 cmp r13, 1                                    |     
    0x00409165 seta byte [rsp + 0x18]                        |     rsp + 0x18 = (r13 > 1) ? 1 : 0;
    0x0040916a cmp r13, 2                                    |     
    0x0040916e seta byte [rsp + 0xe8]                        |     rsp + 0xe8 = (r13 > 2) ? 1 : 0;
    0x00409176 cmp r13, 3                                    |     
    0x0040917a seta byte [rsp + 0x78]                        |     rsp + 0x78 = (r13 > 3) ? 1 : 0;
    0x0040917f cmp r13, 4                                    |     
    0x00409183 seta byte [rsp + 0x138]                       |     rsp + 0x138 = (r13 > 4) ? 1 : 0;
    0x0040918b cmp r13, 5                                    |     
    0x0040918f seta byte [rsp + 0x130]                       |     rsp + 0x130 = (r13 > 5) ? 1 : 0;
    0x00409197 mov dword [rsp + 0x28], 1                     |     *((rsp + 0x28)) = 1;
    0x0040919f jmp 0x4091f1                                  |     goto label_24;
    0x004091b0 lea rdi, [rsp + 0x1c0]                        |     
    0x004091b8 call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rsp + 0x1c0);
    0x004091bd lea rdi, [rsp + 0x3a0]                        |     
    0x004091c5 call 0x4256e0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::~DefaultAllocatorGuard() (rsp + 0x3a0);
    0x004091ca lea rbx, [rsp + 0x2d0]                        |     rbx = rsp + 0x2d0;
    0x004091d2 mov rdi, rbx                                  |     
    0x004091d5 call 0x425b80                                 |     BloombergLP::bslma::TestAllocator::~TestAllocator() (rbx);
    0x004091da mov eax, dword [rsp + 0x28]                   |     eax = *((rsp + 0x28));
    0x004091de inc eax                                       |     eax++;
    0x004091e0 mov dword [rsp + 0x28], eax                   |     *((rsp + 0x28)) = eax;
    0x004091e4 cmp eax, dword [rsp + 0x178]                  |     
                                                             |     if (eax == *((rsp + 0x178))) {
    0x004091eb je 0x409140                                   |         goto label_9;
                                                             |     }
                                                             | label_24:
    0x004091f1 xor esi, esi                                  |     
    0x004091f3 cmp dword [rsp + 0xc], 4                      |     
    0x004091f8 setg sil                                      |     sil = (*((rsp + 0xc)) > 4) ? 1 : 0;
    0x004091fc mov rdi, rbx                                  |     
    0x004091ff xor edx, edx                                  |     
    0x00409201 call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rbx, 0, 0);
    0x00409206 lea rdi, [rsp + 0x3a0]                        |     
    0x0040920e mov rsi, rbx                                  |     
    0x00409211 call 0x4256b0                                 |     BloombergLP::bslma::DefaultAllocatorGuard::DefaultAllocatorGuard(BloombergLP::bslma::Allocator*) (rsp + 0x3a0, rbx);
    0x00409216 xor esi, esi                                  |     
    0x00409218 mov ebx, dword [rsp + 0xc]                    |     ebx = *((rsp + 0xc));
    0x0040921c cmp ebx, 4                                    |     
    0x0040921f setg sil                                      |     sil = (ebx > 4) ? 1 : 0;
    0x00409223 lea rdi, [rsp + 0x1c0]                        |     
    0x0040922b xor edx, edx                                  |     
    0x0040922d call 0x425920                                 |     BloombergLP::bslma::TestAllocator::TestAllocator(bool,BloombergLP::bslma::Allocator*) (rsp + 0x1c0, 0, 0);
    0x00409232 cmp ebx, 4                                    |     
                                                             |     if (ebx >= 4) {
    0x00409235 jl 0x40924a                                   |         
    0x00409237 test byte [rip + 0x27d83e], 1                 |         
                                                             |         if ((*(0x00686a7c) & 1) != 0) {
    0x0040923e jne 0x40924a                                  |             goto label_25;
                                                             |         }
    0x00409240 mov edi, 0x44ddeb                             |         
    0x00409245 call 0x4032c0                                 |         puts ("\t\tBSLMA EXCEPTION TEST -- (ENABLED) --");
                                                             |     }
                                                             | label_25:
    0x0040924a mov byte [rip + 0x27d82b], 1                  |     *(0x00686a7c) = 1;
    0x00409251 cmp dword [rsp + 0xc], 5                      |     
                                                             |     if (*((rsp + 0xc)) >= 5) {
    0x00409256 jl 0x409262                                   |         
    0x00409258 mov edi, 0x44de12                             |         
    0x0040925d call 0x4032c0                                 |         puts ("\t\tBegin bslma exception test.");
                                                             |     }
    0x00409262 mov qword [rsp + 0x140], 0x450ab0             |     *((rsp + method.BloombergLP::bslma::TestAllocator_ProxyBase.TestAllocator_ProxyBase__)) = 0x450ab0;
    0x0040926e lea rax, [rsp + 0x1c0]                        |     rax = rsp + 0x1c0;
    0x00409276 mov qword [rsp + 0x148], rax                  |     *((rsp + 0x148)) = rax;
    0x0040927e mov qword [rsp + 0x1e0], 0                    |     *((rsp + 0x1e0)) = 0;
    0x0040928a xor eax, eax                                  |     eax = 0;
    0x0040928c mov qword [rsp + 0x290], rax                  |     *((rsp + 0x290)) = rax;
    0x00409294 cmp dword [rsp + 0xc], 4                      |     
                                                             |     if (*((rsp + 0xc)) >= 4) {
    0x00409299 jl 0x409480                                   |         
    0x0040929f mov edi, 0x6869c8                             |         
    0x004092a4 mov esi, 0x468473                             |         
    0x004092a9 mov edx, 1                                    |         
    0x004092ae call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x468473, 1);
    0x004092b3 mov rdi, rax                                  |         rdi = rax;
    0x004092b6 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004092bb mov edi, 0x6869c8                             |         
    0x004092c0 mov esi, 0x44ed81                             |         
    0x004092c5 mov edx, 0xe                                  |         
    0x004092ca call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44ed81, 0xe);
    0x004092cf mov rdi, rax                                  |         rdi = rax;
    0x004092d2 mov rsi, qword [rsp + 0x20]                   |         rsi = *((rsp + 0x20));
    0x004092d7 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004092dc mov esi, 0x44de60                             |         
    0x004092e1 mov edx, 2                                    |         
    0x004092e6 mov rdi, rax                                  |         
    0x004092e9 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004092ee mov rdi, rax                                  |         rdi = rax;
    0x004092f1 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004092f6 mov edi, 0x6869c8                             |         
    0x004092fb mov esi, 0x44ed95                             |         
    0x00409300 mov edx, 9                                    |         
    0x00409305 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44ed95, 9);
    0x0040930a mov rdi, rax                                  |         rdi = rax;
    0x0040930d mov esi, dword [rsp + 0x28]                   |         esi = *((rsp + 0x28));
    0x00409311 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409316 mov esi, 0x44de60                             |         
    0x0040931b mov edx, 2                                    |         
    0x00409320 mov rdi, rax                                  |         
    0x00409323 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x00409328 mov rdi, rax                                  |         rdi = rax;
    0x0040932b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00409330 mov edi, 0x6869c8                             |         
    0x00409335 mov esi, 0x44eab0                             |         
    0x0040933a mov edx, 0xe                                  |         
    0x0040933f call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x44eab0, 0xe);
    0x00409344 mov rdi, rax                                  |         rdi = rax;
    0x00409347 mov esi, r13d                                 |         esi = r13d;
    0x0040934a call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x0040934f mov rbx, rax                                  |         rbx = rax;
    0x00409352 mov rax, qword [rax]                          |         rax = *(rax);
    0x00409355 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x00409359 add rsi, rbx                                  |         rsi += rbx;
    0x0040935c lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00409364 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x00409369 mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x0040936e lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00409376 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040937b mov rcx, qword [rax]                          |         rcx = *(rax);
    0x0040937e mov rdi, rax                                  |         rdi = rax;
    0x00409381 mov esi, 0xa                                  |         esi = 0xa;
    0x00409386 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x00409389 mov r15d, eax                                 |         r15d = eax;
    0x0040938c lea rdi, [rsp + 0x180]                        |         rdi = rsp + 0x180;
    0x00409394 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x00409399 movsx esi, r15b                               |         esi = (int32_t) r15b;
    0x0040939d mov rdi, rbx                                  |         rdi = rbx;
    0x004093a0 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x004093a5 mov rdi, rbx                                  |         rdi = rbx;
    0x004093a8 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004093ad mov edi, 0x6869c8                             |         
    0x004093b2 mov esi, 0x468473                             |         
    0x004093b7 mov edx, 1                                    |         
    0x004093bc call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, 0x468473, 1);
    0x004093c1 mov rdi, rax                                  |         rdi = rax;
    0x004093c4 call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x004093c9 mov edi, 0x6869c8                             |         
    0x004093ce mov esi, 0x44ea9e                             |         
    0x004093d3 mov edx, 0xd                                  |         
    0x004093d8 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "EXP_LENGTH = ", 0xd);
    0x004093dd mov rdi, rax                                  |         rdi = rax;
    0x004093e0 mov esi, dword [rsp + 0x28]                   |         esi = *((rsp + 0x28));
    0x004093e4 call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x004093e9 mov esi, 0x44de60                             |         
    0x004093ee mov edx, 2                                    |         
    0x004093f3 mov rdi, rax                                  |         
    0x004093f6 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x44de60, 2);
    0x004093fb mov rdi, rax                                  |         rdi = rax;
    0x004093fe call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00409403 mov edi, 0x6869c8                             |         
    0x00409408 mov esi, 0x44eaac                             |         
    0x0040940d mov edx, 0x12                                 |         
    0x00409412 call 0x41d370                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (obj.std::__1::cout, "EXP_NUM_BUFFERS = ", 0x12);
    0x00409417 mov rdi, rax                                  |         rdi = rax;
    0x0040941a mov esi, r13d                                 |         esi = r13d;
    0x0040941d call 0x403590                                 |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::operator << (int) ();
    0x00409422 mov rbx, rax                                  |         rbx = rax;
    0x00409425 mov rax, qword [rax]                          |         rax = *(rax);
    0x00409428 mov rsi, qword [rax - 0x18]                   |         rsi = *((rax - 0x18));
    0x0040942c add rsi, rbx                                  |         rsi += rbx;
    0x0040942f lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00409437 call 0x4035d0                                 |         std::_1::ios_base::getloc()const ();
    0x0040943c mov esi, 0x686910                             |         esi = std::__1::ctype<char>::id;
    0x00409441 lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00409449 call 0x403680                                 |         rax = std::_1::locale::use_facet(std::_1::locale::id&)const ();
    0x0040944e mov rcx, qword [rax]                          |         rcx = *(rax);
    0x00409451 mov rdi, rax                                  |         rdi = rax;
    0x00409454 mov esi, 0xa                                  |         esi = 0xa;
    0x00409459 call qword [rcx + 0x38]                       |         eax = uint64_t (*rcx + 0x38)() ();
    0x0040945c mov r15d, eax                                 |         r15d = eax;
    0x0040945f lea rdi, [rsp + 0x2a0]                        |         rdi = rsp + 0x2a0;
    0x00409467 call 0x4036f0                                 |         std::_1::locale::~locale() ();
    0x0040946c movsx esi, r15b                               |         esi = (int32_t) r15b;
    0x00409470 mov rdi, rbx                                  |         rdi = rbx;
    0x00409473 call 0x403420                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::put(char) ();
    0x00409478 mov rdi, rbx                                  |         rdi = rbx;
    0x0040947b call 0x4035a0                                 |         std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                             |     }
    0x00409480 mov qword [rsp + 0x30], 0x44cb78              |     *((rsp + 0x30)) = vtable.SimpleBlobBufferFactory.0;
    0x00409489 mov rax, qword [rsp + 0x20]                   |     rax = *((rsp + 0x20));
    0x0040948e mov qword [rsp + 0x38], rax                   |     *((rsp + 0x38)) = rax;
    0x00409493 lea rdx, [rsp + 0x1c0]                        |     
    0x0040949b mov qword [rsp + 0x40], rdx                   |     *((rsp + 0x40)) = rdx;
    0x004094a0 mov rdi, rbp                                  |     
    0x004094a3 lea rsi, [rsp + 0x30]                         |     
    0x004094a8 call 0x41e1f0                                 |     BloombergLP::bdlbb::Blob::Blob(BloombergLP::bdlbb::BlobBufferFactory*,BloombergLP::bslma::Allocator*) (rbp, rsp + 0x30, rsp + 0x1c0);
    0x004094ad mov rdi, rbp                                  |     
    0x004094b0 mov rsi, qword [rsp + 0x70]                   |     
    0x004094b5 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rbp, *((rsp + 0x70)));
    0x004094ba mov rdi, rbp                                  |     
    0x004094bd mov esi, dword [rsp + 0x28]                   |     
    0x004094c1 call 0x41ef90                                 |     BloombergLP::bdlbb::Blob::setLength(int) (rbp, *((rsp + 0x28)));
    0x004094c6 xor r15d, r15d                                |     r15d = 0;
    0x004094c9 jmp 0x4094dc                                  |     goto label_26;
    0x004094d0 inc r15                                       |     r15++;
    0x004094d3 cmp r15, r13                                  |     
                                                             |     if (r15 == r13) {
    0x004094d6 je 0x409cc0                                   |         void (*0x409cc0)() ();
                                                             |     }
                                                             | label_26:
    0x004094dc pxor xmm0, xmm0                               |     xmm0 = 0;
    0x004094e0 movdqa xmmword [rsp + 0xf0], xmm0             |     __asm ("movdqa xmmword [rsp + 0xf0], xmm0");
    0x004094e9 mov dword [rsp + 0x100], 0                    |     *((rsp + 0x100)) = 0;
    0x004094f4 lea rdi, [rsp + 0x30]                         |     
    0x004094f9 lea rsi, [rsp + 0xf0]                         |     
    0x00409501 call 0x4045c0                                 |     SimpleBlobBufferFactory::allocate(BloombergLP::bdlbb::BlobBuffer*) (rsp + 0x30, rsp + 0xf0);
    0x00409506 mov eax, dword [rsp + 0x100]                  |     eax = *((rsp + 0x100));
    0x0040950d xor edi, edi                                  |     edi = 0;
    0x0040950f cmp qword [rsp + 0x20], rax                   |     
                                                             | }
