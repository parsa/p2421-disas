0000000000407450 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<(anonymous namespace):   |	00000000004074c0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<(anonymous namespace):
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 01	pushq	%rax									000000000000000a: 01	pushq	%rax
000000000000000b: 03	movq	%rcx, %r14								000000000000000b: 03	movq	%rcx, %r14
000000000000000e: 03	movq	%rdx, %r12								000000000000000e: 03	movq	%rdx, %r12
0000000000000011: 03	movq	%rsi, %r15								0000000000000011: 03	movq	%rsi, %r15
0000000000000014: 04	movq	%rdi, (%rsp)								0000000000000014: 04	movq	%rdi, (%rsp)
0000000000000018: 04	movq	48(%rsi), %r13							   |	0000000000000018: 05	cmpq	$23, 56(%rsi)
000000000000001c: 05	cmpq	$23, 56(%rsi)							   |	000000000000001d: 02	je	0x4074e5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000021: 02	je	0x407479 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000001f: 04	movq	24(%r15), %r13
0000000000000023: 04	movq	24(%r15), %rbp							   |	0000000000000023: 02	jmp	0x4074e9 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000027: 02	jmp	0x40747d <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000025: 04	leaq	24(%r15), %r13
0000000000000029: 04	leaq	24(%r15), %rbp							   |	0000000000000029: 04	movq	48(%r15), %rbp
000000000000002d: 03	movq	(%r14), %rax							   |	000000000000002d: 03	testq	%r14, %r14
0000000000000030: 05	movl	$64, %esi							   |	0000000000000030: 02	jne	0x407506 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000035: 03	movq	%r14, %rdi							   |	0000000000000032: 07	movq	2360831(%rip), %r14  # 647af8 <BloombergLP::bslma::Default::s_de
0000000000000038: 03	callq	*16(%rax)							   |	0000000000000039: 03	testq	%r14, %r14
000000000000003b: 03	movq	%rax, %rbx							   |	000000000000003c: 02	jne	0x407506 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000003e: 07	movq	$4224416, (%rax)						   |	000000000000003e: 05	callq	0x42ddb0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000045: 04	movq	(%r12), %rax							   |	0000000000000043: 03	movq	%rax, %r14
0000000000000049: 04	movq	%rax, 8(%rbx)							   |	0000000000000046: 03	movq	(%r14), %rax
000000000000004d: 04	leaq	16(%rbx), %rdi							   |	0000000000000049: 05	movl	$64, %esi
0000000000000051: 08	movq	$0, 16(%rbx)							   |	000000000000004e: 03	movq	%r14, %rdi
0000000000000059: 04	movq	%r14, 56(%rbx)							   |	0000000000000051: 03	callq	*16(%rax)
000000000000005d: 07	movaps	164172(%rip), %xmm0  # 42f600 <__dso_handle+0x38>		   |	0000000000000054: 03	movq	%rax, %rbx
0000000000000064: 04	movups	%xmm0, 40(%rbx)							   |	0000000000000057: 07	movq	$4224544, (%rax)
0000000000000068: 05	movl	$4389656, %ecx							   |	000000000000005e: 04	movq	(%r12), %rax
000000000000006d: 03	movq	%rbp, %rsi							   |	0000000000000062: 04	movq	%rax, 8(%rbx)
0000000000000070: 03	movq	%r13, %rdx							   |	0000000000000066: 04	leaq	16(%rbx), %rdi
0000000000000073: 05	callq	0x40aa20 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	000000000000006a: 08	movq	$0, 16(%rbx)
0000000000000078: 05	movl	$4225408, %edx							   |	0000000000000072: 04	movq	%r14, 56(%rbx)
000000000000007d: 04	movq	(%rsp), %rdi							   |	0000000000000076: 07	movaps	164243(%rip), %xmm0  # 42f6d0 <__dso_handle+0x38>
0000000000000081: 03	movq	%r15, %rsi							   |	000000000000007d: 04	movups	%xmm0, 40(%rbx)
0000000000000084: 03	movq	%rbx, %rcx							   |	0000000000000081: 05	movl	$4389860, %ecx
0000000000000087: 05	callq	0x4081c0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	0000000000000086: 03	movq	%r13, %rsi
000000000000008c: 02	movl	%eax, %ebp							   |	0000000000000089: 03	movq	%rbp, %rdx
000000000000008e: 02	testl	%eax, %eax							   |	000000000000008c: 05	callq	0x40aac0 <bsl::basic_string<char, std::__1::char_traits<char>, b
0000000000000090: 02	je	0x40750b <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000091: 05	movl	$4225536, %edx
0000000000000092: 05	cmpq	$23, 48(%rbx)							   |	0000000000000096: 04	movq	(%rsp), %rdi
0000000000000097: 02	je	0x4074f7 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000009a: 03	movq	%r15, %rsi
0000000000000099: 04	movq	16(%rbx), %rsi							   |	000000000000009d: 03	movq	%rbx, %rcx
000000000000009d: 04	movq	56(%rbx), %rdi							   |	00000000000000a0: 05	callq	0x408240 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000a1: 03	movq	(%rdi), %rax							   |	00000000000000a5: 02	movl	%eax, %ebp
00000000000000a4: 03	callq	*24(%rax)							   |	00000000000000a7: 02	testl	%eax, %eax
00000000000000a7: 08	movq	$-1, 40(%rbx)							   |	00000000000000a9: 02	je	0x407594 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000af: 03	movq	(%r14), %rax							   |	00000000000000ab: 05	cmpq	$23, 48(%rbx)
00000000000000b2: 03	movq	%r14, %rdi							   |	00000000000000b0: 02	je	0x407580 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000b5: 03	movq	%rbx, %rsi							   |	00000000000000b2: 04	movq	16(%rbx), %rsi
00000000000000b8: 03	callq	*24(%rax)							   |	00000000000000b6: 04	movq	56(%rbx), %rdi
00000000000000bb: 02	movl	%ebp, %eax							   |	00000000000000ba: 03	movq	(%rdi), %rax
00000000000000bd: 04	addq	$8, %rsp							   |	00000000000000bd: 03	callq	*24(%rax)
00000000000000c1: 01	popq	%rbx								   |	00000000000000c0: 08	movq	$-1, 40(%rbx)
00000000000000c2: 02	popq	%r12								   |	00000000000000c8: 03	movq	(%r14), %rax
00000000000000c4: 02	popq	%r13								   |	00000000000000cb: 03	movq	%r14, %rdi
00000000000000c6: 02	popq	%r14								   |	00000000000000ce: 03	movq	%rbx, %rsi
00000000000000c8: 02	popq	%r15								   |	00000000000000d1: 03	callq	*24(%rax)
00000000000000ca: 01	popq	%rbp								   |	00000000000000d4: 02	movl	%ebp, %eax
00000000000000cb: 01	retq									   |	00000000000000d6: 04	addq	$8, %rsp
00000000000000cc: 03	movq	%rax, %rdi							   |	00000000000000da: 01	popq	%rbx
00000000000000cf: 05	callq	0x4076b0 <__clang_call_terminate>				   |	00000000000000db: 02	popq	%r12
00000000000000d4: 03	movq	%rax, %rdi							   |	00000000000000dd: 02	popq	%r13
00000000000000d7: 05	callq	0x4076b0 <__clang_call_terminate>				   |	00000000000000df: 02	popq	%r14
00000000000000dc: 03	movq	%rax, %r15							   |	00000000000000e1: 02	popq	%r15
00000000000000df: 05	cmpq	$23, 48(%rbx)							   |	00000000000000e3: 01	popq	%rbp
00000000000000e4: 02	je	0x407544 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000e4: 01	retq	
00000000000000e6: 04	movq	16(%rbx), %rsi							   |	00000000000000e5: 03	movq	%rax, %rdi
00000000000000ea: 04	movq	56(%rbx), %rdi							   |	00000000000000e8: 05	callq	0x407730 <__clang_call_terminate>
00000000000000ee: 03	movq	(%rdi), %rax							   |	00000000000000ed: 03	movq	%rax, %rdi
00000000000000f1: 03	callq	*24(%rax)							   |	00000000000000f0: 05	callq	0x407730 <__clang_call_terminate>
00000000000000f4: 08	movq	$-1, 40(%rbx)							   |	00000000000000f5: 03	movq	%rax, %rbp
00000000000000fc: 03	movq	(%r14), %rax							   |	00000000000000f8: 05	cmpq	$23, 48(%rbx)
00000000000000ff: 03	movq	%r14, %rdi							   |	00000000000000fd: 02	je	0x4075cd <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000102: 03	movq	%rbx, %rsi							   |	00000000000000ff: 04	movq	16(%rbx), %rsi
0000000000000105: 03	callq	*24(%rax)							   |	0000000000000103: 04	movq	56(%rbx), %rdi
0000000000000108: 02	jmp	0x407581 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000107: 03	movq	(%rdi), %rax
000000000000010a: 03	movq	%rax, %rdi							   |	000000000000010a: 03	callq	*24(%rax)
000000000000010d: 05	callq	0x4076b0 <__clang_call_terminate>				   |	000000000000010d: 08	movq	$-1, 40(%rbx)
0000000000000112: 03	movq	%rax, %rdi							   |	0000000000000115: 03	movq	(%r14), %rax
0000000000000115: 05	callq	0x4076b0 <__clang_call_terminate>				   |	0000000000000118: 03	movq	%r14, %rdi
000000000000011a: 03	movq	%rax, %r15							   |	000000000000011b: 03	movq	%rbx, %rsi
000000000000011d: 08	movq	$0, 40(%rbx)							   |	000000000000011e: 03	callq	*24(%rax)
0000000000000125: 03	movq	(%r14), %rax							   |	0000000000000121: 02	jmp	0x40760a <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000128: 03	movq	%r14, %rdi							   |	0000000000000123: 03	movq	%rax, %rdi
000000000000012b: 03	movq	%rbx, %rsi							   |	0000000000000126: 05	callq	0x407730 <__clang_call_terminate>
000000000000012e: 03	callq	*24(%rax)							   |	000000000000012b: 03	movq	%rax, %rdi
0000000000000131: 03	movq	%r15, %rdi							   |	000000000000012e: 05	callq	0x407730 <__clang_call_terminate>
0000000000000134: 05	callq	0x403d70 <_Unwind_Resume@plt>					   |	0000000000000133: 03	movq	%rax, %rbp
0000000000000139: 03	movq	%rax, %rdi							   |	0000000000000136: 08	movq	$0, 40(%rbx)
000000000000013c: 05	callq	0x4076b0 <__clang_call_terminate>				   |	000000000000013e: 03	movq	(%r14), %rax
0000000000000141: 10	nopw	%cs:(%rax,%rax)							   |	0000000000000141: 03	movq	%r14, %rdi
000000000000014b: 05	nopl	(%rax,%rax)							   |	0000000000000144: 03	movq	%rbx, %rsi
												   >	0000000000000147: 03	callq	*24(%rax)
												   >	000000000000014a: 03	movq	%rbp, %rdi
												   >	000000000000014d: 05	callq	0x403d70 <_Unwind_Resume@plt>
												   >	0000000000000152: 03	movq	%rax, %rdi
												   >	0000000000000155: 05	callq	0x407730 <__clang_call_terminate>
												   >	000000000000015a: 06	nopw	(%rax,%rax)
