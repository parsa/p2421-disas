    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadgroup.t/assume @ 0x407030 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator__anonymous_namespace_::u::SynchronizedAddJob__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const___anonymous_namespace_::u::SynchronizedAddJob_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_anonymous_namespace_::u::SynchronizedAddJob_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_anonymous_namespace_::u::SynchronizedAddJob_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<(anonymous namespace)::u::SynchronizedAddJob>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, (anonymous namespace)::u::SynchronizedAddJob const&, BloombergLP::bslma::Allocator*) */
    0x00407030 push rbp                                                                                                                                                                                                                                                          |     
    0x00407031 push r15                                                                                                                                                                                                                                                          |     
    0x00407033 push r14                                                                                                                                                                                                                                                          |     
    0x00407035 push r13                                                                                                                                                                                                                                                          |     
    0x00407037 push r12                                                                                                                                                                                                                                                          |     
    0x00407039 push rbx                                                                                                                                                                                                                                                          |     
    0x0040703a push rax                                                                                                                                                                                                                                                          |     
    0x0040703b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0040703e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00407041 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00407044 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00407048 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0040704c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00407051 je 0x407059                                                                                                                                                                                                                                                       |         
    0x00407053 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x00407057 jmp 0x40705d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00407059 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0040705d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00407060 mov esi, 0x68                                                                                                                                                                                                                                                     |     esi = 0x68;
    0x00407065 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00407068 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0040706b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0040706e mov qword [rax], 0x407190                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt.EntryPointFunctorAdapter__anonymous_namespace_::u::SynchronizedAddJob_::invokerFunction_void_;
    0x00407075 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x0040707a movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                 |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x00407080 movups xmm2, xmmword [r12 + 0x20]                                                                                                                                                                                                                                 |     __asm ("movups xmm2, xmmword [r12 + 0x20]");
    0x00407086 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0040708a movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x0040708e movups xmmword [rax + 0x28], xmm2                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm2");
    0x00407092 lea rdi, [rax + 0x38]                                                                                                                                                                                                                                             |     
    0x00407096 mov qword [rax + 0x38], 0                                                                                                                                                                                                                                         |     *((rax + 0x38)) = 0;
    0x0040709e mov qword [rax + 0x60], r14                                                                                                                                                                                                                                       |     *((rax + 0x60)) = r14;
    0x004070a2 movaps xmm0, xmmword [rip + 0x28557]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x004070a9 movups xmmword [rax + 0x50], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x50], xmm0");
    0x004070ad mov ecx, 0x42fb18                                                                                                                                                                                                                                                 |     
    0x004070b2 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x004070b5 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x004070b8 call 0x40aa20                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x38, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004070bd mov edx, 0x407980                                                                                                                                                                                                                                                 |     
    0x004070c2 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004070c6 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004070c9 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004070cc call 0x4081c0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004070d1 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004070d3 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004070d5 je 0x407100                                                                                                                                                                                                                                                       |         
    0x004070d7 cmp qword [rbx + 0x58], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x58)) != 0x17) {
    0x004070dc je 0x4070ec                                                                                                                                                                                                                                                       |             
    0x004070de mov rsi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x38));
    0x004070e2 mov rdi, qword [rbx + 0x60]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x60));
    0x004070e6 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004070e9 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004070ec mov qword [rbx + 0x50], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x50)) = 0xffffffffffffffff;
    0x004070f4 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004070f7 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004070fa mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x004070fd call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00407100 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00407102 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00407106 pop rbx                                                                                                                                                                                                                                                           |     
    0x00407107 pop r12                                                                                                                                                                                                                                                           |     
    0x00407109 pop r13                                                                                                                                                                                                                                                           |     
    0x0040710b pop r14                                                                                                                                                                                                                                                           |     
    0x0040710d pop r15                                                                                                                                                                                                                                                           |     
    0x0040710f pop rbp                                                                                                                                                                                                                                                           |     
    0x00407110 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
