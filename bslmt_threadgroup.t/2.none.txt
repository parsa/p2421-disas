    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadgroup.t/none @ 0x407080 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator__anonymous_namespace_::u::SynchronizedAddJob__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const___anonymous_namespace_::u::SynchronizedAddJob_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_anonymous_namespace_::u::SynchronizedAddJob_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_anonymous_namespace_::u::SynchronizedAddJob_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<(anonymous namespace)::u::SynchronizedAddJob>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, (anonymous namespace)::u::SynchronizedAddJob const&, BloombergLP::bslma::Allocator*) */
    0x00407080 push rbp                                                                                                                                                                                                                                                          |     
    0x00407081 push r15                                                                                                                                                                                                                                                          |     
    0x00407083 push r14                                                                                                                                                                                                                                                          |     
    0x00407085 push r13                                                                                                                                                                                                                                                          |     
    0x00407087 push r12                                                                                                                                                                                                                                                          |     
    0x00407089 push rbx                                                                                                                                                                                                                                                          |     
    0x0040708a push rax                                                                                                                                                                                                                                                          |     
    0x0040708b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0040708e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00407091 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00407094 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00407098 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0040709d je 0x4070a5                                                                                                                                                                                                                                                       |         
    0x0040709f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004070a3 jmp 0x4070a9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004070a5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004070a9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004070ad test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004070b0 jne 0x4070c6                                                                                                                                                                                                                                                      |         
    0x004070b2 mov r14, qword [rip + 0x240a3f]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004070b9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004070bc jne 0x4070c6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004070be call 0x42ddb0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004070c3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x004070c6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004070c9 mov esi, 0x68                                                                                                                                                                                                                                                     |     esi = 0x68;
    0x004070ce mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004070d1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004070d4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004070d7 mov qword [rax], 0x4071f0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt.EntryPointFunctorAdapter__anonymous_namespace_::u::SynchronizedAddJob_::invokerFunction_void_;
    0x004070de movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x004070e3 movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                 |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x004070e9 movups xmm2, xmmword [r12 + 0x20]                                                                                                                                                                                                                                 |     __asm ("movups xmm2, xmmword [r12 + 0x20]");
    0x004070ef movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004070f3 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x004070f7 movups xmmword [rax + 0x28], xmm2                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm2");
    0x004070fb lea rdi, [rax + 0x38]                                                                                                                                                                                                                                             |     
    0x004070ff mov qword [rax + 0x38], 0                                                                                                                                                                                                                                         |     *((rax + 0x38)) = 0;
    0x00407107 mov qword [rax + 0x60], r14                                                                                                                                                                                                                                       |     *((rax + 0x60)) = r14;
    0x0040710b movaps xmm0, xmmword [rip + 0x285be]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00407112 movups xmmword [rax + 0x50], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x50], xmm0");
    0x00407116 mov ecx, 0x42fbe4                                                                                                                                                                                                                                                 |     
    0x0040711b mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0040711e mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00407121 call 0x40aac0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x38, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00407126 mov edx, 0x407a00                                                                                                                                                                                                                                                 |     
    0x0040712b mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0040712f mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00407132 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00407135 call 0x408240                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040713a mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0040713c test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0040713e je 0x407169                                                                                                                                                                                                                                                       |         
    0x00407140 cmp qword [rbx + 0x58], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x58)) != 0x17) {
    0x00407145 je 0x407155                                                                                                                                                                                                                                                       |             
    0x00407147 mov rsi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x38));
    0x0040714b mov rdi, qword [rbx + 0x60]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x60));
    0x0040714f mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00407152 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00407155 mov qword [rbx + 0x50], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x50)) = 0xffffffffffffffff;
    0x0040715d mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00407160 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00407163 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00407166 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00407169 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0040716b add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0040716f pop rbx                                                                                                                                                                                                                                                           |     
    0x00407170 pop r12                                                                                                                                                                                                                                                           |     
    0x00407172 pop r13                                                                                                                                                                                                                                                           |     
    0x00407174 pop r14                                                                                                                                                                                                                                                           |     
    0x00407176 pop r15                                                                                                                                                                                                                                                           |     
    0x00407178 pop rbp                                                                                                                                                                                                                                                           |     
    0x00407179 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
