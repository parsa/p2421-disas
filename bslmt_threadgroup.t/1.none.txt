    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadgroup.t/none @ 0x4074c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil.createWithAllocator__anonymous_namespace_::u::ThreadChecker::ThreadCheckerFunctor__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const___anonymous_namespace_::u::ThreadChecker::ThreadCheckerFunctor_const ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil_createWithAllocator_anonymous_namespace_::u::ThreadChecker::ThreadCheckerFunctor_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_anonymous_namespace_::u::ThreadChecker::ThreadCheckerFunctor_const (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<(anonymous namespace)::u::ThreadChecker::ThreadCheckerFunctor>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, (anonymous namespace)::u::ThreadChecker::ThreadCheckerFunctor const&, BloombergLP::bslma::Allocator*) */
    0x004074c0 push rbp                                                                                                                                                                                                                                                          |     
    0x004074c1 push r15                                                                                                                                                                                                                                                          |     
    0x004074c3 push r14                                                                                                                                                                                                                                                          |     
    0x004074c5 push r13                                                                                                                                                                                                                                                          |     
    0x004074c7 push r12                                                                                                                                                                                                                                                          |     
    0x004074c9 push rbx                                                                                                                                                                                                                                                          |     
    0x004074ca push rax                                                                                                                                                                                                                                                          |     
    0x004074cb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004074ce mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x004074d1 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004074d4 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x004074d8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004074dd je 0x4074e5                                                                                                                                                                                                                                                       |         
    0x004074df mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004074e3 jmp 0x4074e9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004074e5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004074e9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004074ed test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004074f0 jne 0x407506                                                                                                                                                                                                                                                      |         
    0x004074f2 mov r14, qword [rip + 0x2405ff]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004074f9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004074fc jne 0x407506                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004074fe call 0x42ddb0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00407503 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00407506 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00407509 mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0040750e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00407511 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00407514 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00407517 mov qword [rax], 0x407620                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt.EntryPointFunctorAdapter__anonymous_namespace_::u::ThreadChecker::ThreadCheckerFunctor_::invokerFunction_void_;
    0x0040751e mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00407522 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00407526 lea rdi, [rbx + 0x10]                                                                                                                                                                                                                                             |     
    0x0040752a mov qword [rbx + 0x10], 0                                                                                                                                                                                                                                         |     *((rbx + 0x10)) = 0;
    0x00407532 mov qword [rbx + 0x38], r14                                                                                                                                                                                                                                       |     *((rbx + 0x38)) = r14;
    0x00407536 movaps xmm0, xmmword [rip + 0x28193]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0040753d movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00407541 mov ecx, 0x42fbe4                                                                                                                                                                                                                                                 |     
    0x00407546 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x00407549 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0040754c call 0x40aac0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00407551 mov edx, 0x407a00                                                                                                                                                                                                                                                 |     
    0x00407556 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0040755a mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0040755d mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00407560 call 0x408240                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00407565 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00407567 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00407569 je 0x407594                                                                                                                                                                                                                                                       |         
    0x0040756b cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x00407570 je 0x407580                                                                                                                                                                                                                                                       |             
    0x00407572 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x00407576 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0040757a mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0040757d call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00407580 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00407588 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0040758b mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0040758e mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00407591 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00407594 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00407596 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0040759a pop rbx                                                                                                                                                                                                                                                           |     
    0x0040759b pop r12                                                                                                                                                                                                                                                           |     
    0x0040759d pop r13                                                                                                                                                                                                                                                           |     
    0x0040759f pop r14                                                                                                                                                                                                                                                           |     
    0x004075a1 pop r15                                                                                                                                                                                                                                                           |     
    0x004075a3 pop rbp                                                                                                                                                                                                                                                           |     
    0x004075a4 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
