000000000040fb20 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(long*, char*, unsigned l   |	000000000040fae0 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(long*, char*, unsigned l
0000000000000000: 03	movq	%rsi, %rax								0000000000000000: 03	movq	%rsi, %rax
0000000000000003: 03	movq	(%rdi), %r9							   |	0000000000000003: 04	cmpl	$2, %r8d
0000000000000006: 04	cmpl	$2, %r8d							   |	0000000000000007: 02	je	0x40fb02 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
000000000000000a: 02	je	0x40fb60 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(   |	0000000000000009: 04	cmpl	$1, %r8d
000000000000000c: 04	cmpl	$1, %r8d							   |	000000000000000d: 02	je	0x40fb07 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
0000000000000010: 02	jne	0x40fb6b <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(   |	000000000000000f: 03	testl	%r8d, %r8d
0000000000000012: 03	movl	%ecx, %r8d							   |	0000000000000012: 02	jne	0x40fb35 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
0000000000000015: 04	orl	$16, %r8d							   |	0000000000000014: 03	movq	(%rdi), %r8
0000000000000019: 03	movl	%r8d, %esi							   |	0000000000000017: 04	leal	(%r8,%rax), %esi
000000000000001c: 02	negl	%esi								   |	000000000000001b: 02	negl	%esi
000000000000001e: 03	andl	%r8d, %esi							   |	000000000000001d: 03	andl	$15, %esi
0000000000000021: 04	leal	(%rax,%r9), %r8d						   |	0000000000000020: 02	jmp	0x40fb2a <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
0000000000000025: 04	leal	-1(%rsi), %r10d							   |	0000000000000022: 03	movq	(%rdi), %rsi
0000000000000029: 03	subl	%r8d, %esi							   |	0000000000000025: 02	jmp	0x40fb2d <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
000000000000002c: 03	andl	%r10d, %esi							   |	0000000000000027: 03	movl	%ecx, %r8d
000000000000002f: 03	movslq	%esi, %rsi							   |	000000000000002a: 04	orl	$16, %r8d
0000000000000032: 03	addq	%r9, %rsi							   |	000000000000002e: 03	movl	%r8d, %esi
0000000000000035: 03	addq	%rsi, %rcx							   |	0000000000000031: 02	negl	%esi
0000000000000038: 03	cmpq	%rdx, %rcx							   |	0000000000000033: 03	andl	%r8d, %esi
000000000000003b: 02	jbe	0x40fb82 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(   |	0000000000000036: 03	movq	(%rdi), %r8
000000000000003d: 02	xorl	%eax, %eax							   |	0000000000000039: 04	leal	(%r8,%rax), %r9d
000000000000003f: 01	retq									   |	000000000000003d: 04	leal	-1(%rsi), %r10d
0000000000000040: 03	addq	%r9, %rcx							   |	0000000000000041: 03	subl	%r9d, %esi
0000000000000043: 03	cmpq	%rdx, %rcx							   |	0000000000000044: 03	andl	%r10d, %esi
0000000000000046: 02	jbe	0x40fb89 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(   |	0000000000000047: 03	movslq	%esi, %rsi
0000000000000048: 02	xorl	%eax, %eax							   |	000000000000004a: 03	addq	%r8, %rsi
000000000000004a: 01	retq									   |	000000000000004d: 03	addq	%rsi, %rcx
000000000000004b: 04	leal	(%rax,%r9), %esi						   |	0000000000000050: 03	cmpq	%rdx, %rcx
000000000000004f: 02	negl	%esi								   |	0000000000000053: 02	jbe	0x40fb38 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(
0000000000000051: 03	andl	$15, %esi							   |	0000000000000055: 02	xorl	%eax, %eax
0000000000000054: 03	addq	%r9, %rsi							   |	0000000000000057: 01	retq	
0000000000000057: 03	addq	%rsi, %rcx							   |	0000000000000058: 03	addq	%rsi, %rax
000000000000005a: 03	cmpq	%rdx, %rcx							   |	000000000000005b: 03	movq	%rcx, (%rdi)
000000000000005d: 02	jbe	0x40fb82 <BloombergLP::bdlma::BufferImpUtil::allocateFromBuffer(   |	000000000000005e: 01	retq	
000000000000005f: 02	xorl	%eax, %eax							   |	000000000000005f: 01	nop	
0000000000000061: 01	retq									   <
0000000000000062: 03	addq	%rsi, %rax							   <
0000000000000065: 03	movq	%rcx, (%rdi)							   <
0000000000000068: 01	retq									   <
0000000000000069: 03	addq	%r9, %rax							   <
000000000000006c: 03	movq	%rcx, (%rdi)							   <
000000000000006f: 01	retq									   <
