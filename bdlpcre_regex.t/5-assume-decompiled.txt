    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlpcre_regex.t/assume @ 0x42aeb0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bdlpcre::RegEx::matchImp_BloombergLP::bdlpcre._anonymous_namespace_::DataExtractor_std::__1::basic_string_view_char__std::__1::char_traits_char________BloombergLP::bdlpcre::_anonymous_namespace_::DataExtractor_std::__1::basic_stri ()        | uint64_t method_int_BloombergLP::bdlpcre::RegEx::matchImp_BloombergLP::bdlpcre_anonymous_namespace_::DataExtractor_std::_1::basic_string_view_char_std::_1::char_traits_char_BloombergLP::bdlpcre::_anonymous_namespace_::DataExtractor_std::_1::basic_stri (int64_t arg6, int64_t arg5, char * arg4, char * arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     int64_t var_30h;
                                                                                                                                                                                                                                                                                     |     r9 = arg6;
                                                                                                                                                                                                                                                                                     |     r8 = arg5;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP::bdlpcre::(anonymous namespace)::DataExtractor<std::__1::basic_string_view<char, std::__1::char_traits<char> > > >(BloombergLP::bdlpcre::(anonymous namespace)::DataExtractor<std::__1::basic_string_view<char, std::__1::char_traits<char> > > const&, char const*, unsigned long, unsigned long, bool) const */
    0x0042aeb0 push rbp                                                                                                                                                                                                                                                              |     
    0x0042aeb1 push r15                                                                                                                                                                                                                                                              |     
    0x0042aeb3 push r14                                                                                                                                                                                                                                                              |     
    0x0042aeb5 push r13                                                                                                                                                                                                                                                              |     
    0x0042aeb7 push r12                                                                                                                                                                                                                                                              |     
    0x0042aeb9 push rbx                                                                                                                                                                                                                                                              |     
    0x0042aeba sub rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0042aebe mov r14d, r9d                                                                                                                                                                                                                                                         |     r14d = r9d;
    0x0042aec1 mov r13, r8                                                                                                                                                                                                                                                           |     r13 = r8;
    0x0042aec4 mov r12, rcx                                                                                                                                                                                                                                                          |     r12 = rcx;
    0x0042aec7 mov r15, rdx                                                                                                                                                                                                                                                          |     r15 = rdx;
    0x0042aeca mov qword [rsp + 0x28], rsi                                                                                                                                                                                                                                           |     *((rsp + 0x28)) = rsi;
    0x0042aecf mov rbx, rdi                                                                                                                                                                                                                                                          |     rbx = rdi;
    0x0042aed2 mov rbp, qword [rdi + 0x60]                                                                                                                                                                                                                                           |     rbp = *((rdi + 0x60));
    0x0042aed6 call 0x403cb0                                                                                                                                                                                                                                                         |     rax = pthread_self ();
    0x0042aedb cmp qword [rbp + 0x20], rax                                                                                                                                                                                                                                           |     
    0x0042aedf mov qword [rsp + 0x30], rax                                                                                                                                                                                                                                           |     *((rsp + 0x30)) = rax;
                                                                                                                                                                                                                                                                                     |     if (*((rbp + 0x20)) == rax) {
    0x0042aee4 jne 0x42aefa                                                                                                                                                                                                                                                          |         
    0x0042aee6 mov rax, qword [rbp + 0x38]                                                                                                                                                                                                                                           |         rax = *((rbp + 0x38));
    0x0042aeea mov qword [rsp + 0x20], rax                                                                                                                                                                                                                                           |         *((rsp + 0x20)) = rax;
    0x0042aeef movups xmm0, xmmword [rbp + 0x28]                                                                                                                                                                                                                                     |         __asm ("movups xmm0, xmmword [rbp + 0x28]");
    0x0042aef3 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x0042aef8 jmp 0x42af14                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0042aefa lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |         
    0x0042aeff mov rdi, rbp                                                                                                                                                                                                                                                          |         
    0x0042af02 call 0x42a600                                                                                                                                                                                                                                                         |         eax = BloombergLP::bdlpcre::RegEx_MatchContext::allocateMatchContext(BloombergLP::bdlpcre::RegEx_MatchContextData*)const (rbp, rsp + 0x10);
    0x0042af07 mov ebp, 0xffffffff                                                                                                                                                                                                                                                   |         
    0x0042af0c test eax, eax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0) {
    0x0042af0e jne 0x42aff1                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |     }
    0x0042af14 test r15, r15                                                                                                                                                                                                                                                         |     
    0x0042af17 mov esi, 0x4dfabc                                                                                                                                                                                                                                                     |     esi = 0x4dfabc;
                                                                                                                                                                                                                                                                                     |     if (r15 != 0) {
    0x0042af1c cmovne rsi, r15                                                                                                                                                                                                                                                       |         rsi = r15;
                                                                                                                                                                                                                                                                                     |     }
    0x0042af20 test byte [rbx], 8                                                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                                     |     if ((*(rbx) & 8) != 0) {
    0x0042af23 je 0x42af47                                                                                                                                                                                                                                                           |         
    0x0042af25 test r14b, r14b                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                     |         if (r14b == 0) {
    0x0042af28 jne 0x42af47                                                                                                                                                                                                                                                          |             
    0x0042af2a mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x48));
    0x0042af2e mov rax, qword [rsp + 0x10]                                                                                                                                                                                                                                           |             rax = *((rsp + 0x10));
    0x0042af33 mov r9, qword [rsp + 0x18]                                                                                                                                                                                                                                            |             r9 = *((rsp + 0x18));
    0x0042af38 mov qword [rsp], rax                                                                                                                                                                                                                                                  |             *(rsp) = rax;
    0x0042af3c mov rdx, r12                                                                                                                                                                                                                                                          |             rdx = r12;
    0x0042af3f mov rcx, r13                                                                                                                                                                                                                                                          |             rcx = r13;
    0x0042af42 xor r8d, r8d                                                                                                                                                                                                                                                          |             r8d = 0;
    0x0042af45 jmp 0x42af65                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |     } else {
    0x0042af47 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                           |         rdi = *((rbx + 0x48));
    0x0042af4b mov rax, qword [rsp + 0x10]                                                                                                                                                                                                                                           |         rax = *((rsp + 0x10));
    0x0042af50 mov r9, qword [rsp + 0x18]                                                                                                                                                                                                                                            |         r9 = *((rsp + 0x18));
    0x0042af55 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x0042af59 mov rdx, r12                                                                                                                                                                                                                                                          |         rdx = r12;
    0x0042af5c mov rcx, r13                                                                                                                                                                                                                                                          |         rcx = r13;
    0x0042af5f mov r8d, 0x40000000                                                                                                                                                                                                                                                   |         r8d = 0x40000000;
                                                                                                                                                                                                                                                                                     |     }
    0x0042af65 call 0x4ba620                                                                                                                                                                                                                                                         |     eax = pcre2_match_8 ();
    0x0042af6a cmp eax, 0xffffffd1                                                                                                                                                                                                                                                   |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0xffffffd1) {
    0x0042af6d je 0x42af7b                                                                                                                                                                                                                                                           |         
    0x0042af6f cmp eax, 0xffffffd2                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax == 0xffffffd2) {
    0x0042af72 jne 0x42af82                                                                                                                                                                                                                                                          |             
    0x0042af74 mov ebp, 2                                                                                                                                                                                                                                                            |             
    0x0042af79 jmp 0x42afc4                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x0042af7b mov ebp, 1                                                                                                                                                                                                                                                            |             
    0x0042af80 jmp 0x42afc4                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x0042af82 mov ebp, eax                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         }
    0x0042af84 sar ebp, 0x1f                                                                                                                                                                                                                                                         |         ebp >>= 0x1f;
    0x0042af87 test eax, eax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax < 0) {
    0x0042af89 js 0x42afc4                                                                                                                                                                                                                                                           |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
    0x0042af8b mov rdi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x18));
    0x0042af90 call 0x4cc0b0                                                                                                                                                                                                                                                         |         rax = pcre2_get_ovector_pointer_8 ();
    0x0042af95 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
    0x0042af98 mov rdi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x18));
    0x0042af9d call 0x4cc0c0                                                                                                                                                                                                                                                         |         pcre2_get_ovector_count_8 ();
    0x0042afa2 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x0042afa5 mov rcx, qword [r14 + 8]                                                                                                                                                                                                                                              |         rcx = *((r14 + 8));
    0x0042afa9 mov rdx, qword [rsp + 0x28]                                                                                                                                                                                                                                           |         rdx = *((rsp + 0x28));
    0x0042afae mov rdx, qword [rdx]                                                                                                                                                                                                                                                  |         rdx = *(rdx);
    0x0042afb1 add r15, rax                                                                                                                                                                                                                                                          |         r15 += rax;
    0x0042afb4 xor esi, esi                                                                                                                                                                                                                                                          |         esi = 0;
    0x0042afb6 sub rcx, rax                                                                                                                                                                                                                                                          |         rcx -= rax;
                                                                                                                                                                                                                                                                                     |         if (rcx != 0) {
    0x0042afb9 cmovne rsi, r15                                                                                                                                                                                                                                                       |             rsi = r15;
                                                                                                                                                                                                                                                                                     |         }
    0x0042afbd mov qword [rdx], rsi                                                                                                                                                                                                                                                  |         *(rdx) = rsi;
    0x0042afc0 mov qword [rdx + 8], rcx                                                                                                                                                                                                                                              |         *((rdx + 8)) = rcx;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_1:
    0x0042afc4 mov rax, qword [rbx + 0x60]                                                                                                                                                                                                                                           |     rax = *((rbx + 0x60));
    0x0042afc8 mov rcx, qword [rsp + 0x30]                                                                                                                                                                                                                                           |     rcx = *((rsp + 0x30));
    0x0042afcd cmp qword [rax + 0x20], rcx                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (*((rax + 0x20)) != rcx) {
    0x0042afd1 je 0x42aff1                                                                                                                                                                                                                                                           |         
    0x0042afd3 mov rdi, qword [rsp + 0x18]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x18));
    0x0042afd8 call 0x4cc070                                                                                                                                                                                                                                                         |         pcre2_match_data_free_8 ();
    0x0042afdd mov rdi, qword [rsp + 0x20]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x20));
    0x0042afe2 call 0x47e0f0                                                                                                                                                                                                                                                         |         pcre2_jit_stack_free_8 ();
    0x0042afe7 mov rdi, qword [rsp + 0x10]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x10));
    0x0042afec call 0x4627d0                                                                                                                                                                                                                                                         |         pcre2_match_context_free_8 ();
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x0042aff1 mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x0042aff3 add rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0042aff7 pop rbx                                                                                                                                                                                                                                                               |     
    0x0042aff8 pop r12                                                                                                                                                                                                                                                               |     
    0x0042affa pop r13                                                                                                                                                                                                                                                               |     
    0x0042affc pop r14                                                                                                                                                                                                                                                               |     
    0x0042affe pop r15                                                                                                                                                                                                                                                               |     
    0x0042b000 pop rbp                                                                                                                                                                                                                                                               |     
    0x0042b001 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
