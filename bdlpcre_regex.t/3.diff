000000000042abf0 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP::bdlpcre::(anonymous nam   |	000000000042ac50 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP::bdlpcre::(anonymous nam
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 04	subq	$56, %rsp								000000000000000a: 04	subq	$56, %rsp
000000000000000e: 03	movl	%r8d, %r13d							   |	000000000000000e: 03	movl	%r8d, %r15d
0000000000000011: 05	movq	%rcx, 48(%rsp)							   |	0000000000000011: 03	movq	%rcx, %r12
0000000000000016: 03	movq	%rdx, %r12							   |	0000000000000014: 03	movq	%rdx, %r14
0000000000000019: 03	movq	%rsi, %r15							   |	0000000000000017: 03	movq	%rsi, %r13
000000000000001c: 03	movq	%rdi, %rbx							   |	000000000000001a: 05	movq	%rdi, 8(%rsp)
000000000000001f: 04	movq	96(%rdi), %rbp								000000000000001f: 04	movq	96(%rdi), %rbp
0000000000000023: 05	callq	0x403cb0 <pthread_self@plt>						0000000000000023: 05	callq	0x403cb0 <pthread_self@plt>
0000000000000028: 03	movq	%rax, %r14							   |	0000000000000028: 04	cmpq	%rax, 32(%rbp)
000000000000002b: 04	cmpq	%rax, 32(%rbp)							   |	000000000000002c: 05	movq	%rax, 48(%rsp)
000000000000002f: 02	jne	0x42ac35 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	0000000000000031: 03	movl	%r15d, %ebx
0000000000000031: 04	movq	56(%rbp), %rax							   |	0000000000000034: 02	jne	0x42ac9a <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
0000000000000035: 05	movq	%rax, 32(%rsp)							   |	0000000000000036: 04	movq	56(%rbp), %rax
000000000000003a: 04	movups	40(%rbp), %xmm0							   |	000000000000003a: 05	movq	%rax, 32(%rsp)
000000000000003e: 05	movaps	%xmm0, 16(%rsp)							   |	000000000000003f: 04	movups	40(%rbp), %xmm0
0000000000000043: 02	jmp	0x42ac4f <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	0000000000000043: 05	movaps	%xmm0, 16(%rsp)
0000000000000045: 05	leaq	16(%rsp), %rsi							   |	0000000000000048: 02	jmp	0x42acb5 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
000000000000004a: 03	movq	%rbp, %rdi							   |	000000000000004a: 05	leaq	16(%rsp), %rsi
000000000000004d: 05	callq	0x42a600 <BloombergLP::bdlpcre::RegEx_MatchContext::allocateMatc   |	000000000000004f: 03	movq	%rbp, %rdi
0000000000000052: 05	movl	$4294967295, %ebp						   |	0000000000000052: 05	callq	0x42a600 <BloombergLP::bdlpcre::RegEx_MatchContext::allocateMatc
0000000000000057: 02	testl	%eax, %eax							   |	0000000000000057: 06	movl	$4294967295, %r15d
0000000000000059: 06	jne	0x42ad06 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	000000000000005d: 02	testl	%eax, %eax
000000000000005f: 03	testq	%r15, %r15							   |	000000000000005f: 06	jne	0x42ad94 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
0000000000000062: 05	movl	$5110460, %esi							   |	0000000000000065: 03	testq	%r13, %r13
0000000000000067: 04	cmovneq	%r15, %rsi							   |	0000000000000068: 05	movl	$5110924, %esi
000000000000006b: 03	testb	$8, (%rbx)							   |	000000000000006d: 04	cmovneq	%r13, %rsi
000000000000006e: 02	je	0x42ac84 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	0000000000000071: 05	movq	8(%rsp), %rcx
0000000000000070: 03	testb	%r13b, %r13b							   |	0000000000000076: 02	movl	(%rcx), %eax
0000000000000073: 02	jne	0x42ac84 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	0000000000000078: 02	testb	$8, %al
0000000000000075: 04	movq	72(%rbx), %rdi							   |	000000000000007a: 02	je	0x42aced <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
0000000000000079: 05	movq	16(%rsp), %rax							   |	000000000000007c: 02	testb	%bl, %bl
000000000000007e: 05	movq	24(%rsp), %r9							   |	000000000000007e: 02	jne	0x42aced <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
0000000000000083: 04	movq	%rax, (%rsp)							   |	0000000000000080: 04	movq	72(%rcx), %rdi
0000000000000087: 03	movq	%r12, %rdx							   |	0000000000000084: 05	movq	16(%rsp), %r13
000000000000008a: 05	movq	48(%rsp), %rcx							   |	0000000000000089: 05	movq	24(%rsp), %rbp
000000000000008f: 03	xorl	%r8d, %r8d							   |	000000000000008e: 04	movq	%r13, (%rsp)
0000000000000092: 02	jmp	0x42aca4 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	0000000000000092: 03	movq	%r14, %rdx
0000000000000094: 04	movq	72(%rbx), %rdi							   |	0000000000000095: 03	movq	%r12, %rcx
0000000000000098: 05	movq	16(%rsp), %rax							   |	0000000000000098: 03	xorl	%r8d, %r8d
000000000000009d: 05	movq	24(%rsp), %r9							   |	000000000000009b: 02	jmp	0x42ad0f <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000a2: 04	movq	%rax, (%rsp)							   |	000000000000009d: 04	movq	72(%rcx), %rdi
00000000000000a6: 03	movq	%r12, %rdx							   |	00000000000000a1: 05	movq	16(%rsp), %r13
00000000000000a9: 05	movq	48(%rsp), %rcx							   |	00000000000000a6: 05	movq	24(%rsp), %rbp
00000000000000ae: 06	movl	$1073741824, %r8d						   |	00000000000000ab: 02	testb	$16, %al
00000000000000b4: 05	callq	0x4ba620 <pcre2_match_8>					   |	00000000000000ad: 02	jne	0x42ad46 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000b9: 03	cmpl	$-47, %eax							   |	00000000000000af: 04	movq	%r13, (%rsp)
00000000000000bc: 02	je	0x42acba <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000b3: 03	movq	%r14, %rdx
00000000000000be: 03	cmpl	$-46, %eax							   |	00000000000000b6: 03	movq	%r12, %rcx
00000000000000c1: 02	jne	0x42acc1 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000b9: 06	movl	$1073741824, %r8d
00000000000000c3: 05	movl	$2, %ebp							   |	00000000000000bf: 03	movq	%rbp, %r9
00000000000000c8: 02	jmp	0x42acde <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000c2: 05	callq	0x4ba7d0 <pcre2_match_8>
00000000000000ca: 05	movl	$1, %ebp							   |	00000000000000c7: 03	cmpl	$-47, %eax
00000000000000cf: 02	jmp	0x42acde <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000ca: 02	je	0x42ad60 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000d1: 02	movl	%eax, %ebp							   |	00000000000000cc: 03	cmpl	$-46, %eax
00000000000000d3: 03	sarl	$31, %ebp							   |	00000000000000cf: 02	jne	0x42ad29 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000d6: 02	testl	%eax, %eax							   |	00000000000000d1: 06	movl	$2, %r15d
00000000000000d8: 02	js	0x42acde <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000d7: 02	jmp	0x42ad66 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000da: 05	movq	24(%rsp), %rdi							   |	00000000000000d9: 03	movl	%eax, %r15d
00000000000000df: 05	callq	0x4cc0b0 <pcre2_get_ovector_pointer_8>				   |	00000000000000dc: 04	sarl	$31, %r15d
00000000000000e4: 05	movq	24(%rsp), %rdi							   |	00000000000000e0: 02	testl	%eax, %eax
00000000000000e9: 05	callq	0x4cc0c0 <pcre2_get_ovector_count_8>				   |	00000000000000e2: 02	js	0x42ad66 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
00000000000000ee: 04	movq	96(%rbx), %rax							   |	00000000000000e4: 03	movq	%rbp, %rdi
00000000000000f2: 04	cmpq	%r14, 32(%rax)							   |	00000000000000e7: 05	callq	0x4cc260 <pcre2_get_ovector_pointer_8>
00000000000000f6: 02	je	0x42ad06 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:   |	00000000000000ec: 03	movq	%rbp, %rdi
00000000000000f8: 05	movq	24(%rsp), %rdi							   |	00000000000000ef: 05	callq	0x4cc270 <pcre2_get_ovector_count_8>
00000000000000fd: 05	callq	0x4cc070 <pcre2_match_data_free_8>				   |	00000000000000f4: 02	jmp	0x42ad66 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
0000000000000102: 05	movq	32(%rsp), %rdi							   |	00000000000000f6: 04	movq	%r13, (%rsp)
0000000000000107: 05	callq	0x47e0f0 <pcre2_jit_stack_free_8>				   |	00000000000000fa: 03	movq	%r14, %rdx
000000000000010c: 05	movq	16(%rsp), %rdi							   |	00000000000000fd: 03	movq	%r12, %rcx
0000000000000111: 05	callq	0x4627d0 <pcre2_match_context_free_8>				   |	0000000000000100: 03	xorl	%r8d, %r8d
0000000000000116: 02	movl	%ebp, %eax							   |	0000000000000103: 03	movq	%rbp, %r9
0000000000000118: 04	addq	$56, %rsp							   |	0000000000000106: 05	callq	0x47de10 <pcre2_jit_match_8>
000000000000011c: 01	popq	%rbx								   |	000000000000010b: 03	cmpl	$-47, %eax
000000000000011d: 02	popq	%r12								   |	000000000000010e: 02	jne	0x42ad1c <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
000000000000011f: 02	popq	%r13								   |	0000000000000110: 06	movl	$1, %r15d
0000000000000121: 02	popq	%r14								   |	0000000000000116: 05	movq	8(%rsp), %rax
0000000000000123: 02	popq	%r15								   |	000000000000011b: 04	movq	96(%rax), %rax
0000000000000125: 01	popq	%rbp								   |	000000000000011f: 05	movq	48(%rsp), %rcx
0000000000000126: 01	retq									   |	0000000000000124: 04	cmpq	%rcx, 32(%rax)
0000000000000127: 09	nopw	(%rax,%rax)							   |	0000000000000128: 02	je	0x42ad94 <int BloombergLP::bdlpcre::RegEx::matchImp<BloombergLP:
												   >	000000000000012a: 03	movq	%rbp, %rdi
												   >	000000000000012d: 05	callq	0x4cc220 <pcre2_match_data_free_8>
												   >	0000000000000132: 05	movq	32(%rsp), %rdi
												   >	0000000000000137: 05	callq	0x47e2a0 <pcre2_jit_stack_free_8>
												   >	000000000000013c: 03	movq	%r13, %rdi
												   >	000000000000013f: 05	callq	0x462980 <pcre2_match_context_free_8>
												   >	0000000000000144: 03	movl	%r15d, %eax
												   >	0000000000000147: 04	addq	$56, %rsp
												   >	000000000000014b: 01	popq	%rbx
												   >	000000000000014c: 02	popq	%r12
												   >	000000000000014e: 02	popq	%r13
												   >	0000000000000150: 02	popq	%r14
												   >	0000000000000152: 02	popq	%r15
												   >	0000000000000154: 01	popq	%rbp
												   >	0000000000000155: 01	retq	
												   >	0000000000000156: 10	nopw	%cs:(%rax,%rax)
