    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_objectpool.t/none @ 0x414770 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bsls::AtomicInt__int__void____OBJECTPOOL_TEST_USAGE_EXAMPLE::Query____BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP: ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bsls::AtomicInt_int_void_OBJECTPOOL_TEST_USAGE_EXAMPLE::Query_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)> > const&, BloombergLP::bslma::Allocator*) */
    0x00414770 push rbp                                                                                                                                                                                                                                                          |     
    0x00414771 push r15                                                                                                                                                                                                                                                          |     
    0x00414773 push r14                                                                                                                                                                                                                                                          |     
    0x00414775 push r13                                                                                                                                                                                                                                                          |     
    0x00414777 push r12                                                                                                                                                                                                                                                          |     
    0x00414779 push rbx                                                                                                                                                                                                                                                          |     
    0x0041477a push rax                                                                                                                                                                                                                                                          |     
    0x0041477b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041477e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00414781 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00414784 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00414788 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041478d je 0x414795                                                                                                                                                                                                                                                       |         
    0x0041478f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x00414793 jmp 0x414799                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00414795 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00414799 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041479d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004147a0 jne 0x4147b6                                                                                                                                                                                                                                                      |         
    0x004147a2 mov r14, qword [rip + 0x249947]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004147a9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004147ac jne 0x4147b6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004147ae call 0x416aa0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004147b3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x004147b6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004147b9 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x004147be mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004147c1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004147c4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004147c7 mov qword [rax], 0x4148f0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bsls::AtomicInt__int__void____OBJECTPOOL_TEST_USAGE_EXAMPLE::Query____BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bsls::Atom;
    0x004147ce mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x004147d2 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x004147d6 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x004147db mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x004147df mov eax, dword [r12 + 0x10]                                                                                                                                                                                                                                       |     eax = *((r12 + 0x10));
    0x004147e4 mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = eax;
    0x004147e7 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x18));
    0x004147ec mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = rax;
    0x004147f0 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                             |     
    0x004147f4 mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                         |     *((rbx + 0x28)) = 0;
    0x004147fc mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                       |     *((rbx + 0x50)) = r14;
    0x00414800 movaps xmm0, xmmword [rip + 0x2a119]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00414807 movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x0041480b mov ecx, 0x44173b                                                                                                                                                                                                                                                 |     
    0x00414810 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x00414813 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00414816 call 0x41b140                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041481b mov edx, 0x417ca0                                                                                                                                                                                                                                                 |     
    0x00414820 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x00414824 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00414827 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041482a call 0x4186f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041482f mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00414831 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00414833 je 0x41485e                                                                                                                                                                                                                                                       |         
    0x00414835 cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x0041483a je 0x41484a                                                                                                                                                                                                                                                       |             
    0x0041483c mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x00414840 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x00414844 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00414847 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041484a mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x00414852 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00414855 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00414858 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041485b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041485e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00414860 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00414864 pop rbx                                                                                                                                                                                                                                                           |     
    0x00414865 pop r12                                                                                                                                                                                                                                                           |     
    0x00414867 pop r13                                                                                                                                                                                                                                                           |     
    0x00414869 pop r14                                                                                                                                                                                                                                                           |     
    0x0041486b pop r15                                                                                                                                                                                                                                                           |     
    0x0041486d pop rbp                                                                                                                                                                                                                                                           |     
    0x0041486e ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
