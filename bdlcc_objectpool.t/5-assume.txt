    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_objectpool.t/assume @ 0x414730 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bsls::AtomicInt__int__void____OBJECTPOOL_TEST_USAGE_EXAMPLE::Query____BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP: ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bsls::AtomicInt_int_void_OBJECTPOOL_TEST_USAGE_EXAMPLE::Query_BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)), BloombergLP::bdlf::Bind_BoundTuple3<BloombergLP::bsls::AtomicInt*, int, void (*)(OBJECTPOOL_TEST_USAGE_EXAMPLE::Query*)> > const&, BloombergLP::bslma::Allocator*) */
    0x00414730 push rbp                                                                                                                                                                                                                                                          |     
    0x00414731 push r15                                                                                                                                                                                                                                                          |     
    0x00414733 push r14                                                                                                                                                                                                                                                          |     
    0x00414735 push r13                                                                                                                                                                                                                                                          |     
    0x00414737 push r12                                                                                                                                                                                                                                                          |     
    0x00414739 push rbx                                                                                                                                                                                                                                                          |     
    0x0041473a push rax                                                                                                                                                                                                                                                          |     
    0x0041473b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041473e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00414741 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00414744 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00414748 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041474c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00414751 je 0x414759                                                                                                                                                                                                                                                       |         
    0x00414753 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x00414757 jmp 0x41475d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00414759 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041475d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00414760 mov esi, 0x58                                                                                                                                                                                                                                                     |     esi = 0x58;
    0x00414765 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00414768 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041476b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041476e mov qword [rax], 0x414890                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bsls::AtomicInt__int__void____OBJECTPOOL_TEST_USAGE_EXAMPLE::Query____BloombergLP::bdlf::Bind_BoundTuple3_BloombergLP::bsls::Atom;
    0x00414775 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00414779 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041477d mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x00414782 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00414786 mov eax, dword [r12 + 0x10]                                                                                                                                                                                                                                       |     eax = *((r12 + 0x10));
    0x0041478b mov dword [rbx + 0x18], eax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = eax;
    0x0041478e mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x18));
    0x00414793 mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = rax;
    0x00414797 lea rdi, [rbx + 0x28]                                                                                                                                                                                                                                             |     
    0x0041479b mov qword [rbx + 0x28], 0                                                                                                                                                                                                                                         |     *((rbx + 0x28)) = 0;
    0x004147a3 mov qword [rbx + 0x50], r14                                                                                                                                                                                                                                       |     *((rbx + 0x50)) = r14;
    0x004147a7 movaps xmm0, xmmword [rip + 0x2a0b2]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x004147ae movups xmmword [rbx + 0x40], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x40], xmm0");
    0x004147b2 mov ecx, 0x44167d                                                                                                                                                                                                                                                 |     
    0x004147b7 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x004147ba mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x004147bd call 0x41b0a0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x28, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004147c2 mov edx, 0x417c20                                                                                                                                                                                                                                                 |     
    0x004147c7 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004147cb mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004147ce mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004147d1 call 0x418670                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004147d6 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004147d8 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004147da je 0x414805                                                                                                                                                                                                                                                       |         
    0x004147dc cmp qword [rbx + 0x48], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x48)) != 0x17) {
    0x004147e1 je 0x4147f1                                                                                                                                                                                                                                                       |             
    0x004147e3 mov rsi, qword [rbx + 0x28]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x28));
    0x004147e7 mov rdi, qword [rbx + 0x50]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x50));
    0x004147eb mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004147ee call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004147f1 mov qword [rbx + 0x40], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x40)) = 0xffffffffffffffff;
    0x004147f9 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004147fc mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004147ff mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00414802 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00414805 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00414807 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041480b pop rbx                                                                                                                                                                                                                                                           |     
    0x0041480c pop r12                                                                                                                                                                                                                                                           |     
    0x0041480e pop r13                                                                                                                                                                                                                                                           |     
    0x00414810 pop r14                                                                                                                                                                                                                                                           |     
    0x00414812 pop r15                                                                                                                                                                                                                                                           |     
    0x00414814 pop rbp                                                                                                                                                                                                                                                           |     
    0x00414815 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
