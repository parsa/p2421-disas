    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bdlc_flathashmap.t/assume @ 0x452d20 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
                                                                                                                                                                                                                                                                             | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                                                                                             |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                                                                                             |     count &= mask;
                                                                                                                                                                                                                                                                             |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                                                                                             | }
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__bsl::pair_int__int___BloombergLP::bdlc::FlatHashMap_EntryUtil_int__int__bsl::pair_int__int_____BloombergLP::bslh::FibonacciBadHashWrapper_bsl::hash_int_____bsl::equal_to_int___.rehashRaw_unsigned_long_ ()        | uint64_t method_BloombergLP::bdlc::FlatHashTable_int_bsl::pair_int_int_BloombergLP::bdlc::FlatHashMap_EntryUtil_int_int_bsl::pair_int_int_BloombergLP::bslh::FibonacciBadHashWrapper_bsl::hash_int_bsl::equal_to_int_rehashRaw_unsigned_long_ (int64_t arg4, int64_t arg2, uint32_t arg1) {
                                                                                                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* BloombergLP::bdlc::FlatHashTable<int, bsl::pair<int, int>, BloombergLP::bdlc::FlatHashMap_EntryUtil<int, int, bsl::pair<int, int> >, BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<int> >, bsl::equal_to<int> >::rehashRaw(unsigned long) */
    0x00452d20 push rbp                                                                                                                                                                                                                                                      |     
    0x00452d21 push r15                                                                                                                                                                                                                                                      |     
    0x00452d23 push r14                                                                                                                                                                                                                                                      |     
    0x00452d25 push r13                                                                                                                                                                                                                                                      |     
    0x00452d27 push r12                                                                                                                                                                                                                                                      |     
    0x00452d29 push rbx                                                                                                                                                                                                                                                      |     
    0x00452d2a sub rsp, 0x18                                                                                                                                                                                                                                                 |     
    0x00452d2e mov rbx, rsi                                                                                                                                                                                                                                                  |     rbx = rsi;
    0x00452d31 mov r15, rdi                                                                                                                                                                                                                                                  |     r15 = rdi;
    0x00452d34 mov rbp, qword [rdi + 0x28]                                                                                                                                                                                                                                   |     rbp = *((rdi + 0x28));
    0x00452d38 test rbp, rbp                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (rbp == 0) {
    0x00452d3b jne 0x452d51                                                                                                                                                                                                                                                  |         
    0x00452d3d mov rbp, qword [rip + 0x259104]                                                                                                                                                                                                                               |         rbp = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00452d44 test rbp, rbp                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (rbp != 0) {
    0x00452d47 jne 0x452d51                                                                                                                                                                                                                                                  |             goto label_5;
                                                                                                                                                                                                                                                                             |         }
    0x00452d49 call 0x460860                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00452d4e mov rbp, rax                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_5:
    0x00452d51 test rbx, rbx                                                                                                                                                                                                                                                 |     
    0x00452d54 mov qword [rsp], rbp                                                                                                                                                                                                                                          |     *(rsp) = rbp;
                                                                                                                                                                                                                                                                             |     if (rbx != 0) {
    0x00452d58 je 0x452de5                                                                                                                                                                                                                                                   |         
    0x00452d5e mov r13d, 0x20                                                                                                                                                                                                                                                |         r13d = 0x20;
    0x00452d64 cmp rbx, 0x21                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (rbx >= 0x21) {
    0x00452d68 jb 0x452d8f                                                                                                                                                                                                                                                   |             
    0x00452d6a dec rbx                                                                                                                                                                                                                                                       |             rbx--;
    0x00452d6d or rbx, 1                                                                                                                                                                                                                                                     |             rbx |= 1;
    0x00452d71 bsr rax, rbx                                                                                                                                                                                                                                                  |             __asm ("bsr rax, rbx");
    0x00452d75 xor rax, 0x3f                                                                                                                                                                                                                                                 |             rax ^= 0x3f;
    0x00452d79 mov ecx, eax                                                                                                                                                                                                                                                  |             ecx = eax;
    0x00452d7b neg cl                                                                                                                                                                                                                                                        |             cl = -cl;
    0x00452d7d mov r13d, 1                                                                                                                                                                                                                                                   |             r13d = 1;
    0x00452d83 shl r13, cl                                                                                                                                                                                                                                                   |             r13 <<= cl;
    0x00452d86 test rax, rax                                                                                                                                                                                                                                                 |             
                                                                                                                                                                                                                                                                             |             if (rax == 0) {
    0x00452d89 je 0x452f27                                                                                                                                                                                                                                                   |                 goto label_6;
                                                                                                                                                                                                                                                                             |             }
                                                                                                                                                                                                                                                                             |         }
                                                                                                                                                                                                                                                                             | label_4:
    0x00452d8f lea rsi, [r13*8]                                                                                                                                                                                                                                              |         rsi = r13*8;
    0x00452d97 mov rax, qword [rbp]                                                                                                                                                                                                                                          |         rax = *(rbp);
    0x00452d9b mov rdi, rbp                                                                                                                                                                                                                                                  |         rdi = rbp;
    0x00452d9e call qword [rax + 0x10]                                                                                                                                                                                                                                       |         rax = uint64_t (*rax + 0x10)() ();
    0x00452da1 mov r12, rax                                                                                                                                                                                                                                                  |         r12 = rax;
    0x00452da4 mov rax, qword [rbp]                                                                                                                                                                                                                                          |         rax = *(rbp);
    0x00452da8 mov rdi, rbp                                                                                                                                                                                                                                                  |         rdi = rbp;
    0x00452dab mov rsi, r13                                                                                                                                                                                                                                                  |         rsi = r13;
    0x00452dae call qword [rax + 0x10]                                                                                                                                                                                                                                       |         rax = uint64_t (*rax + 0x10)() ();
    0x00452db1 mov rbx, rax                                                                                                                                                                                                                                                  |         rbx = rax;
    0x00452db4 mov rax, r13                                                                                                                                                                                                                                                  |         rax = r13;
    0x00452db7 shr rax, 4                                                                                                                                                                                                                                                    |         rax >>= 4;
    0x00452dbb dec rax                                                                                                                                                                                                                                                       |         rax--;
    0x00452dbe mov rcx, rax                                                                                                                                                                                                                                                  |         rcx = rax;
    0x00452dc1 or rcx, 1                                                                                                                                                                                                                                                     |         rcx |= 1;
    0x00452dc5 bsr rbp, rcx                                                                                                                                                                                                                                                  |         __asm ("bsr rbp, rcx");
    0x00452dc9 xor ebp, 0x3f                                                                                                                                                                                                                                                 |         ebp ^= 0x3f;
    0x00452dcc cmp rax, 1                                                                                                                                                                                                                                                    |         
    0x00452dd0 adc ebp, 0                                                                                                                                                                                                                                                    |         ebp += 0;
    0x00452dd3 mov rdi, rbx                                                                                                                                                                                                                                                  |         
    0x00452dd6 mov esi, 0x80                                                                                                                                                                                                                                                 |         
    0x00452ddb mov rdx, r13                                                                                                                                                                                                                                                  |         
    0x00452dde call 0x4038e0                                                                                                                                                                                                                                                 |         memset (rbx, 0x80, r13);
    0x00452de3 jmp 0x452def                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x00452de5 xor ebp, ebp                                                                                                                                                                                                                                                  |         ebp = 0;
    0x00452de7 xor r13d, r13d                                                                                                                                                                                                                                                |         r13d = 0;
    0x00452dea xor ebx, ebx                                                                                                                                                                                                                                                  |         ebx = 0;
    0x00452dec xor r12d, r12d                                                                                                                                                                                                                                                |         r12d = 0;
                                                                                                                                                                                                                                                                             |     }
    0x00452def mov rax, qword [r15 + 0x18]                                                                                                                                                                                                                                   |     rax = *((r15 + 0x18));
    0x00452df3 test rax, rax                                                                                                                                                                                                                                                 |     
    0x00452df6 mov qword [rsp + 8], rbp                                                                                                                                                                                                                                      |     *((rsp + 8)) = rbp;
                                                                                                                                                                                                                                                                             |     if (rax == 0) {
    0x00452dfb je 0x452ee2                                                                                                                                                                                                                                                   |         goto label_7;
                                                                                                                                                                                                                                                                             |     }
    0x00452e01 mov r10d, ebp                                                                                                                                                                                                                                                 |     r10d = ebp;
    0x00452e04 lea rsi, [r13 - 1]                                                                                                                                                                                                                                            |     rsi = r13 - 1;
    0x00452e08 xor edx, edx                                                                                                                                                                                                                                                  |     edx = 0;
    0x00452e0a xor r14d, r14d                                                                                                                                                                                                                                                |     r14d = 0;
    0x00452e0d jmp 0x452e26                                                                                                                                                                                                                                                  |     goto label_8;
                                                                                                                                                                                                                                                                             | label_0:
    0x00452e10 mov rax, qword [r15 + 0x18]                                                                                                                                                                                                                                   |     rax = *((r15 + 0x18));
    0x00452e14 mov rdx, qword [rsp + 0x10]                                                                                                                                                                                                                                   |     rdx = *((rsp + 0x10));
                                                                                                                                                                                                                                                                             |     do {
    0x00452e19 add rdx, 0x10                                                                                                                                                                                                                                                 |         rdx += 0x10;
    0x00452e1d cmp rdx, rax                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (rdx >= rax) {
    0x00452e20 jae 0x452ee5                                                                                                                                                                                                                                                  |             goto label_9;
                                                                                                                                                                                                                                                                             |         }
                                                                                                                                                                                                                                                                             | label_8:
    0x00452e26 mov r11, qword [r15 + 8]                                                                                                                                                                                                                                      |         r11 = *((r15 + 8));
    0x00452e2a movdqu xmm0, xmmword [r11 + rdx]                                                                                                                                                                                                                              |         __asm ("movdqu xmm0, xmmword [r11 + rdx]");
    0x00452e30 pmovmskb ecx, xmm0                                                                                                                                                                                                                                            |         __asm ("pmovmskb ecx, xmm0");
    0x00452e34 cmp cx, 0xffff                                                                                                                                                                                                                                                |         
    0x00452e38 je 0x452e19                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                             |     } while (cx == 0xffff);
    0x00452e3a add r11, rdx                                                                                                                                                                                                                                                  |     r11 += rdx;
    0x00452e3d mov qword [rsp + 0x10], rdx                                                                                                                                                                                                                                   |     *((rsp + 0x10)) = rdx;
    0x00452e42 lea rbp, [rdx*8]                                                                                                                                                                                                                                              |     rbp = rdx*8;
    0x00452e4a add rbp, qword [r15]                                                                                                                                                                                                                                          |     rbp += *(r15);
    0x00452e4d not ecx                                                                                                                                                                                                                                                       |     ecx = ~ecx;
    0x00452e4f movzx eax, cx                                                                                                                                                                                                                                                 |     eax = (int32_t) cx;
    0x00452e52 jmp 0x452e8b                                                                                                                                                                                                                                                  |     goto label_10;
                                                                                                                                                                                                                                                                             | label_2:
    0x00452e60 movzx ecx, r9w                                                                                                                                                                                                                                                |     ecx = (int32_t) r9w;
    0x00452e64 bsf ecx, ecx                                                                                                                                                                                                                                                  |     __asm ("bsf ecx, ecx");
    0x00452e67 add rdi, rcx                                                                                                                                                                                                                                                  |     rdi += rcx;
                                                                                                                                                                                                                                                                             | label_1:
    0x00452e6a mov rcx, qword [rbp + rdx*8]                                                                                                                                                                                                                                  |     rcx = *((rbp + rdx*8));
    0x00452e6f mov qword [r12 + rdi*8], rcx                                                                                                                                                                                                                                  |     *((r12 + rdi*8)) = rcx;
    0x00452e73 and r8b, 0x7f                                                                                                                                                                                                                                                 |     r8b &= 0x7f;
    0x00452e77 mov byte [rbx + rdi], r8b                                                                                                                                                                                                                                     |     *((rbx + rdi)) = r8b;
    0x00452e7b inc r14                                                                                                                                                                                                                                                       |     r14++;
    0x00452e7e mov edi, 0xfffffffe                                                                                                                                                                                                                                           |     edi = 0xfffffffe;
    0x00452e83 mov ecx, edx                                                                                                                                                                                                                                                  |     ecx = edx;
    0x00452e85 rol edi, cl                                                                                                                                                                                                                                                   |     edi = rotate_left32 (edi, cl);
    0x00452e87 and eax, edi                                                                                                                                                                                                                                                  |     eax &= edi;
                                                                                                                                                                                                                                                                             |     if (eax == 0) {
    0x00452e89 je 0x452e10                                                                                                                                                                                                                                                   |         goto label_0;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_10:
    0x00452e8b bsf edx, eax                                                                                                                                                                                                                                                  |     __asm ("bsf edx, eax");
    0x00452e8e mov byte [r11 + rdx], 0xc0                                                                                                                                                                                                                                    |     *((r11 + rdx)) = 0xc0;
    0x00452e93 dec qword [r15 + 0x10]                                                                                                                                                                                                                                        |     *((r15 + 0x10))--;
    0x00452e97 movsxd r8, dword [rbp + rdx*8]                                                                                                                                                                                                                                |     r8 = *((rbp + rdx*8));
    0x00452e9c movabs rcx, 0x9e3779b97f4a7c15                                                                                                                                                                                                                                |     rcx = 0x9e3779b97f4a7c15;
    0x00452ea6 imul r8, rcx                                                                                                                                                                                                                                                  |     r8 *= rcx;
    0x00452eaa test r13, r13                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r13 == 0) {
    0x00452ead je 0x452e6a                                                                                                                                                                                                                                                   |         goto label_1;
                                                                                                                                                                                                                                                                             |     }
    0x00452eaf mov rdi, r8                                                                                                                                                                                                                                                   |     rdi = r8;
    0x00452eb2 mov ecx, r10d                                                                                                                                                                                                                                                 |     ecx = r10d;
    0x00452eb5 shr rdi, cl                                                                                                                                                                                                                                                   |     rdi >>= cl;
    0x00452eb8 shl rdi, 4                                                                                                                                                                                                                                                    |     rdi <<= 4;
    0x00452ebc xor ecx, ecx                                                                                                                                                                                                                                                  |     ecx = 0;
    0x00452ebe nop                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                             | label_3:
    0x00452ec0 movdqu xmm0, xmmword [rbx + rdi]                                                                                                                                                                                                                              |     __asm ("movdqu xmm0, xmmword [rbx + rdi]");
    0x00452ec5 pmovmskb r9d, xmm0                                                                                                                                                                                                                                            |     __asm ("pmovmskb r9d, xmm0");
    0x00452eca test r9w, r9w                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r9w != 0) {
    0x00452ece jne 0x452e60                                                                                                                                                                                                                                                  |         goto label_2;
                                                                                                                                                                                                                                                                             |     }
    0x00452ed0 add rdi, 0x10                                                                                                                                                                                                                                                 |     rdi += 0x10;
    0x00452ed4 and rdi, rsi                                                                                                                                                                                                                                                  |     rdi &= rsi;
    0x00452ed7 add rcx, 0x10                                                                                                                                                                                                                                                 |     rcx += 0x10;
    0x00452edb cmp rcx, r13                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (rcx < r13) {
    0x00452ede jb 0x452ec0                                                                                                                                                                                                                                                   |         goto label_3;
                                                                                                                                                                                                                                                                             |     }
    0x00452ee0 jmp 0x452e6a                                                                                                                                                                                                                                                  |     goto label_1;
                                                                                                                                                                                                                                                                             | label_7:
    0x00452ee2 xor r14d, r14d                                                                                                                                                                                                                                                |     r14d = 0;
                                                                                                                                                                                                                                                                             | label_9:
    0x00452ee5 mov rsi, qword [r15]                                                                                                                                                                                                                                          |     rsi = *(r15);
    0x00452ee8 mov rdi, qword [r15 + 0x28]                                                                                                                                                                                                                                   |     rdi = *((r15 + 0x28));
    0x00452eec mov rax, qword [rdi]                                                                                                                                                                                                                                          |     rax = *(rdi);
    0x00452eef call qword [rax + 0x18]                                                                                                                                                                                                                                       |     uint64_t (*rax + 0x18)() ();
    0x00452ef2 mov rsi, qword [r15 + 8]                                                                                                                                                                                                                                      |     rsi = *((r15 + 8));
    0x00452ef6 mov rdi, qword [r15 + 0x28]                                                                                                                                                                                                                                   |     rdi = *((r15 + 0x28));
    0x00452efa mov rax, qword [rdi]                                                                                                                                                                                                                                          |     rax = *(rdi);
    0x00452efd call qword [rax + 0x18]                                                                                                                                                                                                                                       |     uint64_t (*rax + 0x18)() ();
    0x00452f00 mov qword [r15], r12                                                                                                                                                                                                                                          |     *(r15) = r12;
    0x00452f03 mov qword [r15 + 8], rbx                                                                                                                                                                                                                                      |     *((r15 + 8)) = rbx;
    0x00452f07 mov qword [r15 + 0x10], r14                                                                                                                                                                                                                                   |     *((r15 + 0x10)) = r14;
    0x00452f0b mov qword [r15 + 0x18], r13                                                                                                                                                                                                                                   |     *((r15 + 0x18)) = r13;
    0x00452f0f mov rax, qword [rsp + 8]                                                                                                                                                                                                                                      |     rax = *((rsp + 8));
    0x00452f14 mov dword [r15 + 0x20], eax                                                                                                                                                                                                                                   |     *((r15 + 0x20)) = eax;
    0x00452f18 add rsp, 0x18                                                                                                                                                                                                                                                 |     
    0x00452f1c pop rbx                                                                                                                                                                                                                                                       |     
    0x00452f1d pop r12                                                                                                                                                                                                                                                       |     
    0x00452f1f pop r13                                                                                                                                                                                                                                                       |     
    0x00452f21 pop r14                                                                                                                                                                                                                                                       |     
    0x00452f23 pop r15                                                                                                                                                                                                                                                       |     
    0x00452f25 pop rbp                                                                                                                                                                                                                                                       |     
    0x00452f26 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | label_6:
    0x00452f27 xor r13d, r13d                                                                                                                                                                                                                                                |     r13d = 0;
    0x00452f2a jmp 0x452d8f                                                                                                                                                                                                                                                  |     goto label_4;
                                                                                                                                                                                                                                                                             | }
