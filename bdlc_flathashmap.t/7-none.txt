    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlc_flathashmap.t/none @ 0x4535a0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.bsl::pair_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_____int__BloombergLP::bdlc::FlatHashTable_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_____bsl::pair_bsl::basic_string_char__std::__1:: ()         | int64_t method_bsl::pair_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_int_BloombergLP::bdlc::FlatHashTable_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_bsl::pair_bsl::basic_string_char_std::_1:: (uint32_t arg2, size_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     signed int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     int64_t var_e8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_148h;
                                                                                                                                                                                                                                                                                     |     int64_t var_150h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int>& BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int>, BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int, bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int> >, BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > > >, bsl::equal_to<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > > >::operator[]<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&>(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x004535a0 push rbp                                                                                                                                                                                                                                                              |     
    0x004535a1 push r15                                                                                                                                                                                                                                                              |     
    0x004535a3 push r14                                                                                                                                                                                                                                                              |     
    0x004535a5 push r13                                                                                                                                                                                                                                                              |     
    0x004535a7 push r12                                                                                                                                                                                                                                                              |     
    0x004535a9 push rbx                                                                                                                                                                                                                                                              |     
    0x004535aa sub rsp, 0x158                                                                                                                                                                                                                                                        |     
    0x004535b1 mov r12, rsi                                                                                                                                                                                                                                                          |     r12 = rsi;
    0x004535b4 mov r14, rdi                                                                                                                                                                                                                                                          |     r14 = rdi;
    0x004535b7 mov qword [rsp + 0x148], 0                                                                                                                                                                                                                                            |     *((rsp + 0x148)) = 0;
    0x004535c3 mov byte [rsp + 0x150], 0                                                                                                                                                                                                                                             |     *((rsp + 0x150)) = 0;
    0x004535cb movdqa xmm0, xmmword [rip + 0x348cd]                                                                                                                                                                                                                                  |     __asm ("movdqa xmm0, xmmword [0x00487ea0]");
    0x004535d3 movdqu xmmword [rsp + 0xe8], xmm0                                                                                                                                                                                                                                     |     __asm ("movdqu xmmword [rsp + 0xe8], xmm0");
    0x004535dc mov rdx, qword [rsi + 0x18]                                                                                                                                                                                                                                           |     rdx = *((rsi + 0x18));
    0x004535e0 cmp qword [rsi + 0x20], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x20)) != 0x17) {
    0x004535e5 je 0x4535eb                                                                                                                                                                                                                                                           |         
    0x004535e7 mov rsi, qword [r12]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x004535eb lea rbx, [rsp + 0x28]                                                                                                                                                                                                                                                 |     rbx = rsp + 0x28;
    0x004535f0 mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x004535f3 call 0x45f9d0                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::update(voidconst*,unsigned long) (rbx, *(r12), rdx);
    0x004535f8 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                           |     rax = *((r12 + 0x18));
    0x004535fd mov qword [rsp + 0x10], rax                                                                                                                                                                                                                                           |     *((rsp + 0x10)) = rax;
    0x00453602 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x00453607 mov edx, 8                                                                                                                                                                                                                                                            |     
    0x0045360c mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x0045360f call 0x45f9d0                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::update(voidconst*,unsigned long) (rbx, rsp + 0x10, 8);
    0x00453614 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x00453619 lea rdx, [rsp + 0x20]                                                                                                                                                                                                                                                 |     
    0x0045361e mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x00453621 call 0x45ef50                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::finalize(unsigned long long*,unsigned long long*) (rbx, rsp + 0x10, rsp + 0x20);
    0x00453626 movabs r15, 0x9e3779b97f4a7c15                                                                                                                                                                                                                                        |     r15 = 0x9e3779b97f4a7c15;
    0x00453630 imul r15, qword [rsp + 0x10]                                                                                                                                                                                                                                          |     r15 *= *((rsp + 0x10));
    0x00453636 mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x00453639 mov rsi, r12                                                                                                                                                                                                                                                          |     rsi = r12;
    0x0045363c mov rdx, r15                                                                                                                                                                                                                                                          |     rdx = r15;
    0x0045363f call 0x44ea60                                                                                                                                                                                                                                                         |     rax = BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>,BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>>,BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>,bsl::equal_to<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::findKey(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&,unsigned long)const ();
    0x00453644 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x00453647 cmp rax, qword [r14 + 0x18]                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (rax != *((r14 + 0x18))) {
    0x0045364b jne 0x4537d4                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00453651 mov rax, rbx                                                                                                                                                                                                                                                          |     rax = rbx;
    0x00453654 shr rax, 3                                                                                                                                                                                                                                                            |     rax >>= 3;
    0x00453658 lea rcx, [rax*8]                                                                                                                                                                                                                                                      |     rcx = rax*8;
    0x00453660 sub rcx, rax                                                                                                                                                                                                                                                          |     rcx -= rax;
    0x00453663 cmp qword [r14 + 0x10], rcx                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (*((r14 + 0x10)) >= rcx) {
    0x00453667 jb 0x453685                                                                                                                                                                                                                                                           |         
    0x00453669 lea rax, [rbx + rbx]                                                                                                                                                                                                                                                  |         rax = rbx + rbx;
    0x0045366d test rbx, rbx                                                                                                                                                                                                                                                         |         
    0x00453670 mov esi, 0x20                                                                                                                                                                                                                                                         |         esi = 0x20;
                                                                                                                                                                                                                                                                                     |         if (rbx != 0) {
    0x00453675 cmovne rsi, rax                                                                                                                                                                                                                                                       |             rsi = rax;
                                                                                                                                                                                                                                                                                     |         }
    0x00453679 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0045367c call 0x44ebe0                                                                                                                                                                                                                                                         |         BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>,BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>>,BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>,bsl::equal_to<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::rehashRaw(unsigned long) (r14, rsi);
    0x00453681 mov rbx, qword [r14 + 0x18]                                                                                                                                                                                                                                           |         rbx = *((r14 + 0x18));
                                                                                                                                                                                                                                                                                     |     }
    0x00453685 test rbx, rbx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rbx == 0) {
    0x00453688 je 0x4536d0                                                                                                                                                                                                                                                           |         goto label_1;
                                                                                                                                                                                                                                                                                     |     }
    0x0045368a mov cl, byte [r14 + 0x20]                                                                                                                                                                                                                                             |     cl = *((r14 + 0x20));
    0x0045368e mov rax, r15                                                                                                                                                                                                                                                          |     rax = r15;
    0x00453691 shr rax, cl                                                                                                                                                                                                                                                           |     rax >>= cl;
    0x00453694 mov rcx, qword [r14 + 8]                                                                                                                                                                                                                                              |     rcx = *((r14 + 8));
    0x00453698 shl rax, 4                                                                                                                                                                                                                                                            |     rax <<= 4;
    0x0045369c lea rdx, [rbx - 1]                                                                                                                                                                                                                                                    |     rdx = rbx - 1;
    0x004536a0 xor esi, esi                                                                                                                                                                                                                                                          |     esi = 0;
    0x004536a2 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x004536ac nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x004536b0 movdqu xmm0, xmmword [rcx + rax]                                                                                                                                                                                                                                      |         __asm ("movdqu xmm0, xmmword [rcx + rax]");
    0x004536b5 pmovmskb edi, xmm0                                                                                                                                                                                                                                                    |         __asm ("pmovmskb edi, xmm0");
    0x004536b9 test di, di                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |         if (di != 0) {
    0x004536bc jne 0x4536d4                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x004536be add rax, 0x10                                                                                                                                                                                                                                                         |         rax += 0x10;
    0x004536c2 and rax, rdx                                                                                                                                                                                                                                                          |         rax &= rdx;
    0x004536c5 add rsi, 0x10                                                                                                                                                                                                                                                         |         rsi += 0x10;
    0x004536c9 cmp rsi, rbx                                                                                                                                                                                                                                                          |         
    0x004536cc jb 0x4536b0                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rsi < rbx);
    0x004536ce jmp 0x4536e0                                                                                                                                                                                                                                                          |     goto label_3;
                                                                                                                                                                                                                                                                                     | label_1:
    0x004536d0 xor ebx, ebx                                                                                                                                                                                                                                                          |     ebx = 0;
    0x004536d2 jmp 0x4536e0                                                                                                                                                                                                                                                          |     goto label_3;
                                                                                                                                                                                                                                                                                     | label_2:
    0x004536d4 movzx ecx, di                                                                                                                                                                                                                                                         |     ecx = (int32_t) di;
    0x004536d7 bsf ecx, ecx                                                                                                                                                                                                                                                          |     __asm ("bsf ecx, ecx");
    0x004536da add rax, rcx                                                                                                                                                                                                                                                          |     rax += rcx;
    0x004536dd mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
                                                                                                                                                                                                                                                                                     | label_3:
    0x004536e0 mov rcx, qword [r14]                                                                                                                                                                                                                                                  |     rcx = *(r14);
    0x004536e3 mov rdi, qword [r14 + 0x28]                                                                                                                                                                                                                                           |     rdi = *((r14 + 0x28));
    0x004536e7 imul rbp, rbx, 0x38                                                                                                                                                                                                                                                   |     rbp = rbx * 0x38;
    0x004536eb lea r13, [rcx + rbp]                                                                                                                                                                                                                                                  |     r13 = rcx + rbp;
    0x004536ef test rdi, rdi                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rdi == 0) {
    0x004536f2 jne 0x453712                                                                                                                                                                                                                                                          |         
    0x004536f4 mov rdi, qword [rip + 0x25974d]                                                                                                                                                                                                                                       |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004536fb test rdi, rdi                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rdi != 0) {
    0x004536fe jne 0x453712                                                                                                                                                                                                                                                          |             goto label_4;
                                                                                                                                                                                                                                                                                     |         }
    0x00453700 mov qword [rsp + 8], rcx                                                                                                                                                                                                                                              |         *((rsp + 8)) = rcx;
    0x00453705 call 0x460a70                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0045370a mov rcx, qword [rsp + 8]                                                                                                                                                                                                                                              |         rcx = *((rsp + 8));
    0x0045370f mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_4:
    0x00453712 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                           |     rax = *((r12 + 0x20));
    0x00453717 mov qword [r13 + 0x20], rax                                                                                                                                                                                                                                           |     *((r13 + 0x20)) = rax;
    0x0045371b movdqu xmm0, xmmword [r12]                                                                                                                                                                                                                                            |     __asm ("movdqu xmm0, xmmword [r12]");
    0x00453721 movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x00453727 movups xmmword [r13 + 0x10], xmm1                                                                                                                                                                                                                                     |     __asm ("movups xmmword [r13 + 0x10], xmm1");
    0x0045372c movdqu xmmword [r13], xmm0                                                                                                                                                                                                                                            |     __asm ("movdqu xmmword [r13], xmm0");
    0x00453732 mov qword [rcx + rbp + 0x28], rdi                                                                                                                                                                                                                                     |     *((rcx + rbp + 0x28)) = rdi;
    0x00453737 cmp qword [rcx + rbp + 0x20], 0x17                                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                                     |     if (*((rcx + rbp + 0x20)) != 0x17) {
    0x0045373d je 0x4537bc                                                                                                                                                                                                                                                           |         
    0x0045373f lea rdx, [rcx + rbp + 0x20]                                                                                                                                                                                                                                           |         rdx = rcx + rbp + 0x20;
    0x00453744 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                           |         rax = *((r12 + 0x18));
    0x00453749 cmp rax, 0x17                                                                                                                                                                                                                                                         |         
    0x0045374d mov esi, 0x17                                                                                                                                                                                                                                                         |         esi = 0x17;
                                                                                                                                                                                                                                                                                     |         if (rax > 0x17) {
    0x00453752 cmova rsi, rax                                                                                                                                                                                                                                                        |             rsi = rax;
                                                                                                                                                                                                                                                                                     |         }
    0x00453756 mov qword [r13], 0                                                                                                                                                                                                                                                    |         *(r13) = 0;
    0x0045375e mov qword [rcx + rbp + 0x18], rax                                                                                                                                                                                                                                     |         *((rcx + rbp + 0x18)) = rax;
    0x00453763 mov qword [rdx], rsi                                                                                                                                                                                                                                                  |         *(rdx) = rsi;
    0x00453766 cmp rax, 0x18                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax >= 0x18) {
    0x0045376a jb 0x453793                                                                                                                                                                                                                                                           |             
    0x0045376c inc rsi                                                                                                                                                                                                                                                               |             rsi++;
    0x0045376f mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00453772 mov qword [rsp + 8], rcx                                                                                                                                                                                                                                              |             *((rsp + 8)) = rcx;
    0x00453777 mov qword [rsp + 0x18], rdx                                                                                                                                                                                                                                           |             *((rsp + 0x18)) = rdx;
    0x0045377c call qword [rax + 0x10]                                                                                                                                                                                                                                               |             rax = uint64_t (*rax + 0x10)() ();
    0x0045377f mov rdx, qword [rsp + 0x18]                                                                                                                                                                                                                                           |             rdx = *((rsp + 0x18));
    0x00453784 mov rcx, qword [rsp + 8]                                                                                                                                                                                                                                              |             rcx = *((rsp + 8));
    0x00453789 mov qword [r13], rax                                                                                                                                                                                                                                                  |             *(r13) = rax;
    0x0045378d cmp qword [rdx], 0x17                                                                                                                                                                                                                                                 |             
                                                                                                                                                                                                                                                                                     |             if (*(rdx) != 0x17) {
    0x00453791 jne 0x453796                                                                                                                                                                                                                                                          |                 goto label_5;
                                                                                                                                                                                                                                                                                     |             }
                                                                                                                                                                                                                                                                                     |         }
    0x00453793 mov rax, r13                                                                                                                                                                                                                                                          |         rax = r13;
                                                                                                                                                                                                                                                                                     | label_5:
    0x00453796 mov rdx, qword [rdx - 8]                                                                                                                                                                                                                                              |         rdx = *((rdx - 8));
    0x0045379a inc rdx                                                                                                                                                                                                                                                               |         rdx++;
                                                                                                                                                                                                                                                                                     |         if (rdx == 0) {
    0x0045379d je 0x4537bc                                                                                                                                                                                                                                                           |             goto label_6;
                                                                                                                                                                                                                                                                                     |         }
    0x0045379f cmp qword [r12 + 0x20], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((r12 + 0x20)) != 0x17) {
    0x004537a5 je 0x4537ab                                                                                                                                                                                                                                                           |             
    0x004537a7 mov r12, qword [r12]                                                                                                                                                                                                                                                  |             r12 = *(r12);
                                                                                                                                                                                                                                                                                     |         }
    0x004537ab mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x004537ae mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x004537b1 mov r12, rcx                                                                                                                                                                                                                                                          |         r12 = rcx;
    0x004537b4 call 0x403f70                                                                                                                                                                                                                                                         |         memcpy (rax, r12, rdx);
    0x004537b9 mov rcx, r12                                                                                                                                                                                                                                                          |         rcx = r12;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_6:
    0x004537bc mov dword [rcx + rbp + 0x30], 0                                                                                                                                                                                                                                       |     *((rcx + rbp + 0x30)) = 0;
    0x004537c4 and r15b, 0x7f                                                                                                                                                                                                                                                        |     r15b &= 0x7f;
    0x004537c8 mov rax, qword [r14 + 8]                                                                                                                                                                                                                                              |     rax = *((r14 + 8));
    0x004537cc mov byte [rax + rbx], r15b                                                                                                                                                                                                                                            |     *((rax + rbx)) = r15b;
    0x004537d0 inc qword [r14 + 0x10]                                                                                                                                                                                                                                                |     *((r14 + 0x10))++;
                                                                                                                                                                                                                                                                                     | label_0:
    0x004537d4 imul rax, rbx, 0x38                                                                                                                                                                                                                                                   |     rax = rbx * 0x38;
    0x004537d8 add rax, qword [r14]                                                                                                                                                                                                                                                  |     rax += *(r14);
    0x004537db add rsp, 0x158                                                                                                                                                                                                                                                        |     
    0x004537e2 pop rbx                                                                                                                                                                                                                                                               |     
    0x004537e3 pop r12                                                                                                                                                                                                                                                               |     
    0x004537e5 pop r13                                                                                                                                                                                                                                                               |     
    0x004537e7 pop r14                                                                                                                                                                                                                                                               |     
    0x004537e9 pop r15                                                                                                                                                                                                                                                               |     
    0x004537eb pop rbp                                                                                                                                                                                                                                                               |     
    0x004537ec ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
