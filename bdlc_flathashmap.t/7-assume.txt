    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlc_flathashmap.t/assume @ 0x453470 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.bsl::pair_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_____int__BloombergLP::bdlc::FlatHashTable_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char_____bsl::pair_bsl::basic_string_char__std::__1:: ()         | int64_t method_bsl::pair_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_int_BloombergLP::bdlc::FlatHashTable_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_bsl::pair_bsl::basic_string_char_std::_1:: (uint32_t arg2, size_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     signed int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     int64_t var_e8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_148h;
                                                                                                                                                                                                                                                                                     |     int64_t var_150h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int>& BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int>, BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int, bsl::pair<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >, int> >, BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > > >, bsl::equal_to<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > > >::operator[]<bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&>(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x00453470 push rbp                                                                                                                                                                                                                                                              |     
    0x00453471 push r15                                                                                                                                                                                                                                                              |     
    0x00453473 push r14                                                                                                                                                                                                                                                              |     
    0x00453475 push r13                                                                                                                                                                                                                                                              |     
    0x00453477 push r12                                                                                                                                                                                                                                                              |     
    0x00453479 push rbx                                                                                                                                                                                                                                                              |     
    0x0045347a sub rsp, 0x158                                                                                                                                                                                                                                                        |     
    0x00453481 mov r12, rsi                                                                                                                                                                                                                                                          |     r12 = rsi;
    0x00453484 mov r14, rdi                                                                                                                                                                                                                                                          |     r14 = rdi;
    0x00453487 mov qword [rsp + 0x148], 0                                                                                                                                                                                                                                            |     *((rsp + 0x148)) = 0;
    0x00453493 mov byte [rsp + 0x150], 0                                                                                                                                                                                                                                             |     *((rsp + 0x150)) = 0;
    0x0045349b movdqa xmm0, xmmword [rip + 0x3479d]                                                                                                                                                                                                                                  |     __asm ("movdqa xmm0, xmmword [0x00487c40]");
    0x004534a3 movdqu xmmword [rsp + 0xe8], xmm0                                                                                                                                                                                                                                     |     __asm ("movdqu xmmword [rsp + 0xe8], xmm0");
    0x004534ac mov rdx, qword [rsi + 0x18]                                                                                                                                                                                                                                           |     rdx = *((rsi + 0x18));
    0x004534b0 cmp qword [rsi + 0x20], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x20)) != 0x17) {
    0x004534b5 je 0x4534bb                                                                                                                                                                                                                                                           |         
    0x004534b7 mov rsi, qword [r12]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x004534bb lea rbx, [rsp + 0x28]                                                                                                                                                                                                                                                 |     rbx = rsp + 0x28;
    0x004534c0 mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x004534c3 call 0x45f7a0                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::update(voidconst*,unsigned long) (rbx, *(r12), rdx);
    0x004534c8 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                           |     rax = *((r12 + 0x18));
    0x004534cd mov qword [rsp + 0x10], rax                                                                                                                                                                                                                                           |     *((rsp + 0x10)) = rax;
    0x004534d2 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x004534d7 mov edx, 8                                                                                                                                                                                                                                                            |     
    0x004534dc mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x004534df call 0x45f7a0                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::update(voidconst*,unsigned long) (rbx, rsp + 0x10, 8);
    0x004534e4 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x004534e9 lea rdx, [rsp + 0x20]                                                                                                                                                                                                                                                 |     
    0x004534ee mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x004534f1 call 0x45ed20                                                                                                                                                                                                                                                         |     BloombergLP::bslh::SpookyHashAlgorithmImp::finalize(unsigned long long*,unsigned long long*) (rbx, rsp + 0x10, rsp + 0x20);
    0x004534f6 movabs r15, 0x9e3779b97f4a7c15                                                                                                                                                                                                                                        |     r15 = 0x9e3779b97f4a7c15;
    0x00453500 imul r15, qword [rsp + 0x10]                                                                                                                                                                                                                                          |     r15 *= *((rsp + 0x10));
    0x00453506 mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x00453509 mov rsi, r12                                                                                                                                                                                                                                                          |     rsi = r12;
    0x0045350c mov rdx, r15                                                                                                                                                                                                                                                          |     rdx = r15;
    0x0045350f call 0x44ea40                                                                                                                                                                                                                                                         |     rax = BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>,BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>>,BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>,bsl::equal_to<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::findKey(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&,unsigned long)const ();
    0x00453514 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x00453517 cmp rax, qword [r14 + 0x18]                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (rax != *((r14 + 0x18))) {
    0x0045351b jne 0x4536a2                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00453521 mov rax, rbx                                                                                                                                                                                                                                                          |     rax = rbx;
    0x00453524 shr rax, 3                                                                                                                                                                                                                                                            |     rax >>= 3;
    0x00453528 lea rcx, [rax*8]                                                                                                                                                                                                                                                      |     rcx = rax*8;
    0x00453530 sub rcx, rax                                                                                                                                                                                                                                                          |     rcx -= rax;
    0x00453533 cmp qword [r14 + 0x10], rcx                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (*((r14 + 0x10)) >= rcx) {
    0x00453537 jb 0x453555                                                                                                                                                                                                                                                           |         
    0x00453539 lea rax, [rbx + rbx]                                                                                                                                                                                                                                                  |         rax = rbx + rbx;
    0x0045353d test rbx, rbx                                                                                                                                                                                                                                                         |         
    0x00453540 mov esi, 0x20                                                                                                                                                                                                                                                         |         esi = 0x20;
                                                                                                                                                                                                                                                                                     |         if (rbx != 0) {
    0x00453545 cmovne rsi, rax                                                                                                                                                                                                                                                       |             rsi = rax;
                                                                                                                                                                                                                                                                                     |         }
    0x00453549 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0045354c call 0x44ebc0                                                                                                                                                                                                                                                         |         BloombergLP::bdlc::FlatHashTable<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>,BloombergLP::bdlc::FlatHashMap_EntryUtil<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int,bsl::pair<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>,int>>,BloombergLP::bslh::FibonacciBadHashWrapper<bsl::hash<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>,bsl::equal_to<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::rehashRaw(unsigned long) (r14, rsi);
    0x00453551 mov rbx, qword [r14 + 0x18]                                                                                                                                                                                                                                           |         rbx = *((r14 + 0x18));
                                                                                                                                                                                                                                                                                     |     }
    0x00453555 test rbx, rbx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rbx == 0) {
    0x00453558 je 0x4535a0                                                                                                                                                                                                                                                           |         goto label_1;
                                                                                                                                                                                                                                                                                     |     }
    0x0045355a mov cl, byte [r14 + 0x20]                                                                                                                                                                                                                                             |     cl = *((r14 + 0x20));
    0x0045355e mov rax, r15                                                                                                                                                                                                                                                          |     rax = r15;
    0x00453561 shr rax, cl                                                                                                                                                                                                                                                           |     rax >>= cl;
    0x00453564 mov rcx, qword [r14 + 8]                                                                                                                                                                                                                                              |     rcx = *((r14 + 8));
    0x00453568 shl rax, 4                                                                                                                                                                                                                                                            |     rax <<= 4;
    0x0045356c lea rdx, [rbx - 1]                                                                                                                                                                                                                                                    |     rdx = rbx - 1;
    0x00453570 xor esi, esi                                                                                                                                                                                                                                                          |     esi = 0;
    0x00453572 nop word cs:[rax + rax]                                                                                                                                                                                                                                               |     
    0x0045357c nop dword [rax]                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00453580 movdqu xmm0, xmmword [rcx + rax]                                                                                                                                                                                                                                      |         __asm ("movdqu xmm0, xmmword [rcx + rax]");
    0x00453585 pmovmskb edi, xmm0                                                                                                                                                                                                                                                    |         __asm ("pmovmskb edi, xmm0");
    0x00453589 test di, di                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |         if (di != 0) {
    0x0045358c jne 0x4535a2                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0045358e add rax, 0x10                                                                                                                                                                                                                                                         |         rax += 0x10;
    0x00453592 and rax, rdx                                                                                                                                                                                                                                                          |         rax &= rdx;
    0x00453595 add rsi, 0x10                                                                                                                                                                                                                                                         |         rsi += 0x10;
    0x00453599 cmp rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0045359c jb 0x453580                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (rsi < rbx);
    0x0045359e jmp 0x4535ae                                                                                                                                                                                                                                                          |     goto label_3;
                                                                                                                                                                                                                                                                                     | label_1:
    0x004535a0 jmp 0x4535ae                                                                                                                                                                                                                                                          |     goto label_3;
                                                                                                                                                                                                                                                                                     | label_2:
    0x004535a2 movzx ecx, di                                                                                                                                                                                                                                                         |     ecx = (int32_t) di;
    0x004535a5 bsf ecx, ecx                                                                                                                                                                                                                                                          |     __asm ("bsf ecx, ecx");
    0x004535a8 add rax, rcx                                                                                                                                                                                                                                                          |     rax += rcx;
    0x004535ab mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
                                                                                                                                                                                                                                                                                     | label_3:
    0x004535ae mov rcx, qword [r14]                                                                                                                                                                                                                                                  |     rcx = *(r14);
    0x004535b1 mov rdi, qword [r14 + 0x28]                                                                                                                                                                                                                                           |     rdi = *((r14 + 0x28));
    0x004535b5 imul rbp, rbx, 0x38                                                                                                                                                                                                                                                   |     rbp = rbx * 0x38;
    0x004535b9 lea r13, [rcx + rbp]                                                                                                                                                                                                                                                  |     r13 = rcx + rbp;
    0x004535bd test rdi, rdi                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rdi == 0) {
    0x004535c0 jne 0x4535e0                                                                                                                                                                                                                                                          |         
    0x004535c2 mov rdi, qword [rip + 0x25887f]                                                                                                                                                                                                                                       |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004535c9 test rdi, rdi                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rdi != 0) {
    0x004535cc jne 0x4535e0                                                                                                                                                                                                                                                          |             goto label_4;
                                                                                                                                                                                                                                                                                     |         }
    0x004535ce mov qword [rsp + 8], rcx                                                                                                                                                                                                                                              |         *((rsp + 8)) = rcx;
    0x004535d3 call 0x460860                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004535d8 mov rcx, qword [rsp + 8]                                                                                                                                                                                                                                              |         rcx = *((rsp + 8));
    0x004535dd mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_4:
    0x004535e0 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                           |     rax = *((r12 + 0x20));
    0x004535e5 mov qword [r13 + 0x20], rax                                                                                                                                                                                                                                           |     *((r13 + 0x20)) = rax;
    0x004535e9 movdqu xmm0, xmmword [r12]                                                                                                                                                                                                                                            |     __asm ("movdqu xmm0, xmmword [r12]");
    0x004535ef movups xmm1, xmmword [r12 + 0x10]                                                                                                                                                                                                                                     |     __asm ("movups xmm1, xmmword [r12 + 0x10]");
    0x004535f5 movups xmmword [r13 + 0x10], xmm1                                                                                                                                                                                                                                     |     __asm ("movups xmmword [r13 + 0x10], xmm1");
    0x004535fa movdqu xmmword [r13], xmm0                                                                                                                                                                                                                                            |     __asm ("movdqu xmmword [r13], xmm0");
    0x00453600 mov qword [rcx + rbp + 0x28], rdi                                                                                                                                                                                                                                     |     *((rcx + rbp + 0x28)) = rdi;
    0x00453605 cmp qword [rcx + rbp + 0x20], 0x17                                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                                     |     if (*((rcx + rbp + 0x20)) != 0x17) {
    0x0045360b je 0x45368a                                                                                                                                                                                                                                                           |         
    0x0045360d lea rdx, [rcx + rbp + 0x20]                                                                                                                                                                                                                                           |         rdx = rcx + rbp + 0x20;
    0x00453612 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                           |         rax = *((r12 + 0x18));
    0x00453617 cmp rax, 0x17                                                                                                                                                                                                                                                         |         
    0x0045361b mov esi, 0x17                                                                                                                                                                                                                                                         |         esi = 0x17;
                                                                                                                                                                                                                                                                                     |         if (rax > 0x17) {
    0x00453620 cmova rsi, rax                                                                                                                                                                                                                                                        |             rsi = rax;
                                                                                                                                                                                                                                                                                     |         }
    0x00453624 mov qword [r13], 0                                                                                                                                                                                                                                                    |         *(r13) = 0;
    0x0045362c mov qword [rcx + rbp + 0x18], rax                                                                                                                                                                                                                                     |         *((rcx + rbp + 0x18)) = rax;
    0x00453631 mov qword [rdx], rsi                                                                                                                                                                                                                                                  |         *(rdx) = rsi;
    0x00453634 cmp rax, 0x18                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax >= 0x18) {
    0x00453638 jb 0x453661                                                                                                                                                                                                                                                           |             
    0x0045363a inc rsi                                                                                                                                                                                                                                                               |             rsi++;
    0x0045363d mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00453640 mov qword [rsp + 8], rcx                                                                                                                                                                                                                                              |             *((rsp + 8)) = rcx;
    0x00453645 mov qword [rsp + 0x18], rdx                                                                                                                                                                                                                                           |             *((rsp + 0x18)) = rdx;
    0x0045364a call qword [rax + 0x10]                                                                                                                                                                                                                                               |             rax = uint64_t (*rax + 0x10)() ();
    0x0045364d mov rdx, qword [rsp + 0x18]                                                                                                                                                                                                                                           |             rdx = *((rsp + 0x18));
    0x00453652 mov rcx, qword [rsp + 8]                                                                                                                                                                                                                                              |             rcx = *((rsp + 8));
    0x00453657 mov qword [r13], rax                                                                                                                                                                                                                                                  |             *(r13) = rax;
    0x0045365b cmp qword [rdx], 0x17                                                                                                                                                                                                                                                 |             
                                                                                                                                                                                                                                                                                     |             if (*(rdx) != 0x17) {
    0x0045365f jne 0x453664                                                                                                                                                                                                                                                          |                 goto label_5;
                                                                                                                                                                                                                                                                                     |             }
                                                                                                                                                                                                                                                                                     |         }
    0x00453661 mov rax, r13                                                                                                                                                                                                                                                          |         rax = r13;
                                                                                                                                                                                                                                                                                     | label_5:
    0x00453664 mov rdx, qword [rdx - 8]                                                                                                                                                                                                                                              |         rdx = *((rdx - 8));
    0x00453668 inc rdx                                                                                                                                                                                                                                                               |         rdx++;
                                                                                                                                                                                                                                                                                     |         if (rdx == 0) {
    0x0045366b je 0x45368a                                                                                                                                                                                                                                                           |             goto label_6;
                                                                                                                                                                                                                                                                                     |         }
    0x0045366d cmp qword [r12 + 0x20], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((r12 + 0x20)) != 0x17) {
    0x00453673 je 0x453679                                                                                                                                                                                                                                                           |             
    0x00453675 mov r12, qword [r12]                                                                                                                                                                                                                                                  |             r12 = *(r12);
                                                                                                                                                                                                                                                                                     |         }
    0x00453679 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0045367c mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x0045367f mov r12, rcx                                                                                                                                                                                                                                                          |         r12 = rcx;
    0x00453682 call 0x403f70                                                                                                                                                                                                                                                         |         memcpy (rax, r12, rdx);
    0x00453687 mov rcx, r12                                                                                                                                                                                                                                                          |         rcx = r12;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_6:
    0x0045368a mov dword [rcx + rbp + 0x30], 0                                                                                                                                                                                                                                       |     *((rcx + rbp + 0x30)) = 0;
    0x00453692 and r15b, 0x7f                                                                                                                                                                                                                                                        |     r15b &= 0x7f;
    0x00453696 mov rax, qword [r14 + 8]                                                                                                                                                                                                                                              |     rax = *((r14 + 8));
    0x0045369a mov byte [rax + rbx], r15b                                                                                                                                                                                                                                            |     *((rax + rbx)) = r15b;
    0x0045369e inc qword [r14 + 0x10]                                                                                                                                                                                                                                                |     *((r14 + 0x10))++;
                                                                                                                                                                                                                                                                                     | label_0:
    0x004536a2 imul rax, rbx, 0x38                                                                                                                                                                                                                                                   |     rax = rbx * 0x38;
    0x004536a6 add rax, qword [r14]                                                                                                                                                                                                                                                  |     rax += *(r14);
    0x004536a9 add rsp, 0x158                                                                                                                                                                                                                                                        |     
    0x004536b0 pop rbx                                                                                                                                                                                                                                                               |     
    0x004536b1 pop r12                                                                                                                                                                                                                                                               |     
    0x004536b3 pop r13                                                                                                                                                                                                                                                               |     
    0x004536b5 pop r14                                                                                                                                                                                                                                                               |     
    0x004536b7 pop r15                                                                                                                                                                                                                                                               |     
    0x004536b9 pop rbp                                                                                                                                                                                                                                                               |     
    0x004536ba ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
