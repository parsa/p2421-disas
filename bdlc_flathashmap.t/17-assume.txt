    ; assembly                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                 | /* bdlc_flathashmap.t/assume @ 0x4542f0 */
                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                 |  
                                                                                                                                                                                                                                 | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                                                 |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                                                 |     count &= mask;
                                                                                                                                                                                                                                 |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                                                 | }
                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__bsl::pair_int__int___BloombergLP::bdlc::FlatHashMap_EntryUtil_int__int__bsl::pair_int__int_____SeedIsHash_int___EqualAndState_int___.rehashRaw_unsigned_long_ ()        | uint64_t method_BloombergLP::bdlc::FlatHashTable_int_bsl::pair_int_int_BloombergLP::bdlc::FlatHashMap_EntryUtil_int_int_bsl::pair_int_int_SeedIsHash_int_EqualAndState_int_rehashRaw_unsigned_long_ (int64_t arg2, void ** s) {
                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                 |     rdi = s;
                                                                                                                                                                                                                                 |     /* BloombergLP::bdlc::FlatHashTable<int, bsl::pair<int, int>, BloombergLP::bdlc::FlatHashMap_EntryUtil<int, int, bsl::pair<int, int> >, SeedIsHash<int>, EqualAndState<int> >::rehashRaw(unsigned long) */
    0x004542f0 push rbp                                                                                                                                                                                                          |     
    0x004542f1 push r15                                                                                                                                                                                                          |     
    0x004542f3 push r14                                                                                                                                                                                                          |     
    0x004542f5 push r13                                                                                                                                                                                                          |     
    0x004542f7 push r12                                                                                                                                                                                                          |     
    0x004542f9 push rbx                                                                                                                                                                                                          |     
    0x004542fa sub rsp, 0x18                                                                                                                                                                                                     |     
    0x004542fe mov rbx, rsi                                                                                                                                                                                                      |     rbx = rsi;
    0x00454301 mov r15, rdi                                                                                                                                                                                                      |     r15 = rdi;
    0x00454304 mov r14, qword [rdi + 0x28]                                                                                                                                                                                       |     r14 = *((rdi + 0x28));
    0x00454308 mov rdi, qword [rdi + 0x38]                                                                                                                                                                                       |     rdi = *((rdi + 0x38));
    0x0045430c test rdi, rdi                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                 |     if (rdi == 0) {
    0x0045430f jne 0x454325                                                                                                                                                                                                      |         
    0x00454311 mov rdi, qword [rip + 0x257b30]                                                                                                                                                                                   |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00454318 test rdi, rdi                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                 |         if (rdi != 0) {
    0x0045431b jne 0x454325                                                                                                                                                                                                      |             goto label_5;
                                                                                                                                                                                                                                 |         }
    0x0045431d call 0x460860                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00454322 mov rdi, rax                                                                                                                                                                                                      |         rdi = rax;
                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                 | label_5:
    0x00454325 test rbx, rbx                                                                                                                                                                                                     |     
    0x00454328 mov qword [rsp], rdi                                                                                                                                                                                              |     *(rsp) = rdi;
                                                                                                                                                                                                                                 |     if (rbx != 0) {
    0x0045432c je 0x4543b7                                                                                                                                                                                                       |         
    0x00454332 mov r13d, 0x20                                                                                                                                                                                                    |         r13d = 0x20;
    0x00454338 cmp rbx, 0x21                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                 |         if (rbx >= 0x21) {
    0x0045433c jb 0x454363                                                                                                                                                                                                       |             
    0x0045433e dec rbx                                                                                                                                                                                                           |             rbx--;
    0x00454341 or rbx, 1                                                                                                                                                                                                         |             rbx |= 1;
    0x00454345 bsr rax, rbx                                                                                                                                                                                                      |             __asm ("bsr rax, rbx");
    0x00454349 xor rax, 0x3f                                                                                                                                                                                                     |             rax ^= 0x3f;
    0x0045434d mov ecx, eax                                                                                                                                                                                                      |             ecx = eax;
    0x0045434f neg cl                                                                                                                                                                                                            |             cl = -cl;
    0x00454351 mov r13d, 1                                                                                                                                                                                                       |             r13d = 1;
    0x00454357 shl r13, cl                                                                                                                                                                                                       |             r13 <<= cl;
    0x0045435a test rax, rax                                                                                                                                                                                                     |             
                                                                                                                                                                                                                                 |             if (rax == 0) {
    0x0045435d je 0x4544e6                                                                                                                                                                                                       |                 goto label_6;
                                                                                                                                                                                                                                 |             }
                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                 | label_4:
    0x00454363 lea rsi, [r13*8]                                                                                                                                                                                                  |         rsi = r13*8;
    0x0045436b mov rax, qword [rdi]                                                                                                                                                                                              |         rax = *(rdi);
    0x0045436e mov rbx, rdi                                                                                                                                                                                                      |         rbx = rdi;
    0x00454371 call qword [rax + 0x10]                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x10)() ();
    0x00454374 mov r12, rax                                                                                                                                                                                                      |         r12 = rax;
    0x00454377 mov rax, qword [rbx]                                                                                                                                                                                              |         rax = *(rbx);
    0x0045437a mov rdi, rbx                                                                                                                                                                                                      |         rdi = rbx;
    0x0045437d mov rsi, r13                                                                                                                                                                                                      |         rsi = r13;
    0x00454380 call qword [rax + 0x10]                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x10)() ();
    0x00454383 mov rbx, rax                                                                                                                                                                                                      |         rbx = rax;
    0x00454386 mov rax, r13                                                                                                                                                                                                      |         rax = r13;
    0x00454389 shr rax, 4                                                                                                                                                                                                        |         rax >>= 4;
    0x0045438d dec rax                                                                                                                                                                                                           |         rax--;
    0x00454390 mov rcx, rax                                                                                                                                                                                                      |         rcx = rax;
    0x00454393 or rcx, 1                                                                                                                                                                                                         |         rcx |= 1;
    0x00454397 bsr rbp, rcx                                                                                                                                                                                                      |         __asm ("bsr rbp, rcx");
    0x0045439b xor ebp, 0x3f                                                                                                                                                                                                     |         ebp ^= 0x3f;
    0x0045439e cmp rax, 1                                                                                                                                                                                                        |         
    0x004543a2 adc ebp, 0                                                                                                                                                                                                        |         ebp += 0;
    0x004543a5 mov rdi, rbx                                                                                                                                                                                                      |         
    0x004543a8 mov esi, 0x80                                                                                                                                                                                                     |         
    0x004543ad mov rdx, r13                                                                                                                                                                                                      |         
    0x004543b0 call 0x4038e0                                                                                                                                                                                                     |         memset (rbx, 0x80, r13);
    0x004543b5 jmp 0x4543c1                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                 |     } else {
    0x004543b7 xor ebp, ebp                                                                                                                                                                                                      |         ebp = 0;
    0x004543b9 xor r13d, r13d                                                                                                                                                                                                    |         r13d = 0;
    0x004543bc xor ebx, ebx                                                                                                                                                                                                      |         ebx = 0;
    0x004543be xor r12d, r12d                                                                                                                                                                                                    |         r12d = 0;
                                                                                                                                                                                                                                 |     }
    0x004543c1 mov rax, qword [r15 + 0x18]                                                                                                                                                                                       |     rax = *((r15 + 0x18));
    0x004543c5 test rax, rax                                                                                                                                                                                                     |     
    0x004543c8 mov qword [rsp + 8], rbp                                                                                                                                                                                          |     *((rsp + 8)) = rbp;
                                                                                                                                                                                                                                 |     if (rax == 0) {
    0x004543cd je 0x4544a2                                                                                                                                                                                                       |         goto label_7;
                                                                                                                                                                                                                                 |     }
    0x004543d3 mov r9, r14                                                                                                                                                                                                       |     r9 = r14;
    0x004543d6 mov ecx, ebp                                                                                                                                                                                                      |     ecx = ebp;
    0x004543d8 shr r9, cl                                                                                                                                                                                                        |     r9 >>= cl;
    0x004543db shl r9, 4                                                                                                                                                                                                         |     r9 <<= 4;
    0x004543df lea rdx, [r13 - 1]                                                                                                                                                                                                |     rdx = r13 - 1;
    0x004543e3 and r14b, 0x7f                                                                                                                                                                                                    |     r14b &= 0x7f;
    0x004543e7 xor esi, esi                                                                                                                                                                                                      |     esi = 0;
    0x004543e9 xor ebp, ebp                                                                                                                                                                                                      |     ebp = 0;
    0x004543eb jmp 0x454406                                                                                                                                                                                                      |     goto label_8;
                                                                                                                                                                                                                                 | label_0:
    0x004543f0 mov rax, qword [r15 + 0x18]                                                                                                                                                                                       |     rax = *((r15 + 0x18));
    0x004543f4 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                       |     rsi = *((rsp + 0x10));
                                                                                                                                                                                                                                 |     do {
    0x004543f9 add rsi, 0x10                                                                                                                                                                                                     |         rsi += 0x10;
    0x004543fd cmp rsi, rax                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                 |         if (rsi >= rax) {
    0x00454400 jae 0x4544a4                                                                                                                                                                                                      |             goto label_9;
                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                 | label_8:
    0x00454406 mov r10, qword [r15 + 8]                                                                                                                                                                                          |         r10 = *((r15 + 8));
    0x0045440a movdqu xmm0, xmmword [r10 + rsi]                                                                                                                                                                                  |         __asm ("movdqu xmm0, xmmword [r10 + rsi]");
    0x00454410 pmovmskb ecx, xmm0                                                                                                                                                                                                |         __asm ("pmovmskb ecx, xmm0");
    0x00454414 cmp cx, 0xffff                                                                                                                                                                                                    |         
    0x00454418 je 0x4543f9                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                 |     } while (cx == 0xffff);
    0x0045441a add r10, rsi                                                                                                                                                                                                      |     r10 += rsi;
    0x0045441d mov qword [rsp + 0x10], rsi                                                                                                                                                                                       |     *((rsp + 0x10)) = rsi;
    0x00454422 lea r11, [rsi*8]                                                                                                                                                                                                  |     r11 = rsi*8;
    0x0045442a add r11, qword [r15]                                                                                                                                                                                              |     r11 += *(r15);
    0x0045442d not ecx                                                                                                                                                                                                           |     ecx = ~ecx;
    0x0045442f movzx eax, cx                                                                                                                                                                                                     |     eax = (int32_t) cx;
    0x00454432 jmp 0x454464                                                                                                                                                                                                      |     goto label_10;
                                                                                                                                                                                                                                 | label_2:
    0x00454440 movzx esi, r8w                                                                                                                                                                                                    |     esi = (int32_t) r8w;
    0x00454444 bsf esi, esi                                                                                                                                                                                                      |     __asm ("bsf esi, esi");
    0x00454447 add rdi, rsi                                                                                                                                                                                                      |     rdi += rsi;
                                                                                                                                                                                                                                 | label_1:
    0x0045444a mov rsi, qword [r11 + rcx*8]                                                                                                                                                                                      |     rsi = *((r11 + rcx*8));
    0x0045444e mov qword [r12 + rdi*8], rsi                                                                                                                                                                                      |     *((r12 + rdi*8)) = rsi;
    0x00454452 mov byte [rbx + rdi], r14b                                                                                                                                                                                        |     *((rbx + rdi)) = r14b;
    0x00454456 inc rbp                                                                                                                                                                                                           |     rbp++;
    0x00454459 mov esi, 0xfffffffe                                                                                                                                                                                               |     esi = 0xfffffffe;
    0x0045445e rol esi, cl                                                                                                                                                                                                       |     esi = rotate_left32 (esi, cl);
    0x00454460 and eax, esi                                                                                                                                                                                                      |     eax &= esi;
                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x00454462 je 0x4543f0                                                                                                                                                                                                       |         goto label_0;
                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                 | label_10:
    0x00454464 bsf ecx, eax                                                                                                                                                                                                      |     __asm ("bsf ecx, eax");
    0x00454467 mov byte [r10 + rcx], 0xc0                                                                                                                                                                                        |     *((r10 + rcx)) = 0xc0;
    0x0045446c dec qword [r15 + 0x10]                                                                                                                                                                                            |     *((r15 + 0x10))--;
    0x00454470 test r13, r13                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                 |     if (r13 == 0) {
    0x00454473 je 0x45444a                                                                                                                                                                                                       |         goto label_1;
                                                                                                                                                                                                                                 |     }
    0x00454475 mov rdi, r9                                                                                                                                                                                                       |     rdi = r9;
    0x00454478 xor esi, esi                                                                                                                                                                                                      |     esi = 0;
    0x0045447a nop word [rax + rax]                                                                                                                                                                                              |     
                                                                                                                                                                                                                                 | label_3:
    0x00454480 movdqu xmm0, xmmword [rbx + rdi]                                                                                                                                                                                  |     __asm ("movdqu xmm0, xmmword [rbx + rdi]");
    0x00454485 pmovmskb r8d, xmm0                                                                                                                                                                                                |     __asm ("pmovmskb r8d, xmm0");
    0x0045448a test r8w, r8w                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                 |     if (r8w != 0) {
    0x0045448e jne 0x454440                                                                                                                                                                                                      |         goto label_2;
                                                                                                                                                                                                                                 |     }
    0x00454490 add rdi, 0x10                                                                                                                                                                                                     |     rdi += 0x10;
    0x00454494 and rdi, rdx                                                                                                                                                                                                      |     rdi &= rdx;
    0x00454497 add rsi, 0x10                                                                                                                                                                                                     |     rsi += 0x10;
    0x0045449b cmp rsi, r13                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                 |     if (rsi < r13) {
    0x0045449e jb 0x454480                                                                                                                                                                                                       |         goto label_3;
                                                                                                                                                                                                                                 |     }
    0x004544a0 jmp 0x45444a                                                                                                                                                                                                      |     goto label_1;
                                                                                                                                                                                                                                 | label_7:
    0x004544a2 xor ebp, ebp                                                                                                                                                                                                      |     ebp = 0;
                                                                                                                                                                                                                                 | label_9:
    0x004544a4 mov rsi, qword [r15]                                                                                                                                                                                              |     rsi = *(r15);
    0x004544a7 mov rdi, qword [r15 + 0x38]                                                                                                                                                                                       |     rdi = *((r15 + 0x38));
    0x004544ab mov rax, qword [rdi]                                                                                                                                                                                              |     rax = *(rdi);
    0x004544ae call qword [rax + 0x18]                                                                                                                                                                                           |     uint64_t (*rax + 0x18)() ();
    0x004544b1 mov rsi, qword [r15 + 8]                                                                                                                                                                                          |     rsi = *((r15 + 8));
    0x004544b5 mov rdi, qword [r15 + 0x38]                                                                                                                                                                                       |     rdi = *((r15 + 0x38));
    0x004544b9 mov rax, qword [rdi]                                                                                                                                                                                              |     rax = *(rdi);
    0x004544bc call qword [rax + 0x18]                                                                                                                                                                                           |     uint64_t (*rax + 0x18)() ();
    0x004544bf mov qword [r15], r12                                                                                                                                                                                              |     *(r15) = r12;
    0x004544c2 mov qword [r15 + 8], rbx                                                                                                                                                                                          |     *((r15 + 8)) = rbx;
    0x004544c6 mov qword [r15 + 0x10], rbp                                                                                                                                                                                       |     *((r15 + 0x10)) = rbp;
    0x004544ca mov qword [r15 + 0x18], r13                                                                                                                                                                                       |     *((r15 + 0x18)) = r13;
    0x004544ce mov rax, qword [rsp + 8]                                                                                                                                                                                          |     rax = *((rsp + 8));
    0x004544d3 mov dword [r15 + 0x20], eax                                                                                                                                                                                       |     *((r15 + 0x20)) = eax;
    0x004544d7 add rsp, 0x18                                                                                                                                                                                                     |     
    0x004544db pop rbx                                                                                                                                                                                                           |     
    0x004544dc pop r12                                                                                                                                                                                                           |     
    0x004544de pop r13                                                                                                                                                                                                           |     
    0x004544e0 pop r14                                                                                                                                                                                                           |     
    0x004544e2 pop r15                                                                                                                                                                                                           |     
    0x004544e4 pop rbp                                                                                                                                                                                                           |     
    0x004544e5 ret                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                 | label_6:
    0x004544e6 xor r13d, r13d                                                                                                                                                                                                    |     r13d = 0;
    0x004544e9 jmp 0x454363                                                                                                                                                                                                      |     goto label_4;
                                                                                                                                                                                                                                 | }
