    ; assembly                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                 | /* bdlc_flathashmap.t/none @ 0x454440 */
                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                 |  
                                                                                                                                                                                                                                 | uint32_t rotate_left32 (uint32_t value, uint32_t count) {
                                                                                                                                                                                                                                 |     const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;
                                                                                                                                                                                                                                 |     count &= mask;
                                                                                                                                                                                                                                 |     return (value << count) | (value >> (-count & mask));
                                                                                                                                                                                                                                 | }
                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::bdlc::FlatHashTable_int__bsl::pair_int__int___BloombergLP::bdlc::FlatHashMap_EntryUtil_int__int__bsl::pair_int__int_____SeedIsHash_int___EqualAndState_int___.rehashRaw_unsigned_long_ ()        | uint64_t method_BloombergLP::bdlc::FlatHashTable_int_bsl::pair_int_int_BloombergLP::bdlc::FlatHashMap_EntryUtil_int_int_bsl::pair_int_int_SeedIsHash_int_EqualAndState_int_rehashRaw_unsigned_long_ (int64_t arg2, void ** s) {
                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                 |     rdi = s;
                                                                                                                                                                                                                                 |     /* BloombergLP::bdlc::FlatHashTable<int, bsl::pair<int, int>, BloombergLP::bdlc::FlatHashMap_EntryUtil<int, int, bsl::pair<int, int> >, SeedIsHash<int>, EqualAndState<int> >::rehashRaw(unsigned long) */
    0x00454440 push rbp                                                                                                                                                                                                          |     
    0x00454441 push r15                                                                                                                                                                                                          |     
    0x00454443 push r14                                                                                                                                                                                                          |     
    0x00454445 push r13                                                                                                                                                                                                          |     
    0x00454447 push r12                                                                                                                                                                                                          |     
    0x00454449 push rbx                                                                                                                                                                                                          |     
    0x0045444a sub rsp, 0x18                                                                                                                                                                                                     |     
    0x0045444e mov rbx, rsi                                                                                                                                                                                                      |     rbx = rsi;
    0x00454451 mov r15, rdi                                                                                                                                                                                                      |     r15 = rdi;
    0x00454454 mov r14, qword [rdi + 0x28]                                                                                                                                                                                       |     r14 = *((rdi + 0x28));
    0x00454458 mov rdi, qword [rdi + 0x38]                                                                                                                                                                                       |     rdi = *((rdi + 0x38));
    0x0045445c test rdi, rdi                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                 |     if (rdi == 0) {
    0x0045445f jne 0x454475                                                                                                                                                                                                      |         
    0x00454461 mov rdi, qword [rip + 0x2589e0]                                                                                                                                                                                   |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00454468 test rdi, rdi                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                 |         if (rdi != 0) {
    0x0045446b jne 0x454475                                                                                                                                                                                                      |             goto label_4;
                                                                                                                                                                                                                                 |         }
    0x0045446d call 0x460a70                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00454472 mov rdi, rax                                                                                                                                                                                                      |         rdi = rax;
                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                 | label_4:
    0x00454475 test rbx, rbx                                                                                                                                                                                                     |     
    0x00454478 mov qword [rsp], rdi                                                                                                                                                                                              |     *(rsp) = rdi;
                                                                                                                                                                                                                                 |     if (rbx != 0) {
    0x0045447c je 0x454507                                                                                                                                                                                                       |         
    0x00454482 mov r13d, 0x20                                                                                                                                                                                                    |         r13d = 0x20;
    0x00454488 cmp rbx, 0x21                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                 |         if (rbx >= 0x21) {
    0x0045448c jb 0x4544b3                                                                                                                                                                                                       |             
    0x0045448e dec rbx                                                                                                                                                                                                           |             rbx--;
    0x00454491 or rbx, 1                                                                                                                                                                                                         |             rbx |= 1;
    0x00454495 bsr rax, rbx                                                                                                                                                                                                      |             __asm ("bsr rax, rbx");
    0x00454499 xor rax, 0x3f                                                                                                                                                                                                     |             rax ^= 0x3f;
    0x0045449d mov ecx, eax                                                                                                                                                                                                      |             ecx = eax;
    0x0045449f neg cl                                                                                                                                                                                                            |             cl = -cl;
    0x004544a1 mov r13d, 1                                                                                                                                                                                                       |             r13d = 1;
    0x004544a7 shl r13, cl                                                                                                                                                                                                       |             r13 <<= cl;
    0x004544aa test rax, rax                                                                                                                                                                                                     |             
                                                                                                                                                                                                                                 |             if (rax == 0) {
    0x004544ad je 0x454650                                                                                                                                                                                                       |                 goto label_5;
                                                                                                                                                                                                                                 |             }
                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                 | label_3:
    0x004544b3 lea rsi, [r13*8]                                                                                                                                                                                                  |         rsi = r13*8;
    0x004544bb mov rax, qword [rdi]                                                                                                                                                                                              |         rax = *(rdi);
    0x004544be mov rbx, rdi                                                                                                                                                                                                      |         rbx = rdi;
    0x004544c1 call qword [rax + 0x10]                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x10)() ();
    0x004544c4 mov r12, rax                                                                                                                                                                                                      |         r12 = rax;
    0x004544c7 mov rax, qword [rbx]                                                                                                                                                                                              |         rax = *(rbx);
    0x004544ca mov rdi, rbx                                                                                                                                                                                                      |         rdi = rbx;
    0x004544cd mov rsi, r13                                                                                                                                                                                                      |         rsi = r13;
    0x004544d0 call qword [rax + 0x10]                                                                                                                                                                                           |         rax = uint64_t (*rax + 0x10)() ();
    0x004544d3 mov rbx, rax                                                                                                                                                                                                      |         rbx = rax;
    0x004544d6 mov rax, r13                                                                                                                                                                                                      |         rax = r13;
    0x004544d9 shr rax, 4                                                                                                                                                                                                        |         rax >>= 4;
    0x004544dd dec rax                                                                                                                                                                                                           |         rax--;
    0x004544e0 mov rcx, rax                                                                                                                                                                                                      |         rcx = rax;
    0x004544e3 or rcx, 1                                                                                                                                                                                                         |         rcx |= 1;
    0x004544e7 bsr rbp, rcx                                                                                                                                                                                                      |         __asm ("bsr rbp, rcx");
    0x004544eb xor ebp, 0x3f                                                                                                                                                                                                     |         ebp ^= 0x3f;
    0x004544ee cmp rax, 1                                                                                                                                                                                                        |         
    0x004544f2 adc ebp, 0                                                                                                                                                                                                        |         ebp += 0;
    0x004544f5 mov rdi, rbx                                                                                                                                                                                                      |         
    0x004544f8 mov esi, 0x80                                                                                                                                                                                                     |         
    0x004544fd mov rdx, r13                                                                                                                                                                                                      |         
    0x00454500 call 0x4038e0                                                                                                                                                                                                     |         memset (rbx, 0x80, r13);
    0x00454505 jmp 0x454511                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                 |     } else {
    0x00454507 xor ebp, ebp                                                                                                                                                                                                      |         ebp = 0;
    0x00454509 xor r13d, r13d                                                                                                                                                                                                    |         r13d = 0;
    0x0045450c xor ebx, ebx                                                                                                                                                                                                      |         ebx = 0;
    0x0045450e xor r12d, r12d                                                                                                                                                                                                    |         r12d = 0;
                                                                                                                                                                                                                                 |     }
    0x00454511 mov rax, qword [r15 + 0x18]                                                                                                                                                                                       |     rax = *((r15 + 0x18));
    0x00454515 test rax, rax                                                                                                                                                                                                     |     
    0x00454518 mov qword [rsp + 8], rbp                                                                                                                                                                                          |     *((rsp + 8)) = rbp;
                                                                                                                                                                                                                                 |     if (rax == 0) {
    0x0045451d je 0x45460c                                                                                                                                                                                                       |         goto label_6;
                                                                                                                                                                                                                                 |     }
    0x00454523 mov r9, r14                                                                                                                                                                                                       |     r9 = r14;
    0x00454526 mov ecx, ebp                                                                                                                                                                                                      |     ecx = ebp;
    0x00454528 shr r9, cl                                                                                                                                                                                                        |     r9 >>= cl;
    0x0045452b shl r9, 4                                                                                                                                                                                                         |     r9 <<= 4;
    0x0045452f lea rdx, [r13 - 1]                                                                                                                                                                                                |     rdx = r13 - 1;
    0x00454533 and r14b, 0x7f                                                                                                                                                                                                    |     r14b &= 0x7f;
    0x00454537 xor esi, esi                                                                                                                                                                                                      |     esi = 0;
    0x00454539 xor ebp, ebp                                                                                                                                                                                                      |     ebp = 0;
    0x0045453b jmp 0x454556                                                                                                                                                                                                      |     goto label_7;
                                                                                                                                                                                                                                 | label_0:
    0x00454540 mov rax, qword [r15 + 0x18]                                                                                                                                                                                       |     rax = *((r15 + 0x18));
    0x00454544 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                       |     rsi = *((rsp + 0x10));
                                                                                                                                                                                                                                 |     do {
    0x00454549 add rsi, 0x10                                                                                                                                                                                                     |         rsi += 0x10;
    0x0045454d cmp rsi, rax                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                 |         if (rsi >= rax) {
    0x00454550 jae 0x45460e                                                                                                                                                                                                      |             goto label_8;
                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                 | label_7:
    0x00454556 mov r10, qword [r15 + 8]                                                                                                                                                                                          |         r10 = *((r15 + 8));
    0x0045455a movdqu xmm0, xmmword [r10 + rsi]                                                                                                                                                                                  |         __asm ("movdqu xmm0, xmmword [r10 + rsi]");
    0x00454560 pmovmskb ecx, xmm0                                                                                                                                                                                                |         __asm ("pmovmskb ecx, xmm0");
    0x00454564 cmp cx, 0xffff                                                                                                                                                                                                    |         
    0x00454568 je 0x454549                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                 |     } while (cx == 0xffff);
    0x0045456a add r10, rsi                                                                                                                                                                                                      |     r10 += rsi;
    0x0045456d mov qword [rsp + 0x10], rsi                                                                                                                                                                                       |     *((rsp + 0x10)) = rsi;
    0x00454572 lea r11, [rsi*8]                                                                                                                                                                                                  |     r11 = rsi*8;
    0x0045457a add r11, qword [r15]                                                                                                                                                                                              |     r11 += *(r15);
    0x0045457d not ecx                                                                                                                                                                                                           |     ecx = ~ecx;
    0x0045457f movzx eax, cx                                                                                                                                                                                                     |     eax = (int32_t) cx;
    0x00454582 jmp 0x4545ac                                                                                                                                                                                                      |     goto label_9;
                                                                                                                                                                                                                                 | label_1:
    0x00454590 xor edi, edi                                                                                                                                                                                                      |     edi = 0;
                                                                                                                                                                                                                                 | label_2:
    0x00454592 mov rsi, qword [r11 + rcx*8]                                                                                                                                                                                      |     rsi = *((r11 + rcx*8));
    0x00454596 mov qword [r12 + rdi*8], rsi                                                                                                                                                                                      |     *((r12 + rdi*8)) = rsi;
    0x0045459a mov byte [rbx + rdi], r14b                                                                                                                                                                                        |     *((rbx + rdi)) = r14b;
    0x0045459e inc rbp                                                                                                                                                                                                           |     rbp++;
    0x004545a1 mov esi, 0xfffffffe                                                                                                                                                                                               |     esi = 0xfffffffe;
    0x004545a6 rol esi, cl                                                                                                                                                                                                       |     esi = rotate_left32 (esi, cl);
    0x004545a8 and eax, esi                                                                                                                                                                                                      |     eax &= esi;
                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x004545aa je 0x454540                                                                                                                                                                                                       |         goto label_0;
                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                 | label_9:
    0x004545ac bsf ecx, eax                                                                                                                                                                                                      |     __asm ("bsf ecx, eax");
    0x004545af mov byte [r10 + rcx], 0xc0                                                                                                                                                                                        |     *((r10 + rcx)) = 0xc0;
    0x004545b4 dec qword [r15 + 0x10]                                                                                                                                                                                            |     *((r15 + 0x10))--;
    0x004545b8 test r13, r13                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                 |     if (r13 == 0) {
    0x004545bb je 0x454590                                                                                                                                                                                                       |         goto label_1;
                                                                                                                                                                                                                                 |     }
    0x004545bd mov rdi, r9                                                                                                                                                                                                       |     rdi = r9;
    0x004545c0 xor esi, esi                                                                                                                                                                                                      |     esi = 0;
    0x004545c2 nop word cs:[rax + rax]                                                                                                                                                                                           |     
    0x004545cc nop dword [rax]                                                                                                                                                                                                   |     
                                                                                                                                                                                                                                 |     do {
    0x004545d0 movdqu xmm0, xmmword [rbx + rdi]                                                                                                                                                                                  |         __asm ("movdqu xmm0, xmmword [rbx + rdi]");
    0x004545d5 pmovmskb r8d, xmm0                                                                                                                                                                                                |         __asm ("pmovmskb r8d, xmm0");
    0x004545da test r8w, r8w                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                 |         if (r8w != 0) {
    0x004545de jne 0x454600                                                                                                                                                                                                      |             goto label_10;
                                                                                                                                                                                                                                 |         }
    0x004545e0 add rdi, 0x10                                                                                                                                                                                                     |         rdi += 0x10;
    0x004545e4 and rdi, rdx                                                                                                                                                                                                      |         rdi &= rdx;
    0x004545e7 add rsi, 0x10                                                                                                                                                                                                     |         rsi += 0x10;
    0x004545eb cmp rsi, r13                                                                                                                                                                                                      |         
    0x004545ee jb 0x4545d0                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                 |     } while (rsi < r13);
    0x004545f0 mov rdi, r13                                                                                                                                                                                                      |     rdi = r13;
    0x004545f3 jmp 0x454592                                                                                                                                                                                                      |     goto label_2;
                                                                                                                                                                                                                                 | label_10:
    0x00454600 movzx esi, r8w                                                                                                                                                                                                    |     esi = (int32_t) r8w;
    0x00454604 bsf esi, esi                                                                                                                                                                                                      |     __asm ("bsf esi, esi");
    0x00454607 add rdi, rsi                                                                                                                                                                                                      |     rdi += rsi;
    0x0045460a jmp 0x454592                                                                                                                                                                                                      |     goto label_2;
                                                                                                                                                                                                                                 | label_6:
    0x0045460c xor ebp, ebp                                                                                                                                                                                                      |     ebp = 0;
                                                                                                                                                                                                                                 | label_8:
    0x0045460e mov rsi, qword [r15]                                                                                                                                                                                              |     rsi = *(r15);
    0x00454611 mov rdi, qword [r15 + 0x38]                                                                                                                                                                                       |     rdi = *((r15 + 0x38));
    0x00454615 mov rax, qword [rdi]                                                                                                                                                                                              |     rax = *(rdi);
    0x00454618 call qword [rax + 0x18]                                                                                                                                                                                           |     uint64_t (*rax + 0x18)() ();
    0x0045461b mov rsi, qword [r15 + 8]                                                                                                                                                                                          |     rsi = *((r15 + 8));
    0x0045461f mov rdi, qword [r15 + 0x38]                                                                                                                                                                                       |     rdi = *((r15 + 0x38));
    0x00454623 mov rax, qword [rdi]                                                                                                                                                                                              |     rax = *(rdi);
    0x00454626 call qword [rax + 0x18]                                                                                                                                                                                           |     uint64_t (*rax + 0x18)() ();
    0x00454629 mov qword [r15], r12                                                                                                                                                                                              |     *(r15) = r12;
    0x0045462c mov qword [r15 + 8], rbx                                                                                                                                                                                          |     *((r15 + 8)) = rbx;
    0x00454630 mov qword [r15 + 0x10], rbp                                                                                                                                                                                       |     *((r15 + 0x10)) = rbp;
    0x00454634 mov qword [r15 + 0x18], r13                                                                                                                                                                                       |     *((r15 + 0x18)) = r13;
    0x00454638 mov rax, qword [rsp + 8]                                                                                                                                                                                          |     rax = *((rsp + 8));
    0x0045463d mov dword [r15 + 0x20], eax                                                                                                                                                                                       |     *((r15 + 0x20)) = eax;
    0x00454641 add rsp, 0x18                                                                                                                                                                                                     |     
    0x00454645 pop rbx                                                                                                                                                                                                           |     
    0x00454646 pop r12                                                                                                                                                                                                           |     
    0x00454648 pop r13                                                                                                                                                                                                           |     
    0x0045464a pop r14                                                                                                                                                                                                           |     
    0x0045464c pop r15                                                                                                                                                                                                           |     
    0x0045464e pop rbp                                                                                                                                                                                                           |     
    0x0045464f ret                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                 | label_5:
    0x00454650 xor r13d, r13d                                                                                                                                                                                                    |     r13d = 0;
    0x00454653 jmp 0x4544b3                                                                                                                                                                                                      |     goto label_3;
                                                                                                                                                                                                                                 | }
