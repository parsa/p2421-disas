00000000004241b0 <std::__1::basic_ostream<char, std::__1::char_traits<char> >& BloombergLP::balx   |	0000000000424220 <std::__1::basic_ostream<char, std::__1::char_traits<char> >& BloombergLP::balx
0000000000000000: 02	pushq	%r15									0000000000000000: 02	pushq	%r15
0000000000000002: 02	pushq	%r14									0000000000000002: 02	pushq	%r14
0000000000000004: 01	pushq	%rbx								   |	0000000000000004: 02	pushq	%r12
0000000000000005: 04	subq	$48, %rsp							   |	0000000000000006: 01	pushq	%rbx
0000000000000009: 03	movq	%rdi, %rbx							   |	0000000000000007: 04	subq	$56, %rsp
000000000000000c: 06	testl	$1048576, %edx							   |	000000000000000b: 03	movq	%rdi, %rbx
0000000000000012: 02	jne	0x4241d3 <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	000000000000000e: 06	testl	$1048576, %edx
0000000000000014: 03	andl	$7, %edx							   |	0000000000000014: 02	jne	0x424245 <std::__1::basic_ostream<char, std::__1::char_traits<ch
0000000000000017: 03	cmpl	$4, %edx							   |	0000000000000016: 03	andl	$7, %edx
000000000000001a: 02	ja	0x4241d3 <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	0000000000000019: 03	cmpl	$4, %edx
000000000000001c: 07	jmpq	*4798488(,%rdx,8)						   |	000000000000001c: 02	ja	0x424245 <std::__1::basic_ostream<char, std::__1::char_traits<ch
0000000000000023: 03	movq	(%rbx), %rax							   |	000000000000001e: 07	jmpq	*4800184(,%rdx,8)
0000000000000026: 04	movq	-24(%rax), %rax							   |	0000000000000025: 03	movq	(%rbx), %rax
000000000000002a: 04	leaq	(%rbx,%rax), %rdi						   |	0000000000000028: 04	movq	-24(%rax), %rax
000000000000002e: 04	movl	32(%rbx,%rax), %esi						   |	000000000000002c: 04	leaq	(%rbx,%rax), %rdi
0000000000000032: 03	orl	$4, %esi							   |	0000000000000030: 04	movl	32(%rbx,%rax), %esi
0000000000000035: 05	callq	0x403c40 <_ZNSt3__18ios_base5clearEj@plt>			   |	0000000000000034: 03	orl	$4, %esi
000000000000003a: 03	movq	%rbx, %rax							   |	0000000000000037: 05	callq	0x403c40 <_ZNSt3__18ios_base5clearEj@plt>
000000000000003d: 04	addq	$48, %rsp							   |	000000000000003c: 03	movq	%rbx, %rax
0000000000000041: 01	popq	%rbx								   |	000000000000003f: 04	addq	$56, %rsp
0000000000000042: 02	popq	%r14								   |	0000000000000043: 01	popq	%rbx
0000000000000044: 02	popq	%r15								   |	0000000000000044: 02	popq	%r12
0000000000000046: 01	retq									   |	0000000000000046: 02	popq	%r14
0000000000000047: 03	movq	%rcx, %r15							   |	0000000000000048: 02	popq	%r15
000000000000004a: 03	movq	%rsi, %r14							   |	000000000000004a: 01	retq	
000000000000004d: 08	movl	$3, 8(%rsp)							   |	000000000000004b: 03	movq	%rcx, %r15
0000000000000055: 03	testq	%rcx, %rcx							   |	000000000000004e: 03	movq	%rsi, %r14
0000000000000058: 02	je	0x42422f <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	0000000000000051: 08	movl	$3, 8(%rsp)
000000000000005a: 07	movl	160(%r15), %esi							   |	0000000000000059: 03	testq	%rcx, %rcx
0000000000000061: 05	leaq	8(%rsp), %rdi							   |	000000000000005c: 02	je	0x42429c <std::__1::basic_ostream<char, std::__1::char_traits<ch
0000000000000066: 05	callq	0x432a20 <BloombergLP::bdlt::Iso8601UtilConfiguration::setFracti   |	000000000000005e: 07	movl	160(%r15), %esi
000000000000006b: 08	movzbl	195(%r15), %esi							   |	0000000000000065: 05	leaq	8(%rsp), %rdi
0000000000000073: 05	leaq	8(%rsp), %rdi							   |	000000000000006a: 05	callq	0x432e90 <BloombergLP::bdlt::Iso8601UtilConfiguration::setFracti
0000000000000078: 05	callq	0x432a40 <BloombergLP::bdlt::Iso8601UtilConfiguration::setUseZAb   |	000000000000006f: 08	cmpb	$0, 195(%r15)
000000000000007d: 02	jmp	0x42424a <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	0000000000000077: 03	setne	%al
000000000000007f: 05	leaq	8(%rsp), %rdi							   |	000000000000007a: 02	jmp	0x4242ad <std::__1::basic_ostream<char, std::__1::char_traits<ch
0000000000000084: 05	movl	$6, %esi							   |	000000000000007c: 05	leaq	8(%rsp), %rdi
0000000000000089: 05	callq	0x432a20 <BloombergLP::bdlt::Iso8601UtilConfiguration::setFracti   |	0000000000000081: 05	movl	$6, %esi
000000000000008e: 05	leaq	8(%rsp), %rdi							   |	0000000000000086: 05	callq	0x432e90 <BloombergLP::bdlt::Iso8601UtilConfiguration::setFracti
0000000000000093: 02	xorl	%esi, %esi							   |	000000000000008b: 02	xorl	%eax, %eax
0000000000000095: 05	callq	0x432a40 <BloombergLP::bdlt::Iso8601UtilConfiguration::setUseZAb   |	000000000000008d: 03	movzbl	%al, %esi
000000000000009a: 05	leaq	16(%rsp), %rdi							   |	0000000000000090: 05	leaq	8(%rsp), %r15
000000000000009f: 05	leaq	8(%rsp), %rcx							   |	0000000000000095: 03	movq	%r15, %rdi
00000000000000a4: 05	movl	$26, %esi							   |	0000000000000098: 05	callq	0x432eb0 <BloombergLP::bdlt::Iso8601UtilConfiguration::setUseZAb
00000000000000a9: 03	movq	%r14, %rdx							   |	000000000000009d: 05	leaq	16(%rsp), %r12
00000000000000ac: 05	callq	0x42fe60 <BloombergLP::bdlt::Iso8601Util::generate(char*, int, B   |	00000000000000a2: 03	movq	%r12, %rdi
00000000000000b1: 03	movslq	%eax, %rdx							   |	00000000000000a5: 05	movl	$26, %esi
00000000000000b4: 05	leaq	16(%rsp), %rsi							   |	00000000000000aa: 03	movq	%r14, %rdx
00000000000000b9: 03	movq	%rbx, %rdi							   |	00000000000000ad: 03	movq	%r15, %rcx
00000000000000bc: 05	callq	0x403cb0 <_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeE   |	00000000000000b0: 05	callq	0x4300f0 <BloombergLP::bdlt::Iso8601Util::generate(char*, int, B
00000000000000c1: 03	movq	%rax, %rbx							   |	00000000000000b5: 03	movslq	%eax, %rdx
00000000000000c4: 05	jmp	0x4241ea <std::__1::basic_ostream<char, std::__1::char_traits<ch   |	00000000000000b8: 03	movq	%rbx, %rdi
00000000000000c9: 03	movq	%rax, %rdi							   |	00000000000000bb: 03	movq	%r12, %rsi
00000000000000cc: 05	callq	0x404110 <_Unwind_Resume@plt>					   |	00000000000000be: 05	callq	0x403cb0 <_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeE
00000000000000d1: 10	nopw	%cs:(%rax,%rax)							   |	00000000000000c3: 03	movq	%rax, %rbx
00000000000000db: 05	nopl	(%rax,%rax)							   |	00000000000000c6: 05	jmp	0x42425c <std::__1::basic_ostream<char, std::__1::char_traits<ch
												   >	00000000000000cb: 05	nopl	(%rax,%rax)
