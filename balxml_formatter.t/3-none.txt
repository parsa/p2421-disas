    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balxml_formatter.t/none @ 0x4243c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.std::__1::basic_ostream_char__std::__1::char_traits_char____BloombergLP::balxml::TypesPrintUtil::print_BloombergLP::bdlt.Date__std::__1::basic_ostream_char__std::__1::char_traits_char_____BloombergLP::bdlt::Date_const__int__BloombergLP::balxml: ()       | int64_t method_std::_1::basic_ostream_char_std::_1::char_traits_char_BloombergLP::balxml::TypesPrintUtil::print_BloombergLP::bdlt_Date_std::_1::basic_ostream_char_std::_1::char_traits_char_BloombergLP::bdlt::Date_const_int_BloombergLP::balxml_ (int64_t arg4, uint32_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                                                 |     int64_t var_dh;
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* std::__1::basic_ostream<char, std::__1::char_traits<char> >& BloombergLP::balxml::TypesPrintUtil::print<BloombergLP::bdlt::Date>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, BloombergLP::bdlt::Date const&, int, BloombergLP::balxml::EncoderOptions const*) */
    0x004243c0 push r15                                                                                                                                                                                                                                                          |     
    0x004243c2 push r14                                                                                                                                                                                                                                                          |     
    0x004243c4 push r12                                                                                                                                                                                                                                                          |     
    0x004243c6 push rbx                                                                                                                                                                                                                                                          |     
    0x004243c7 sub rsp, 0x18                                                                                                                                                                                                                                                     |     
    0x004243cb mov rbx, rdi                                                                                                                                                                                                                                                      |     rbx = rdi;
    0x004243ce test edx, 0x100000                                                                                                                                                                                                                                                |     
                                                                                                                                                                                                                                                                                 |     if ((edx & 0x100000) == 0) {
    0x004243d4 jne 0x4243e5                                                                                                                                                                                                                                                      |         
    0x004243d6 and edx, 7                                                                                                                                                                                                                                                        |         edx &= 7;
    0x004243d9 cmp edx, 4                                                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                                                 |         if (edx > 4) {
    0x004243dc ja 0x4243e5                                                                                                                                                                                                                                                       |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                                                 |         /* switch table (5 cases) at 0x493f08 */
    0x004243de jmp qword [rdx*8 + 0x493f08]                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x004243e5 mov rax, qword [rbx]                                                                                                                                                                                                                                              |     rax = *(rbx);
    0x004243e8 mov rax, qword [rax - 0x18]                                                                                                                                                                                                                                       |     rax = *((rax - 0x18));
    0x004243ec lea rdi, [rbx + rax]                                                                                                                                                                                                                                              |     rdi = rbx + rax;
    0x004243f0 mov esi, dword [rbx + rax + 0x20]                                                                                                                                                                                                                                 |     esi = *((rbx + rax + 0x20));
    0x004243f4 or esi, 4                                                                                                                                                                                                                                                         |     esi |= 4;
    0x004243f7 call 0x403c40                                                                                                                                                                                                                                                     |     std::_1::ios_base::clear(unsignedint) ();
                                                                                                                                                                                                                                                                                 |     do {
    0x004243fc mov rax, rbx                                                                                                                                                                                                                                                      |         rax = rbx;
    0x004243ff add rsp, 0x18                                                                                                                                                                                                                                                     |         
    0x00424403 pop rbx                                                                                                                                                                                                                                                           |         
    0x00424404 pop r12                                                                                                                                                                                                                                                           |         
    0x00424406 pop r14                                                                                                                                                                                                                                                           |         
    0x00424408 pop r15                                                                                                                                                                                                                                                           |         
    0x0042440a ret                                                                                                                                                                                                                                                               |         return rax;
    0x0042440b mov r15, rcx                                                                                                                                                                                                                                                      |         r15 = rcx;
    0x0042440e mov r14, rsi                                                                                                                                                                                                                                                      |         r14 = rsi;
    0x00424411 mov dword [rsp + 8], 3                                                                                                                                                                                                                                            |         *((rsp + 8)) = 3;
    0x00424419 test rcx, rcx                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rcx != 0) {
    0x0042441c je 0x42443c                                                                                                                                                                                                                                                       |             
    0x0042441e mov esi, dword [r15 + 0xa0]                                                                                                                                                                                                                                       |             
    0x00424425 lea rdi, [rsp + 8]                                                                                                                                                                                                                                                |             
    0x0042442a call 0x432e90                                                                                                                                                                                                                                                     |             BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, *((r15 + 0xa0)));
    0x0042442f cmp byte [r15 + 0xc3], 0                                                                                                                                                                                                                                          |             
    0x00424437 setne al                                                                                                                                                                                                                                                          |             al = (*((r15 + 0xc3)) != 0) ? 1 : 0;
    0x0042443a jmp 0x42444d                                                                                                                                                                                                                                                      |             
                                                                                                                                                                                                                                                                                 |         } else {
    0x0042443c lea rdi, [rsp + 8]                                                                                                                                                                                                                                                |             
    0x00424441 mov esi, 6                                                                                                                                                                                                                                                        |             
    0x00424446 call 0x432e90                                                                                                                                                                                                                                                     |             eax = BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (rsp + 8, 6);
    0x0042444b xor eax, eax                                                                                                                                                                                                                                                      |             eax = 0;
                                                                                                                                                                                                                                                                                 |         }
    0x0042444d movzx esi, al                                                                                                                                                                                                                                                     |         esi = (int32_t) al;
    0x00424450 lea r15, [rsp + 8]                                                                                                                                                                                                                                                |         r15 = rsp + 8;
    0x00424455 mov rdi, r15                                                                                                                                                                                                                                                      |         
    0x00424458 call 0x432eb0                                                                                                                                                                                                                                                     |         BloombergLP::bdlt::Iso8601UtilConfiguration::setUseZAbbreviationForUtc(bool) (r15, rsi);
    0x0042445d lea r12, [rsp + 0xd]                                                                                                                                                                                                                                              |         r12 = rsp + 0xd;
    0x00424462 mov rdi, r12                                                                                                                                                                                                                                                      |         
    0x00424465 mov esi, 0xa                                                                                                                                                                                                                                                      |         
    0x0042446a mov rdx, r14                                                                                                                                                                                                                                                      |         
    0x0042446d mov rcx, r15                                                                                                                                                                                                                                                      |         rcx = r15;
    0x00424470 call 0x42f5c0                                                                                                                                                                                                                                                     |         eax = BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Dateconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (r12, 0xa, r14);
    0x00424475 movsxd rdx, eax                                                                                                                                                                                                                                                   |         rdx = (int64_t) eax;
    0x00424478 mov rdi, rbx                                                                                                                                                                                                                                                      |         rdi = rbx;
    0x0042447b mov rsi, r12                                                                                                                                                                                                                                                      |         rsi = r12;
    0x0042447e call 0x403cb0                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::write(char const*,long) ();
    0x00424483 mov rbx, rax                                                                                                                                                                                                                                                      |         rbx = rax;
    0x00424486 jmp 0x4243fc                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } while (1);
                                                                                                                                                                                                                                                                                 | }
