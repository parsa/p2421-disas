    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* ball_recordjsonformatter.t/assume @ 0x41a000 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::ball._anonymous_namespace_::FixedFieldFormatter::parse_BloombergLP::bdld::DatumMapRef_ ()        | uint64_t method_BloombergLP::ball_anonymous_namespace_::FixedFieldFormatter::parse_BloombergLP::bdld::DatumMapRef_ (int64_t arg_40h, int64_t arg_48h, int64_t arg1) {
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::ball::(anonymous namespace)::FixedFieldFormatter::parse(BloombergLP::bdld::DatumMapRef) */
    0x0041a000 push rbp                                                                                                          |     
    0x0041a001 push r15                                                                                                          |     
    0x0041a003 push r14                                                                                                          |     
    0x0041a005 push r13                                                                                                          |     
    0x0041a007 push r12                                                                                                          |     
    0x0041a009 push rbx                                                                                                          |     
    0x0041a00a push rax                                                                                                          |     
    0x0041a00b mov r12, qword [rsp + 0x48]                                                                                       |     r12 = *((rsp + 0x48));
    0x0041a010 test r12, r12                                                                                                     |     
                                                                                                                                 |     if (r12 == 0) {
    0x0041a013 je 0x41a0be                                                                                                       |         goto label_0;
                                                                                                                                 |     }
    0x0041a019 lea rax, [rsp + 0x40]                                                                                             |     rax = rsp + 0x40;
    0x0041a01e mov rbx, qword [rax]                                                                                              |     rbx = *(rax);
    0x0041a021 movzx ecx, word [rbx + 0x1e]                                                                                      |     ecx = *((rbx + 0x1e));
    0x0041a025 mov eax, 0xffffffff                                                                                               |     eax = 0xffffffff;
    0x0041a02a mov r13d, 0x4030                                                                                                  |     r13d = 0x4030;
    0x0041a030 bt r13, rcx                                                                                                       |     
                                                                                                                                 |     if (((r13 >> rcx) & 1) >= 0) {
    0x0041a034 jae 0x41a0c0                                                                                                      |         goto label_1;
                                                                                                                                 |     }
    0x0041a03a mov r15, rdi                                                                                                      |     r15 = rdi;
    0x0041a03d lea rax, [rdi + 8]                                                                                                |     rax = rdi + 8;
    0x0041a041 mov qword [rsp], rax                                                                                              |     *(rsp) = rax;
    0x0041a045 mov eax, 1                                                                                                        |     eax = 1;
    0x0041a04a nop word [rax + rax]                                                                                              |     
                                                                                                                                 |     do {
    0x0041a050 mov rbp, rax                                                                                                      |         
    0x0041a053 cmp qword [rbx + 8], 4                                                                                            |         
                                                                                                                                 |         if (*((rbx + 8)) == 4) {
    0x0041a058 jne 0x41a0a0                                                                                                      |             
    0x0041a05a mov rax, qword [rbx]                                                                                              |             rax = *(rbx);
    0x0041a05d cmp dword [rax], 0x656d616e                                                                                       |             
                                                                                                                                 |             if (*(rax) != 0x656d616e) {
    0x0041a063 jne 0x41a0a0                                                                                                      |                 goto label_2;
                                                                                                                                 |             }
    0x0041a065 movsx eax, cx                                                                                                     |             eax = (int32_t) cx;
    0x0041a068 cmp eax, 0xe                                                                                                      |             
                                                                                                                                 |             if (eax != 0xe) {
    0x0041a06b je 0x41a072                                                                                                       |                 
    0x0041a06d cmp eax, 5                                                                                                        |                 
                                                                                                                                 |                 if (eax != 5) {
    0x0041a070 jne 0x41a07c                                                                                                      |                     goto label_3;
                                                                                                                                 |                 }
                                                                                                                                 |             }
    0x0041a072 mov rsi, qword [rbx + 0x10]                                                                                       |             rsi = *((rbx + 0x10));
    0x0041a076 movsxd rdx, dword [rbx + 0x18]                                                                                    |             rdx = *((rbx + 0x18));
    0x0041a07a jmp 0x41a085                                                                                                      |             goto label_4;
                                                                                                                                 | label_3:
    0x0041a07c lea rsi, [rbx + 0x11]                                                                                             |             
    0x0041a080 movsx rdx, byte [rbx + 0x10]                                                                                      |             rdx = *((rbx + 0x10));
                                                                                                                                 | label_4:
    0x0041a085 mov r14, qword [r15 + 0x20]                                                                                       |             r14 = *((r15 + 0x20));
    0x0041a089 mov qword [r15 + 0x20], 0                                                                                         |             *((r15 + 0x20)) = 0;
    0x0041a091 mov ecx, 0x49a434                                                                                                 |             
    0x0041a096 mov rdi, qword [rsp]                                                                                              |             
    0x0041a09a call 0x4753c0                                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (*(rsp), rbx + 0x11, rdx, "string<>::operator=(basic_string_view&): string too long");
    0x0041a09f nop                                                                                                               |             
                                                                                                                                 |         }
                                                                                                                                 | label_2:
    0x0041a0a0 cmp r12, rbp                                                                                                      |         
                                                                                                                                 |         if (r12 == rbp) {
    0x0041a0a3 je 0x41a0b7                                                                                                       |             goto label_5;
                                                                                                                                 |         }
    0x0041a0a5 movzx ecx, word [rbx + 0x3e]                                                                                      |         ecx = *((rbx + 0x3e));
    0x0041a0a9 add rbx, 0x20                                                                                                     |         rbx += 0x20;
    0x0041a0ad lea rax, [rbp + 1]                                                                                                |         rax = rbp + 1;
    0x0041a0b1 bt r13, rcx                                                                                                       |         
    0x0041a0b5 jb 0x41a050                                                                                                       |         
                                                                                                                                 |     } while (((r13 >> rcx) & 1) < 0);
                                                                                                                                 | label_5:
    0x0041a0b7 cmp rbp, r12                                                                                                      |     
    0x0041a0ba sbb eax, eax                                                                                                      |     eax -= eax;
    0x0041a0bc jmp 0x41a0c0                                                                                                      |     goto label_1;
                                                                                                                                 | label_0:
    0x0041a0be xor eax, eax                                                                                                      |     eax = 0;
                                                                                                                                 | label_1:
    0x0041a0c0 add rsp, 8                                                                                                        |     
    0x0041a0c4 pop rbx                                                                                                           |     
    0x0041a0c5 pop r12                                                                                                           |     
    0x0041a0c7 pop r13                                                                                                           |     
    0x0041a0c9 pop r14                                                                                                           |     
    0x0041a0cb pop r15                                                                                                           |     
    0x0041a0cd pop rbp                                                                                                           |     
    0x0041a0ce ret                                                                                                               |     return rax;
                                                                                                                                 | }
