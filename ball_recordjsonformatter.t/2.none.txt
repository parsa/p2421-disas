    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* ball_recordjsonformatter.t/none @ 0x41c3e0 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::ball._anonymous_namespace_::AttributeFormatter::parse_BloombergLP::bdld::DatumMapRef_ ()         | uint64_t method_BloombergLP::ball_anonymous_namespace_::AttributeFormatter::parse_BloombergLP::bdld::DatumMapRef_ (int64_t arg_40h, int64_t arg_48h, int64_t arg1) {
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::ball::(anonymous namespace)::AttributeFormatter::parse(BloombergLP::bdld::DatumMapRef) */
    0x0041c3e0 push rbp                                                                                                          |     
    0x0041c3e1 push r15                                                                                                          |     
    0x0041c3e3 push r14                                                                                                          |     
    0x0041c3e5 push r13                                                                                                          |     
    0x0041c3e7 push r12                                                                                                          |     
    0x0041c3e9 push rbx                                                                                                          |     
    0x0041c3ea push rax                                                                                                          |     
    0x0041c3eb mov r12, qword [rsp + 0x48]                                                                                       |     r12 = *((rsp + 0x48));
    0x0041c3f0 test r12, r12                                                                                                     |     
                                                                                                                                 |     if (r12 == 0) {
    0x0041c3f3 je 0x41c4ae                                                                                                       |         goto label_0;
                                                                                                                                 |     }
    0x0041c3f9 lea rax, [rsp + 0x40]                                                                                             |     rax = rsp + 0x40;
    0x0041c3fe mov rbx, qword [rax]                                                                                              |     rbx = *(rax);
    0x0041c401 movzx ecx, word [rbx + 0x1e]                                                                                      |     ecx = *((rbx + 0x1e));
    0x0041c405 mov eax, 0xffffffff                                                                                               |     eax = 0xffffffff;
    0x0041c40a mov r13d, 0x4030                                                                                                  |     r13d = 0x4030;
    0x0041c410 bt r13, rcx                                                                                                       |     
                                                                                                                                 |     if (((r13 >> rcx) & 1) >= 0) {
    0x0041c414 jae 0x41c4b0                                                                                                      |         goto label_1;
                                                                                                                                 |     }
    0x0041c41a mov r15, rdi                                                                                                      |     r15 = rdi;
    0x0041c41d lea rax, [rdi + 8]                                                                                                |     rax = rdi + 8;
    0x0041c421 mov qword [rsp], rax                                                                                              |     *(rsp) = rax;
    0x0041c425 mov eax, 1                                                                                                        |     eax = 1;
    0x0041c42a nop word [rax + rax]                                                                                              |     
                                                                                                                                 |     do {
    0x0041c430 mov rbp, rax                                                                                                      |         
    0x0041c433 cmp qword [rbx + 8], 4                                                                                            |         
                                                                                                                                 |         if (*((rbx + 8)) == 4) {
    0x0041c438 jne 0x41c490                                                                                                      |             
    0x0041c43a mov rax, qword [rbx]                                                                                              |             rax = *(rbx);
    0x0041c43d cmp dword [rax], 0x656d616e                                                                                       |             
                                                                                                                                 |             if (*(rax) != 0x656d616e) {
    0x0041c443 jne 0x41c490                                                                                                      |                 goto label_2;
                                                                                                                                 |             }
    0x0041c445 movsx eax, cx                                                                                                     |             eax = (int32_t) cx;
    0x0041c448 cmp eax, 0xe                                                                                                      |             
                                                                                                                                 |             if (eax != 0xe) {
    0x0041c44b je 0x41c46c                                                                                                       |                 
    0x0041c44d cmp eax, 5                                                                                                        |                 
                                                                                                                                 |                 if (eax != 5) {
    0x0041c450 je 0x41c46c                                                                                                       |                     
    0x0041c452 mov esi, 0                                                                                                        |                     esi = 0;
    0x0041c457 mov edx, 0                                                                                                        |                     edx = 0;
    0x0041c45c cmp eax, 4                                                                                                        |                     
                                                                                                                                 |                     if (eax != 4) {
    0x0041c45f jne 0x41c474                                                                                                      |                         goto label_3;
                                                                                                                                 |                     }
    0x0041c461 lea rsi, [rbx + 0x11]                                                                                             |                     rsi = rbx + 0x11;
    0x0041c465 movsx rdx, byte [rbx + 0x10]                                                                                      |                     rdx = *((rbx + 0x10));
    0x0041c46a jmp 0x41c474                                                                                                      |                     
                                                                                                                                 |                 }
                                                                                                                                 |             } else {
    0x0041c46c mov rsi, qword [rbx + 0x10]                                                                                       |                 
    0x0041c470 movsxd rdx, dword [rbx + 0x18]                                                                                    |                 rdx = *((rbx + 0x18));
                                                                                                                                 |             }
                                                                                                                                 | label_3:
    0x0041c474 mov r14, qword [r15 + 0x20]                                                                                       |             r14 = *((r15 + 0x20));
    0x0041c478 mov qword [r15 + 0x20], 0                                                                                         |             *((r15 + 0x20)) = 0;
    0x0041c480 mov ecx, 0x49bea4                                                                                                 |             
    0x0041c485 mov rdi, qword [rsp]                                                                                              |             
    0x0041c489 call 0x476e40                                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (*(rsp), *((rbx + 0x10)), rdx, "string<>::operator=(basic_string_view&): string too long");
    0x0041c48e nop                                                                                                               |             
                                                                                                                                 |         }
                                                                                                                                 | label_2:
    0x0041c490 cmp r12, rbp                                                                                                      |         
                                                                                                                                 |         if (r12 == rbp) {
    0x0041c493 je 0x41c4a7                                                                                                       |             goto label_4;
                                                                                                                                 |         }
    0x0041c495 movzx ecx, word [rbx + 0x3e]                                                                                      |         ecx = *((rbx + 0x3e));
    0x0041c499 add rbx, 0x20                                                                                                     |         rbx += 0x20;
    0x0041c49d lea rax, [rbp + 1]                                                                                                |         rax = rbp + 1;
    0x0041c4a1 bt r13, rcx                                                                                                       |         
    0x0041c4a5 jb 0x41c430                                                                                                       |         
                                                                                                                                 |     } while (((r13 >> rcx) & 1) < 0);
                                                                                                                                 | label_4:
    0x0041c4a7 cmp rbp, r12                                                                                                      |     
    0x0041c4aa sbb eax, eax                                                                                                      |     eax -= eax;
    0x0041c4ac jmp 0x41c4b0                                                                                                      |     goto label_1;
                                                                                                                                 | label_0:
    0x0041c4ae xor eax, eax                                                                                                      |     eax = 0;
                                                                                                                                 | label_1:
    0x0041c4b0 add rsp, 8                                                                                                        |     
    0x0041c4b4 pop rbx                                                                                                           |     
    0x0041c4b5 pop r12                                                                                                           |     
    0x0041c4b7 pop r13                                                                                                           |     
    0x0041c4b9 pop r14                                                                                                           |     
    0x0041c4bb pop r15                                                                                                           |     
    0x0041c4bd pop rbp                                                                                                           |     
    0x0041c4be ret                                                                                                               |     return rax;
                                                                                                                                 | }
