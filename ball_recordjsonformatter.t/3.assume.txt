    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* ball_recordjsonformatter.t/assume @ 0x41a470 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::ball._anonymous_namespace_::FileFormatter::format_BloombergLP::baljsn::SimpleFormatter__BloombergLP::ball::Record_const_ ()          | uint64_t method_BloombergLP::ball_anonymous_namespace_::FileFormatter::format_BloombergLP::baljsn::SimpleFormatter_BloombergLP::ball::Record_const_ (int64_t arg3, int64_t arg2, uint32_t arg1) {
                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                     |     uint32_t var_20h;
                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                     |     int64_t var_30h;
                                                                                                                                                                     |     int64_t var_38h;
                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                     |     int64_t var_48h;
                                                                                                                                                                     |     uint32_t var_50h;
                                                                                                                                                                     |     int64_t var_58h;
                                                                                                                                                                     |     int64_t var_60h;
                                                                                                                                                                     |     int64_t var_68h;
                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* BloombergLP::ball::(anonymous namespace)::FileFormatter::format(BloombergLP::baljsn::SimpleFormatter*, BloombergLP::ball::Record const&) */
    0x0041a470 push r15                                                                                                                                              |     
    0x0041a472 push r14                                                                                                                                              |     
    0x0041a474 push r13                                                                                                                                              |     
    0x0041a476 push r12                                                                                                                                              |     
    0x0041a478 push rbx                                                                                                                                              |     
    0x0041a479 sub rsp, 0x70                                                                                                                                         |     
    0x0041a47d mov rbx, rdx                                                                                                                                          |     rbx = rdx;
    0x0041a480 mov r14, rsi                                                                                                                                          |     r14 = rsi;
    0x0041a483 mov r13, rdi                                                                                                                                          |     r13 = rdi;
    0x0041a486 cmp dword [rdi + 0x38], 1                                                                                                                             |     
                                                                                                                                                                     |     if (*((rdi + 0x38)) == 1) {
    0x0041a48a jne 0x41a4b5                                                                                                                                          |         
    0x0041a48c lea rax, [r13 + 8]                                                                                                                                    |         rax = r13 + 8;
    0x0041a490 cmp qword [r13 + 0x28], 0x17                                                                                                                          |         
                                                                                                                                                                     |         if (*((r13 + 0x28)) != 0x17) {
    0x0041a495 je 0x41a49a                                                                                                                                           |             
    0x0041a497 mov rax, qword [rax]                                                                                                                                  |             rax = *(rax);
                                                                                                                                                                     |         }
    0x0041a49a mov rcx, qword [r13 + 0x20]                                                                                                                           |         rcx = *((r13 + 0x20));
    0x0041a49e mov qword [rsp + 0x30], rax                                                                                                                           |         *((rsp + 0x30)) = rax;
    0x0041a4a3 mov qword [rsp + 0x38], rcx                                                                                                                           |         *((rsp + 0x38)) = rcx;
    0x0041a4a8 cmp qword [rbx + 0x50], 0x17                                                                                                                          |         
                                                                                                                                                                     |         if (*((rbx + 0x50)) != 0x17) {
    0x0041a4ad je 0x41a4c2                                                                                                                                           |             
    0x0041a4af mov rbx, qword [rbx + 0x30]                                                                                                                           |             rbx = *((rbx + 0x30));
    0x0041a4b3 jmp 0x41a4c6                                                                                                                                          |             
                                                                                                                                                                     |         } else {
    0x0041a4b5 cmp qword [rbx + 0x50], 0x17                                                                                                                          |             
                                                                                                                                                                     |             if (*((rbx + 0x50)) == 0x17) {
    0x0041a4ba je 0x41a4f5                                                                                                                                           |                 goto label_1;
                                                                                                                                                                     |             }
    0x0041a4bc mov rbx, qword [rbx + 0x30]                                                                                                                           |             rbx = *((rbx + 0x30));
    0x0041a4c0 jmp 0x41a4f9                                                                                                                                          |             goto label_2;
                                                                                                                                                                     |         }
    0x0041a4c2 add rbx, 0x30                                                                                                                                         |         rbx += 0x30;
                                                                                                                                                                     |     }
    0x0041a4c6 mov qword [rsp], rbx                                                                                                                                  |     *(rsp) = rbx;
    0x0041a4ca lea rsi, [rsp + 0x30]                                                                                                                                 |     
    0x0041a4cf mov rdx, rsp                                                                                                                                          |     
    0x0041a4d2 mov rdi, r14                                                                                                                                          |     
    0x0041a4d5 call 0x41bab0                                                                                                                                         |     eax = intBloombergLP::baljsn::SimpleFormatter::addValue<char const*>(std::_1::basic_string_view<char,std::_1::char_traits<char>>const&,char const*const&) (r14, rsp + 0x30, rsp);
    0x0041a4da mov ecx, eax                                                                                                                                          |     ecx = eax;
    0x0041a4dc mov eax, 0xffffffff                                                                                                                                   |     eax = 0xffffffff;
    0x0041a4e1 test ecx, ecx                                                                                                                                         |     
                                                                                                                                                                     |     if (ecx != 0) {
    0x0041a4e3 jne 0x41a4e7                                                                                                                                          |         goto label_3;
                                                                                                                                                                     |     }
                                                                                                                                                                     | label_0:
    0x0041a4e5 xor eax, eax                                                                                                                                          |     eax = 0;
                                                                                                                                                                     |     do {
                                                                                                                                                                     | label_3:
    0x0041a4e7 add rsp, 0x70                                                                                                                                         |         
    0x0041a4eb pop rbx                                                                                                                                               |         
    0x0041a4ec pop r12                                                                                                                                               |         
    0x0041a4ee pop r13                                                                                                                                               |         
    0x0041a4f0 pop r14                                                                                                                                               |         
    0x0041a4f2 pop r15                                                                                                                                               |         
    0x0041a4f4 ret                                                                                                                                                   |         return rax;
                                                                                                                                                                     | label_1:
    0x0041a4f5 add rbx, 0x30                                                                                                                                         |         rbx += 0x30;
                                                                                                                                                                     | label_2:
    0x0041a4f9 mov rax, qword [rip + 0x2d1620]                                                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041a500 test rax, rax                                                                                                                                         |         
                                                                                                                                                                     |         if (rax == 0) {
    0x0041a503 jne 0x41a50a                                                                                                                                          |             
    0x0041a505 call 0x4712e0                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                     |         }
    0x0041a50a mov qword [rsp + 0x30], 0                                                                                                                             |         *((rsp + 0x30)) = 0;
    0x0041a513 mov qword [rsp + 0x50], 0x17                                                                                                                          |         *((rsp + 0x50)) = 0x17;
    0x0041a51c mov qword [rsp + 0x58], rax                                                                                                                           |         *((rsp + 0x58)) = rax;
    0x0041a521 mov rdi, rbx                                                                                                                                          |         
    0x0041a524 call 0x404740                                                                                                                                         |         rax = strlen (rbx);
    0x0041a529 mov qword [rsp + 0x48], 0                                                                                                                             |         *((rsp + 0x48)) = 0;
    0x0041a532 lea r12, [rsp + 0x30]                                                                                                                                 |         r12 = rsp + 0x30;
    0x0041a537 mov ecx, 0x499800                                                                                                                                     |         
    0x0041a53c mov rdi, r12                                                                                                                                          |         
    0x0041a53f mov rsi, rbx                                                                                                                                          |         
    0x0041a542 mov rdx, rax                                                                                                                                          |         
    0x0041a545 call 0x4753c0                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (r12, rbx, rax, "string<...>::assign(char*...): string too long");
    0x0041a54a mov byte [rsp], 0x2f                                                                                                                                  |         *(rsp) = 0x2f;
    0x0041a54e mov r15, rsp                                                                                                                                          |         r15 = rsp;
    0x0041a551 mov ecx, 1                                                                                                                                            |         
    0x0041a556 mov rdi, r12                                                                                                                                          |         
    0x0041a559 mov rsi, r15                                                                                                                                          |         
    0x0041a55c mov rdx, 0xffffffffffffffff                                                                                                                           |         
    0x0041a563 call 0x478220                                                                                                                                         |         rax = bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::rfind(char const*,unsigned long,unsigned long)const (r12, r15, 0xffffffffffffffff, 1);
    0x0041a568 mov rbx, rax                                                                                                                                          |         rbx = rax;
    0x0041a56b lea rax, [r13 + 8]                                                                                                                                    |         rax = r13 + 8;
    0x0041a56f cmp qword [r13 + 0x28], 0x17                                                                                                                          |         
                                                                                                                                                                     |         if (*((r13 + 0x28)) != 0x17) {
    0x0041a574 je 0x41a579                                                                                                                                           |             
    0x0041a576 mov rax, qword [rax]                                                                                                                                  |             rax = *(rax);
                                                                                                                                                                     |         }
    0x0041a579 mov rcx, qword [r13 + 0x20]                                                                                                                           |         rcx = *((r13 + 0x20));
    0x0041a57d mov qword [rsp + 0x60], rax                                                                                                                           |         *((rsp + 0x60)) = rax;
    0x0041a582 mov qword [rsp + 0x68], rcx                                                                                                                           |         *((rsp + 0x68)) = rcx;
    0x0041a587 cmp rbx, 0xffffffffffffffff                                                                                                                           |         
                                                                                                                                                                     |         if (rbx != -1) {
    0x0041a58b je 0x41a5d6                                                                                                                                           |             
    0x0041a58d mov rax, qword [rip + 0x2d158c]                                                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041a594 test rax, rax                                                                                                                                         |             
                                                                                                                                                                     |             if (rax == 0) {
    0x0041a597 jne 0x41a59e                                                                                                                                          |                 
    0x0041a599 call 0x4712e0                                                                                                                                         |                 rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                     |             }
    0x0041a59e inc rbx                                                                                                                                               |             rbx++;
    0x0041a5a1 mov qword [rsp], 0                                                                                                                                    |             *(rsp) = 0;
    0x0041a5a9 movaps xmm0, xmmword [rip + 0x7d380]                                                                                                                  |             xmm0 = .comment;
    0x0041a5b0 movups xmmword [rsp + 0x18], xmm0                                                                                                                     |             __asm ("movups xmmword [rsp + 0x18], xmm0");
    0x0041a5b5 mov qword [rsp + 0x28], rax                                                                                                                           |             *((rsp + 0x28)) = rax;
    0x0041a5ba mov rdi, rsp                                                                                                                                          |             
    0x0041a5bd lea rsi, [rsp + 0x30]                                                                                                                                 |             
    0x0041a5c2 mov rdx, rbx                                                                                                                                          |             
    0x0041a5c5 mov rcx, 0xffffffffffffffff                                                                                                                           |             
    0x0041a5cc call 0x476560                                                                                                                                         |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::assign(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&,unsigned long,unsigned long) (rsp, rsp + 0x30, rbx, 0xffffffffffffffff);
    0x0041a5d1 jmp 0x41a678                                                                                                                                          |             
                                                                                                                                                                     |         } else {
    0x0041a5d6 mov rax, qword [rsp + 0x50]                                                                                                                           |             rax = *((rsp + 0x50));
    0x0041a5db mov qword [rsp + 0x20], rax                                                                                                                           |             *((rsp + 0x20)) = rax;
    0x0041a5e0 movups xmm0, xmmword [rsp + 0x30]                                                                                                                     |             __asm ("movups xmm0, xmmword [rsp + 0x30]");
    0x0041a5e5 movups xmm1, xmmword [rsp + 0x40]                                                                                                                     |             __asm ("movups xmm1, xmmword [rsp + 0x40]");
    0x0041a5ea movaps xmmword [rsp + 0x10], xmm1                                                                                                                     |             *((rsp + 0x10)) = xmm1;
    0x0041a5ef movaps xmmword [rsp], xmm0                                                                                                                            |             *(rsp) = xmm0;
    0x0041a5f3 mov rax, qword [rip + 0x2d1526]                                                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041a5fa test rax, rax                                                                                                                                         |             
                                                                                                                                                                     |             if (rax == 0) {
    0x0041a5fd jne 0x41a604                                                                                                                                          |                 
    0x0041a5ff call 0x4712e0                                                                                                                                         |                 rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                     |             }
    0x0041a604 mov qword [rsp + 0x28], rax                                                                                                                           |             *((rsp + 0x28)) = rax;
    0x0041a609 cmp qword [rsp + 0x20], 0x17                                                                                                                          |             
                                                                                                                                                                     |             if (*((rsp + 0x20)) == 0x17) {
    0x0041a60f je 0x41a678                                                                                                                                           |                 goto label_4;
                                                                                                                                                                     |             }
    0x0041a611 mov rcx, qword [rsp + 0x48]                                                                                                                           |             rcx = *((rsp + 0x48));
    0x0041a616 cmp rcx, 0x17                                                                                                                                         |             
    0x0041a61a mov esi, 0x17                                                                                                                                         |             esi = 0x17;
                                                                                                                                                                     |             if (rcx > 0x17) {
    0x0041a61f cmova rsi, rcx                                                                                                                                        |                 rsi = rcx;
                                                                                                                                                                     |             }
    0x0041a623 mov qword [rsp], 0                                                                                                                                    |             *(rsp) = 0;
    0x0041a62b mov qword [rsp + 0x18], rcx                                                                                                                           |             *((rsp + 0x18)) = rcx;
    0x0041a630 mov qword [rsp + 0x20], rsi                                                                                                                           |             *((rsp + 0x20)) = rsi;
    0x0041a635 cmp rcx, 0x18                                                                                                                                         |             
                                                                                                                                                                     |             if (rcx >= 0x18) {
    0x0041a639 jb 0x41a653                                                                                                                                           |                 
    0x0041a63b inc rsi                                                                                                                                               |                 rsi++;
    0x0041a63e mov rcx, qword [rax]                                                                                                                                  |                 rcx = *(rax);
    0x0041a641 mov rdi, rax                                                                                                                                          |                 rdi = rax;
    0x0041a644 call qword [rcx + 0x10]                                                                                                                               |                 rax = uint64_t (*rcx + 0x10)() ();
    0x0041a647 mov qword [rsp], rax                                                                                                                                  |                 *(rsp) = rax;
    0x0041a64b cmp qword [rsp + 0x20], 0x17                                                                                                                          |                 
                                                                                                                                                                     |                 if (*((rsp + 0x20)) != 0x17) {
    0x0041a651 jne 0x41a656                                                                                                                                          |                     goto label_5;
                                                                                                                                                                     |                 }
                                                                                                                                                                     |             }
    0x0041a653 mov rax, r15                                                                                                                                          |             rax = r15;
                                                                                                                                                                     | label_5:
    0x0041a656 mov rdx, qword [rsp + 0x18]                                                                                                                           |             rdx = *((rsp + 0x18));
    0x0041a65b inc rdx                                                                                                                                               |             rdx++;
                                                                                                                                                                     |             if (rdx == 0) {
    0x0041a65e je 0x41a678                                                                                                                                           |                 goto label_4;
                                                                                                                                                                     |             }
    0x0041a660 cmp qword [rsp + 0x50], 0x17                                                                                                                          |             
                                                                                                                                                                     |             if (*((rsp + 0x50)) != 0x17) {
    0x0041a666 je 0x41a66d                                                                                                                                           |                 
    0x0041a668 mov r12, qword [rsp + 0x30]                                                                                                                           |                 r12 = *((rsp + 0x30));
                                                                                                                                                                     |             }
    0x0041a66d mov rdi, rax                                                                                                                                          |             
    0x0041a670 mov rsi, r12                                                                                                                                          |             
    0x0041a673 call 0x404ca0                                                                                                                                         |             memcpy (rax, r12, rdx);
                                                                                                                                                                     |         }
                                                                                                                                                                     | label_4:
    0x0041a678 lea rsi, [rsp + 0x60]                                                                                                                                 |         
    0x0041a67d mov rdx, rsp                                                                                                                                          |         
    0x0041a680 mov rdi, r14                                                                                                                                          |         
    0x0041a683 call 0x41bb80                                                                                                                                         |         eax = intBloombergLP::baljsn::SimpleFormatter::addValue<bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>(std::_1::basic_string_view<char,std::_1::char_traits<char>>const&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (r14, rsp + 0x60, rsp);
    0x0041a688 mov ebx, eax                                                                                                                                          |         ebx = eax;
    0x0041a68a cmp qword [rsp + 0x20], 0x17                                                                                                                          |         
                                                                                                                                                                     |         if (*((rsp + 0x20)) != 0x17) {
    0x0041a690 je 0x41a6a1                                                                                                                                           |             
    0x0041a692 mov rsi, qword [rsp]                                                                                                                                  |             rsi = *(rsp);
    0x0041a696 mov rdi, qword [rsp + 0x28]                                                                                                                           |             rdi = *((rsp + 0x28));
    0x0041a69b mov rax, qword [rdi]                                                                                                                                  |             rax = *(rdi);
    0x0041a69e call qword [rax + 0x18]                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                     |         }
    0x0041a6a1 cmp qword [rsp + 0x50], 0x17                                                                                                                          |         
                                                                                                                                                                     |         if (*((rsp + 0x50)) != 0x17) {
    0x0041a6a7 je 0x41a6b9                                                                                                                                           |             
    0x0041a6a9 mov rsi, qword [rsp + 0x30]                                                                                                                           |             rsi = *((rsp + 0x30));
    0x0041a6ae mov rdi, qword [rsp + 0x58]                                                                                                                           |             rdi = *((rsp + 0x58));
    0x0041a6b3 mov rax, qword [rdi]                                                                                                                                  |             rax = *(rdi);
    0x0041a6b6 call qword [rax + 0x18]                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                     |         }
    0x0041a6b9 mov eax, 0xffffffff                                                                                                                                   |         eax = 0xffffffff;
    0x0041a6be test ebx, ebx                                                                                                                                         |         
    0x0041a6c0 jne 0x41a4e7                                                                                                                                          |         
                                                                                                                                                                     |     } while (ebx != 0);
    0x0041a6c6 jmp 0x41a4e5                                                                                                                                          |     goto label_0;
                                                                                                                                                                     | }
