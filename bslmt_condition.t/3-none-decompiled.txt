    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_condition.t/none @ 0x4030c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Condition__BloombergLP::bslmt::Mutex__HalfClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::Condition__BloombergLP::bslmt::Mutex ()      | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::Condition_BloombergLP::bslmt::Mutex_HalfClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::Condition_BloombergLP::bslmt::Mutex (uint32_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::Condition, BloombergLP::bslmt::Mutex, HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::Condition*, BloombergLP::bslmt::Mutex*, std::__1::chrono::time_point<HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x004030c0 push rbp                                                                                                                                                                                                                                                          |     
    0x004030c1 push r15                                                                                                                                                                                                                                                          |     
    0x004030c3 push r14                                                                                                                                                                                                                                                          |     
    0x004030c5 push r13                                                                                                                                                                                                                                                          |     
    0x004030c7 push r12                                                                                                                                                                                                                                                          |     
    0x004030c9 push rbx                                                                                                                                                                                                                                                          |     
    0x004030ca sub rsp, 0x28                                                                                                                                                                                                                                                     |     
    0x004030ce mov rbx, rdx                                                                                                                                                                                                                                                      |     rbx = rdx;
    0x004030d1 mov r14, rsi                                                                                                                                                                                                                                                      |     r14 = rsi;
    0x004030d4 mov r15, rdi                                                                                                                                                                                                                                                      |     r15 = rdi;
    0x004030d7 call 0x4014a0                                                                                                                                                                                                                                                     |     rax = std::_1::chrono::steady_clock::now() ();
    0x004030dc mov r12, rax                                                                                                                                                                                                                                                      |     r12 = rax;
    0x004030df shr r12, 0x3f                                                                                                                                                                                                                                                     |     r12 >>= 0x3f;
    0x004030e3 add r12, rax                                                                                                                                                                                                                                                      |     r12 += rax;
    0x004030e6 sar r12, 1                                                                                                                                                                                                                                                        |     r12 >>= 1;
    0x004030e9 mov eax, 0xffffffff                                                                                                                                                                                                                                               |     eax = 0xffffffff;
    0x004030ee cmp r12, qword [rbx]                                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                                 |     if (r12 >= *(rbx)) {
    0x004030f1 jge 0x4031b0                                                                                                                                                                                                                                                      |         goto label_0;
                                                                                                                                                                                                                                                                                 |     }
    0x004030f7 mov r13, rsp                                                                                                                                                                                                                                                      |     r13 = rsp;
    0x004030fa lea rbp, [rsp + 0x10]                                                                                                                                                                                                                                             |     rbp = rsp + 0x10;
    0x004030ff nop                                                                                                                                                                                                                                                               |     
                                                                                                                                                                                                                                                                                 |     do {
    0x00403100 mov eax, dword [r15 + 0x30]                                                                                                                                                                                                                                       |         eax = *((r15 + 0x30));
    0x00403104 test eax, eax                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (eax != 0) {
    0x00403106 je 0x403120                                                                                                                                                                                                                                                       |             
    0x00403108 cmp eax, 1                                                                                                                                                                                                                                                        |             
                                                                                                                                                                                                                                                                                 |             if (eax != 1) {
    0x0040310b jne 0x403130                                                                                                                                                                                                                                                      |                 goto label_1;
                                                                                                                                                                                                                                                                                 |             }
    0x0040310d call 0x4035f0                                                                                                                                                                                                                                                     |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x00403112 jmp 0x403125                                                                                                                                                                                                                                                      |             
                                                                                                                                                                                                                                                                                 |         } else {
    0x00403120 call 0x403680                                                                                                                                                                                                                                                     |             eax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00403125 jmp 0x403134                                                                                                                                                                                                                                                      |         goto label_2;
                                                                                                                                                                                                                                                                                 | label_1:
    0x00403130 xor edx, edx                                                                                                                                                                                                                                                      |         edx = 0;
    0x00403132 xor eax, eax                                                                                                                                                                                                                                                      |         eax = 0;
                                                                                                                                                                                                                                                                                 | label_2:
    0x00403134 mov qword [rsp], rax                                                                                                                                                                                                                                              |         *(rsp) = rax;
    0x00403138 mov dword [rsp + 8], edx                                                                                                                                                                                                                                          |         *((rsp + 8)) = edx;
    0x0040313c mov rcx, qword [rbx]                                                                                                                                                                                                                                              |         rcx = *(rbx);
    0x0040313f sub rcx, r12                                                                                                                                                                                                                                                      |         rcx -= r12;
    0x00403142 mov rax, rcx                                                                                                                                                                                                                                                      |         rax = rcx;
    0x00403145 movabs rdx, 0x112e0be826d694b3                                                                                                                                                                                                                                    |         rdx = 0x112e0be826d694b3;
    0x0040314f imul rdx                                                                                                                                                                                                                                                          |         rdx:rax = rax * rdx;
    0x00403152 mov rax, rdx                                                                                                                                                                                                                                                      |         rax = rdx;
    0x00403155 shr rax, 0x3f                                                                                                                                                                                                                                                     |         rax >>= 0x3f;
    0x00403159 sar rdx, 0x1a                                                                                                                                                                                                                                                     |         rdx >>= 0x1a;
    0x0040315d add rdx, rax                                                                                                                                                                                                                                                      |         rdx += rax;
    0x00403160 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                         |         eax = edx * 0xc4653600;
    0x00403166 add ecx, eax                                                                                                                                                                                                                                                      |         ecx += eax;
    0x00403168 mov rdi, r13                                                                                                                                                                                                                                                      |         
    0x0040316b mov rsi, rdx                                                                                                                                                                                                                                                      |         
    0x0040316e mov edx, ecx                                                                                                                                                                                                                                                      |         
    0x00403170 call 0x4037a0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r13, rdx, ecx);
    0x00403175 movups xmm0, xmmword [rax]                                                                                                                                                                                                                                        |         __asm ("movups xmm0, xmmword [rax]");
    0x00403178 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                 |         *((rsp + 0x10)) = xmm0;
    0x0040317d mov rdi, r15                                                                                                                                                                                                                                                      |         
    0x00403180 mov rsi, r14                                                                                                                                                                                                                                                      |         
    0x00403183 mov rdx, rbp                                                                                                                                                                                                                                                      |         
    0x00403186 call 0x403210                                                                                                                                                                                                                                                     |         eax = BloombergLP::bslmt::ConditionImpl<BloombergLP::bslmt::Platform::PosixThreads>::timedWait(BloombergLP::bslmt::Mutex*,BloombergLP::bsls::TimeIntervalconst&) (r15, r14, rbp);
    0x0040318b cmp eax, 0xffffffff                                                                                                                                                                                                                                               |         
                                                                                                                                                                                                                                                                                 |         if (eax != 0xffffffff) {
    0x0040318e jne 0x4031b0                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x00403190 call 0x4014a0                                                                                                                                                                                                                                                     |         rax = std::_1::chrono::steady_clock::now() ();
    0x00403195 mov r12, rax                                                                                                                                                                                                                                                      |         r12 = rax;
    0x00403198 shr r12, 0x3f                                                                                                                                                                                                                                                     |         r12 >>= 0x3f;
    0x0040319c add r12, rax                                                                                                                                                                                                                                                      |         r12 += rax;
    0x0040319f sar r12, 1                                                                                                                                                                                                                                                        |         r12 >>= 1;
    0x004031a2 cmp r12, qword [rbx]                                                                                                                                                                                                                                              |         
    0x004031a5 jl 0x403100                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                 |     } while (r12 < *(rbx));
    0x004031ab mov eax, 0xffffffff                                                                                                                                                                                                                                               |     eax = 0xffffffff;
                                                                                                                                                                                                                                                                                 | label_0:
    0x004031b0 add rsp, 0x28                                                                                                                                                                                                                                                     |     
    0x004031b4 pop rbx                                                                                                                                                                                                                                                           |     
    0x004031b5 pop r12                                                                                                                                                                                                                                                           |     
    0x004031b7 pop r13                                                                                                                                                                                                                                                           |     
    0x004031b9 pop r14                                                                                                                                                                                                                                                           |     
    0x004031bb pop r15                                                                                                                                                                                                                                                           |     
    0x004031bd pop rbp                                                                                                                                                                                                                                                           |     
    0x004031be ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
