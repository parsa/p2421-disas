    ; assembly                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                     | /* ball_defaultattributecontainer.t/none @ 0x415ae0 */
                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                     |  
    ; (fcn) method.bsl::vector_BloombergLP::ball::Attribute__bsl::allocator_BloombergLP::ball::Attribute___.push_back_BloombergLP::ball::Attribute_const_ ()         | uint64_t method_bsl::vector_BloombergLP::ball::Attribute_bsl::allocator_BloombergLP::ball::Attribute_push_back_BloombergLP::ball::Attribute_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                     |     int64_t var_30h;
                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                     |     /* bsl::vector<BloombergLP::ball::Attribute, bsl::allocator<BloombergLP::ball::Attribute> >::push_back(BloombergLP::ball::Attribute const&) */
    0x00415ae0 push rbp                                                                                                                                              |     
    0x00415ae1 push r15                                                                                                                                              |     
    0x00415ae3 push r14                                                                                                                                              |     
    0x00415ae5 push r13                                                                                                                                              |     
    0x00415ae7 push r12                                                                                                                                              |     
    0x00415ae9 push rbx                                                                                                                                              |     
    0x00415aea sub rsp, 0x38                                                                                                                                         |     
    0x00415aee mov rbx, rsi                                                                                                                                          |     rbx = rsi;
    0x00415af1 mov r14, rdi                                                                                                                                          |     r14 = rdi;
    0x00415af4 mov rbp, qword [rdi + 8]                                                                                                                              |     rbp = *((rdi + 8));
    0x00415af8 mov rsi, qword [rdi + 0x10]                                                                                                                           |     rsi = *((rdi + 0x10));
    0x00415afc mov rdi, rbp                                                                                                                                          |     rdi = rbp;
    0x00415aff sub rdi, qword [r14]                                                                                                                                  |     rdi -= *(r14);
    0x00415b02 sar rdi, 4                                                                                                                                            |     rdi >>= 4;
    0x00415b06 movabs r13, 0xcccccccccccccccd                                                                                                                        |     r13 = 0xcccccccccccccccd;
    0x00415b10 imul rdi, r13                                                                                                                                         |     rdi *= r13;
    0x00415b14 cmp rsi, rdi                                                                                                                                          |     
                                                                                                                                                                     |     if (rsi <= rdi) {
    0x00415b17 jbe 0x415b6a                                                                                                                                          |         goto label_7;
                                                                                                                                                                     |     }
    0x00415b19 mov rdx, qword [r14 + 0x18]                                                                                                                           |     rdx = *((r14 + 0x18));
    0x00415b1d test rdx, rdx                                                                                                                                         |     
                                                                                                                                                                     |     if (rdx == 0) {
    0x00415b20 jne 0x415b36                                                                                                                                          |         
    0x00415b22 mov rdx, qword [rip + 0x248207]                                                                                                                       |         rdx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00415b29 test rdx, rdx                                                                                                                                         |         
                                                                                                                                                                     |         if (rdx != 0) {
    0x00415b2c jne 0x415b36                                                                                                                                          |             goto label_8;
                                                                                                                                                                     |         }
    0x00415b2e call 0x41b110                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00415b33 mov rdx, rax                                                                                                                                          |         rdx = rax;
                                                                                                                                                                     |     }
                                                                                                                                                                     | label_8:
    0x00415b36 mov rax, qword [rbx]                                                                                                                                  |     rax = *(rbx);
    0x00415b39 mov qword [rbp], rax                                                                                                                                  |     *(rbp) = rax;
    0x00415b3d lea rdi, [rbp + 8]                                                                                                                                    |     
    0x00415b41 lea rsi, [rbx + 8]                                                                                                                                    |     
    0x00415b45 call 0x4166a0                                                                                                                                         |     BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<int,long long,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::VariantImp(BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<int,long long,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>const&,BloombergLP::bslma::Allocator*) (rbp + 8, rbx + 8, rdx);
    0x00415b4a mov eax, dword [rbx + 0x48]                                                                                                                           |     eax = *((rbx + 0x48));
    0x00415b4d mov dword [rbp + 0x48], eax                                                                                                                           |     *((rbp + 0x48)) = eax;
    0x00415b50 mov eax, dword [rbx + 0x4c]                                                                                                                           |     eax = *((rbx + 0x4c));
    0x00415b53 mov dword [rbp + 0x4c], eax                                                                                                                           |     *((rbp + 0x4c)) = eax;
    0x00415b56 add qword [r14 + 8], 0x50                                                                                                                             |     *((r14 + 8)) += 0x50;
                                                                                                                                                                     |     do {
                                                                                                                                                                     | label_6:
    0x00415b5b add rsp, 0x38                                                                                                                                         |         
    0x00415b5f pop rbx                                                                                                                                               |         
    0x00415b60 pop r12                                                                                                                                               |         
    0x00415b62 pop r13                                                                                                                                               |         
    0x00415b64 pop r14                                                                                                                                               |         
    0x00415b66 pop r15                                                                                                                                               |         
    0x00415b68 pop rbp                                                                                                                                               |         
    0x00415b69 ret                                                                                                                                                   |         return rax;
                                                                                                                                                                     | label_7:
    0x00415b6a inc rdi                                                                                                                                               |         rdi++;
    0x00415b6d movabs rdx, 0x333333333333333                                                                                                                         |         rdx = 0x333333333333333;
    0x00415b77 call 0x426500                                                                                                                                         |         rax = bsl::Vector_Util::computeNewCapacity(unsigned long,unsigned long,unsigned long) (rdi, rsi, rdx);
    0x00415b7c mov r12, rax                                                                                                                                          |         r12 = rax;
    0x00415b7f mov rdi, qword [r14 + 0x18]                                                                                                                           |         rdi = *((r14 + 0x18));
    0x00415b83 xorps xmm0, xmm0                                                                                                                                      |         __asm ("xorps xmm0, xmm0");
    0x00415b86 movaps xmmword [rsp], xmm0                                                                                                                            |         *(rsp) = xmm0;
    0x00415b8a mov qword [rsp + 0x10], 0                                                                                                                             |         *((rsp + 0x10)) = 0;
    0x00415b93 mov qword [rsp + 0x18], rdi                                                                                                                           |         *((rsp + 0x18)) = rdi;
    0x00415b98 shl rax, 4                                                                                                                                            |         rax <<= 4;
    0x00415b9c lea rsi, [rax + rax*4]                                                                                                                                |         rsi = rax * 5;
    0x00415ba0 mov rax, qword [rdi]                                                                                                                                  |         rax = *(rdi);
    0x00415ba3 call qword [rax + 0x10]                                                                                                                               |         rax = uint64_t (*rax + 0x10)() ();
    0x00415ba6 mov r15, rax                                                                                                                                          |         r15 = rax;
    0x00415ba9 mov qword [rsp + 8], rax                                                                                                                              |         *((rsp + 8)) = rax;
    0x00415bae mov qword [rsp], rax                                                                                                                                  |         *(rsp) = rax;
    0x00415bb2 mov qword [rsp + 0x10], r12                                                                                                                           |         *((rsp + 0x10)) = r12;
    0x00415bb7 mov rbp, qword [r14 + 8]                                                                                                                              |         rbp = *((r14 + 8));
    0x00415bbb mov rdx, qword [r14 + 0x18]                                                                                                                           |         rdx = *((r14 + 0x18));
    0x00415bbf sub rbp, qword [r14]                                                                                                                                  |         rbp -= *(r14);
    0x00415bc2 test rdx, rdx                                                                                                                                         |         
                                                                                                                                                                     |         if (rdx == 0) {
    0x00415bc5 jne 0x415bdb                                                                                                                                          |             
    0x00415bc7 mov rdx, qword [rip + 0x248162]                                                                                                                       |             rdx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00415bce test rdx, rdx                                                                                                                                         |             
                                                                                                                                                                     |             if (rdx != 0) {
    0x00415bd1 jne 0x415bdb                                                                                                                                          |                 goto label_9;
                                                                                                                                                                     |             }
    0x00415bd3 call 0x41b110                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00415bd8 mov rdx, rax                                                                                                                                          |             rdx = rax;
                                                                                                                                                                     |         }
                                                                                                                                                                     | label_9:
    0x00415bdb lea rax, [r15 + rbp]                                                                                                                                  |         rax = r15 + rbp;
    0x00415bdf sar rbp, 4                                                                                                                                            |         rbp >>= 4;
    0x00415be3 imul rbp, r13                                                                                                                                         |         rbp *= r13;
    0x00415be7 mov r13, rax                                                                                                                                          |         r13 = rax;
    0x00415bea mov rax, qword [rbx]                                                                                                                                  |         rax = *(rbx);
    0x00415bed mov qword [r13], rax                                                                                                                                  |         *(r13) = rax;
    0x00415bf1 lea rbp, [rbp + rbp*4]                                                                                                                                |         rbp = rbp + rbp*4;
    0x00415bf6 shl rbp, 4                                                                                                                                            |         rbp <<= 4;
    0x00415bfa lea rdi, [r15 + rbp + 8]                                                                                                                              |         
    0x00415bff lea rsi, [rbx + 8]                                                                                                                                    |         
    0x00415c03 mov qword [rsp + 0x28], rdi                                                                                                                           |         *((rsp + 0x28)) = rdi;
    0x00415c08 call 0x4166a0                                                                                                                                         |         BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<int,long long,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>::VariantImp(BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<int,long long,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>>>const&,BloombergLP::bslma::Allocator*) (r15 + rbp + 8, rbx + 8, rdx);
    0x00415c0d mov eax, dword [rbx + 0x48]                                                                                                                           |         eax = *((rbx + 0x48));
    0x00415c10 mov dword [r15 + rbp + 0x48], eax                                                                                                                     |         *((r15 + rbp + 0x48)) = eax;
    0x00415c15 mov eax, dword [rbx + 0x4c]                                                                                                                           |         eax = *((rbx + 0x4c));
    0x00415c18 mov dword [r15 + rbp + 0x4c], eax                                                                                                                     |         *((r15 + rbp + 0x4c)) = eax;
    0x00415c1d mov rdi, qword [rsp]                                                                                                                                  |         
    0x00415c21 mov rbx, qword [r14]                                                                                                                                  |         rbx = *(r14);
    0x00415c24 mov r12, qword [r14 + 8]                                                                                                                              |         r12 = *((r14 + 8));
    0x00415c28 mov rax, qword [r14 + 0x18]                                                                                                                           |         rax = *((r14 + 0x18));
    0x00415c2c mov qword [rsp + 0x30], rax                                                                                                                           |         *((rsp + 0x30)) = rax;
    0x00415c31 lea rcx, [rsp + 0x30]                                                                                                                                 |         
    0x00415c36 mov rsi, rbx                                                                                                                                          |         
    0x00415c39 mov rdx, r12                                                                                                                                          |         
    0x00415c3c xor r8d, r8d                                                                                                                                          |         r8d = 0;
    0x00415c3f call 0x417750                                                                                                                                         |         voidBloombergLP::bslalg::ArrayPrimitives_Imp::moveIfNoexcept<BloombergLP::ball::Attribute,bsl::allocator<BloombergLP::ball::Attribute>>(BloombergLP::ball::Attribute*,BloombergLP::ball::Attribute*,BloombergLP::ball::Attribute*,bsl::allocator<BloombergLP::ball::Attribute>,BloombergLP::bslmf::MetaInt<0>*) (*(rsp), rbx, r12, rsp + 0x30);
    0x00415c44 cmp rbx, r12                                                                                                                                          |         
                                                                                                                                                                     |         if (rbx != r12) {
    0x00415c47 jne 0x415c95                                                                                                                                          |             goto label_10;
                                                                                                                                                                     |         }
                                                                                                                                                                     | label_0:
    0x00415c49 mov rax, qword [r14]                                                                                                                                  |         rax = *(r14);
    0x00415c4c mov qword [r14 + 8], rax                                                                                                                              |         *((r14 + 8)) = rax;
    0x00415c50 add r13, 0x50                                                                                                                                         |         r13 += 0x50;
    0x00415c54 mov qword [rsp + 8], r13                                                                                                                              |         *((rsp + 8)) = r13;
    0x00415c59 mov rsi, rsp                                                                                                                                          |         
    0x00415c5c mov rdi, r14                                                                                                                                          |         
    0x00415c5f call 0x426530                                                                                                                                         |         bsl::Vector_Util::swap(void*,void*) (r14, rsp);
    0x00415c64 mov rbx, qword [rsp]                                                                                                                                  |         rbx = *(rsp);
    0x00415c68 test rbx, rbx                                                                                                                                         |         
    0x00415c6b je 0x415b5b                                                                                                                                           |         
                                                                                                                                                                     |     } while (rbx == 0);
    0x00415c71 mov rbp, qword [rsp + 8]                                                                                                                              |     rbp = *((rsp + 8));
    0x00415c76 cmp rbx, rbp                                                                                                                                          |     
                                                                                                                                                                     |     if (rbx != rbp) {
    0x00415c79 jne 0x415cd0                                                                                                                                          |         goto label_11;
                                                                                                                                                                     |     }
    0x00415c7b jmp 0x415cf7                                                                                                                                          |     goto label_12;
                                                                                                                                                                     | label_3:
    0x00415c7d mov qword [rbx + 0x20], 0xffffffffffffffff                                                                                                            |     *((rbx + 0x20)) = 0xffffffffffffffff;
                                                                                                                                                                     | label_2:
    0x00415c85 mov dword [rbx + 0x38], 0                                                                                                                             |     *((rbx + 0x38)) = 0;
                                                                                                                                                                     | label_1:
    0x00415c8c add rbx, 0x50                                                                                                                                         |     rbx += 0x50;
    0x00415c90 cmp r12, rbx                                                                                                                                          |     
                                                                                                                                                                     |     if (r12 == rbx) {
    0x00415c93 je 0x415c49                                                                                                                                           |         goto label_0;
                                                                                                                                                                     |     }
                                                                                                                                                                     | label_10:
    0x00415c95 mov eax, dword [rbx + 0x38]                                                                                                                           |     eax = *((rbx + 0x38));
    0x00415c98 test eax, eax                                                                                                                                         |     
                                                                                                                                                                     |     if (eax == 0) {
    0x00415c9a je 0x415c8c                                                                                                                                           |         goto label_1;
                                                                                                                                                                     |     }
    0x00415c9c cmp eax, 3                                                                                                                                            |     
                                                                                                                                                                     |     if (eax != 3) {
    0x00415c9f jne 0x415c85                                                                                                                                          |         goto label_2;
                                                                                                                                                                     |     }
    0x00415ca1 cmp qword [rbx + 0x28], 0x17                                                                                                                          |     
                                                                                                                                                                     |     if (*((rbx + 0x28)) == 0x17) {
    0x00415ca6 je 0x415c7d                                                                                                                                           |         goto label_3;
                                                                                                                                                                     |     }
    0x00415ca8 mov rsi, qword [rbx + 8]                                                                                                                              |     rsi = *((rbx + 8));
    0x00415cac mov rdi, qword [rbx + 0x30]                                                                                                                           |     rdi = *((rbx + 0x30));
    0x00415cb0 mov rax, qword [rdi]                                                                                                                                  |     rax = *(rdi);
    0x00415cb3 call qword [rax + 0x18]                                                                                                                               |     uint64_t (*rax + 0x18)() ();
    0x00415cb6 jmp 0x415c7d                                                                                                                                          |     goto label_3;
                                                                                                                                                                     | label_5:
    0x00415cb8 mov qword [rbx + 0x20], 0xffffffffffffffff                                                                                                            |     *((rbx + 0x20)) = 0xffffffffffffffff;
                                                                                                                                                                     | label_4:
    0x00415cc0 mov dword [rbx + 0x38], 0                                                                                                                             |     *((rbx + 0x38)) = 0;
                                                                                                                                                                     |     do {
    0x00415cc7 add rbx, 0x50                                                                                                                                         |         rbx += 0x50;
    0x00415ccb cmp rbp, rbx                                                                                                                                          |         
                                                                                                                                                                     |         if (rbp == rbx) {
    0x00415cce je 0x415cf3                                                                                                                                           |             goto label_13;
                                                                                                                                                                     |         }
                                                                                                                                                                     | label_11:
    0x00415cd0 mov eax, dword [rbx + 0x38]                                                                                                                           |         eax = *((rbx + 0x38));
    0x00415cd3 test eax, eax                                                                                                                                         |         
    0x00415cd5 je 0x415cc7                                                                                                                                           |         
                                                                                                                                                                     |     } while (eax == 0);
    0x00415cd7 cmp eax, 3                                                                                                                                            |     
                                                                                                                                                                     |     if (eax != 3) {
    0x00415cda jne 0x415cc0                                                                                                                                          |         goto label_4;
                                                                                                                                                                     |     }
    0x00415cdc cmp qword [rbx + 0x28], 0x17                                                                                                                          |     
                                                                                                                                                                     |     if (*((rbx + 0x28)) == 0x17) {
    0x00415ce1 je 0x415cb8                                                                                                                                           |         goto label_5;
                                                                                                                                                                     |     }
    0x00415ce3 mov rsi, qword [rbx + 8]                                                                                                                              |     rsi = *((rbx + 8));
    0x00415ce7 mov rdi, qword [rbx + 0x30]                                                                                                                           |     rdi = *((rbx + 0x30));
    0x00415ceb mov rax, qword [rdi]                                                                                                                                  |     rax = *(rdi);
    0x00415cee call qword [rax + 0x18]                                                                                                                               |     uint64_t (*rax + 0x18)() ();
    0x00415cf1 jmp 0x415cb8                                                                                                                                          |     goto label_5;
                                                                                                                                                                     | label_13:
    0x00415cf3 mov rbx, qword [rsp]                                                                                                                                  |     rbx = *(rsp);
                                                                                                                                                                     | label_12:
    0x00415cf7 mov rdi, qword [rsp + 0x18]                                                                                                                           |     rdi = *((rsp + 0x18));
    0x00415cfc mov rax, qword [rdi]                                                                                                                                  |     rax = *(rdi);
    0x00415cff mov rsi, rbx                                                                                                                                          |     rsi = rbx;
    0x00415d02 call qword [rax + 0x18]                                                                                                                               |     uint64_t (*rax + 0x18)() ();
    0x00415d05 jmp 0x415b5b                                                                                                                                          |     goto label_6;
                                                                                                                                                                     | }
