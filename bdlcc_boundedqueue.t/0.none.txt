    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bdlcc_boundedqueue.t/none @ 0x416ae0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::BoundedQueue_my_WorkRequest____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::BoundedQueue_my_WorkReques ()          | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::BoundedQueue_my_WorkRequest_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::BoundedQueue_my_WorkReques (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::BoundedQueue<my_WorkRequest>*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlcc::BoundedQueue<my_WorkRequest>*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::BoundedQueue<my_WorkRequest>*), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlcc::BoundedQueue<my_WorkRequest>*> > const&, BloombergLP::bslma::Allocator*) */
    0x00416ae0 push rbp                                                                                                                                                                                                                                                              |     
    0x00416ae1 push r15                                                                                                                                                                                                                                                              |     
    0x00416ae3 push r14                                                                                                                                                                                                                                                              |     
    0x00416ae5 push r13                                                                                                                                                                                                                                                              |     
    0x00416ae7 push r12                                                                                                                                                                                                                                                              |     
    0x00416ae9 push rbx                                                                                                                                                                                                                                                              |     
    0x00416aea push rax                                                                                                                                                                                                                                                              |     
    0x00416aeb mov r14, rcx                                                                                                                                                                                                                                                          |     r14 = rcx;
    0x00416aee mov r12, rdx                                                                                                                                                                                                                                                          |     r12 = rdx;
    0x00416af1 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x00416af4 mov qword [rsp], rdi                                                                                                                                                                                                                                                  |     *(rsp) = rdi;
    0x00416af8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x00416afd je 0x416b05                                                                                                                                                                                                                                                           |         
    0x00416aff mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                           |         r13 = *((r15 + 0x18));
    0x00416b03 jmp 0x416b09                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x00416b05 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                                 |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                     |     }
    0x00416b09 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                           |     rbp = *((r15 + 0x30));
    0x00416b0d test r14, r14                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (r14 == 0) {
    0x00416b10 jne 0x416b26                                                                                                                                                                                                                                                          |         
    0x00416b12 mov r14, qword [rip + 0x24501f]                                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00416b19 test r14, r14                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x00416b1c jne 0x416b26                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00416b1e call 0x418980                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00416b23 mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x00416b26 mov rax, qword [r14]                                                                                                                                                                                                                                                  |     rax = *(r14);
    0x00416b29 mov esi, 0x48                                                                                                                                                                                                                                                         |     esi = 0x48;
    0x00416b2e mov rdi, r14                                                                                                                                                                                                                                                          |     rdi = r14;
    0x00416b31 call qword [rax + 0x10]                                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00416b34 mov rbx, rax                                                                                                                                                                                                                                                          |     rbx = rax;
    0x00416b37 mov qword [rax], 0x416c50                                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::BoundedQueue_my_WorkRequest____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlcc::BoundedQueue_my_WorkRequest______::i;
    0x00416b3e mov rax, qword [r12]                                                                                                                                                                                                                                                  |     rax = *(r12);
    0x00416b42 mov qword [rbx + 8], rax                                                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x00416b46 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                              |     rax = *((r12 + 8));
    0x00416b4b mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                           |     *((rbx + 0x10)) = rax;
    0x00416b4f lea rdi, [rbx + 0x18]                                                                                                                                                                                                                                                 |     
    0x00416b53 mov qword [rbx + 0x18], 0                                                                                                                                                                                                                                             |     *((rbx + 0x18)) = 0;
    0x00416b5b mov qword [rbx + 0x40], r14                                                                                                                                                                                                                                           |     *((rbx + 0x40)) = r14;
    0x00416b5f movaps xmm0, xmmword [rip + 0x29f9a]                                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00416b66 movups xmmword [rbx + 0x30], xmm0                                                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x30], xmm0");
    0x00416b6a mov ecx, 0x441e63                                                                                                                                                                                                                                                     |     
    0x00416b6f mov rsi, r13                                                                                                                                                                                                                                                          |     
    0x00416b72 mov rdx, rbp                                                                                                                                                                                                                                                          |     
    0x00416b75 call 0x41cb30                                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x18, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00416b7a mov edx, 0x419a70                                                                                                                                                                                                                                                     |     
    0x00416b7f mov rdi, qword [rsp]                                                                                                                                                                                                                                                  |     
    0x00416b83 mov rsi, r15                                                                                                                                                                                                                                                          |     
    0x00416b86 mov rcx, rbx                                                                                                                                                                                                                                                          |     
    0x00416b89 call 0x41a140                                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00416b8e mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x00416b90 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x00416b92 je 0x416bbd                                                                                                                                                                                                                                                           |         
    0x00416b94 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x38)) != 0x17) {
    0x00416b99 je 0x416ba9                                                                                                                                                                                                                                                           |             
    0x00416b9b mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                                           |             rsi = *((rbx + 0x18));
    0x00416b9f mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                                           |             rdi = *((rbx + 0x40));
    0x00416ba3 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00416ba6 call qword [rax + 0x18]                                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00416ba9 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                            |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x00416bb1 mov rax, qword [r14]                                                                                                                                                                                                                                                  |         rax = *(r14);
    0x00416bb4 mov rdi, r14                                                                                                                                                                                                                                                          |         rdi = r14;
    0x00416bb7 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x00416bba call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x00416bbd mov eax, ebp                                                                                                                                                                                                                                                          |     eax = ebp;
    0x00416bbf add rsp, 8                                                                                                                                                                                                                                                            |     
    0x00416bc3 pop rbx                                                                                                                                                                                                                                                               |     
    0x00416bc4 pop r12                                                                                                                                                                                                                                                               |     
    0x00416bc6 pop r13                                                                                                                                                                                                                                                               |     
    0x00416bc8 pop r14                                                                                                                                                                                                                                                               |     
    0x00416bca pop r15                                                                                                                                                                                                                                                               |     
    0x00416bcc pop rbp                                                                                                                                                                                                                                                               |     
    0x00416bcd ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
