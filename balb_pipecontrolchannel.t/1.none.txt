    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balb_pipecontrolchannel.t/none @ 0x410950 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::balb::PipeControlChannel::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel______unsigned_lon ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::balb::PipeControlChannel::_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel_unsigned_lon (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::balb::PipeControlChannel::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::balb::PipeControlChannel*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::balb::PipeControlChannel::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::balb::PipeControlChannel*> > const&, BloombergLP::bslma::Allocator*) */
    0x00410950 push rbp                                                                                                                                                                                                                                                          |     
    0x00410951 push r15                                                                                                                                                                                                                                                          |     
    0x00410953 push r14                                                                                                                                                                                                                                                          |     
    0x00410955 push r13                                                                                                                                                                                                                                                          |     
    0x00410957 push r12                                                                                                                                                                                                                                                          |     
    0x00410959 push rbx                                                                                                                                                                                                                                                          |     
    0x0041095a push rax                                                                                                                                                                                                                                                          |     
    0x0041095b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041095e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00410961 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00410964 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00410968 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041096d je 0x410975                                                                                                                                                                                                                                                       |         
    0x0041096f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x00410973 jmp 0x410979                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00410975 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00410979 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041097d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x00410980 jne 0x410996                                                                                                                                                                                                                                                      |         
    0x00410982 mov r14, qword [rip + 0x264587]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00410989 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041098c jne 0x410996                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041098e call 0x4197b0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00410993 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00410996 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00410999 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x0041099e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004109a1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004109a4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004109a7 mov qword [rax], 0x410ac0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::balb::PipeControlChannel::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel_____::invokerFunction_void_;
    0x004109ae movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x004109b3 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004109b7 mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x004109bc mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x004109c0 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x004109c4 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x004109cc mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x004109d0 movaps xmm0, xmmword [rip + 0x2faa9]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x004109d7 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x004109db mov ecx, 0x441299                                                                                                                                                                                                                                                 |     
    0x004109e0 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x004109e3 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x004109e6 call 0x41e2a0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004109eb mov edx, 0x41a8a0                                                                                                                                                                                                                                                 |     
    0x004109f0 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004109f4 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004109f7 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004109fa call 0x41af70                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004109ff mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00410a01 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00410a03 je 0x410a2e                                                                                                                                                                                                                                                       |         
    0x00410a05 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x00410a0a je 0x410a1a                                                                                                                                                                                                                                                       |             
    0x00410a0c mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x00410a10 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x00410a14 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00410a17 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00410a1a mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00410a22 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00410a25 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00410a28 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00410a2b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00410a2e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00410a30 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00410a34 pop rbx                                                                                                                                                                                                                                                           |     
    0x00410a35 pop r12                                                                                                                                                                                                                                                           |     
    0x00410a37 pop r13                                                                                                                                                                                                                                                           |     
    0x00410a39 pop r14                                                                                                                                                                                                                                                           |     
    0x00410a3b pop r15                                                                                                                                                                                                                                                           |     
    0x00410a3d pop rbp                                                                                                                                                                                                                                                           |     
    0x00410a3e ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
