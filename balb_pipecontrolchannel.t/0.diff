000000000040f470 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin	000000000040f470 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 04	subq	$24, %rsp							   |	000000000000000a: 01	pushq	%rax
000000000000000e: 03	movq	%rcx, %r14							   |	000000000000000b: 03	movq	%rcx, %r14
0000000000000011: 03	movq	%rdx, %r13							   |	000000000000000e: 03	movq	%rdx, %r12
0000000000000014: 03	movq	%rsi, %rbp							   |	0000000000000011: 03	movq	%rsi, %r15
0000000000000017: 05	movq	%rdi, 8(%rsp)							   |	0000000000000014: 05	cmpq	$23, 56(%rsi)
000000000000001c: 04	movq	56(%rsi), %r15							   |	0000000000000019: 04	movq	%rdi, (%rsp)
0000000000000020: 04	movq	24(%rsi), %r12							   |	000000000000001d: 02	je	0x40f495 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000024: 04	movq	48(%rsi), %rax							   |	000000000000001f: 04	movq	24(%r15), %r13
0000000000000028: 05	movq	%rax, 16(%rsp)							   |	0000000000000023: 02	jmp	0x40f499 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000002d: 03	movq	(%rcx), %rax							   |	0000000000000025: 04	leaq	24(%r15), %r13
0000000000000030: 05	movl	$168, %esi							   |	0000000000000029: 04	movq	48(%r15), %rbp
0000000000000035: 03	movq	%rcx, %rdi							   |	000000000000002d: 03	testq	%r14, %r14
0000000000000038: 03	callq	*16(%rax)							   |	0000000000000030: 02	jne	0x40f4b6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000003b: 03	movq	%rax, %rbx							   |	0000000000000032: 07	movq	2513511(%rip), %r14  # 674f10 <BloombergLP::bslma::Default::s_de
000000000000003e: 07	movq	$4257504, (%rax)						   |	0000000000000039: 03	testq	%r14, %r14
0000000000000045: 04	movq	(%r13), %rax							   |	000000000000003c: 02	jne	0x40f4b6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000049: 04	movq	%rax, 8(%rbx)							   |	000000000000003e: 05	callq	0x4197b0 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000004d: 04	leaq	16(%rbx), %rdi							   |	0000000000000043: 03	movq	%rax, %r14
0000000000000051: 04	leaq	8(%r13), %rsi							   |	0000000000000046: 03	movq	(%r14), %rax
0000000000000055: 03	movq	%r14, %rdx							   |	0000000000000049: 05	movl	$168, %esi
0000000000000058: 05	callq	0x40f210 <BloombergLP::bdlf::Bind_BoundTuple3<bsl::basic_string<   |	000000000000004e: 03	movq	%r14, %rdi
000000000000005d: 04	leaq	24(%rbp), %rax							   |	0000000000000051: 03	callq	*16(%rax)
0000000000000061: 04	cmpq	$23, %r15							   |	0000000000000054: 03	movq	%rax, %rbx
0000000000000065: 04	cmoveq	%rax, %r12							   |	0000000000000057: 07	movq	$4257520, (%rax)
0000000000000069: 03	movq	%rbx, %rdi							   |	000000000000005e: 04	movq	(%r12), %rax
000000000000006c: 04	addq	$120, %rdi							   |	0000000000000062: 04	movq	%rax, 8(%rbx)
0000000000000070: 08	movq	$0, 120(%rbx)							   |	0000000000000066: 04	leaq	16(%rbx), %rdi
0000000000000078: 07	movq	%r14, 160(%rbx)							   |	000000000000006a: 04	addq	$8, %r12
000000000000007f: 07	movaps	199802(%rip), %xmm0  # 440170 <__dso_handle+0x8>		   |	000000000000006e: 03	movq	%r12, %rsi
0000000000000086: 07	movups	%xmm0, 144(%rbx)						   |	0000000000000071: 03	movq	%r14, %rdx
000000000000008d: 05	movl	$4460429, %ecx							   |	0000000000000074: 05	callq	0x40f210 <BloombergLP::bdlf::Bind_BoundTuple3<bsl::basic_string<
0000000000000092: 03	movq	%r12, %rsi							   |	0000000000000079: 03	movq	%rbx, %rdi
0000000000000095: 05	movq	16(%rsp), %rdx							   |	000000000000007c: 04	addq	$120, %rdi
000000000000009a: 05	callq	0x41dfd0 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000080: 08	movq	$0, 120(%rbx)
000000000000009f: 05	movl	$4302320, %edx							   |	0000000000000088: 07	movq	%r14, 160(%rbx)
00000000000000a4: 05	movq	8(%rsp), %rdi							   |	000000000000008f: 07	movaps	200570(%rip), %xmm0  # 440480 <__dso_handle+0x8>
00000000000000a9: 03	movq	%rbp, %rsi							   |	0000000000000096: 07	movups	%xmm0, 144(%rbx)
00000000000000ac: 03	movq	%rbx, %rcx							   |	000000000000009d: 05	movl	$4461209, %ecx
00000000000000af: 05	callq	0x41acc0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	00000000000000a2: 03	movq	%r13, %rsi
00000000000000b4: 02	movl	%eax, %ebp							   |	00000000000000a5: 03	movq	%rbp, %rdx
00000000000000b6: 02	testl	%eax, %eax							   |	00000000000000a8: 05	callq	0x41e2a0 <bsl::basic_string<char, std::__1::char_traits<char>, b
00000000000000b8: 02	je	0x40f596 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000ad: 05	movl	$4303008, %edx
00000000000000ba: 08	cmpq	$23, 152(%rbx)							   |	00000000000000b2: 04	movq	(%rsp), %rdi
00000000000000c2: 02	je	0x40f545 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000b6: 03	movq	%r15, %rsi
00000000000000c4: 04	movq	120(%rbx), %rsi							   |	00000000000000b9: 03	movq	%rbx, %rcx
00000000000000c8: 07	movq	160(%rbx), %rdi							   |	00000000000000bc: 05	callq	0x41af70 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000cf: 03	movq	(%rdi), %rax							   |	00000000000000c1: 02	movl	%eax, %ebp
00000000000000d2: 03	callq	*24(%rax)							   |	00000000000000c3: 02	testl	%eax, %eax
00000000000000d5: 11	movq	$-1, 144(%rbx)							   |	00000000000000c5: 02	je	0x40f5a3 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000e0: 05	cmpq	$23, 96(%rbx)							   |	00000000000000c7: 08	cmpq	$23, 152(%rbx)
00000000000000e5: 02	je	0x40f565 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000cf: 02	je	0x40f552 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000e7: 04	movq	64(%rbx), %rsi							   |	00000000000000d1: 04	movq	120(%rbx), %rsi
00000000000000eb: 04	movq	104(%rbx), %rdi							   |	00000000000000d5: 07	movq	160(%rbx), %rdi
00000000000000ef: 03	movq	(%rdi), %rax							   |	00000000000000dc: 03	movq	(%rdi), %rax
00000000000000f2: 03	callq	*24(%rax)							   |	00000000000000df: 03	callq	*24(%rax)
00000000000000f5: 08	movq	$-1, 88(%rbx)							   |	00000000000000e2: 11	movq	$-1, 144(%rbx)
00000000000000fd: 05	cmpq	$23, 48(%rbx)							   |	00000000000000ed: 05	cmpq	$23, 96(%rbx)
0000000000000102: 02	je	0x40f582 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000f2: 02	je	0x40f572 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000104: 04	movq	16(%rbx), %rsi							   |	00000000000000f4: 04	movq	64(%rbx), %rsi
0000000000000108: 04	movq	56(%rbx), %rdi							   |	00000000000000f8: 04	movq	104(%rbx), %rdi
000000000000010c: 03	movq	(%rdi), %rax							   |	00000000000000fc: 03	movq	(%rdi), %rax
000000000000010f: 03	callq	*24(%rax)							   |	00000000000000ff: 03	callq	*24(%rax)
0000000000000112: 08	movq	$-1, 40(%rbx)							   |	0000000000000102: 08	movq	$-1, 88(%rbx)
000000000000011a: 03	movq	(%r14), %rax							   |	000000000000010a: 05	cmpq	$23, 48(%rbx)
000000000000011d: 03	movq	%r14, %rdi							   |	000000000000010f: 02	je	0x40f58f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000120: 03	movq	%rbx, %rsi							   |	0000000000000111: 04	movq	16(%rbx), %rsi
0000000000000123: 03	callq	*24(%rax)							   |	0000000000000115: 04	movq	56(%rbx), %rdi
0000000000000126: 02	movl	%ebp, %eax							   |	0000000000000119: 03	movq	(%rdi), %rax
0000000000000128: 04	addq	$24, %rsp							   |	000000000000011c: 03	callq	*24(%rax)
000000000000012c: 01	popq	%rbx								   |	000000000000011f: 08	movq	$-1, 40(%rbx)
000000000000012d: 02	popq	%r12								   |	0000000000000127: 03	movq	(%r14), %rax
000000000000012f: 02	popq	%r13								   |	000000000000012a: 03	movq	%r14, %rdi
0000000000000131: 02	popq	%r14								   |	000000000000012d: 03	movq	%rbx, %rsi
0000000000000133: 02	popq	%r15								   |	0000000000000130: 03	callq	*24(%rax)
0000000000000135: 01	popq	%rbp								   |	0000000000000133: 02	movl	%ebp, %eax
0000000000000136: 01	retq									   |	0000000000000135: 04	addq	$8, %rsp
0000000000000137: 03	movq	%rax, %rdi							   |	0000000000000139: 01	popq	%rbx
000000000000013a: 05	callq	0x40dc50 <__clang_call_terminate>				   |	000000000000013a: 02	popq	%r12
000000000000013f: 03	movq	%rax, %rdi							   |	000000000000013c: 02	popq	%r13
0000000000000142: 05	callq	0x40dc50 <__clang_call_terminate>				   |	000000000000013e: 02	popq	%r14
0000000000000147: 03	movq	%rax, %rdi							   |	0000000000000140: 02	popq	%r15
000000000000014a: 05	callq	0x40dc50 <__clang_call_terminate>				   |	0000000000000142: 01	popq	%rbp
000000000000014f: 03	movq	%rax, %rdi							   |	0000000000000143: 01	retq	
0000000000000152: 05	callq	0x40dc50 <__clang_call_terminate>				   |	0000000000000144: 03	movq	%rax, %rdi
0000000000000157: 03	movq	%rax, %r15							   |	0000000000000147: 05	callq	0x40dc50 <__clang_call_terminate>
000000000000015a: 08	cmpq	$23, 152(%rbx)							   |	000000000000014c: 03	movq	%rax, %rdi
0000000000000162: 02	je	0x40f5e5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000014f: 05	callq	0x40dc50 <__clang_call_terminate>
0000000000000164: 04	movq	120(%rbx), %rsi							   |	0000000000000154: 03	movq	%rax, %rdi
0000000000000168: 07	movq	160(%rbx), %rdi							   |	0000000000000157: 05	callq	0x40dc50 <__clang_call_terminate>
000000000000016f: 03	movq	(%rdi), %rax							   |	000000000000015c: 03	movq	%rax, %rdi
0000000000000172: 03	callq	*24(%rax)							   |	000000000000015f: 05	callq	0x40dc50 <__clang_call_terminate>
0000000000000175: 11	movq	$-1, 144(%rbx)							   |	0000000000000164: 03	movq	%rax, %r15
0000000000000180: 05	cmpq	$23, 96(%rbx)							   |	0000000000000167: 08	cmpq	$23, 152(%rbx)
0000000000000185: 02	je	0x40f605 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000016f: 02	je	0x40f5f2 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000187: 04	movq	64(%rbx), %rsi							   |	0000000000000171: 04	movq	120(%rbx), %rsi
000000000000018b: 04	movq	104(%rbx), %rdi							   |	0000000000000175: 07	movq	160(%rbx), %rdi
000000000000018f: 03	movq	(%rdi), %rax							   |	000000000000017c: 03	movq	(%rdi), %rax
0000000000000192: 03	callq	*24(%rax)							   |	000000000000017f: 03	callq	*24(%rax)
0000000000000195: 08	movq	$-1, 88(%rbx)							   |	0000000000000182: 11	movq	$-1, 144(%rbx)
000000000000019d: 05	cmpq	$23, 48(%rbx)							   |	000000000000018d: 05	cmpq	$23, 96(%rbx)
00000000000001a2: 02	je	0x40f622 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000192: 02	je	0x40f612 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000001a4: 04	movq	16(%rbx), %rsi							   |	0000000000000194: 04	movq	64(%rbx), %rsi
00000000000001a8: 04	movq	56(%rbx), %rdi							   |	0000000000000198: 04	movq	104(%rbx), %rdi
00000000000001ac: 03	movq	(%rdi), %rax							   |	000000000000019c: 03	movq	(%rdi), %rax
00000000000001af: 03	callq	*24(%rax)							   |	000000000000019f: 03	callq	*24(%rax)
00000000000001b2: 08	movq	$-1, 40(%rbx)							   |	00000000000001a2: 08	movq	$-1, 88(%rbx)
00000000000001ba: 03	movq	(%r14), %rax							   |	00000000000001aa: 05	cmpq	$23, 48(%rbx)
00000000000001bd: 03	movq	%r14, %rdi							   |	00000000000001af: 02	je	0x40f62f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000001c0: 03	movq	%rbx, %rsi							   |	00000000000001b1: 04	movq	16(%rbx), %rsi
00000000000001c3: 03	callq	*24(%rax)							   |	00000000000001b5: 04	movq	56(%rbx), %rdi
00000000000001c6: 05	jmp	0x40f6c4 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000001b9: 03	movq	(%rdi), %rax
00000000000001cb: 03	movq	%rax, %rdi							   |	00000000000001bc: 03	callq	*24(%rax)
00000000000001ce: 05	callq	0x40dc50 <__clang_call_terminate>				   |	00000000000001bf: 08	movq	$-1, 40(%rbx)
00000000000001d3: 03	movq	%rax, %rdi							   |	00000000000001c7: 03	movq	(%r14), %rax
00000000000001d6: 05	callq	0x40dc50 <__clang_call_terminate>				   |	00000000000001ca: 03	movq	%r14, %rdi
00000000000001db: 03	movq	%rax, %rdi							   |	00000000000001cd: 03	movq	%rbx, %rsi
00000000000001de: 05	callq	0x40dc50 <__clang_call_terminate>				   |	00000000000001d0: 03	callq	*24(%rax)
00000000000001e3: 03	movq	%rax, %rdi							   |	00000000000001d3: 05	jmp	0x40f6d1 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000001e6: 05	callq	0x40dc50 <__clang_call_terminate>				   |	00000000000001d8: 03	movq	%rax, %rdi
00000000000001eb: 03	movq	%rax, %r15							   |	00000000000001db: 05	callq	0x40dc50 <__clang_call_terminate>
00000000000001ee: 11	movq	$0, 144(%rbx)							   |	00000000000001e0: 03	movq	%rax, %rdi
00000000000001f9: 05	cmpq	$23, 96(%rbx)							   |	00000000000001e3: 05	callq	0x40dc50 <__clang_call_terminate>
00000000000001fe: 02	je	0x40f67e <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000001e8: 03	movq	%rax, %rdi
0000000000000200: 04	movq	64(%rbx), %rsi							   |	00000000000001eb: 05	callq	0x40dc50 <__clang_call_terminate>
0000000000000204: 04	movq	104(%rbx), %rdi							   |	00000000000001f0: 03	movq	%rax, %rdi
0000000000000208: 03	movq	(%rdi), %rax							   |	00000000000001f3: 05	callq	0x40dc50 <__clang_call_terminate>
000000000000020b: 03	callq	*24(%rax)							   |	00000000000001f8: 03	movq	%rax, %r15
000000000000020e: 08	movq	$-1, 88(%rbx)							   |	00000000000001fb: 11	movq	$0, 144(%rbx)
0000000000000216: 05	cmpq	$23, 48(%rbx)							   |	0000000000000206: 05	cmpq	$23, 96(%rbx)
000000000000021b: 02	je	0x40f69b <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000020b: 02	je	0x40f68b <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000021d: 04	movq	16(%rbx), %rsi							   |	000000000000020d: 04	movq	64(%rbx), %rsi
0000000000000221: 04	movq	56(%rbx), %rdi							   |	0000000000000211: 04	movq	104(%rbx), %rdi
0000000000000225: 03	movq	(%rdi), %rax							   |	0000000000000215: 03	movq	(%rdi), %rax
0000000000000228: 03	callq	*24(%rax)							   |	0000000000000218: 03	callq	*24(%rax)
000000000000022b: 08	movq	$-1, 40(%rbx)							   |	000000000000021b: 08	movq	$-1, 88(%rbx)
0000000000000233: 02	jmp	0x40f6b8 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000223: 05	cmpq	$23, 48(%rbx)
0000000000000235: 03	movq	%rax, %rdi							   |	0000000000000228: 02	je	0x40f6a8 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000238: 05	callq	0x40dc50 <__clang_call_terminate>				   |	000000000000022a: 04	movq	16(%rbx), %rsi
000000000000023d: 03	movq	%rax, %rdi							   |	000000000000022e: 04	movq	56(%rbx), %rdi
0000000000000240: 05	callq	0x40dc50 <__clang_call_terminate>				   |	0000000000000232: 03	movq	(%rdi), %rax
0000000000000245: 03	movq	%rax, %r15							   |	0000000000000235: 03	callq	*24(%rax)
0000000000000248: 03	movq	(%r14), %rax							   |	0000000000000238: 08	movq	$-1, 40(%rbx)
000000000000024b: 03	movq	%r14, %rdi							   |	0000000000000240: 02	jmp	0x40f6c5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000024e: 03	movq	%rbx, %rsi							   |	0000000000000242: 03	movq	%rax, %rdi
0000000000000251: 03	callq	*24(%rax)							   |	0000000000000245: 05	callq	0x40dc50 <__clang_call_terminate>
0000000000000254: 03	movq	%r15, %rdi							   |	000000000000024a: 03	movq	%rax, %rdi
0000000000000257: 05	callq	0x406220 <_Unwind_Resume@plt>					   |	000000000000024d: 05	callq	0x40dc50 <__clang_call_terminate>
000000000000025c: 03	movq	%rax, %rdi							   |	0000000000000252: 03	movq	%rax, %r15
000000000000025f: 05	callq	0x40dc50 <__clang_call_terminate>				   |	0000000000000255: 03	movq	(%r14), %rax
0000000000000264: 10	nopw	%cs:(%rax,%rax)							   |	0000000000000258: 03	movq	%r14, %rdi
000000000000026e: 02	nop									   |	000000000000025b: 03	movq	%rbx, %rsi
												   >	000000000000025e: 03	callq	*24(%rax)
												   >	0000000000000261: 03	movq	%r15, %rdi
												   >	0000000000000264: 05	callq	0x406220 <_Unwind_Resume@plt>
												   >	0000000000000269: 03	movq	%rax, %rdi
												   >	000000000000026c: 05	callq	0x40dc50 <__clang_call_terminate>
												   >	0000000000000271: 10	nopw	%cs:(%rax,%rax)
												   >	000000000000027b: 05	nopl	(%rax,%rax)
