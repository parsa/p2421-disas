    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balb_pipecontrolchannel.t/assume @ 0x410940 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::balb::PipeControlChannel::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel______unsigned_lon ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::balb::PipeControlChannel::_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel_unsigned_lon (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::balb::PipeControlChannel::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::balb::PipeControlChannel*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::balb::PipeControlChannel::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::balb::PipeControlChannel*> > const&, BloombergLP::bslma::Allocator*) */
    0x00410940 push rbp                                                                                                                                                                                                                                                          |     
    0x00410941 push r15                                                                                                                                                                                                                                                          |     
    0x00410943 push r14                                                                                                                                                                                                                                                          |     
    0x00410945 push r13                                                                                                                                                                                                                                                          |     
    0x00410947 push r12                                                                                                                                                                                                                                                          |     
    0x00410949 push rbx                                                                                                                                                                                                                                                          |     
    0x0041094a push rax                                                                                                                                                                                                                                                          |     
    0x0041094b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041094e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00410951 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00410954 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00410958 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041095c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x00410961 je 0x410969                                                                                                                                                                                                                                                       |         
    0x00410963 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x00410967 jmp 0x41096d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00410969 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041096d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00410970 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x00410975 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00410978 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041097b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041097e mov qword [rax], 0x410a90                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::balb::PipeControlChannel::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::balb::PipeControlChannel_____::invokerFunction_void_;
    0x00410985 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x0041098a movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0041098e mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x00410993 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00410997 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x0041099b mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x004109a3 mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x004109a7 movaps xmm0, xmmword [rip + 0x2f7c2]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x004109ae movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x004109b2 mov ecx, 0x440f8d                                                                                                                                                                                                                                                 |     
    0x004109b7 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x004109ba mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x004109bd call 0x41dfd0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004109c2 mov edx, 0x41a5f0                                                                                                                                                                                                                                                 |     
    0x004109c7 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004109cb mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004109ce mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004109d1 call 0x41acc0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004109d6 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004109d8 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004109da je 0x410a05                                                                                                                                                                                                                                                       |         
    0x004109dc cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x004109e1 je 0x4109f1                                                                                                                                                                                                                                                       |             
    0x004109e3 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x004109e7 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x004109eb mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004109ee call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004109f1 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x004109f9 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004109fc mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004109ff mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00410a02 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00410a05 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00410a07 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00410a0b pop rbx                                                                                                                                                                                                                                                           |     
    0x00410a0c pop r12                                                                                                                                                                                                                                                           |     
    0x00410a0e pop r13                                                                                                                                                                                                                                                           |     
    0x00410a10 pop r14                                                                                                                                                                                                                                                           |     
    0x00410a12 pop r15                                                                                                                                                                                                                                                           |     
    0x00410a14 pop rbp                                                                                                                                                                                                                                                           |     
    0x00410a15 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
