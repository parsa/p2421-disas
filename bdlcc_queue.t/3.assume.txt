    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_queue.t/assume @ 0x41cb30 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____seqtst3::Control___BloombergLP::bdlf::Bind_BoundTuple1_seqtst3::Control______unsigned_long__BloombergLP::bslmt::ThreadAttributes_co ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_seqtst3::Control_BloombergLP::bdlf::Bind_BoundTuple1_seqtst3::Control_unsigned_long_BloombergLP::bslmt::ThreadAttributes_co (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(seqtst3::Control*), BloombergLP::bdlf::Bind_BoundTuple1<seqtst3::Control*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(seqtst3::Control*), BloombergLP::bdlf::Bind_BoundTuple1<seqtst3::Control*> > const&, BloombergLP::bslma::Allocator*) */
    0x0041cb30 push rbp                                                                                                                                                                                                                                                          |     
    0x0041cb31 push r15                                                                                                                                                                                                                                                          |     
    0x0041cb33 push r14                                                                                                                                                                                                                                                          |     
    0x0041cb35 push r13                                                                                                                                                                                                                                                          |     
    0x0041cb37 push r12                                                                                                                                                                                                                                                          |     
    0x0041cb39 push rbx                                                                                                                                                                                                                                                          |     
    0x0041cb3a push rax                                                                                                                                                                                                                                                          |     
    0x0041cb3b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041cb3e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0041cb41 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041cb44 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0041cb48 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041cb4c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041cb51 je 0x41cb59                                                                                                                                                                                                                                                       |         
    0x0041cb53 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x0041cb57 jmp 0x41cb5d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041cb59 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041cb5d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041cb60 mov esi, 0x48                                                                                                                                                                                                                                                     |     esi = 0x48;
    0x0041cb65 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041cb68 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041cb6b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041cb6e mov qword [rax], 0x41cc80                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____seqtst3::Control___BloombergLP::bdlf::Bind_BoundTuple1_seqtst3::Control_____::invokerFunction_void_;
    0x0041cb75 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x0041cb79 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041cb7d mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x0041cb82 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0041cb86 lea rdi, [rbx + 0x18]                                                                                                                                                                                                                                             |     
    0x0041cb8a mov qword [rbx + 0x18], 0                                                                                                                                                                                                                                         |     *((rbx + 0x18)) = 0;
    0x0041cb92 mov qword [rbx + 0x40], r14                                                                                                                                                                                                                                       |     *((rbx + 0x40)) = r14;
    0x0041cb96 movaps xmm0, xmmword [rip + 0x2c033]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041cb9d movups xmmword [rbx + 0x30], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x30], xmm0");
    0x0041cba1 mov ecx, 0x449f1d                                                                                                                                                                                                                                                 |     
    0x0041cba6 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0041cba9 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0041cbac call 0x426630                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x18, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041cbb1 mov edx, 0x423030                                                                                                                                                                                                                                                 |     
    0x0041cbb6 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0041cbba mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041cbbd mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041cbc0 call 0x423770                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041cbc5 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041cbc7 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041cbc9 je 0x41cbf4                                                                                                                                                                                                                                                       |         
    0x0041cbcb cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x38)) != 0x17) {
    0x0041cbd0 je 0x41cbe0                                                                                                                                                                                                                                                       |             
    0x0041cbd2 mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x18));
    0x0041cbd6 mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x40));
    0x0041cbda mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041cbdd call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041cbe0 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x0041cbe8 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041cbeb mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041cbee mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041cbf1 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041cbf4 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041cbf6 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041cbfa pop rbx                                                                                                                                                                                                                                                           |     
    0x0041cbfb pop r12                                                                                                                                                                                                                                                           |     
    0x0041cbfd pop r13                                                                                                                                                                                                                                                           |     
    0x0041cbff pop r14                                                                                                                                                                                                                                                           |     
    0x0041cc01 pop r15                                                                                                                                                                                                                                                           |     
    0x0041cc03 pop rbp                                                                                                                                                                                                                                                           |     
    0x0041cc04 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
