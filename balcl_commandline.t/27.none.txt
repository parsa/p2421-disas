    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balcl_commandline.t/none @ 0x46e030 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_long_long__bsl::function_bool__long_long_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______12_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char ()       | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_long_long_bsl::function_bool_long_long_const_std::_1::basic_ostream_char_std::_1::char_traits_char_12_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                                                 |     int64_t var_20h;
                                                                                                                                                                                                                                                                                 |     int64_t var_28h;
                                                                                                                                                                                                                                                                                 |     int64_t var_30h;
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<long long, bsl::function<bool (long long const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 12>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046e030 push rbp                                                                                                                                                                                                                                                          |     
    0x0046e031 push r15                                                                                                                                                                                                                                                          |     
    0x0046e033 push r14                                                                                                                                                                                                                                                          |     
    0x0046e035 push r13                                                                                                                                                                                                                                                          |     
    0x0046e037 push r12                                                                                                                                                                                                                                                          |     
    0x0046e039 push rbx                                                                                                                                                                                                                                                          |     
    0x0046e03a sub rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e03e mov r13, rcx                                                                                                                                                                                                                                                      |     r13 = rcx;
    0x0046e041 mov r15, rdx                                                                                                                                                                                                                                                      |     r15 = rdx;
    0x0046e044 mov r14, rsi                                                                                                                                                                                                                                                      |     r14 = rsi;
    0x0046e047 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0046e04a mov rdi, rsi                                                                                                                                                                                                                                                      |     
    0x0046e04d call 0x465850                                                                                                                                                                                                                                                     |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046e052 lea ecx, [rax - 8]                                                                                                                                                                                                                                                |     ecx = rax - 8;
    0x0046e055 xor ebp, ebp                                                                                                                                                                                                                                                      |     ebp = 0;
    0x0046e057 cmp eax, 0xa                                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (eax >= 0xa) {
    0x0046e05a cmovge ebp, ecx                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046e05d cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                      |     
    0x0046e062 mov rsi, r13                                                                                                                                                                                                                                                      |     rsi = r13;
                                                                                                                                                                                                                                                                                 |     if (*((r13 + 0x20)) != 0x17) {
    0x0046e065 je 0x46e06b                                                                                                                                                                                                                                                       |         
    0x0046e067 mov rsi, qword [r13]                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046e06b lea rdi, [rsp + 8]                                                                                                                                                                                                                                                |     
    0x0046e070 mov edx, ebp                                                                                                                                                                                                                                                      |     
    0x0046e072 call 0x46ff90                                                                                                                                                                                                                                                     |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r13), ebp, rcx, r8);
    0x0046e077 test al, al                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                 |     if (al != 0) {
    0x0046e079 je 0x46e0c6                                                                                                                                                                                                                                                       |         
    0x0046e07b mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                       |         rax = *((r12 + 0x50));
    0x0046e080 test rax, rax                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rax != 0) {
    0x0046e083 je 0x46e09e                                                                                                                                                                                                                                                       |             
    0x0046e085 add r12, 0x10                                                                                                                                                                                                                                                     |             r12 += 0x10;
    0x0046e089 lea rsi, [rsp + 8]                                                                                                                                                                                                                                                |             rsi = rsp + 8;
    0x0046e08e mov rdi, r12                                                                                                                                                                                                                                                      |             rdi = r12;
    0x0046e091 mov rdx, r15                                                                                                                                                                                                                                                      |             rdx = r15;
    0x0046e094 call rax                                                                                                                                                                                                                                                          |             al = void (*rax)() ();
    0x0046e096 test al, al                                                                                                                                                                                                                                                       |             
                                                                                                                                                                                                                                                                                 |             if (al == 0) {
    0x0046e098 je 0x46e142                                                                                                                                                                                                                                                       |                 goto label_0;
                                                                                                                                                                                                                                                                                 |             }
                                                                                                                                                                                                                                                                                 |         }
    0x0046e09e mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                       |         eax = *((r14 + 0x40));
    0x0046e0a2 dec eax                                                                                                                                                                                                                                                           |         eax--;
    0x0046e0a4 cmp eax, 0x13                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (eax > 0x13) {
    0x0046e0a7 ja 0x46e234                                                                                                                                                                                                                                                       |             goto label_1;
                                                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                                                 |         /* switch table (20 cases) at 0x4b0610 */
    0x0046e0ad jmp qword [rax*8 + 0x4b0610]                                                                                                                                                                                                                                      |         
    0x0046e0b4 lea rax, [r14 + 0x20]                                                                                                                                                                                                                                             |         rax = r14 + 0x20;
    0x0046e0b8 cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e0bb jne 0x46e216                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e0c1 jmp 0x46e183                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0046e0c6 add ebp, 0xfffffffe                                                                                                                                                                                                                                               |         ebp += 0xfffffffe;
    0x0046e0c9 mov ebx, 0x4b4147                                                                                                                                                                                                                                                 |         ebx = "An unknown type";
    0x0046e0ce cmp ebp, 7                                                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                                                 |         if (ebp <= 7) {
    0x0046e0d1 ja 0x46e0de                                                                                                                                                                                                                                                       |             
    0x0046e0d3 movsxd rax, ebp                                                                                                                                                                                                                                                   |             rax = (int64_t) ebp;
    0x0046e0d6 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                 |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                 |         }
    0x0046e0de mov rdi, rbx                                                                                                                                                                                                                                                      |         
    0x0046e0e1 call 0x4046c0                                                                                                                                                                                                                                                     |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046e0e6 mov rdi, r15                                                                                                                                                                                                                                                      |         
    0x0046e0e9 mov rsi, rbx                                                                                                                                                                                                                                                      |         
    0x0046e0ec mov rdx, rax                                                                                                                                                                                                                                                      |         
    0x0046e0ef call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, rbx, rax);
    0x0046e0f4 mov esi, 0x4b40bd                                                                                                                                                                                                                                                 |         
    0x0046e0f9 mov edx, 0x21                                                                                                                                                                                                                                                     |         
    0x0046e0fe mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e101 call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046e106 mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e109 mov rsi, r13                                                                                                                                                                                                                                                      |         
    0x0046e10c call 0x44f6f0                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046e111 mov esi, 0x4b004d                                                                                                                                                                                                                                                 |         
    0x0046e116 mov edx, 1                                                                                                                                                                                                                                                        |         
    0x0046e11b mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e11e call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046e123 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                        |         *((rsp + 0x10)) = 0xa;
    0x0046e128 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |         
    0x0046e12d mov edx, 1                                                                                                                                                                                                                                                        |         
    0x0046e132 mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e135 call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046e13a mov rdi, rax                                                                                                                                                                                                                                                      |         rdi = rax;
    0x0046e13d call 0x404980                                                                                                                                                                                                                                                     |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                 | label_0:
    0x0046e142 xor eax, eax                                                                                                                                                                                                                                                      |         eax = 0;
    0x0046e144 jmp 0x46e225                                                                                                                                                                                                                                                      |         goto label_3;
    0x0046e149 lea rax, [r14 + 8]                                                                                                                                                                                                                                                |         rax = r14 + 8;
    0x0046e14d cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e150 jne 0x46e216                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e156 jmp 0x46e183                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e158 lea rax, [r14 + 1]                                                                                                                                                                                                                                                |         rax = r14 + 1;
    0x0046e15c cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e15f jne 0x46e216                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e165 jmp 0x46e183                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e167 lea rax, [r14 + 4]                                                                                                                                                                                                                                                |         rax = r14 + 4;
    0x0046e16b cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e16e jne 0x46e216                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e174 jmp 0x46e183                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e176 lea rax, [r14 + 0x30]                                                                                                                                                                                                                                             |         rax = r14 + 0x30;
    0x0046e17a cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e17d jne 0x46e216                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_4:
    0x0046e183 xorps xmm0, xmm0                                                                                                                                                                                                                                                  |     __asm ("xorps xmm0, xmm0");
    0x0046e186 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                 |     *((rsp + 0x10)) = xmm0;
    0x0046e18b mov qword [rsp + 0x20], 0                                                                                                                                                                                                                                         |     *((rsp + 0x20)) = 0;
    0x0046e194 mov rax, qword [rip + 0x297a8d]                                                                                                                                                                                                                                   |     rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046e19b test rax, rax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rax == 0) {
    0x0046e19e jne 0x46e1a5                                                                                                                                                                                                                                                      |         
    0x0046e1a0 call 0x47ce20                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0046e1a5 mov qword [rsp + 0x28], rax                                                                                                                                                                                                                                       |     *((rsp + 0x28)) = rax;
    0x0046e1aa mov rbx, qword [r14 + 0x28]                                                                                                                                                                                                                                       |     rbx = *((r14 + 0x28));
    0x0046e1ae cmp byte [r14 + 0x20], 0                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                 |     if (*((r14 + 0x20)) != 0) {
    0x0046e1b3 je 0x46e1cc                                                                                                                                                                                                                                                       |         
    0x0046e1b5 mov byte [r14 + 0x20], 0                                                                                                                                                                                                                                          |         *((r14 + 0x20)) = 0;
    0x0046e1ba mov rsi, qword [r14]                                                                                                                                                                                                                                              |         rsi = *(r14);
    0x0046e1bd test rsi, rsi                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rsi == 0) {
    0x0046e1c0 je 0x46e1cc                                                                                                                                                                                                                                                       |             goto label_5;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e1c2 mov rdi, qword [r14 + 0x18]                                                                                                                                                                                                                                       |         rdi = *((r14 + 0x18));
    0x0046e1c6 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x0046e1c9 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_5:
    0x0046e1cc test rbx, rbx                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rbx == 0) {
    0x0046e1cf jne 0x46e1e5                                                                                                                                                                                                                                                      |         
    0x0046e1d1 mov rbx, qword [rip + 0x297a50]                                                                                                                                                                                                                                   |         rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046e1d8 test rbx, rbx                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rbx != 0) {
    0x0046e1db jne 0x46e1e5                                                                                                                                                                                                                                                      |             goto label_6;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e1dd call 0x47ce20                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0046e1e2 mov rbx, rax                                                                                                                                                                                                                                                      |         rbx = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_6:
    0x0046e1e5 mov qword [rsp + 0x30], rbx                                                                                                                                                                                                                                       |     *((rsp + 0x30)) = rbx;
    0x0046e1ea lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |     
    0x0046e1ef lea rdx, [rsp + 0x30]                                                                                                                                                                                                                                             |     
    0x0046e1f4 mov rdi, r14                                                                                                                                                                                                                                                      |     
    0x0046e1f7 call 0x498380                                                                                                                                                                                                                                                     |     bsl::vector<long long,bsl::allocator<long long>>::vector(bsl::vector<long long,bsl::allocator<long long>>const&,bsl::allocator<long long>const&) (r14, rsp + 0x10, rsp + 0x30);
    0x0046e1fc mov byte [r14 + 0x20], 1                                                                                                                                                                                                                                          |     *((r14 + 0x20)) = 1;
    0x0046e201 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                                                                       |     rsi = *((rsp + 0x10));
    0x0046e206 test rsi, rsi                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rsi != 0) {
    0x0046e209 je 0x46e216                                                                                                                                                                                                                                                       |         
    0x0046e20b mov rdi, qword [rsp + 0x28]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x28));
    0x0046e210 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x0046e213 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_2:
    0x0046e216 lea rsi, [rsp + 8]                                                                                                                                                                                                                                                |     
    0x0046e21b mov rdi, r14                                                                                                                                                                                                                                                      |     
    0x0046e21e call 0x498d10                                                                                                                                                                                                                                                     |     bsl::vector<long long,bsl::allocator<long long>>::push_back(long longconst&) (r14, rsp + 8);
    0x0046e223 mov al, 1                                                                                                                                                                                                                                                         |     al = 1;
                                                                                                                                                                                                                                                                                 | label_3:
    0x0046e225 add rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e229 pop rbx                                                                                                                                                                                                                                                           |     
    0x0046e22a pop r12                                                                                                                                                                                                                                                           |     
    0x0046e22c pop r13                                                                                                                                                                                                                                                           |     
    0x0046e22e pop r14                                                                                                                                                                                                                                                           |     
    0x0046e230 pop r15                                                                                                                                                                                                                                                           |     
    0x0046e232 pop rbp                                                                                                                                                                                                                                                           |     
    0x0046e233 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | label_1:
    0x0046e234 ud2                                                                                                                                                                                                                                                               |     __asm ("ud2");
                                                                                                                                                                                                                                                                                 | }
