000000000045f5e0 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b   |	000000000045efa0 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf::TypeList<BloombergLP::b
0000000000000000: 02	pushq	%r15									0000000000000000: 02	pushq	%r15
0000000000000002: 02	pushq	%r14									0000000000000002: 02	pushq	%r14
0000000000000004: 01	pushq	%rbx									0000000000000004: 01	pushq	%rbx
0000000000000005: 03	movq	%rdi, %r14							   |	0000000000000005: 02	decl	%edx
0000000000000008: 02	decl	%edx								   |	0000000000000007: 03	cmpl	$16, %edx
000000000000000a: 07	jmpq	*4911952(,%rdx,8)						   |	000000000000000a: 06	ja	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000011: 05	cmpb	$0, 8(%r14)							   |	0000000000000010: 03	movq	%rdi, %r14
0000000000000016: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000013: 07	jmpq	*4912824(,%rdx,8)
000000000000001c: 05	movb	$0, 8(%r14)							   |	000000000000001a: 05	cmpb	$0, 8(%r14)
0000000000000021: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000001f: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000026: 05	cmpb	$0, 1(%r14)							   |	0000000000000025: 05	movb	$0, 8(%r14)
000000000000002b: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000002a: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000031: 05	movb	$0, 1(%r14)							   |	000000000000002f: 05	cmpb	$0, 1(%r14)
0000000000000036: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000034: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000003b: 05	cmpb	$0, 4(%r14)							   |	000000000000003a: 05	movb	$0, 1(%r14)
0000000000000040: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000003f: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000046: 05	movb	$0, 4(%r14)							   |	0000000000000044: 05	cmpb	$0, 4(%r14)
000000000000004b: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000049: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000050: 05	cmpb	$0, 48(%r14)							   |	000000000000004f: 05	movb	$0, 4(%r14)
0000000000000055: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000054: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000005b: 05	movb	$0, 48(%r14)							   |	0000000000000059: 05	cmpb	$0, 48(%r14)
0000000000000060: 05	cmpq	$23, 32(%r14)							   |	000000000000005e: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000065: 02	je	0x45f654 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000064: 05	movb	$0, 48(%r14)
0000000000000067: 03	movq	(%r14), %rsi							   |	0000000000000069: 05	cmpq	$23, 32(%r14)
000000000000006a: 04	movq	40(%r14), %rdi							   |	000000000000006e: 02	je	0x45f01d <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000006e: 03	movq	(%rdi), %rax							   |	0000000000000070: 03	movq	(%r14), %rsi
0000000000000071: 03	callq	*24(%rax)							   |	0000000000000073: 04	movq	40(%r14), %rdi
0000000000000074: 08	movq	$-1, 24(%r14)							   |	0000000000000077: 03	movq	(%rdi), %rax
000000000000007c: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000007a: 03	callq	*24(%rax)
0000000000000081: 05	cmpb	$0, 32(%r14)							   |	000000000000007d: 08	movq	$-1, 24(%r14)
0000000000000086: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000085: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000008c: 05	movb	$0, 32(%r14)							   |	000000000000008a: 05	cmpb	$0, 32(%r14)
0000000000000091: 03	movq	(%r14), %rsi							   |	000000000000008f: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000094: 03	testq	%rsi, %rsi							   |	0000000000000095: 05	movb	$0, 32(%r14)
0000000000000097: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000009a: 03	movq	(%r14), %rsi
000000000000009d: 04	movq	24(%r14), %rdi							   |	000000000000009d: 03	testq	%rsi, %rsi
00000000000000a1: 03	movq	(%rdi), %rax							   |	00000000000000a0: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000a4: 03	callq	*24(%rax)							   |	00000000000000a6: 04	movq	24(%r14), %rdi
00000000000000a7: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000aa: 03	movq	(%rdi), %rax
00000000000000ac: 05	cmpb	$0, 32(%r14)							   |	00000000000000ad: 03	callq	*24(%rax)
00000000000000b1: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000b0: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000b7: 05	movb	$0, 32(%r14)							   |	00000000000000b5: 05	cmpb	$0, 32(%r14)
00000000000000bc: 03	movq	(%r14), %rsi							   |	00000000000000ba: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000bf: 03	testq	%rsi, %rsi							   |	00000000000000c0: 05	movb	$0, 32(%r14)
00000000000000c2: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000c5: 03	movq	(%r14), %rsi
00000000000000c8: 04	movq	24(%r14), %rdi							   |	00000000000000c8: 03	testq	%rsi, %rsi
00000000000000cc: 03	movq	(%rdi), %rax							   |	00000000000000cb: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000cf: 03	callq	*24(%rax)							   |	00000000000000d1: 04	movq	24(%r14), %rdi
00000000000000d2: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000d5: 03	movq	(%rdi), %rax
00000000000000d7: 05	cmpb	$0, 32(%r14)							   |	00000000000000d8: 03	callq	*24(%rax)
00000000000000dc: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000db: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000e2: 05	movb	$0, 32(%r14)							   |	00000000000000e0: 05	cmpb	$0, 32(%r14)
00000000000000e7: 03	movq	(%r14), %rsi							   |	00000000000000e5: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000ea: 03	testq	%rsi, %rsi							   |	00000000000000eb: 05	movb	$0, 32(%r14)
00000000000000ed: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000000f0: 03	movq	(%r14), %rsi
00000000000000f3: 04	movq	24(%r14), %rdi							   |	00000000000000f3: 03	testq	%rsi, %rsi
00000000000000f7: 03	movq	(%rdi), %rax							   |	00000000000000f6: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000000fa: 03	callq	*24(%rax)							   |	00000000000000fc: 04	movq	24(%r14), %rdi
00000000000000fd: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000100: 03	movq	(%rdi), %rax
0000000000000102: 05	cmpb	$0, 32(%r14)							   |	0000000000000103: 03	callq	*24(%rax)
0000000000000107: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000106: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000010d: 05	movb	$0, 32(%r14)							   |	000000000000010b: 05	cmpb	$0, 32(%r14)
0000000000000112: 03	movq	(%r14), %rsi							   |	0000000000000110: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000115: 03	testq	%rsi, %rsi							   |	0000000000000116: 05	movb	$0, 32(%r14)
0000000000000118: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000011b: 03	movq	(%r14), %rsi
000000000000011e: 04	movq	24(%r14), %rdi							   |	000000000000011e: 03	testq	%rsi, %rsi
0000000000000122: 03	movq	(%rdi), %rax							   |	0000000000000121: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000125: 03	callq	*24(%rax)							   |	0000000000000127: 04	movq	24(%r14), %rdi
0000000000000128: 05	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000012b: 03	movq	(%rdi), %rax
000000000000012d: 05	cmpb	$0, 32(%r14)							   |	000000000000012e: 03	callq	*24(%rax)
0000000000000132: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000131: 05	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000138: 05	movb	$0, 32(%r14)							   |	0000000000000136: 05	cmpb	$0, 32(%r14)
000000000000013d: 03	movq	(%r14), %rbx							   |	000000000000013b: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000140: 03	testq	%rbx, %rbx							   |	0000000000000141: 05	movb	$0, 32(%r14)
0000000000000143: 06	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000146: 03	movq	(%r14), %rbx
0000000000000149: 04	movq	8(%r14), %r15							   |	0000000000000149: 03	testq	%rbx, %rbx
000000000000014d: 03	cmpq	%r15, %rbx							   |	000000000000014c: 06	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000150: 02	jne	0x45f751 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000152: 04	movq	8(%r14), %r15
0000000000000152: 05	jmp	0x45f7ca <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000156: 03	cmpq	%r15, %rbx
0000000000000157: 09	nopw	(%rax,%rax)							   |	0000000000000159: 02	jne	0x45f111 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
												   >	000000000000015b: 05	jmp	0x45f18a <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000160: 08	movq	$-1, 24(%rbx)								0000000000000160: 08	movq	$-1, 24(%rbx)
0000000000000168: 04	addq	$48, %rbx								0000000000000168: 04	addq	$48, %rbx
000000000000016c: 03	cmpq	%rbx, %r15								000000000000016c: 03	cmpq	%rbx, %r15
000000000000016f: 02	je	0x45f7c7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000016f: 02	je	0x45f187 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000171: 05	cmpq	$23, 32(%rbx)								0000000000000171: 05	cmpq	$23, 32(%rbx)
0000000000000176: 02	je	0x45f740 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000176: 02	je	0x45f100 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000178: 03	movq	(%rbx), %rsi								0000000000000178: 03	movq	(%rbx), %rsi
000000000000017b: 04	movq	40(%rbx), %rdi								000000000000017b: 04	movq	40(%rbx), %rdi
000000000000017f: 03	movq	(%rdi), %rax								000000000000017f: 03	movq	(%rdi), %rax
0000000000000182: 03	callq	*24(%rax)								0000000000000182: 03	callq	*24(%rax)
0000000000000185: 02	jmp	0x45f740 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000185: 02	jmp	0x45f100 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
0000000000000187: 05	cmpb	$0, 32(%r14)								0000000000000187: 05	cmpb	$0, 32(%r14)
000000000000018c: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	000000000000018c: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000018e: 05	movb	$0, 32(%r14)								000000000000018e: 05	movb	$0, 32(%r14)
0000000000000193: 03	movq	(%r14), %rsi								0000000000000193: 03	movq	(%r14), %rsi
0000000000000196: 03	testq	%rsi, %rsi								0000000000000196: 03	testq	%rsi, %rsi
0000000000000199: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	0000000000000199: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
000000000000019b: 04	movq	24(%r14), %rdi								000000000000019b: 04	movq	24(%r14), %rdi
000000000000019f: 03	movq	(%rdi), %rax								000000000000019f: 03	movq	(%rdi), %rax
00000000000001a2: 03	callq	*24(%rax)								00000000000001a2: 03	callq	*24(%rax)
00000000000001a5: 02	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001a5: 02	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001a7: 05	cmpb	$0, 32(%r14)								00000000000001a7: 05	cmpb	$0, 32(%r14)
00000000000001ac: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001ac: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001ae: 05	movb	$0, 32(%r14)								00000000000001ae: 05	movb	$0, 32(%r14)
00000000000001b3: 03	movq	(%r14), %rsi								00000000000001b3: 03	movq	(%r14), %rsi
00000000000001b6: 03	testq	%rsi, %rsi								00000000000001b6: 03	testq	%rsi, %rsi
00000000000001b9: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001b9: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001bb: 04	movq	24(%r14), %rdi								00000000000001bb: 04	movq	24(%r14), %rdi
00000000000001bf: 03	movq	(%rdi), %rax								00000000000001bf: 03	movq	(%rdi), %rax
00000000000001c2: 03	callq	*24(%rax)								00000000000001c2: 03	callq	*24(%rax)
00000000000001c5: 02	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001c5: 02	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001c7: 05	cmpb	$0, 32(%r14)								00000000000001c7: 05	cmpb	$0, 32(%r14)
00000000000001cc: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001cc: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001ce: 05	movb	$0, 32(%r14)								00000000000001ce: 05	movb	$0, 32(%r14)
00000000000001d3: 03	movq	(%r14), %rsi								00000000000001d3: 03	movq	(%r14), %rsi
00000000000001d6: 03	testq	%rsi, %rsi								00000000000001d6: 03	testq	%rsi, %rsi
00000000000001d9: 02	je	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001d9: 02	je	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001db: 04	movq	24(%r14), %rdi								00000000000001db: 04	movq	24(%r14), %rdi
00000000000001df: 03	movq	(%rdi), %rax								00000000000001df: 03	movq	(%rdi), %rax
00000000000001e2: 03	callq	*24(%rax)								00000000000001e2: 03	callq	*24(%rax)
00000000000001e5: 02	jmp	0x45f7d7 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:   |	00000000000001e5: 02	jmp	0x45f197 <void BloombergLP::bdlb::VariantImp<BloombergLP::bslmf:
00000000000001e7: 03	movq	(%r14), %rbx								00000000000001e7: 03	movq	(%r14), %rbx
00000000000001ea: 04	movq	24(%r14), %rdi								00000000000001ea: 04	movq	24(%r14), %rdi
00000000000001ee: 03	movq	(%rdi), %rax								00000000000001ee: 03	movq	(%rdi), %rax
00000000000001f1: 03	movq	%rbx, %rsi								00000000000001f1: 03	movq	%rbx, %rsi
00000000000001f4: 03	callq	*24(%rax)								00000000000001f4: 03	callq	*24(%rax)
00000000000001f7: 01	popq	%rbx									00000000000001f7: 01	popq	%rbx
00000000000001f8: 02	popq	%r14									00000000000001f8: 02	popq	%r14
00000000000001fa: 02	popq	%r15									00000000000001fa: 02	popq	%r15
00000000000001fc: 01	retq										00000000000001fc: 01	retq	
00000000000001fd: 03	movq	%rax, %rdi								00000000000001fd: 03	movq	%rax, %rdi
0000000000000200: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000200: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000205: 03	movq	%rax, %rdi								0000000000000205: 03	movq	%rax, %rdi
0000000000000208: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000208: 05	callq	0x450f10 <__clang_call_terminate>
000000000000020d: 03	movq	%rax, %rdi								000000000000020d: 03	movq	%rax, %rdi
0000000000000210: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000210: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000215: 03	movq	%rax, %rdi								0000000000000215: 03	movq	%rax, %rdi
0000000000000218: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000218: 05	callq	0x450f10 <__clang_call_terminate>
000000000000021d: 03	movq	%rax, %rdi								000000000000021d: 03	movq	%rax, %rdi
0000000000000220: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000220: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000225: 03	movq	%rax, %rdi								0000000000000225: 03	movq	%rax, %rdi
0000000000000228: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000228: 05	callq	0x450f10 <__clang_call_terminate>
000000000000022d: 03	movq	%rax, %rdi								000000000000022d: 03	movq	%rax, %rdi
0000000000000230: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000230: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000235: 03	movq	%rax, %rdi								0000000000000235: 03	movq	%rax, %rdi
0000000000000238: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000238: 05	callq	0x450f10 <__clang_call_terminate>
000000000000023d: 03	movq	%rax, %rdi								000000000000023d: 03	movq	%rax, %rdi
0000000000000240: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000240: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000245: 03	movq	%rax, %rdi								0000000000000245: 03	movq	%rax, %rdi
0000000000000248: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000248: 05	callq	0x450f10 <__clang_call_terminate>
000000000000024d: 03	nopl	(%rax)									000000000000024d: 03	nopl	(%rax)
