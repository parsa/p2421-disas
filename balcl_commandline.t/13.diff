0000000000469fa0 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::function<bool (BloombergLP::b   |	00000000004699d0 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::function<bool (BloombergLP::b
0000000000000000: 02	pushq	%r15									0000000000000000: 02	pushq	%r15
0000000000000002: 02	pushq	%r14									0000000000000002: 02	pushq	%r14
0000000000000004: 02	pushq	%r13									0000000000000004: 02	pushq	%r13
0000000000000006: 02	pushq	%r12									0000000000000006: 02	pushq	%r12
0000000000000008: 01	pushq	%rbx									0000000000000008: 01	pushq	%rbx
0000000000000009: 03	movq	%rsi, %r15								0000000000000009: 03	movq	%rsi, %r15
000000000000000c: 03	movq	%rdi, %r13								000000000000000c: 03	movq	%rdi, %r13
000000000000000f: 03	cmpl	$7, (%rdi)							   |	000000000000000f: 02	movl	(%rdi), %eax
0000000000000012: 06	jne	0x46a098 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000011: 03	cmpl	$15, %eax
0000000000000018: 04	movq	32(%r13), %r12							   |	0000000000000014: 06	je	0x469ad3 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
000000000000001c: 04	movq	(%r12), %rax							   |	000000000000001a: 03	cmpl	$7, %eax
0000000000000020: 05	movl	$96, %esi							   |	000000000000001d: 06	jne	0x469baa <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000025: 03	movq	%r12, %rdi							   |	0000000000000023: 04	movq	32(%r13), %r12
0000000000000028: 03	callq	*16(%rax)							   |	0000000000000027: 04	movq	(%r12), %rax
000000000000002b: 03	movq	%rax, %rbx							   |	000000000000002b: 05	movl	$96, %esi
000000000000002e: 03	movq	%rax, %r14							   |	0000000000000030: 03	movq	%r12, %rdi
0000000000000031: 04	movq	32(%r13), %rax							   |	0000000000000033: 03	callq	*16(%rax)
0000000000000035: 07	movq	$4918032, (%rbx)						   |	0000000000000036: 03	movq	%rax, %rbx
000000000000003c: 03	testq	%rax, %rax							   |	0000000000000039: 03	movq	%rax, %r14
000000000000003f: 02	jne	0x469ff2 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000003c: 04	movq	32(%r13), %rax
0000000000000041: 07	movq	2731072(%rip), %rax  # 704c28 <BloombergLP::bslma::Default::s_de   |	0000000000000040: 07	movq	$4919088, (%rbx)
0000000000000048: 03	testq	%rax, %rax							   |	0000000000000047: 03	testq	%rax, %rax
000000000000004b: 02	jne	0x469ff2 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000004a: 02	jne	0x469a2d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
000000000000004d: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000004c: 07	movq	2736645(%rip), %rax  # 705c28 <BloombergLP::bslma::Default::s_de
0000000000000052: 04	movq	%rax, 64(%r14)							   |	0000000000000053: 03	testq	%rax, %rax
0000000000000056: 03	xorps	%xmm0, %xmm0							   |	0000000000000056: 02	jne	0x469a2d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000059: 05	movups	%xmm0, 72(%r14)							   |	0000000000000058: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000005e: 04	addq	$16, %rbx							   |	000000000000005d: 04	movq	%rax, 64(%r14)
0000000000000062: 03	movq	%rbx, %rdi							   |	0000000000000061: 03	xorps	%xmm0, %xmm0
0000000000000065: 03	movq	%r15, %rsi							   |	0000000000000064: 05	movups	%xmm0, 72(%r14)
0000000000000068: 05	callq	0x47f970 <BloombergLP::bslstl::Function_Rep::copyInit(BloombergL   |	0000000000000069: 04	addq	$16, %rbx
000000000000006d: 04	movq	32(%r13), %r15							   |	000000000000006d: 03	movq	%rbx, %rdi
0000000000000071: 03	movq	%r15, %r12							   |	0000000000000070: 03	movq	%r15, %rsi
0000000000000074: 03	testq	%r15, %r15							   |	0000000000000073: 05	callq	0x47fcd0 <BloombergLP::bslstl::Function_Rep::copyInit(BloombergL
0000000000000077: 02	jne	0x46a02d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000078: 04	movq	32(%r13), %r15
0000000000000079: 07	movq	2731016(%rip), %r12  # 704c28 <BloombergLP::bslma::Default::s_de   |	000000000000007c: 03	movq	%r15, %r12
0000000000000080: 03	testq	%r12, %r12							   |	000000000000007f: 03	testq	%r15, %r15
0000000000000083: 02	jne	0x46a02d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000082: 02	jne	0x469a68 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000085: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	0000000000000084: 07	movq	2736589(%rip), %r12  # 705c28 <BloombergLP::bslma::Default::s_de
000000000000008a: 03	movq	%rax, %r12							   |	000000000000008b: 03	testq	%r12, %r12
000000000000008d: 04	movq	(%r12), %rax							   |	000000000000008e: 02	jne	0x469a68 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000091: 05	movl	$40, %esi							   |	0000000000000090: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000096: 03	movq	%r12, %rdi							   |	0000000000000095: 03	movq	%rax, %r12
0000000000000099: 03	callq	*16(%rax)							   |	0000000000000098: 04	movq	(%r12), %rax
000000000000009c: 03	movq	%rax, %rbx							   |	000000000000009c: 05	movl	$40, %esi
000000000000009f: 10	movabsq	$4294967298, %rax						   |	00000000000000a1: 03	movq	%r12, %rdi
00000000000000a9: 04	movq	%rax, 8(%rbx)							   |	00000000000000a4: 03	callq	*16(%rax)
00000000000000ad: 07	movq	$4928808, (%rbx)						   |	00000000000000a7: 03	movq	%rax, %rbx
00000000000000b4: 03	testq	%r15, %r15							   |	00000000000000aa: 10	movabsq	$4294967298, %rax
00000000000000b7: 02	jne	0x46a06d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000000b4: 04	movq	%rax, 8(%rbx)
00000000000000b9: 07	movq	2730952(%rip), %rax  # 704c28 <BloombergLP::bslma::Default::s_de   |	00000000000000b8: 07	movq	$4929864, (%rbx)
00000000000000c0: 03	testq	%rax, %rax							   |	00000000000000bf: 03	testq	%r15, %r15
00000000000000c3: 02	jne	0x46a06a <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000000c2: 02	jne	0x469aa8 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000000c5: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000000c4: 07	movq	2736525(%rip), %rax  # 705c28 <BloombergLP::bslma::Default::s_de
00000000000000ca: 03	movq	%rax, %r15							   |	00000000000000cb: 03	testq	%rax, %rax
00000000000000cd: 04	movq	%r15, 16(%rbx)							   |	00000000000000ce: 02	jne	0x469aa5 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000000d1: 04	movq	%r14, 24(%rbx)							   |	00000000000000d0: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000000d5: 04	movq	%r12, 32(%rbx)							   |	00000000000000d5: 03	movq	%rax, %r15
00000000000000d9: 04	movq	%r14, 16(%r13)							   |	00000000000000d8: 04	movq	%r15, 16(%rbx)
00000000000000dd: 04	movq	24(%r13), %rdi							   |	00000000000000dc: 04	movq	%r14, 24(%rbx)
00000000000000e1: 04	movq	%rbx, 24(%r13)							   |	00000000000000e0: 04	movq	%r12, 32(%rbx)
00000000000000e5: 03	testq	%rdi, %rdi							   |	00000000000000e4: 04	movq	%r14, 16(%r13)
00000000000000e8: 06	je	0x46a16f <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000000e8: 04	movq	24(%r13), %rdi
00000000000000ee: 05	callq	0x47d3f0 <BloombergLP::bslma::SharedPtrRep::releaseRef()>	   |	00000000000000ec: 04	movq	%rbx, 24(%r13)
00000000000000f3: 05	jmp	0x46a16f <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000000f0: 03	testq	%rdi, %rdi
00000000000000f8: 04	movq	32(%r13), %r12							   |	00000000000000f3: 06	je	0x469baa <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000000fc: 04	movq	(%r12), %rax							   |	00000000000000f9: 05	callq	0x47d740 <BloombergLP::bslma::SharedPtrRep::releaseRef()>
0000000000000100: 05	movl	$96, %esi							   |	00000000000000fe: 05	jmp	0x469baa <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000105: 03	movq	%r12, %rdi							   |	0000000000000103: 04	movq	32(%r13), %r12
0000000000000108: 03	callq	*16(%rax)							   |	0000000000000107: 04	movq	(%r12), %rax
000000000000010b: 03	movq	%rax, %rbx							   |	000000000000010b: 05	movl	$96, %esi
000000000000010e: 03	movq	%rax, %r14							   |	0000000000000110: 03	movq	%r12, %rdi
0000000000000111: 04	movq	32(%r13), %rax							   |	0000000000000113: 03	callq	*16(%rax)
0000000000000115: 07	movq	$4919928, (%rbx)						   |	0000000000000116: 03	movq	%rax, %rbx
000000000000011c: 03	testq	%rax, %rax							   |	0000000000000119: 03	movq	%rax, %r14
000000000000011f: 02	jne	0x46a0d2 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000011c: 04	movq	32(%r13), %rax
0000000000000121: 07	movq	2730848(%rip), %rax  # 704c28 <BloombergLP::bslma::Default::s_de   |	0000000000000120: 07	movq	$4920984, (%rbx)
0000000000000128: 03	testq	%rax, %rax							   |	0000000000000127: 03	testq	%rax, %rax
000000000000012b: 02	jne	0x46a0d2 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000012a: 02	jne	0x469b0d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
000000000000012d: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000012c: 07	movq	2736421(%rip), %rax  # 705c28 <BloombergLP::bslma::Default::s_de
0000000000000132: 04	movq	%rax, 64(%r14)							   |	0000000000000133: 03	testq	%rax, %rax
0000000000000136: 03	xorps	%xmm0, %xmm0							   |	0000000000000136: 02	jne	0x469b0d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000139: 05	movups	%xmm0, 72(%r14)							   |	0000000000000138: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000013e: 04	addq	$16, %rbx							   |	000000000000013d: 04	movq	%rax, 64(%r14)
0000000000000142: 03	movq	%rbx, %rdi							   |	0000000000000141: 03	xorps	%xmm0, %xmm0
0000000000000145: 03	movq	%r15, %rsi							   |	0000000000000144: 05	movups	%xmm0, 72(%r14)
0000000000000148: 05	callq	0x47f970 <BloombergLP::bslstl::Function_Rep::copyInit(BloombergL   |	0000000000000149: 04	addq	$16, %rbx
000000000000014d: 04	movq	32(%r13), %r15							   |	000000000000014d: 03	movq	%rbx, %rdi
0000000000000151: 03	movq	%r15, %r12							   |	0000000000000150: 03	movq	%r15, %rsi
0000000000000154: 03	testq	%r15, %r15							   |	0000000000000153: 05	callq	0x47fcd0 <BloombergLP::bslstl::Function_Rep::copyInit(BloombergL
0000000000000157: 02	jne	0x46a10d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000158: 04	movq	32(%r13), %r15
0000000000000159: 07	movq	2730792(%rip), %r12  # 704c28 <BloombergLP::bslma::Default::s_de   |	000000000000015c: 03	movq	%r15, %r12
0000000000000160: 03	testq	%r12, %r12							   |	000000000000015f: 03	testq	%r15, %r15
0000000000000163: 02	jne	0x46a10d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000162: 02	jne	0x469b48 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000165: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	0000000000000164: 07	movq	2736365(%rip), %r12  # 705c28 <BloombergLP::bslma::Default::s_de
000000000000016a: 03	movq	%rax, %r12							   |	000000000000016b: 03	testq	%r12, %r12
000000000000016d: 04	movq	(%r12), %rax							   |	000000000000016e: 02	jne	0x469b48 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000171: 05	movl	$40, %esi							   |	0000000000000170: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000176: 03	movq	%r12, %rdi							   |	0000000000000175: 03	movq	%rax, %r12
0000000000000179: 03	callq	*16(%rax)							   |	0000000000000178: 04	movq	(%r12), %rax
000000000000017c: 03	movq	%rax, %rbx							   |	000000000000017c: 05	movl	$40, %esi
000000000000017f: 10	movabsq	$4294967298, %rax						   |	0000000000000181: 03	movq	%r12, %rdi
0000000000000189: 04	movq	%rax, 8(%rbx)							   |	0000000000000184: 03	callq	*16(%rax)
000000000000018d: 07	movq	$4929104, (%rbx)						   |	0000000000000187: 03	movq	%rax, %rbx
0000000000000194: 03	testq	%r15, %r15							   |	000000000000018a: 10	movabsq	$4294967298, %rax
0000000000000197: 02	jne	0x46a14d <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000194: 04	movq	%rax, 8(%rbx)
0000000000000199: 07	movq	2730728(%rip), %rax  # 704c28 <BloombergLP::bslma::Default::s_de   |	0000000000000198: 07	movq	$4930160, (%rbx)
00000000000001a0: 03	testq	%rax, %rax							   |	000000000000019f: 03	testq	%r15, %r15
00000000000001a3: 02	jne	0x46a14a <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000001a2: 02	jne	0x469b88 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000001a5: 05	callq	0x47cad0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000001a4: 07	movq	2736301(%rip), %rax  # 705c28 <BloombergLP::bslma::Default::s_de
00000000000001aa: 03	movq	%rax, %r15							   |	00000000000001ab: 03	testq	%rax, %rax
00000000000001ad: 04	movq	%r15, 16(%rbx)							   |	00000000000001ae: 02	jne	0x469b85 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000001b1: 04	movq	%r14, 24(%rbx)							   |	00000000000001b0: 05	callq	0x47ce20 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000001b5: 04	movq	%r12, 32(%rbx)							   |	00000000000001b5: 03	movq	%rax, %r15
00000000000001b9: 04	movq	%r14, 16(%r13)							   |	00000000000001b8: 04	movq	%r15, 16(%rbx)
00000000000001bd: 04	movq	24(%r13), %rdi							   |	00000000000001bc: 04	movq	%r14, 24(%rbx)
00000000000001c1: 04	movq	%rbx, 24(%r13)							   |	00000000000001c0: 04	movq	%r12, 32(%rbx)
00000000000001c5: 03	testq	%rdi, %rdi							   |	00000000000001c4: 04	movq	%r14, 16(%r13)
00000000000001c8: 02	je	0x46a16f <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000001c8: 04	movq	24(%r13), %rdi
00000000000001ca: 05	callq	0x47d3f0 <BloombergLP::bslma::SharedPtrRep::releaseRef()>	   |	00000000000001cc: 04	movq	%rbx, 24(%r13)
00000000000001cf: 01	popq	%rbx								   |	00000000000001d0: 03	testq	%rdi, %rdi
00000000000001d0: 02	popq	%r12								   |	00000000000001d3: 02	je	0x469baa <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000001d2: 02	popq	%r13								   |	00000000000001d5: 05	callq	0x47d740 <BloombergLP::bslma::SharedPtrRep::releaseRef()>
00000000000001d4: 02	popq	%r14								   |	00000000000001da: 01	popq	%rbx
00000000000001d6: 02	popq	%r15								   |	00000000000001db: 02	popq	%r12
00000000000001d8: 01	retq									   |	00000000000001dd: 02	popq	%r13
00000000000001d9: 03	movq	%rax, %r13							   |	00000000000001df: 02	popq	%r14
00000000000001dc: 04	movq	(%r12), %rax							   |	00000000000001e1: 02	popq	%r15
00000000000001e0: 03	movq	%r12, %rdi							   |	00000000000001e3: 01	retq	
00000000000001e3: 03	movq	%rbx, %rsi							   |	00000000000001e4: 03	movq	%rax, %r13
00000000000001e6: 03	callq	*24(%rax)							   |	00000000000001e7: 04	movq	(%r12), %rax
00000000000001e9: 05	jmp	0x46a214 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000001eb: 03	movq	%r12, %rdi
00000000000001ee: 03	movq	%rax, %rdi							   |	00000000000001ee: 03	movq	%rbx, %rsi
00000000000001f1: 05	callq	0x451530 <__clang_call_terminate>				   |	00000000000001f1: 03	callq	*24(%rax)
00000000000001f6: 03	movq	%rax, %r13							   |	00000000000001f4: 05	jmp	0x469c4f <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
00000000000001f9: 02	jmp	0x46a1d8 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	00000000000001f9: 03	movq	%rax, %rdi
00000000000001fb: 03	movq	%rax, %r13							   |	00000000000001fc: 05	callq	0x450f10 <__clang_call_terminate>
00000000000001fe: 04	movq	(%r12), %rax							   |	0000000000000201: 03	movq	%rax, %r13
0000000000000202: 03	movq	%r12, %rdi							   |	0000000000000204: 02	jmp	0x469c13 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000205: 03	movq	%rbx, %rsi							   |	0000000000000206: 03	movq	%rax, %r13
0000000000000208: 03	callq	*24(%rax)							   |	0000000000000209: 04	movq	(%r12), %rax
000000000000020b: 05	jmp	0x46a23c <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000020d: 03	movq	%r12, %rdi
0000000000000210: 03	movq	%rax, %rdi							   |	0000000000000210: 03	movq	%rbx, %rsi
0000000000000213: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000213: 03	callq	*24(%rax)
0000000000000218: 03	movq	%rax, %r13							   |	0000000000000216: 05	jmp	0x469c77 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
000000000000021b: 02	jmp	0x46a1fa <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	000000000000021b: 03	movq	%rax, %rdi
000000000000021d: 03	movq	%rax, %rdi							   |	000000000000021e: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000220: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000223: 03	movq	%rax, %r13
0000000000000225: 03	movq	%rax, %rdi							   |	0000000000000226: 02	jmp	0x469c35 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000228: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000228: 03	movq	%rax, %rdi
000000000000022d: 03	movq	%rax, %r13							   |	000000000000022b: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000230: 03	movq	%rbx, %rdi							   |	0000000000000230: 03	movq	%rax, %rdi
0000000000000233: 05	callq	0x47f8e0 <BloombergLP::bslstl::Function_Rep::~Function_Rep()>	   |	0000000000000233: 05	callq	0x450f10 <__clang_call_terminate>
0000000000000238: 04	movq	(%r12), %rax							   |	0000000000000238: 03	movq	%rax, %r13
000000000000023c: 03	movq	%r12, %rdi							   |	000000000000023b: 03	movq	%rbx, %rdi
000000000000023f: 03	movq	%r14, %rsi							   |	000000000000023e: 05	callq	0x47fc40 <BloombergLP::bslstl::Function_Rep::~Function_Rep()>
0000000000000242: 03	callq	*24(%rax)							   |	0000000000000243: 04	movq	(%r12), %rax
0000000000000245: 02	jmp	0x46a257 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000247: 03	movq	%r12, %rdi
0000000000000247: 03	movq	%rax, %rdi							   |	000000000000024a: 03	movq	%r14, %rsi
000000000000024a: 05	callq	0x451530 <__clang_call_terminate>				   |	000000000000024d: 03	callq	*24(%rax)
000000000000024f: 03	movq	%rax, %r13							   |	0000000000000250: 02	jmp	0x469c92 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000252: 03	movq	%rbx, %rdi							   |	0000000000000252: 03	movq	%rax, %rdi
0000000000000255: 05	callq	0x47f8e0 <BloombergLP::bslstl::Function_Rep::~Function_Rep()>	   |	0000000000000255: 05	callq	0x450f10 <__clang_call_terminate>
000000000000025a: 04	movq	(%r12), %rax							   |	000000000000025a: 03	movq	%rax, %r13
000000000000025e: 03	movq	%r12, %rdi							   |	000000000000025d: 03	movq	%rbx, %rdi
0000000000000261: 03	movq	%r14, %rsi							   |	0000000000000260: 05	callq	0x47fc40 <BloombergLP::bslstl::Function_Rep::~Function_Rep()>
0000000000000264: 03	callq	*24(%rax)							   |	0000000000000265: 04	movq	(%r12), %rax
0000000000000267: 02	jmp	0x46a257 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000269: 03	movq	%r12, %rdi
0000000000000269: 03	movq	%rax, %rdi							   |	000000000000026c: 03	movq	%r14, %rsi
000000000000026c: 05	callq	0x451530 <__clang_call_terminate>				   |	000000000000026f: 03	callq	*24(%rax)
0000000000000271: 03	movq	%rax, %r13							   |	0000000000000272: 02	jmp	0x469c92 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
0000000000000274: 03	movq	(%r14), %rax							   |	0000000000000274: 03	movq	%rax, %rdi
0000000000000277: 04	movq	-16(%rax), %rbx							   |	0000000000000277: 05	callq	0x450f10 <__clang_call_terminate>
000000000000027b: 03	addq	%r14, %rbx							   |	000000000000027c: 03	movq	%rax, %r13
000000000000027e: 03	movq	%r14, %rdi							   |	000000000000027f: 03	movq	(%r14), %rax
0000000000000281: 02	callq	*(%rax)								   |	0000000000000282: 04	movq	-16(%rax), %rbx
0000000000000283: 03	movq	(%r15), %rax							   |	0000000000000286: 03	addq	%r14, %rbx
0000000000000286: 03	movq	%r15, %rdi							   |	0000000000000289: 03	movq	%r14, %rdi
0000000000000289: 03	movq	%rbx, %rsi							   |	000000000000028c: 02	callq	*(%rax)
000000000000028c: 03	callq	*24(%rax)							   |	000000000000028e: 03	movq	(%r15), %rax
000000000000028f: 02	jmp	0x46a257 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct   |	0000000000000291: 03	movq	%r15, %rdi
0000000000000291: 03	movq	%rax, %rdi							   |	0000000000000294: 03	movq	%rbx, %rsi
0000000000000294: 05	callq	0x451530 <__clang_call_terminate>				   |	0000000000000297: 03	callq	*24(%rax)
0000000000000299: 03	movq	%rax, %r13							   |	000000000000029a: 02	jmp	0x469c92 <BloombergLP::balcl::TypeInfo::setConstraint(bsl::funct
000000000000029c: 03	movq	(%r14), %rax							   |	000000000000029c: 03	movq	%rax, %rdi
000000000000029f: 04	movq	-16(%rax), %rbx							   |	000000000000029f: 05	callq	0x450f10 <__clang_call_terminate>
00000000000002a3: 03	addq	%r14, %rbx							   |	00000000000002a4: 03	movq	%rax, %r13
00000000000002a6: 03	movq	%r14, %rdi							   |	00000000000002a7: 03	movq	(%r14), %rax
00000000000002a9: 02	callq	*(%rax)								   |	00000000000002aa: 04	movq	-16(%rax), %rbx
00000000000002ab: 03	movq	(%r15), %rax							   |	00000000000002ae: 03	addq	%r14, %rbx
00000000000002ae: 03	movq	%r15, %rdi							   |	00000000000002b1: 03	movq	%r14, %rdi
00000000000002b1: 03	movq	%rbx, %rsi							   |	00000000000002b4: 02	callq	*(%rax)
00000000000002b4: 03	callq	*24(%rax)							   |	00000000000002b6: 03	movq	(%r15), %rax
00000000000002b7: 03	movq	%r13, %rdi							   |	00000000000002b9: 03	movq	%r15, %rdi
00000000000002ba: 05	callq	0x404c00 <_Unwind_Resume@plt>					   |	00000000000002bc: 03	movq	%rbx, %rsi
00000000000002bf: 03	movq	%rax, %rdi							   |	00000000000002bf: 03	callq	*24(%rax)
00000000000002c2: 05	callq	0x451530 <__clang_call_terminate>				   |	00000000000002c2: 03	movq	%r13, %rdi
00000000000002c7: 09	nopw	(%rax,%rax)							   |	00000000000002c5: 05	callq	0x404c00 <_Unwind_Resume@plt>
												   >	00000000000002ca: 03	movq	%rax, %rdi
												   >	00000000000002cd: 05	callq	0x450f10 <__clang_call_terminate>
												   >	00000000000002d2: 10	nopw	%cs:(%rax,%rax)
												   >	00000000000002dc: 04	nopl	(%rax)
