    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balcl_commandline.t/assume @ 0x46e4c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_long_long__bsl::function_bool__long_long_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______12_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char ()       | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_long_long_bsl::function_bool_long_long_const_std::_1::basic_ostream_char_std::_1::char_traits_char_12_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_20h;
                                                                                                                                                                                                                                                                                 |     int64_t var_28h;
                                                                                                                                                                                                                                                                                 |     size_t var_30h;
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<long long, bsl::function<bool (long long const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 12>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046e4c0 push r15                                                                                                                                                                                                                                                          |     
    0x0046e4c2 push r14                                                                                                                                                                                                                                                          |     
    0x0046e4c4 push r12                                                                                                                                                                                                                                                          |     
    0x0046e4c6 push rbx                                                                                                                                                                                                                                                          |     
    0x0046e4c7 sub rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e4cb mov rbx, rcx                                                                                                                                                                                                                                                      |     rbx = rcx;
    0x0046e4ce mov r15, rdx                                                                                                                                                                                                                                                      |     r15 = rdx;
    0x0046e4d1 mov r14, rsi                                                                                                                                                                                                                                                      |     r14 = rsi;
    0x0046e4d4 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0046e4d7 mov rdi, rsi                                                                                                                                                                                                                                                      |     
    0x0046e4da call 0x465e70                                                                                                                                                                                                                                                     |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046e4df cmp qword [rbx + 0x20], 0x17                                                                                                                                                                                                                                      |     
    0x0046e4e4 mov rdi, rbx                                                                                                                                                                                                                                                      |     rdi = rbx;
                                                                                                                                                                                                                                                                                 |     if (*((rbx + 0x20)) != 0x17) {
    0x0046e4e7 je 0x46e4ec                                                                                                                                                                                                                                                       |         
    0x0046e4e9 mov rdi, qword [rbx]                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046e4ec mov qword [rsp + 0x28], rdi                                                                                                                                                                                                                                       |     *((rsp + 0x28)) = rdi;
    0x0046e4f1 call 0x4046c0                                                                                                                                                                                                                                                     |     rax = strlen (*(rbx));
    0x0046e4f6 mov qword [rsp + 0x30], rax                                                                                                                                                                                                                                       |     *((rsp + 0x30)) = rax;
    0x0046e4fb xorps xmm0, xmm0                                                                                                                                                                                                                                                  |     __asm ("xorps xmm0, xmm0");
    0x0046e4fe movaps xmmword [rsp], xmm0                                                                                                                                                                                                                                        |     *(rsp) = xmm0;
    0x0046e502 lea rdi, [rsp + 0x20]                                                                                                                                                                                                                                             |     
    0x0046e507 mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x0046e50a lea rdx, [rsp + 0x28]                                                                                                                                                                                                                                             |     
    0x0046e50f mov ecx, 0xa                                                                                                                                                                                                                                                      |     
    0x0046e514 call 0x471b20                                                                                                                                                                                                                                                     |     eax = BloombergLP::bdlb::NumericParseUtil::parseInt64(long long*,std::_1::basic_string_view<char,std::_1::char_traits<char>>*,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&,int) (rsp + 0x20, rsp, rsp + 0x28, 0xa);
    0x0046e519 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x0046e51b je 0x46e581                                                                                                                                                                                                                                                       |         goto label_0;
                                                                                                                                                                                                                                                                                 |     }
    0x0046e51d mov esi, 0x4b3c91                                                                                                                                                                                                                                                 |     
    0x0046e522 mov edx, 0x10                                                                                                                                                                                                                                                     |     
    0x0046e527 mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x0046e52a call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, "A 64-bit integer", 0x10);
    0x0046e52f mov esi, 0x4b3c5d                                                                                                                                                                                                                                                 |     
    0x0046e534 mov edx, 0x21                                                                                                                                                                                                                                                     |     
    0x0046e539 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e53c call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046e541 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e544 mov rsi, rbx                                                                                                                                                                                                                                                      |     
    0x0046e547 call 0x44fd10                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, rbx);
    0x0046e54c mov esi, 0x4afd15                                                                                                                                                                                                                                                 |     
    0x0046e551 mov edx, 1                                                                                                                                                                                                                                                        |     
    0x0046e556 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e559 call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046e55e mov byte [rsp], 0xa                                                                                                                                                                                                                                               |     *(rsp) = 0xa;
    0x0046e562 mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x0046e565 mov edx, 1                                                                                                                                                                                                                                                        |     
    0x0046e56a mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e56d call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp, 1);
    0x0046e572 mov rdi, rax                                                                                                                                                                                                                                                      |     rdi = rax;
    0x0046e575 call 0x404980                                                                                                                                                                                                                                                     |     eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                 |     do {
    0x0046e57a xor eax, eax                                                                                                                                                                                                                                                      |         eax = 0;
    0x0046e57c jmp 0x46e694                                                                                                                                                                                                                                                      |         goto label_1;
                                                                                                                                                                                                                                                                                 | label_0:
    0x0046e581 mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                       |         rax = *((r12 + 0x50));
    0x0046e586 test rax, rax                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rax == 0) {
    0x0046e589 je 0x46e5a0                                                                                                                                                                                                                                                       |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e58b add r12, 0x10                                                                                                                                                                                                                                                     |         r12 += 0x10;
    0x0046e58f lea rsi, [rsp + 0x20]                                                                                                                                                                                                                                             |         rsi = rsp + 0x20;
    0x0046e594 mov rdi, r12                                                                                                                                                                                                                                                      |         rdi = r12;
    0x0046e597 mov rdx, r15                                                                                                                                                                                                                                                      |         rdx = r15;
    0x0046e59a call rax                                                                                                                                                                                                                                                          |         al = void (*rax)() ();
    0x0046e59c test al, al                                                                                                                                                                                                                                                       |         
    0x0046e59e je 0x46e57a                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                 |     } while (al == 0);
                                                                                                                                                                                                                                                                                 | label_2:
    0x0046e5a0 mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                       |     eax = *((r14 + 0x40));
    0x0046e5a4 dec eax                                                                                                                                                                                                                                                           |     eax--;
    0x0046e5a6 jmp qword [rax*8 + 0x4b02c0]                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 | label_1:
    0x0046e694 add rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e698 pop rbx                                                                                                                                                                                                                                                           |     
    0x0046e699 pop r12                                                                                                                                                                                                                                                           |     
    0x0046e69b pop r14                                                                                                                                                                                                                                                           |     
    0x0046e69d pop r15                                                                                                                                                                                                                                                           |     
    0x0046e69f ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
