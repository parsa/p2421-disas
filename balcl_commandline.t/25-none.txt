    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46bbc0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_char__bsl::function_bool__char_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______2_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std::__1 ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_char_bsl::function_bool_char_const_std::_1::basic_ostream_char_std::_1::char_traits_char_2_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std::_1 (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_eh;
                                                                                                                                                                                                                                                                                     |     int64_t var_fh;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<char, bsl::function<bool (char const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 2>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046bbc0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046bbc1 push r15                                                                                                                                                                                                                                                              |     
    0x0046bbc3 push r14                                                                                                                                                                                                                                                              |     
    0x0046bbc5 push r12                                                                                                                                                                                                                                                              |     
    0x0046bbc7 push rbx                                                                                                                                                                                                                                                              |     
    0x0046bbc8 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046bbcc mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046bbcf mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046bbd2 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046bbd5 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046bbd8 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046bbdb call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046bbe0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046bbe2 mov byte [rsp + 0xe], 0                                                                                                                                                                                                                                               |     *((rsp + 0xe)) = 0;
    0x0046bbe7 cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046bbec mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046bbef je 0x46bbf4                                                                                                                                                                                                                                                           |         
    0x0046bbf1 mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046bbf4 lea rdi, [rsp + 0xe]                                                                                                                                                                                                                                                  |     
    0x0046bbf9 mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046bbfb call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 0xe, *(r15), ebp, rcx, r8);
    0x0046bc00 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046bc02 je 0x46bc20                                                                                                                                                                                                                                                           |         
    0x0046bc04 mov al, byte [rsp + 0xe]                                                                                                                                                                                                                                              |         al = *((rsp + 0xe));
    0x0046bc08 mov byte [rbx], al                                                                                                                                                                                                                                                    |         *(rbx) = al;
    0x0046bc0a mov byte [rbx + 1], 1                                                                                                                                                                                                                                                 |         *((rbx + 1)) = 1;
    0x0046bc0e mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046bc12 mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046bc15 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046bc18 mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046bc1b call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046bc1e jmp 0x46bc9e                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046bc20 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046bc23 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046bc28 cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046bc2b ja 0x46bc38                                                                                                                                                                                                                                                           |             
    0x0046bc2d movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046bc30 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046bc38 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046bc3b call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046bc40 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046bc43 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046bc46 mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046bc49 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046bc4e mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046bc53 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046bc58 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bc5b call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046bc60 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bc63 mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046bc66 call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046bc6b mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046bc70 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046bc75 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bc78 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046bc7d mov byte [rsp + 0xf], 0xa                                                                                                                                                                                                                                             |         *((rsp + 0xf)) = 0xa;
    0x0046bc82 lea rsi, [rsp + 0xf]                                                                                                                                                                                                                                                  |         
    0x0046bc87 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046bc8c mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bc8f call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0xf, 1);
    0x0046bc94 mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046bc97 call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046bc9c xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046bc9e add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046bca2 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046bca3 pop r12                                                                                                                                                                                                                                                               |     
    0x0046bca5 pop r14                                                                                                                                                                                                                                                               |     
    0x0046bca7 pop r15                                                                                                                                                                                                                                                               |     
    0x0046bca9 pop rbp                                                                                                                                                                                                                                                               |     
    0x0046bcaa ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
