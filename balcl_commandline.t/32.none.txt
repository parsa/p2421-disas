    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46d5c0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_char__bsl::function_bool__char_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______10_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std::__1 ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_char_bsl::function_bool_char_const_std::_1::basic_ostream_char_std::_1::char_traits_char_10_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std::_1 (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_fh;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     int64_t var_30h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<char, bsl::function<bool (char const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 10>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046d5c0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046d5c1 push r15                                                                                                                                                                                                                                                              |     
    0x0046d5c3 push r14                                                                                                                                                                                                                                                              |     
    0x0046d5c5 push r13                                                                                                                                                                                                                                                              |     
    0x0046d5c7 push r12                                                                                                                                                                                                                                                              |     
    0x0046d5c9 push rbx                                                                                                                                                                                                                                                              |     
    0x0046d5ca sub rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046d5ce mov r13, rcx                                                                                                                                                                                                                                                          |     r13 = rcx;
    0x0046d5d1 mov r15, rdx                                                                                                                                                                                                                                                          |     r15 = rdx;
    0x0046d5d4 mov r14, rsi                                                                                                                                                                                                                                                          |     r14 = rsi;
    0x0046d5d7 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046d5da mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046d5dd call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046d5e2 lea ecx, [rax - 8]                                                                                                                                                                                                                                                    |     ecx = rax - 8;
    0x0046d5e5 xor ebp, ebp                                                                                                                                                                                                                                                          |     ebp = 0;
    0x0046d5e7 cmp eax, 0xa                                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (eax >= 0xa) {
    0x0046d5ea cmovge ebp, ecx                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046d5ed cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046d5f2 mov rsi, r13                                                                                                                                                                                                                                                          |     rsi = r13;
                                                                                                                                                                                                                                                                                     |     if (*((r13 + 0x20)) != 0x17) {
    0x0046d5f5 je 0x46d5fb                                                                                                                                                                                                                                                           |         
    0x0046d5f7 mov rsi, qword [r13]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046d5fb lea rdi, [rsp + 0xf]                                                                                                                                                                                                                                                  |     
    0x0046d600 mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046d602 call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 0xf, *(r13), ebp, rcx, r8);
    0x0046d607 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046d609 je 0x46d656                                                                                                                                                                                                                                                           |         
    0x0046d60b mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                           |         rax = *((r12 + 0x50));
    0x0046d610 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax != 0) {
    0x0046d613 je 0x46d62e                                                                                                                                                                                                                                                           |             
    0x0046d615 add r12, 0x10                                                                                                                                                                                                                                                         |             r12 += 0x10;
    0x0046d619 lea rsi, [rsp + 0xf]                                                                                                                                                                                                                                                  |             rsi = rsp + 0xf;
    0x0046d61e mov rdi, r12                                                                                                                                                                                                                                                          |             rdi = r12;
    0x0046d621 mov rdx, r15                                                                                                                                                                                                                                                          |             rdx = r15;
    0x0046d624 call rax                                                                                                                                                                                                                                                              |             al = void (*rax)() ();
    0x0046d626 test al, al                                                                                                                                                                                                                                                           |             
                                                                                                                                                                                                                                                                                     |             if (al == 0) {
    0x0046d628 je 0x46d6d2                                                                                                                                                                                                                                                           |                 goto label_0;
                                                                                                                                                                                                                                                                                     |             }
                                                                                                                                                                                                                                                                                     |         }
    0x0046d62e mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                           |         eax = *((r14 + 0x40));
    0x0046d632 dec eax                                                                                                                                                                                                                                                               |         eax--;
    0x0046d634 cmp eax, 0x13                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax > 0x13) {
    0x0046d637 ja 0x46d7c4                                                                                                                                                                                                                                                           |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |         /* switch table (20 cases) at 0x4b04d0 */
    0x0046d63d jmp qword [rax*8 + 0x4b04d0]                                                                                                                                                                                                                                          |         
    0x0046d644 lea rax, [r14 + 0x20]                                                                                                                                                                                                                                                 |         rax = r14 + 0x20;
    0x0046d648 cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046d64b jne 0x46d7a6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d651 jmp 0x46d713                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046d656 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046d659 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046d65e cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046d661 ja 0x46d66e                                                                                                                                                                                                                                                           |             
    0x0046d663 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046d666 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046d66e mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d671 call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046d676 mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x0046d679 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d67c mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046d67f call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, rbx, rax);
    0x0046d684 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046d689 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046d68e mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d691 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046d696 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d699 mov rsi, r13                                                                                                                                                                                                                                                          |         
    0x0046d69c call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046d6a1 mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046d6a6 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d6ab mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d6ae call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046d6b3 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                            |         *((rsp + 0x10)) = 0xa;
    0x0046d6b8 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |         
    0x0046d6bd mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d6c2 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d6c5 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046d6ca mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046d6cd call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                     | label_0:
    0x0046d6d2 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046d6d4 jmp 0x46d7b5                                                                                                                                                                                                                                                          |         goto label_3;
    0x0046d6d9 lea rax, [r14 + 8]                                                                                                                                                                                                                                                    |         rax = r14 + 8;
    0x0046d6dd cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046d6e0 jne 0x46d7a6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d6e6 jmp 0x46d713                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046d6e8 lea rax, [r14 + 1]                                                                                                                                                                                                                                                    |         rax = r14 + 1;
    0x0046d6ec cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046d6ef jne 0x46d7a6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d6f5 jmp 0x46d713                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046d6f7 lea rax, [r14 + 4]                                                                                                                                                                                                                                                    |         rax = r14 + 4;
    0x0046d6fb cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046d6fe jne 0x46d7a6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d704 jmp 0x46d713                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046d706 lea rax, [r14 + 0x30]                                                                                                                                                                                                                                                 |         rax = r14 + 0x30;
    0x0046d70a cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046d70d jne 0x46d7a6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_4:
    0x0046d713 xorps xmm0, xmm0                                                                                                                                                                                                                                                      |     __asm ("xorps xmm0, xmm0");
    0x0046d716 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |     *((rsp + 0x10)) = xmm0;
    0x0046d71b mov qword [rsp + 0x20], 0                                                                                                                                                                                                                                             |     *((rsp + 0x20)) = 0;
    0x0046d724 mov rax, qword [rip + 0x2984fd]                                                                                                                                                                                                                                       |     rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046d72b test rax, rax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rax == 0) {
    0x0046d72e jne 0x46d735                                                                                                                                                                                                                                                          |         
    0x0046d730 call 0x47ce20                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0046d735 mov qword [rsp + 0x28], rax                                                                                                                                                                                                                                           |     *((rsp + 0x28)) = rax;
    0x0046d73a mov rbx, qword [r14 + 0x28]                                                                                                                                                                                                                                           |     rbx = *((r14 + 0x28));
    0x0046d73e cmp byte [r14 + 0x20], 0                                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                                     |     if (*((r14 + 0x20)) != 0) {
    0x0046d743 je 0x46d75c                                                                                                                                                                                                                                                           |         
    0x0046d745 mov byte [r14 + 0x20], 0                                                                                                                                                                                                                                              |         *((r14 + 0x20)) = 0;
    0x0046d74a mov rsi, qword [r14]                                                                                                                                                                                                                                                  |         rsi = *(r14);
    0x0046d74d test rsi, rsi                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rsi == 0) {
    0x0046d750 je 0x46d75c                                                                                                                                                                                                                                                           |             goto label_5;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d752 mov rdi, qword [r14 + 0x18]                                                                                                                                                                                                                                           |         rdi = *((r14 + 0x18));
    0x0046d756 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0046d759 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_5:
    0x0046d75c test rbx, rbx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rbx == 0) {
    0x0046d75f jne 0x46d775                                                                                                                                                                                                                                                          |         
    0x0046d761 mov rbx, qword [rip + 0x2984c0]                                                                                                                                                                                                                                       |         rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046d768 test rbx, rbx                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rbx != 0) {
    0x0046d76b jne 0x46d775                                                                                                                                                                                                                                                          |             goto label_6;
                                                                                                                                                                                                                                                                                     |         }
    0x0046d76d call 0x47ce20                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0046d772 mov rbx, rax                                                                                                                                                                                                                                                          |         rbx = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_6:
    0x0046d775 mov qword [rsp + 0x30], rbx                                                                                                                                                                                                                                           |     *((rsp + 0x30)) = rbx;
    0x0046d77a lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x0046d77f lea rdx, [rsp + 0x30]                                                                                                                                                                                                                                                 |     
    0x0046d784 mov rdi, r14                                                                                                                                                                                                                                                          |     
    0x0046d787 call 0x48d7a0                                                                                                                                                                                                                                                         |     bsl::vector<char,bsl::allocator<char>>::vector(bsl::vector<char,bsl::allocator<char>>const&,bsl::allocator<char>const&) (r14, rsp + 0x10, rsp + 0x30);
    0x0046d78c mov byte [r14 + 0x20], 1                                                                                                                                                                                                                                              |     *((r14 + 0x20)) = 1;
    0x0046d791 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                                                                           |     rsi = *((rsp + 0x10));
    0x0046d796 test rsi, rsi                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rsi != 0) {
    0x0046d799 je 0x46d7a6                                                                                                                                                                                                                                                           |         
    0x0046d79b mov rdi, qword [rsp + 0x28]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x28));
    0x0046d7a0 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0046d7a3 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_2:
    0x0046d7a6 lea rsi, [rsp + 0xf]                                                                                                                                                                                                                                                  |     
    0x0046d7ab mov rdi, r14                                                                                                                                                                                                                                                          |     
    0x0046d7ae call 0x48e000                                                                                                                                                                                                                                                         |     bsl::vector<char,bsl::allocator<char>>::push_back(char const&) (r14, rsp + 0xf);
    0x0046d7b3 mov al, 1                                                                                                                                                                                                                                                             |     al = 1;
                                                                                                                                                                                                                                                                                     | label_3:
    0x0046d7b5 add rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046d7b9 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046d7ba pop r12                                                                                                                                                                                                                                                               |     
    0x0046d7bc pop r13                                                                                                                                                                                                                                                               |     
    0x0046d7be pop r14                                                                                                                                                                                                                                                               |     
    0x0046d7c0 pop r15                                                                                                                                                                                                                                                               |     
    0x0046d7c2 pop rbp                                                                                                                                                                                                                                                               |     
    0x0046d7c3 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | label_1:
    0x0046d7c4 ud2                                                                                                                                                                                                                                                                   |     __asm ("ud2");
                                                                                                                                                                                                                                                                                     | }
