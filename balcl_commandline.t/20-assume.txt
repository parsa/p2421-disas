    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/assume @ 0x46ca30 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_double__bsl::function_bool__double_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______5_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std: ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_double_bsl::function_bool_double_const_std::_1::basic_ostream_char_std::_1::char_traits_char_5_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     size_t var_30h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<double, bsl::function<bool (double const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 5>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046ca30 push r15                                                                                                                                                                                                                                                              |     
    0x0046ca32 push r14                                                                                                                                                                                                                                                              |     
    0x0046ca34 push r12                                                                                                                                                                                                                                                              |     
    0x0046ca36 push rbx                                                                                                                                                                                                                                                              |     
    0x0046ca37 sub rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046ca3b mov rbx, rcx                                                                                                                                                                                                                                                          |     rbx = rcx;
    0x0046ca3e mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046ca41 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x0046ca44 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046ca47 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046ca4a call 0x465e70                                                                                                                                                                                                                                                         |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046ca4f mov qword [rsp + 8], 0                                                                                                                                                                                                                                                |     *((rsp + 8)) = 0;
    0x0046ca58 cmp qword [rbx + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046ca5d mov rdi, rbx                                                                                                                                                                                                                                                          |     rdi = rbx;
                                                                                                                                                                                                                                                                                     |     if (*((rbx + 0x20)) != 0x17) {
    0x0046ca60 je 0x46ca65                                                                                                                                                                                                                                                           |         
    0x0046ca62 mov rdi, qword [rbx]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046ca65 mov qword [rsp + 0x28], rdi                                                                                                                                                                                                                                           |     *((rsp + 0x28)) = rdi;
    0x0046ca6a call 0x4046c0                                                                                                                                                                                                                                                         |     rax = strlen (*(rbx));
    0x0046ca6f mov qword [rsp + 0x30], rax                                                                                                                                                                                                                                           |     *((rsp + 0x30)) = rax;
    0x0046ca74 xorps xmm0, xmm0                                                                                                                                                                                                                                                      |     __asm ("xorps xmm0, xmm0");
    0x0046ca77 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |     *((rsp + 0x10)) = xmm0;
    0x0046ca7c lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046ca81 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x0046ca86 lea rdx, [rsp + 0x28]                                                                                                                                                                                                                                                 |     
    0x0046ca8b call 0x471850                                                                                                                                                                                                                                                         |     eax = BloombergLP::bdlb::NumericParseUtil::parseDouble(double*,std::_1::basic_string_view<char,std::_1::char_traits<char>>*,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&) (rsp + 8, rsp + 0x10, rsp + 0x28);
    0x0046ca90 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x0046ca92 je 0x46caf8                                                                                                                                                                                                                                                           |         
    0x0046ca94 mov esi, 0x4b3ca2                                                                                                                                                                                                                                                     |         
    0x0046ca99 mov edx, 0xa                                                                                                                                                                                                                                                          |         
    0x0046ca9e mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046caa1 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, "A 'double', 0xa);
    0x0046caa6 mov esi, 0x4b3c5d                                                                                                                                                                                                                                                     |         
    0x0046caab mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046cab0 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046cab3 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046cab8 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046cabb mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046cabe call 0x44fd10                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, rbx);
    0x0046cac3 mov esi, 0x4afd15                                                                                                                                                                                                                                                     |         
    0x0046cac8 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046cacd mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046cad0 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046cad5 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                            |         *((rsp + 0x10)) = 0xa;
    0x0046cada lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |         
    0x0046cadf mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046cae4 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046cae7 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046caec mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046caef call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046caf4 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046caf6 jmp 0x46cb18                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046caf8 movsd xmm0, qword [rsp + 8]                                                                                                                                                                                                                                           |         xmm0 = *((rsp + 8));
    0x0046cafe movsd qword [r15], xmm0                                                                                                                                                                                                                                               |         *(r15) = xmm0;
    0x0046cb03 mov byte [r15 + 8], 1                                                                                                                                                                                                                                                 |         *((r15 + 8)) = 1;
    0x0046cb08 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046cb0c mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046cb0f mov rsi, r15                                                                                                                                                                                                                                                          |         rsi = r15;
    0x0046cb12 mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046cb15 call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0046cb18 add rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046cb1c pop rbx                                                                                                                                                                                                                                                               |     
    0x0046cb1d pop r12                                                                                                                                                                                                                                                               |     
    0x0046cb1f pop r14                                                                                                                                                                                                                                                               |     
    0x0046cb21 pop r15                                                                                                                                                                                                                                                               |     
    0x0046cb23 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
