    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46c1a0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_long_long__bsl::function_bool__long_long_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______4_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_long_long_bsl::function_bool_long_long_const_std::_1::basic_ostream_char_std::_1::char_traits_char_4_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_7h;
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<long long, bsl::function<bool (long long const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 4>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046c1a0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046c1a1 push r15                                                                                                                                                                                                                                                              |     
    0x0046c1a3 push r14                                                                                                                                                                                                                                                              |     
    0x0046c1a5 push r12                                                                                                                                                                                                                                                              |     
    0x0046c1a7 push rbx                                                                                                                                                                                                                                                              |     
    0x0046c1a8 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046c1ac mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046c1af mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046c1b2 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046c1b5 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046c1b8 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046c1bb call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046c1c0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046c1c2 mov qword [rsp + 8], 0                                                                                                                                                                                                                                                |     *((rsp + 8)) = 0;
    0x0046c1cb cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046c1d0 mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046c1d3 je 0x46c1d8                                                                                                                                                                                                                                                           |         
    0x0046c1d5 mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046c1d8 lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046c1dd mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046c1df call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r15), ebp, rcx, r8);
    0x0046c1e4 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046c1e6 je 0x46c206                                                                                                                                                                                                                                                           |         
    0x0046c1e8 mov rax, qword [rsp + 8]                                                                                                                                                                                                                                              |         rax = *((rsp + 8));
    0x0046c1ed mov qword [rbx], rax                                                                                                                                                                                                                                                  |         *(rbx) = rax;
    0x0046c1f0 mov byte [rbx + 8], 1                                                                                                                                                                                                                                                 |         *((rbx + 8)) = 1;
    0x0046c1f4 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046c1f8 mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046c1fb mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046c1fe mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046c201 call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046c204 jmp 0x46c284                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046c206 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046c209 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046c20e cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046c211 ja 0x46c21e                                                                                                                                                                                                                                                           |             
    0x0046c213 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046c216 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046c21e mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046c221 call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046c226 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046c229 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046c22c mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046c22f call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046c234 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046c239 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046c23e mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c241 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046c246 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c249 mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046c24c call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046c251 mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046c256 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046c25b mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c25e call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046c263 mov byte [rsp + 7], 0xa                                                                                                                                                                                                                                               |         *((rsp + 7)) = 0xa;
    0x0046c268 lea rsi, [rsp + 7]                                                                                                                                                                                                                                                    |         
    0x0046c26d mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046c272 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c275 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 7, 1);
    0x0046c27a mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046c27d call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046c282 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046c284 add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046c288 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046c289 pop r12                                                                                                                                                                                                                                                               |     
    0x0046c28b pop r14                                                                                                                                                                                                                                                               |     
    0x0046c28d pop r15                                                                                                                                                                                                                                                               |     
    0x0046c28f pop rbp                                                                                                                                                                                                                                                               |     
    0x0046c290 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
