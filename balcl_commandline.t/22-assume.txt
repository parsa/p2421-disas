    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/assume @ 0x46d130 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Datetime__bsl::function_bool__BloombergLP::bdlt::Datetime_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______7_::parse_BloombergLP::balcl::Option ()          | int64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Datetime_bsl::function_bool_BloombergLP::bdlt::Datetime_const_std::_1::basic_ostream_char_std::_1::char_traits_char_7_::parse_BloombergLP::balcl::Option (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     char * var_8h;
                                                                                                                                                                                                                                                                                     |     char * var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                                                     |     char * var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<BloombergLP::bdlt::Datetime, bsl::function<bool (BloombergLP::bdlt::Datetime const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 7>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046d130 push r15                                                                                                                                                                                                                                                              |     
    0x0046d132 push r14                                                                                                                                                                                                                                                              |     
    0x0046d134 push r13                                                                                                                                                                                                                                                              |     
    0x0046d136 push r12                                                                                                                                                                                                                                                              |     
    0x0046d138 push rbx                                                                                                                                                                                                                                                              |     
    0x0046d139 sub rsp, 0x30                                                                                                                                                                                                                                                         |     
    0x0046d13d mov r13, rcx                                                                                                                                                                                                                                                          |     r13 = rcx;
    0x0046d140 mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046d143 mov r12, rsi                                                                                                                                                                                                                                                          |     r12 = rsi;
    0x0046d146 mov r15, rdi                                                                                                                                                                                                                                                          |     r15 = rdi;
    0x0046d149 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046d14c call 0x465e70                                                                                                                                                                                                                                                         |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046d151 movabs rax, 0x800000141dd76000                                                                                                                                                                                                                                        |     rax = 0x800000141dd76000;
    0x0046d15b mov qword [rsp], rax                                                                                                                                                                                                                                                  |     *(rsp) = rax;
    0x0046d15f cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046d164 mov rbx, r13                                                                                                                                                                                                                                                          |     rbx = r13;
                                                                                                                                                                                                                                                                                     |     if (*((r13 + 0x20)) != 0x17) {
    0x0046d167 je 0x46d16d                                                                                                                                                                                                                                                           |         
    0x0046d169 mov rbx, qword [r13]                                                                                                                                                                                                                                                  |         rbx = *(r13);
                                                                                                                                                                                                                                                                                     |     }
    0x0046d16d mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x0046d170 call 0x4046c0                                                                                                                                                                                                                                                         |     eax = strlen (*(r13));
    0x0046d175 mov rdi, rsp                                                                                                                                                                                                                                                          |     
    0x0046d178 mov rsi, rbx                                                                                                                                                                                                                                                          |     rsi = rbx;
    0x0046d17b mov edx, eax                                                                                                                                                                                                                                                          |     edx = eax;
    0x0046d17d call 0x477340                                                                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::parse(BloombergLP::bdlt::Datetime*,char const*,int) (rsp);
    0x0046d182 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x0046d184 je 0x46d1ea                                                                                                                                                                                                                                                           |         
    0x0046d186 mov esi, 0x4b3cad                                                                                                                                                                                                                                                     |         
    0x0046d18b mov edx, 0x12                                                                                                                                                                                                                                                         |         
    0x0046d190 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046d193 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, "A 'bdlt::Datetime', 0x12);
    0x0046d198 mov esi, 0x4b3c5d                                                                                                                                                                                                                                                     |         
    0x0046d19d mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046d1a2 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d1a5 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046d1aa mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d1ad mov rsi, r13                                                                                                                                                                                                                                                          |         
    0x0046d1b0 call 0x44fd10                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046d1b5 mov esi, 0x4afd15                                                                                                                                                                                                                                                     |         
    0x0046d1ba mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d1bf mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d1c2 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046d1c7 mov byte [rsp + 8], 0xa                                                                                                                                                                                                                                               |         *((rsp + 8)) = 0xa;
    0x0046d1cc lea rsi, [rsp + 8]                                                                                                                                                                                                                                                    |         
    0x0046d1d1 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d1d6 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d1d9 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 8, 1);
    0x0046d1de mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046d1e1 call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046d1e6 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046d1e8 jmp 0x46d21e                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d1ea cmp byte [r12 + 8], 0                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                                     |     if (*((r12 + 8)) != 0) {
    0x0046d1f0 je 0x46d1f8                                                                                                                                                                                                                                                           |         
    0x0046d1f2 mov byte [r12 + 8], 0                                                                                                                                                                                                                                                 |         *((r12 + 8)) = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d1f8 mov rax, qword [rsp]                                                                                                                                                                                                                                                  |     rax = *(rsp);
    0x0046d1fc mov qword [r12], rax                                                                                                                                                                                                                                                  |     *(r12) = rax;
    0x0046d200 test rax, rax                                                                                                                                                                                                                                                         |     
    0x0046d203 jns 0x46d22c                                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     while (1) {
    0x0046d205 mov qword [r12], rax                                                                                                                                                                                                                                                  |         *(r12) = rax;
    0x0046d209 mov byte [r12 + 8], 1                                                                                                                                                                                                                                                 |         *((r12 + 8)) = 1;
    0x0046d20f mov rax, qword [r15]                                                                                                                                                                                                                                                  |         rax = *(r15);
    0x0046d212 mov rdi, r15                                                                                                                                                                                                                                                          |         rdi = r15;
    0x0046d215 mov rsi, r12                                                                                                                                                                                                                                                          |         rsi = r12;
    0x0046d218 mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046d21b call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
                                                                                                                                                                                                                                                                                     | label_0:
    0x0046d21e add rsp, 0x30                                                                                                                                                                                                                                                         |         
    0x0046d222 pop rbx                                                                                                                                                                                                                                                               |         
    0x0046d223 pop r12                                                                                                                                                                                                                                                               |         
    0x0046d225 pop r13                                                                                                                                                                                                                                                               |         
    0x0046d227 pop r14                                                                                                                                                                                                                                                               |         
    0x0046d229 pop r15                                                                                                                                                                                                                                                               |         
    0x0046d22b ret                                                                                                                                                                                                                                                                   |         return rax;
    0x0046d22c mov edi, 0x7044ec                                                                                                                                                                                                                                                     |         
    0x0046d231 call 0x47f2e0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bsls::Review::updateCount(BloombergLP::bsls::Atomic_TypeTraits<BloombergLP::bsls::AtomicOperations_ALL_ALL_ClangIntrinsics>::Int*) (method.BloombergLP::bdlt::Datetime.validateAndTraceLogRepresentation___const::lambda__1::operator_____const::count);
    0x0046d236 mov qword [rsp + 8], 0x4ae0a3                                                                                                                                                                                                                                         |         *((rsp + 8)) = "detected invalid 'bdlt::Datetime'; see TEAM 579660115";
    0x0046d23f mov qword [rsp + 0x10], 0x4ae0d9                                                                                                                                                                                                                                      |         *((rsp + 0x10)) = "/home/parsa/experiments/assumptions/crush/ccm-assume/groups/bdl/bdlt/bdlt_datetime.h";
    0x0046d248 mov dword [rsp + 0x18], 0x466                                                                                                                                                                                                                                         |         *((rsp + 0x18)) = 0x466;
    0x0046d250 mov qword [rsp + 0x20], 0x4cd902                                                                                                                                                                                                                                      |         *((rsp + 0x20)) = "R-INV";
    0x0046d259 mov dword [rsp + 0x28], eax                                                                                                                                                                                                                                           |         *((rsp + 0x28)) = eax;
    0x0046d25d lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |         rdi = rsp + 8;
    0x0046d262 call 0x47f300                                                                                                                                                                                                                                                         |         BloombergLP::bsls::Review::invokeHandler(BloombergLP::bsls::ReviewViolationconst&) ();
    0x0046d267 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046d26b mov rcx, rax                                                                                                                                                                                                                                                          |         rcx = *(r12);
    0x0046d26e shr rcx, 0x20                                                                                                                                                                                                                                                         |         rcx >>= 0x20;
    0x0046d272 shl rax, 0x25                                                                                                                                                                                                                                                         |         rax <<= 0x25;
    0x0046d276 movabs rdx, 0x7fffffe000000000                                                                                                                                                                                                                                        |         rdx = 0x7fffffe000000000;
    0x0046d280 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x0046d283 imul rcx, rcx, 0x3e8                                                                                                                                                                                                                                                  |         rcx *= 0x3e8;
    0x0046d28a movabs rax, 0x8000000000000000                                                                                                                                                                                                                                        |         rax = 0x8000000000000000;
    0x0046d294 or rax, rdx                                                                                                                                                                                                                                                           |         rax |= rdx;
    0x0046d297 or rax, rcx                                                                                                                                                                                                                                                           |         rax |= rcx;
    0x0046d29a jmp 0x46d205                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | }
