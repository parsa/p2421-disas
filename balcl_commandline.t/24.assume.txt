    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/assume @ 0x46d4a0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Date__bsl::function_bool__BloombergLP::bdlt::Date_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______8_::parse_BloombergLP::balcl::OptionValue__ ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Date_bsl::function_bool_BloombergLP::bdlt::Date_const_std::_1::basic_ostream_char_std::_1::char_traits_char_8_::parse_BloombergLP::balcl::OptionValue_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_7h;
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<BloombergLP::bdlt::Date, bsl::function<bool (BloombergLP::bdlt::Date const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 8>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046d4a0 push r15                                                                                                                                                                                                                                                              |     
    0x0046d4a2 push r14                                                                                                                                                                                                                                                              |     
    0x0046d4a4 push r13                                                                                                                                                                                                                                                              |     
    0x0046d4a6 push r12                                                                                                                                                                                                                                                              |     
    0x0046d4a8 push rbx                                                                                                                                                                                                                                                              |     
    0x0046d4a9 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046d4ad mov r13, rcx                                                                                                                                                                                                                                                          |     r13 = rcx;
    0x0046d4b0 mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046d4b3 mov r15, rsi                                                                                                                                                                                                                                                          |     r15 = rsi;
    0x0046d4b6 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046d4b9 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046d4bc call 0x465e70                                                                                                                                                                                                                                                         |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046d4c1 mov dword [rsp + 8], 1                                                                                                                                                                                                                                                |     *((rsp + 8)) = 1;
    0x0046d4c9 cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046d4ce mov rbx, r13                                                                                                                                                                                                                                                          |     rbx = r13;
                                                                                                                                                                                                                                                                                     |     if (*((r13 + 0x20)) != 0x17) {
    0x0046d4d1 je 0x46d4d7                                                                                                                                                                                                                                                           |         
    0x0046d4d3 mov rbx, qword [r13]                                                                                                                                                                                                                                                  |         rbx = *(r13);
                                                                                                                                                                                                                                                                                     |     }
    0x0046d4d7 mov rdi, rbx                                                                                                                                                                                                                                                          |     
    0x0046d4da call 0x4046c0                                                                                                                                                                                                                                                         |     eax = strlen (*(r13));
    0x0046d4df lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046d4e4 mov rsi, rbx                                                                                                                                                                                                                                                          |     
    0x0046d4e7 mov edx, eax                                                                                                                                                                                                                                                          |     
    0x0046d4e9 call 0x476c30                                                                                                                                                                                                                                                         |     eax = BloombergLP::bdlt::Iso8601Util::parse(BloombergLP::bdlt::Date*,char const*,int) (rsp + 8, rbx, eax);
    0x0046d4ee test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x0046d4f0 je 0x46d556                                                                                                                                                                                                                                                           |         
    0x0046d4f2 mov esi, 0x4b3cc0                                                                                                                                                                                                                                                     |         
    0x0046d4f7 mov edx, 0xe                                                                                                                                                                                                                                                          |         
    0x0046d4fc mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046d4ff call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, "A 'bdlt::Date', 0xe);
    0x0046d504 mov esi, 0x4b3c5d                                                                                                                                                                                                                                                     |         
    0x0046d509 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046d50e mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d511 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046d516 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d519 mov rsi, r13                                                                                                                                                                                                                                                          |         
    0x0046d51c call 0x44fd10                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046d521 mov esi, 0x4afd15                                                                                                                                                                                                                                                     |         
    0x0046d526 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d52b mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d52e call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046d533 mov byte [rsp + 7], 0xa                                                                                                                                                                                                                                               |         *((rsp + 7)) = 0xa;
    0x0046d538 lea rsi, [rsp + 7]                                                                                                                                                                                                                                                    |         
    0x0046d53d mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d542 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d545 call 0x455a90                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 7, 1);
    0x0046d54a mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046d54d call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046d552 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046d554 jmp 0x46d572                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046d556 mov eax, dword [rsp + 8]                                                                                                                                                                                                                                              |         eax = *((rsp + 8));
    0x0046d55a mov dword [r15], eax                                                                                                                                                                                                                                                  |         *(r15) = eax;
    0x0046d55d mov byte [r15 + 4], 1                                                                                                                                                                                                                                                 |         *((r15 + 4)) = 1;
    0x0046d562 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046d566 mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046d569 mov rsi, r15                                                                                                                                                                                                                                                          |         rsi = r15;
    0x0046d56c mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046d56f call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0046d572 add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046d576 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046d577 pop r12                                                                                                                                                                                                                                                               |     
    0x0046d579 pop r13                                                                                                                                                                                                                                                               |     
    0x0046d57b pop r14                                                                                                                                                                                                                                                               |     
    0x0046d57d pop r15                                                                                                                                                                                                                                                               |     
    0x0046d57f ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
