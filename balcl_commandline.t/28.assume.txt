    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/assume @ 0x46e9d0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_double__bsl::function_bool__double_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______13_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std: ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_double_bsl::function_bool_double_const_std::_1::basic_ostream_char_std::_1::char_traits_char_13_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     size_t var_30h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<double, bsl::function<bool (double const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 13>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046e9d0 push r15                                                                                                                                                                                                                                                              |     
    0x0046e9d2 push r14                                                                                                                                                                                                                                                              |     
    0x0046e9d4 push r12                                                                                                                                                                                                                                                              |     
    0x0046e9d6 push rbx                                                                                                                                                                                                                                                              |     
    0x0046e9d7 sub rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046e9db mov rbx, rcx                                                                                                                                                                                                                                                          |     rbx = rcx;
    0x0046e9de mov r15, rdx                                                                                                                                                                                                                                                          |     r15 = rdx;
    0x0046e9e1 mov r14, rsi                                                                                                                                                                                                                                                          |     r14 = rsi;
    0x0046e9e4 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046e9e7 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046e9ea call 0x465e70                                                                                                                                                                                                                                                         |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046e9ef cmp qword [rbx + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046e9f4 mov rdi, rbx                                                                                                                                                                                                                                                          |     rdi = rbx;
                                                                                                                                                                                                                                                                                     |     if (*((rbx + 0x20)) != 0x17) {
    0x0046e9f7 je 0x46e9fc                                                                                                                                                                                                                                                           |         
    0x0046e9f9 mov rdi, qword [rbx]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046e9fc mov qword [rsp + 0x28], rdi                                                                                                                                                                                                                                           |     *((rsp + 0x28)) = rdi;
    0x0046ea01 call 0x4046c0                                                                                                                                                                                                                                                         |     rax = strlen (*(rbx));
    0x0046ea06 mov qword [rsp + 0x30], rax                                                                                                                                                                                                                                           |     *((rsp + 0x30)) = rax;
    0x0046ea0b xorps xmm0, xmm0                                                                                                                                                                                                                                                      |     __asm ("xorps xmm0, xmm0");
    0x0046ea0e movaps xmmword [rsp], xmm0                                                                                                                                                                                                                                            |     *(rsp) = xmm0;
    0x0046ea12 lea rdi, [rsp + 0x20]                                                                                                                                                                                                                                                 |     
    0x0046ea17 mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x0046ea1a lea rdx, [rsp + 0x28]                                                                                                                                                                                                                                                 |     
    0x0046ea1f call 0x471850                                                                                                                                                                                                                                                         |     eax = BloombergLP::bdlb::NumericParseUtil::parseDouble(double*,std::_1::basic_string_view<char,std::_1::char_traits<char>>*,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&) (rsp + 0x20, rsp, rsp + 0x28);
    0x0046ea24 test eax, eax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (eax == 0) {
    0x0046ea26 je 0x46ea8c                                                                                                                                                                                                                                                           |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046ea28 mov esi, 0x4b3ca2                                                                                                                                                                                                                                                     |     
    0x0046ea2d mov edx, 0xa                                                                                                                                                                                                                                                          |     
    0x0046ea32 mov rdi, r15                                                                                                                                                                                                                                                          |     
    0x0046ea35 call 0x455a90                                                                                                                                                                                                                                                         |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, "A 'double', 0xa);
    0x0046ea3a mov esi, 0x4b3c5d                                                                                                                                                                                                                                                     |     
    0x0046ea3f mov edx, 0x21                                                                                                                                                                                                                                                         |     
    0x0046ea44 mov rdi, rax                                                                                                                                                                                                                                                          |     
    0x0046ea47 call 0x455a90                                                                                                                                                                                                                                                         |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046ea4c mov rdi, rax                                                                                                                                                                                                                                                          |     
    0x0046ea4f mov rsi, rbx                                                                                                                                                                                                                                                          |     
    0x0046ea52 call 0x44fd10                                                                                                                                                                                                                                                         |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, rbx);
    0x0046ea57 mov esi, 0x4afd15                                                                                                                                                                                                                                                     |     
    0x0046ea5c mov edx, 1                                                                                                                                                                                                                                                            |     
    0x0046ea61 mov rdi, rax                                                                                                                                                                                                                                                          |     
    0x0046ea64 call 0x455a90                                                                                                                                                                                                                                                         |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046ea69 mov byte [rsp], 0xa                                                                                                                                                                                                                                                   |     *(rsp) = 0xa;
    0x0046ea6d mov rsi, rsp                                                                                                                                                                                                                                                          |     
    0x0046ea70 mov edx, 1                                                                                                                                                                                                                                                            |     
    0x0046ea75 mov rdi, rax                                                                                                                                                                                                                                                          |     
    0x0046ea78 call 0x455a90                                                                                                                                                                                                                                                         |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp, 1);
    0x0046ea7d mov rdi, rax                                                                                                                                                                                                                                                          |     rdi = rax;
    0x0046ea80 call 0x404980                                                                                                                                                                                                                                                         |     eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                     |     do {
    0x0046ea85 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046ea87 jmp 0x46eb9f                                                                                                                                                                                                                                                          |         goto label_1;
                                                                                                                                                                                                                                                                                     | label_0:
    0x0046ea8c mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                           |         rax = *((r12 + 0x50));
    0x0046ea91 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax == 0) {
    0x0046ea94 je 0x46eaab                                                                                                                                                                                                                                                           |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046ea96 add r12, 0x10                                                                                                                                                                                                                                                         |         r12 += 0x10;
    0x0046ea9a lea rsi, [rsp + 0x20]                                                                                                                                                                                                                                                 |         rsi = rsp + 0x20;
    0x0046ea9f mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046eaa2 mov rdx, r15                                                                                                                                                                                                                                                          |         rdx = r15;
    0x0046eaa5 call rax                                                                                                                                                                                                                                                              |         al = void (*rax)() ();
    0x0046eaa7 test al, al                                                                                                                                                                                                                                                           |         
    0x0046eaa9 je 0x46ea85                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (al == 0);
                                                                                                                                                                                                                                                                                     | label_2:
    0x0046eaab mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                           |     eax = *((r14 + 0x40));
    0x0046eaaf dec eax                                                                                                                                                                                                                                                               |     eax--;
    0x0046eab1 jmp qword [rax*8 + 0x4b0348]                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     | label_1:
    0x0046eb9f add rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046eba3 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046eba4 pop r12                                                                                                                                                                                                                                                               |     
    0x0046eba6 pop r14                                                                                                                                                                                                                                                               |     
    0x0046eba8 pop r15                                                                                                                                                                                                                                                               |     
    0x0046ebaa ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
