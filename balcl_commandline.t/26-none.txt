    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46daf0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_int__bsl::function_bool__int_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______11_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std::__1:: ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_int_bsl::function_bool_int_const_std::_1::basic_ostream_char_std::_1::char_traits_char_11_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std::_1:: (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_ch;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                                                                                                     |     int64_t var_28h;
                                                                                                                                                                                                                                                                                     |     int64_t var_30h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<int, bsl::function<bool (int const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 11>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046daf0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046daf1 push r15                                                                                                                                                                                                                                                              |     
    0x0046daf3 push r14                                                                                                                                                                                                                                                              |     
    0x0046daf5 push r13                                                                                                                                                                                                                                                              |     
    0x0046daf7 push r12                                                                                                                                                                                                                                                              |     
    0x0046daf9 push rbx                                                                                                                                                                                                                                                              |     
    0x0046dafa sub rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046dafe mov r13, rcx                                                                                                                                                                                                                                                          |     r13 = rcx;
    0x0046db01 mov r15, rdx                                                                                                                                                                                                                                                          |     r15 = rdx;
    0x0046db04 mov r14, rsi                                                                                                                                                                                                                                                          |     r14 = rsi;
    0x0046db07 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046db0a mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046db0d call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046db12 lea ecx, [rax - 8]                                                                                                                                                                                                                                                    |     ecx = rax - 8;
    0x0046db15 xor ebp, ebp                                                                                                                                                                                                                                                          |     ebp = 0;
    0x0046db17 cmp eax, 0xa                                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (eax >= 0xa) {
    0x0046db1a cmovge ebp, ecx                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046db1d cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046db22 mov rsi, r13                                                                                                                                                                                                                                                          |     rsi = r13;
                                                                                                                                                                                                                                                                                     |     if (*((r13 + 0x20)) != 0x17) {
    0x0046db25 je 0x46db2b                                                                                                                                                                                                                                                           |         
    0x0046db27 mov rsi, qword [r13]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046db2b lea rdi, [rsp + 0xc]                                                                                                                                                                                                                                                  |     
    0x0046db30 mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046db32 call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 0xc, *(r13), ebp, rcx, r8);
    0x0046db37 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046db39 je 0x46db86                                                                                                                                                                                                                                                           |         
    0x0046db3b mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                           |         rax = *((r12 + 0x50));
    0x0046db40 test rax, rax                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rax != 0) {
    0x0046db43 je 0x46db5e                                                                                                                                                                                                                                                           |             
    0x0046db45 add r12, 0x10                                                                                                                                                                                                                                                         |             r12 += 0x10;
    0x0046db49 lea rsi, [rsp + 0xc]                                                                                                                                                                                                                                                  |             rsi = rsp + 0xc;
    0x0046db4e mov rdi, r12                                                                                                                                                                                                                                                          |             rdi = r12;
    0x0046db51 mov rdx, r15                                                                                                                                                                                                                                                          |             rdx = r15;
    0x0046db54 call rax                                                                                                                                                                                                                                                              |             al = void (*rax)() ();
    0x0046db56 test al, al                                                                                                                                                                                                                                                           |             
                                                                                                                                                                                                                                                                                     |             if (al == 0) {
    0x0046db58 je 0x46dc02                                                                                                                                                                                                                                                           |                 goto label_0;
                                                                                                                                                                                                                                                                                     |             }
                                                                                                                                                                                                                                                                                     |         }
    0x0046db5e mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                           |         eax = *((r14 + 0x40));
    0x0046db62 dec eax                                                                                                                                                                                                                                                               |         eax--;
    0x0046db64 cmp eax, 0x13                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (eax > 0x13) {
    0x0046db67 ja 0x46dcf4                                                                                                                                                                                                                                                           |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |         /* switch table (20 cases) at 0x4b0570 */
    0x0046db6d jmp qword [rax*8 + 0x4b0570]                                                                                                                                                                                                                                          |         
    0x0046db74 lea rax, [r14 + 0x20]                                                                                                                                                                                                                                                 |         rax = r14 + 0x20;
    0x0046db78 cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046db7b jne 0x46dcd6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046db81 jmp 0x46dc43                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046db86 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046db89 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046db8e cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046db91 ja 0x46db9e                                                                                                                                                                                                                                                           |             
    0x0046db93 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046db96 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046db9e mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046dba1 call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046dba6 mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x0046dba9 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046dbac mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046dbaf call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, rbx, rax);
    0x0046dbb4 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046dbb9 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046dbbe mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046dbc1 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046dbc6 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046dbc9 mov rsi, r13                                                                                                                                                                                                                                                          |         
    0x0046dbcc call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046dbd1 mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046dbd6 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046dbdb mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046dbde call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046dbe3 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                            |         *((rsp + 0x10)) = 0xa;
    0x0046dbe8 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |         
    0x0046dbed mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046dbf2 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046dbf5 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046dbfa mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046dbfd call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                     | label_0:
    0x0046dc02 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
    0x0046dc04 jmp 0x46dce5                                                                                                                                                                                                                                                          |         goto label_3;
    0x0046dc09 lea rax, [r14 + 8]                                                                                                                                                                                                                                                    |         rax = r14 + 8;
    0x0046dc0d cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046dc10 jne 0x46dcd6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046dc16 jmp 0x46dc43                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046dc18 lea rax, [r14 + 1]                                                                                                                                                                                                                                                    |         rax = r14 + 1;
    0x0046dc1c cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046dc1f jne 0x46dcd6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046dc25 jmp 0x46dc43                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046dc27 lea rax, [r14 + 4]                                                                                                                                                                                                                                                    |         rax = r14 + 4;
    0x0046dc2b cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046dc2e jne 0x46dcd6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x0046dc34 jmp 0x46dc43                                                                                                                                                                                                                                                          |         goto label_4;
    0x0046dc36 lea rax, [r14 + 0x30]                                                                                                                                                                                                                                                 |         rax = r14 + 0x30;
    0x0046dc3a cmp byte [rax], 0                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                     |         if (*(rax) != 0) {
    0x0046dc3d jne 0x46dcd6                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_4:
    0x0046dc43 xorps xmm0, xmm0                                                                                                                                                                                                                                                      |     __asm ("xorps xmm0, xmm0");
    0x0046dc46 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |     *((rsp + 0x10)) = xmm0;
    0x0046dc4b mov qword [rsp + 0x20], 0                                                                                                                                                                                                                                             |     *((rsp + 0x20)) = 0;
    0x0046dc54 mov rax, qword [rip + 0x297fcd]                                                                                                                                                                                                                                       |     rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046dc5b test rax, rax                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rax == 0) {
    0x0046dc5e jne 0x46dc65                                                                                                                                                                                                                                                          |         
    0x0046dc60 call 0x47ce20                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                     |     }
    0x0046dc65 mov qword [rsp + 0x28], rax                                                                                                                                                                                                                                           |     *((rsp + 0x28)) = rax;
    0x0046dc6a mov rbx, qword [r14 + 0x28]                                                                                                                                                                                                                                           |     rbx = *((r14 + 0x28));
    0x0046dc6e cmp byte [r14 + 0x20], 0                                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                                     |     if (*((r14 + 0x20)) != 0) {
    0x0046dc73 je 0x46dc8c                                                                                                                                                                                                                                                           |         
    0x0046dc75 mov byte [r14 + 0x20], 0                                                                                                                                                                                                                                              |         *((r14 + 0x20)) = 0;
    0x0046dc7a mov rsi, qword [r14]                                                                                                                                                                                                                                                  |         rsi = *(r14);
    0x0046dc7d test rsi, rsi                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rsi == 0) {
    0x0046dc80 je 0x46dc8c                                                                                                                                                                                                                                                           |             goto label_5;
                                                                                                                                                                                                                                                                                     |         }
    0x0046dc82 mov rdi, qword [r14 + 0x18]                                                                                                                                                                                                                                           |         rdi = *((r14 + 0x18));
    0x0046dc86 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0046dc89 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_5:
    0x0046dc8c test rbx, rbx                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rbx == 0) {
    0x0046dc8f jne 0x46dca5                                                                                                                                                                                                                                                          |         
    0x0046dc91 mov rbx, qword [rip + 0x297f90]                                                                                                                                                                                                                                       |         rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046dc98 test rbx, rbx                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rbx != 0) {
    0x0046dc9b jne 0x46dca5                                                                                                                                                                                                                                                          |             goto label_6;
                                                                                                                                                                                                                                                                                     |         }
    0x0046dc9d call 0x47ce20                                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0046dca2 mov rbx, rax                                                                                                                                                                                                                                                          |         rbx = rax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_6:
    0x0046dca5 mov qword [rsp + 0x30], rbx                                                                                                                                                                                                                                           |     *((rsp + 0x30)) = rbx;
    0x0046dcaa lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                                 |     
    0x0046dcaf lea rdx, [rsp + 0x30]                                                                                                                                                                                                                                                 |     
    0x0046dcb4 mov rdi, r14                                                                                                                                                                                                                                                          |     
    0x0046dcb7 call 0x4934d0                                                                                                                                                                                                                                                         |     bsl::vector<int,bsl::allocator<int>>::vector(bsl::vector<int,bsl::allocator<int>>const&,bsl::allocator<int>const&) (r14, rsp + 0x10, rsp + 0x30);
    0x0046dcbc mov byte [r14 + 0x20], 1                                                                                                                                                                                                                                              |     *((r14 + 0x20)) = 1;
    0x0046dcc1 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                                                                           |     rsi = *((rsp + 0x10));
    0x0046dcc6 test rsi, rsi                                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                                     |     if (rsi != 0) {
    0x0046dcc9 je 0x46dcd6                                                                                                                                                                                                                                                           |         
    0x0046dccb mov rdi, qword [rsp + 0x28]                                                                                                                                                                                                                                           |         rdi = *((rsp + 0x28));
    0x0046dcd0 mov rax, qword [rdi]                                                                                                                                                                                                                                                  |         rax = *(rdi);
    0x0046dcd3 call qword [rax + 0x18]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_2:
    0x0046dcd6 lea rsi, [rsp + 0xc]                                                                                                                                                                                                                                                  |     
    0x0046dcdb mov rdi, r14                                                                                                                                                                                                                                                          |     
    0x0046dcde call 0x493e50                                                                                                                                                                                                                                                         |     bsl::vector<int,bsl::allocator<int>>::push_back(intconst&) (r14, rsp + 0xc);
    0x0046dce3 mov al, 1                                                                                                                                                                                                                                                             |     al = 1;
                                                                                                                                                                                                                                                                                     | label_3:
    0x0046dce5 add rsp, 0x38                                                                                                                                                                                                                                                         |     
    0x0046dce9 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046dcea pop r12                                                                                                                                                                                                                                                               |     
    0x0046dcec pop r13                                                                                                                                                                                                                                                               |     
    0x0046dcee pop r14                                                                                                                                                                                                                                                               |     
    0x0046dcf0 pop r15                                                                                                                                                                                                                                                               |     
    0x0046dcf2 pop rbp                                                                                                                                                                                                                                                               |     
    0x0046dcf3 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | label_1:
    0x0046dcf4 ud2                                                                                                                                                                                                                                                                   |     __asm ("ud2");
                                                                                                                                                                                                                                                                                     | }
