    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46cf90 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Date__bsl::function_bool__BloombergLP::bdlt::Date_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______8_::parse_BloombergLP::balcl::OptionValue__ ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Date_bsl::function_bool_BloombergLP::bdlt::Date_const_std::_1::basic_ostream_char_std::_1::char_traits_char_8_::parse_BloombergLP::balcl::OptionValue_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_7h;
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<BloombergLP::bdlt::Date, bsl::function<bool (BloombergLP::bdlt::Date const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 8>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046cf90 push rbp                                                                                                                                                                                                                                                              |     
    0x0046cf91 push r15                                                                                                                                                                                                                                                              |     
    0x0046cf93 push r14                                                                                                                                                                                                                                                              |     
    0x0046cf95 push r12                                                                                                                                                                                                                                                              |     
    0x0046cf97 push rbx                                                                                                                                                                                                                                                              |     
    0x0046cf98 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046cf9c mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046cf9f mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046cfa2 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046cfa5 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046cfa8 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046cfab call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046cfb0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046cfb2 mov dword [rsp + 8], 1                                                                                                                                                                                                                                                |     *((rsp + 8)) = 1;
    0x0046cfba cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046cfbf mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046cfc2 je 0x46cfc7                                                                                                                                                                                                                                                           |         
    0x0046cfc4 mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046cfc7 lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046cfcc mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046cfce call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r15), ebp, rcx, r8);
    0x0046cfd3 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046cfd5 je 0x46cff3                                                                                                                                                                                                                                                           |         
    0x0046cfd7 mov eax, dword [rsp + 8]                                                                                                                                                                                                                                              |         eax = *((rsp + 8));
    0x0046cfdb mov dword [rbx], eax                                                                                                                                                                                                                                                  |         *(rbx) = eax;
    0x0046cfdd mov byte [rbx + 4], 1                                                                                                                                                                                                                                                 |         *((rbx + 4)) = 1;
    0x0046cfe1 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046cfe5 mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046cfe8 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046cfeb mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046cfee call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046cff1 jmp 0x46d071                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046cff3 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046cff6 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046cffb cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046cffe ja 0x46d00b                                                                                                                                                                                                                                                           |             
    0x0046d000 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046d003 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046d00b mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d00e call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046d013 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046d016 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d019 mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046d01c call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046d021 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046d026 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046d02b mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d02e call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046d033 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d036 mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046d039 call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046d03e mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046d043 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d048 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d04b call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046d050 mov byte [rsp + 7], 0xa                                                                                                                                                                                                                                               |         *((rsp + 7)) = 0xa;
    0x0046d055 lea rsi, [rsp + 7]                                                                                                                                                                                                                                                    |         
    0x0046d05a mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d05f mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d062 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 7, 1);
    0x0046d067 mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046d06a call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046d06f xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d071 add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046d075 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046d076 pop r12                                                                                                                                                                                                                                                               |     
    0x0046d078 pop r14                                                                                                                                                                                                                                                               |     
    0x0046d07a pop r15                                                                                                                                                                                                                                                               |     
    0x0046d07c pop rbp                                                                                                                                                                                                                                                               |     
    0x0046d07d ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
