    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balcl_commandline.t/assume @ 0x46dfa0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_int__bsl::function_bool__int_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______11_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std::__1:: ()       | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_int_bsl::function_bool_int_const_std::_1::basic_ostream_char_std::_1::char_traits_char_11_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std::_1:: (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_ch;
                                                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                                                 |     int64_t var_38h;
                                                                                                                                                                                                                                                                                 |     size_t var_40h;
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<int, bsl::function<bool (int const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 11>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046dfa0 push r15                                                                                                                                                                                                                                                          |     
    0x0046dfa2 push r14                                                                                                                                                                                                                                                          |     
    0x0046dfa4 push r12                                                                                                                                                                                                                                                          |     
    0x0046dfa6 push rbx                                                                                                                                                                                                                                                          |     
    0x0046dfa7 sub rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x0046dfab mov rbx, rcx                                                                                                                                                                                                                                                      |     rbx = rcx;
    0x0046dfae mov r15, rdx                                                                                                                                                                                                                                                      |     r15 = rdx;
    0x0046dfb1 mov r14, rsi                                                                                                                                                                                                                                                      |     r14 = rsi;
    0x0046dfb4 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0046dfb7 mov rdi, rsi                                                                                                                                                                                                                                                      |     
    0x0046dfba call 0x465e70                                                                                                                                                                                                                                                     |     BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046dfbf cmp qword [rbx + 0x20], 0x17                                                                                                                                                                                                                                      |     
    0x0046dfc4 mov rdi, rbx                                                                                                                                                                                                                                                      |     rdi = rbx;
                                                                                                                                                                                                                                                                                 |     if (*((rbx + 0x20)) != 0x17) {
    0x0046dfc7 je 0x46dfcc                                                                                                                                                                                                                                                       |         
    0x0046dfc9 mov rdi, qword [rbx]                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046dfcc mov qword [rsp + 0x38], rdi                                                                                                                                                                                                                                       |     *((rsp + 0x38)) = rdi;
    0x0046dfd1 call 0x4046c0                                                                                                                                                                                                                                                     |     rax = strlen (*(rbx));
    0x0046dfd6 mov qword [rsp + 0x40], rax                                                                                                                                                                                                                                       |     *((rsp + 0x40)) = rax;
    0x0046dfdb xorps xmm0, xmm0                                                                                                                                                                                                                                                  |     __asm ("xorps xmm0, xmm0");
    0x0046dfde movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                 |     *((rsp + 0x10)) = xmm0;
    0x0046dfe3 lea rdi, [rsp + 0xc]                                                                                                                                                                                                                                              |     
    0x0046dfe8 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |     
    0x0046dfed lea rdx, [rsp + 0x38]                                                                                                                                                                                                                                             |     
    0x0046dff2 mov ecx, 0xa                                                                                                                                                                                                                                                      |     
    0x0046dff7 call 0x4719e0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bdlb::NumericParseUtil::parseInt(int*,std::_1::basic_string_view<char,std::_1::char_traits<char>>*,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&,int) (rsp + 0xc, rsp + 0x10, rsp + 0x38, 0xa);
    0x0046dffc test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax == 0) {
    0x0046dffe je 0x46e067                                                                                                                                                                                                                                                       |         goto label_0;
                                                                                                                                                                                                                                                                                 |     }
    0x0046e000 mov esi, 0x4b3c88                                                                                                                                                                                                                                                 |     
    0x0046e005 mov edx, 8                                                                                                                                                                                                                                                        |     
    0x0046e00a mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x0046e00d call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, "An 'int', 8);
    0x0046e012 mov esi, 0x4b3c5d                                                                                                                                                                                                                                                 |     
    0x0046e017 mov edx, 0x21                                                                                                                                                                                                                                                     |     
    0x0046e01c mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e01f call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046e024 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e027 mov rsi, rbx                                                                                                                                                                                                                                                      |     
    0x0046e02a call 0x44fd10                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, rbx);
    0x0046e02f mov esi, 0x4afd15                                                                                                                                                                                                                                                 |     
    0x0046e034 mov edx, 1                                                                                                                                                                                                                                                        |     
    0x0046e039 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e03c call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4afd15, 1);
    0x0046e041 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                        |     *((rsp + 0x10)) = 0xa;
    0x0046e046 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |     
    0x0046e04b mov edx, 1                                                                                                                                                                                                                                                        |     
    0x0046e050 mov rdi, rax                                                                                                                                                                                                                                                      |     
    0x0046e053 call 0x455a90                                                                                                                                                                                                                                                     |     rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046e058 mov rdi, rax                                                                                                                                                                                                                                                      |     rdi = rax;
    0x0046e05b call 0x404980                                                                                                                                                                                                                                                     |     eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                 |     do {
    0x0046e060 xor eax, eax                                                                                                                                                                                                                                                      |         eax = 0;
    0x0046e062 jmp 0x46e17e                                                                                                                                                                                                                                                      |         goto label_1;
                                                                                                                                                                                                                                                                                 | label_0:
    0x0046e067 mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                       |         rax = *((r12 + 0x50));
    0x0046e06c test rax, rax                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rax == 0) {
    0x0046e06f je 0x46e086                                                                                                                                                                                                                                                       |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e071 add r12, 0x10                                                                                                                                                                                                                                                     |         r12 += 0x10;
    0x0046e075 lea rsi, [rsp + 0xc]                                                                                                                                                                                                                                              |         rsi = rsp + 0xc;
    0x0046e07a mov rdi, r12                                                                                                                                                                                                                                                      |         rdi = r12;
    0x0046e07d mov rdx, r15                                                                                                                                                                                                                                                      |         rdx = r15;
    0x0046e080 call rax                                                                                                                                                                                                                                                          |         al = void (*rax)() ();
    0x0046e082 test al, al                                                                                                                                                                                                                                                       |         
    0x0046e084 je 0x46e060                                                                                                                                                                                                                                                       |         
                                                                                                                                                                                                                                                                                 |     } while (al == 0);
                                                                                                                                                                                                                                                                                 | label_2:
    0x0046e086 mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                       |     eax = *((r14 + 0x40));
    0x0046e08a dec eax                                                                                                                                                                                                                                                           |     eax--;
    0x0046e08c jmp qword [rax*8 + 0x4b0238]                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 | label_1:
    0x0046e17e add rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x0046e182 pop rbx                                                                                                                                                                                                                                                           |     
    0x0046e183 pop r12                                                                                                                                                                                                                                                           |     
    0x0046e185 pop r14                                                                                                                                                                                                                                                           |     
    0x0046e187 pop r15                                                                                                                                                                                                                                                           |     
    0x0046e189 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
