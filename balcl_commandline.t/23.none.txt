    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46d280 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Time__bsl::function_bool__BloombergLP::bdlt::Time_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______9_::parse_BloombergLP::balcl::OptionValue__ ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_BloombergLP::bdlt::Time_bsl::function_bool_BloombergLP::bdlt::Time_const_std::_1::basic_ostream_char_std::_1::char_traits_char_9_::parse_BloombergLP::balcl::OptionValue_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_7h;
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<BloombergLP::bdlt::Time, bsl::function<bool (BloombergLP::bdlt::Time const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 9>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046d280 push rbp                                                                                                                                                                                                                                                              |     
    0x0046d281 push r15                                                                                                                                                                                                                                                              |     
    0x0046d283 push r14                                                                                                                                                                                                                                                              |     
    0x0046d285 push r12                                                                                                                                                                                                                                                              |     
    0x0046d287 push rbx                                                                                                                                                                                                                                                              |     
    0x0046d288 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046d28c mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046d28f mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046d292 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046d295 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046d298 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046d29b call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046d2a0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046d2a2 movabs rax, 0x541dd76000                                                                                                                                                                                                                                              |     rax = 0x541dd76000;
    0x0046d2ac mov qword [rsp + 8], rax                                                                                                                                                                                                                                              |     *((rsp + 8)) = rax;
    0x0046d2b1 cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046d2b6 mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046d2b9 je 0x46d2be                                                                                                                                                                                                                                                           |         
    0x0046d2bb mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046d2be lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046d2c3 mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046d2c5 call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r15), ebp, rcx, r8);
    0x0046d2ca test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al == 0) {
    0x0046d2cc je 0x46d31c                                                                                                                                                                                                                                                           |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d2ce cmp byte [rbx + 8], 0                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                                     |     if (*((rbx + 8)) != 0) {
    0x0046d2d2 je 0x46d2d8                                                                                                                                                                                                                                                           |         
    0x0046d2d4 mov byte [rbx + 8], 0                                                                                                                                                                                                                                                 |         *((rbx + 8)) = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d2d8 movabs rbp, 0x4000000000                                                                                                                                                                                                                                              |     
    0x0046d2e2 mov rax, qword [rsp + 8]                                                                                                                                                                                                                                              |     rax = *((rsp + 8));
    0x0046d2e7 mov qword [rbx], rax                                                                                                                                                                                                                                                  |     *(rbx) = rax;
    0x0046d2ea cmp rax, rbp                                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                     |     if (rax < rbp) {
    0x0046d2ed jl 0x46d3a7                                                                                                                                                                                                                                                           |         goto label_1;
                                                                                                                                                                                                                                                                                     |     }
    0x0046d2f3 movabs rcx, 0xffffffbfffffffff                                                                                                                                                                                                                                        |     rcx = 0xffffffbfffffffff;
    0x0046d2fd and rax, rcx                                                                                                                                                                                                                                                          |     rax &= rcx;
                                                                                                                                                                                                                                                                                     |     do {
    0x0046d300 or rax, rbp                                                                                                                                                                                                                                                           |         rax |= rbp;
    0x0046d303 mov qword [rbx], rax                                                                                                                                                                                                                                                  |         *(rbx) = rax;
    0x0046d306 mov byte [rbx + 8], 1                                                                                                                                                                                                                                                 |         *((rbx + 8)) = 1;
    0x0046d30a mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046d30e mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046d311 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046d314 mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046d317 call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046d31a jmp 0x46d39a                                                                                                                                                                                                                                                          |         goto label_2;
                                                                                                                                                                                                                                                                                     | label_0:
    0x0046d31c add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046d31f mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046d324 cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046d327 ja 0x46d334                                                                                                                                                                                                                                                           |             
    0x0046d329 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046d32c mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046d334 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d337 call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046d33c mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046d33f mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d342 mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046d345 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046d34a mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046d34f mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046d354 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d357 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046d35c mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d35f mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046d362 call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046d367 mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046d36c mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d371 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d374 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046d379 mov byte [rsp + 7], 0xa                                                                                                                                                                                                                                               |         *((rsp + 7)) = 0xa;
    0x0046d37e lea rsi, [rsp + 7]                                                                                                                                                                                                                                                    |         
    0x0046d383 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046d388 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046d38b call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 7, 1);
    0x0046d390 mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046d393 call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046d398 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     | label_2:
    0x0046d39a add rsp, 0x10                                                                                                                                                                                                                                                         |         
    0x0046d39e pop rbx                                                                                                                                                                                                                                                               |         
    0x0046d39f pop r12                                                                                                                                                                                                                                                               |         
    0x0046d3a1 pop r14                                                                                                                                                                                                                                                               |         
    0x0046d3a3 pop r15                                                                                                                                                                                                                                                               |         
    0x0046d3a5 pop rbp                                                                                                                                                                                                                                                               |         
    0x0046d3a6 ret                                                                                                                                                                                                                                                                   |         return rax;
                                                                                                                                                                                                                                                                                     | label_1:
    0x0046d3a7 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046d3aa call 0x478ca0                                                                                                                                                                                                                                                         |         BloombergLP::bdlt::Time::invalidMicrosecondsFromMidnight()const (rbx);
    0x0046d3af jmp 0x46d300                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } while (1);
                                                                                                                                                                                                                                                                                     | }
