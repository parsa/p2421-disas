    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46beb0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_int__bsl::function_bool__int_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______3_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std::__1:: ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_int_bsl::function_bool_int_const_std::_1::basic_ostream_char_std::_1::char_traits_char_3_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std::_1:: (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_bh;
                                                                                                                                                                                                                                                                                     |     int64_t var_ch;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<int, bsl::function<bool (int const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 3>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046beb0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046beb1 push r15                                                                                                                                                                                                                                                              |     
    0x0046beb3 push r14                                                                                                                                                                                                                                                              |     
    0x0046beb5 push r12                                                                                                                                                                                                                                                              |     
    0x0046beb7 push rbx                                                                                                                                                                                                                                                              |     
    0x0046beb8 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046bebc mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046bebf mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046bec2 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046bec5 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046bec8 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046becb call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046bed0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046bed2 mov dword [rsp + 0xc], 0                                                                                                                                                                                                                                              |     *((rsp + 0xc)) = 0;
    0x0046beda cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046bedf mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046bee2 je 0x46bee7                                                                                                                                                                                                                                                           |         
    0x0046bee4 mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046bee7 lea rdi, [rsp + 0xc]                                                                                                                                                                                                                                                  |     
    0x0046beec mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046beee call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 0xc, *(r15), ebp, rcx, r8);
    0x0046bef3 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046bef5 je 0x46bf13                                                                                                                                                                                                                                                           |         
    0x0046bef7 mov eax, dword [rsp + 0xc]                                                                                                                                                                                                                                            |         eax = *((rsp + 0xc));
    0x0046befb mov dword [rbx], eax                                                                                                                                                                                                                                                  |         *(rbx) = eax;
    0x0046befd mov byte [rbx + 4], 1                                                                                                                                                                                                                                                 |         *((rbx + 4)) = 1;
    0x0046bf01 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046bf05 mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046bf08 mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046bf0b mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046bf0e call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046bf11 jmp 0x46bf91                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046bf13 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046bf16 mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046bf1b cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046bf1e ja 0x46bf2b                                                                                                                                                                                                                                                           |             
    0x0046bf20 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046bf23 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046bf2b mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046bf2e call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046bf33 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046bf36 mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046bf39 mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046bf3c call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046bf41 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046bf46 mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046bf4b mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bf4e call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046bf53 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bf56 mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046bf59 call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046bf5e mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046bf63 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046bf68 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bf6b call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046bf70 mov byte [rsp + 0xb], 0xa                                                                                                                                                                                                                                             |         *((rsp + 0xb)) = 0xa;
    0x0046bf75 lea rsi, [rsp + 0xb]                                                                                                                                                                                                                                                  |         
    0x0046bf7a mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046bf7f mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046bf82 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0xb, 1);
    0x0046bf87 mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046bf8a call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046bf8f xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046bf91 add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046bf95 pop rbx                                                                                                                                                                                                                                                               |     
    0x0046bf96 pop r12                                                                                                                                                                                                                                                               |     
    0x0046bf98 pop r14                                                                                                                                                                                                                                                               |     
    0x0046bf9a pop r15                                                                                                                                                                                                                                                               |     
    0x0046bf9c pop rbp                                                                                                                                                                                                                                                               |     
    0x0046bf9d ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
