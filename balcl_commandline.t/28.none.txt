    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* balcl_commandline.t/none @ 0x46e570 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ArrayConstraint_double__bsl::function_bool__double_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______13_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std: ()       | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ArrayConstraint_double_bsl::function_bool_double_const_std::_1::basic_ostream_char_std::_1::char_traits_char_13_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                                                                                                                 |     int64_t var_10h;
                                                                                                                                                                                                                                                                                 |     int64_t var_20h;
                                                                                                                                                                                                                                                                                 |     int64_t var_28h;
                                                                                                                                                                                                                                                                                 |     int64_t var_30h;
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* BloombergLP::balcl::(anonymous namespace)::u::ArrayConstraint<double, bsl::function<bool (double const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 13>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046e570 push rbp                                                                                                                                                                                                                                                          |     
    0x0046e571 push r15                                                                                                                                                                                                                                                          |     
    0x0046e573 push r14                                                                                                                                                                                                                                                          |     
    0x0046e575 push r13                                                                                                                                                                                                                                                          |     
    0x0046e577 push r12                                                                                                                                                                                                                                                          |     
    0x0046e579 push rbx                                                                                                                                                                                                                                                          |     
    0x0046e57a sub rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e57e mov r13, rcx                                                                                                                                                                                                                                                      |     r13 = rcx;
    0x0046e581 mov r15, rdx                                                                                                                                                                                                                                                      |     r15 = rdx;
    0x0046e584 mov r14, rsi                                                                                                                                                                                                                                                      |     r14 = rsi;
    0x0046e587 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0046e58a mov rdi, rsi                                                                                                                                                                                                                                                      |     
    0x0046e58d call 0x465850                                                                                                                                                                                                                                                     |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046e592 lea ecx, [rax - 8]                                                                                                                                                                                                                                                |     ecx = rax - 8;
    0x0046e595 xor ebp, ebp                                                                                                                                                                                                                                                      |     ebp = 0;
    0x0046e597 cmp eax, 0xa                                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (eax >= 0xa) {
    0x0046e59a cmovge ebp, ecx                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046e59d cmp qword [r13 + 0x20], 0x17                                                                                                                                                                                                                                      |     
    0x0046e5a2 mov rsi, r13                                                                                                                                                                                                                                                      |     rsi = r13;
                                                                                                                                                                                                                                                                                 |     if (*((r13 + 0x20)) != 0x17) {
    0x0046e5a5 je 0x46e5ab                                                                                                                                                                                                                                                       |         
    0x0046e5a7 mov rsi, qword [r13]                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                                 |     }
    0x0046e5ab lea rdi, [rsp + 8]                                                                                                                                                                                                                                                |     
    0x0046e5b0 mov edx, ebp                                                                                                                                                                                                                                                      |     
    0x0046e5b2 call 0x46ff90                                                                                                                                                                                                                                                     |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r13), ebp, rcx, r8);
    0x0046e5b7 test al, al                                                                                                                                                                                                                                                       |     
                                                                                                                                                                                                                                                                                 |     if (al != 0) {
    0x0046e5b9 je 0x46e606                                                                                                                                                                                                                                                       |         
    0x0046e5bb mov rax, qword [r12 + 0x50]                                                                                                                                                                                                                                       |         rax = *((r12 + 0x50));
    0x0046e5c0 test rax, rax                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rax != 0) {
    0x0046e5c3 je 0x46e5de                                                                                                                                                                                                                                                       |             
    0x0046e5c5 add r12, 0x10                                                                                                                                                                                                                                                     |             r12 += 0x10;
    0x0046e5c9 lea rsi, [rsp + 8]                                                                                                                                                                                                                                                |             rsi = rsp + 8;
    0x0046e5ce mov rdi, r12                                                                                                                                                                                                                                                      |             rdi = r12;
    0x0046e5d1 mov rdx, r15                                                                                                                                                                                                                                                      |             rdx = r15;
    0x0046e5d4 call rax                                                                                                                                                                                                                                                          |             al = void (*rax)() ();
    0x0046e5d6 test al, al                                                                                                                                                                                                                                                       |             
                                                                                                                                                                                                                                                                                 |             if (al == 0) {
    0x0046e5d8 je 0x46e682                                                                                                                                                                                                                                                       |                 goto label_0;
                                                                                                                                                                                                                                                                                 |             }
                                                                                                                                                                                                                                                                                 |         }
    0x0046e5de mov eax, dword [r14 + 0x40]                                                                                                                                                                                                                                       |         eax = *((r14 + 0x40));
    0x0046e5e2 dec eax                                                                                                                                                                                                                                                           |         eax--;
    0x0046e5e4 cmp eax, 0x13                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (eax > 0x13) {
    0x0046e5e7 ja 0x46e774                                                                                                                                                                                                                                                       |             goto label_1;
                                                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                                                 |         /* switch table (20 cases) at 0x4b06b0 */
    0x0046e5ed jmp qword [rax*8 + 0x4b06b0]                                                                                                                                                                                                                                      |         
    0x0046e5f4 lea rax, [r14 + 0x20]                                                                                                                                                                                                                                             |         rax = r14 + 0x20;
    0x0046e5f8 cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e5fb jne 0x46e756                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e601 jmp 0x46e6c3                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0046e606 add ebp, 0xfffffffe                                                                                                                                                                                                                                               |         ebp += 0xfffffffe;
    0x0046e609 mov ebx, 0x4b4147                                                                                                                                                                                                                                                 |         ebx = "An unknown type";
    0x0046e60e cmp ebp, 7                                                                                                                                                                                                                                                        |         
                                                                                                                                                                                                                                                                                 |         if (ebp <= 7) {
    0x0046e611 ja 0x46e61e                                                                                                                                                                                                                                                       |             
    0x0046e613 movsxd rax, ebp                                                                                                                                                                                                                                                   |             rax = (int64_t) ebp;
    0x0046e616 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                 |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                 |         }
    0x0046e61e mov rdi, rbx                                                                                                                                                                                                                                                      |         
    0x0046e621 call 0x4046c0                                                                                                                                                                                                                                                     |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046e626 mov rdi, r15                                                                                                                                                                                                                                                      |         
    0x0046e629 mov rsi, rbx                                                                                                                                                                                                                                                      |         
    0x0046e62c mov rdx, rax                                                                                                                                                                                                                                                      |         
    0x0046e62f call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r15, rbx, rax);
    0x0046e634 mov esi, 0x4b40bd                                                                                                                                                                                                                                                 |         
    0x0046e639 mov edx, 0x21                                                                                                                                                                                                                                                     |         
    0x0046e63e mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e641 call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046e646 mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e649 mov rsi, r13                                                                                                                                                                                                                                                      |         
    0x0046e64c call 0x44f6f0                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r13);
    0x0046e651 mov esi, 0x4b004d                                                                                                                                                                                                                                                 |         
    0x0046e656 mov edx, 1                                                                                                                                                                                                                                                        |         
    0x0046e65b mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e65e call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046e663 mov byte [rsp + 0x10], 0xa                                                                                                                                                                                                                                        |         *((rsp + 0x10)) = 0xa;
    0x0046e668 lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |         
    0x0046e66d mov edx, 1                                                                                                                                                                                                                                                        |         
    0x0046e672 mov rdi, rax                                                                                                                                                                                                                                                      |         
    0x0046e675 call 0x455480                                                                                                                                                                                                                                                     |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 0x10, 1);
    0x0046e67a mov rdi, rax                                                                                                                                                                                                                                                      |         rdi = rax;
    0x0046e67d call 0x404980                                                                                                                                                                                                                                                     |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
                                                                                                                                                                                                                                                                                 | label_0:
    0x0046e682 xor eax, eax                                                                                                                                                                                                                                                      |         eax = 0;
    0x0046e684 jmp 0x46e765                                                                                                                                                                                                                                                      |         goto label_3;
    0x0046e689 lea rax, [r14 + 8]                                                                                                                                                                                                                                                |         rax = r14 + 8;
    0x0046e68d cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e690 jne 0x46e756                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e696 jmp 0x46e6c3                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e698 lea rax, [r14 + 1]                                                                                                                                                                                                                                                |         rax = r14 + 1;
    0x0046e69c cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e69f jne 0x46e756                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e6a5 jmp 0x46e6c3                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e6a7 lea rax, [r14 + 4]                                                                                                                                                                                                                                                |         rax = r14 + 4;
    0x0046e6ab cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e6ae jne 0x46e756                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e6b4 jmp 0x46e6c3                                                                                                                                                                                                                                                      |         goto label_4;
    0x0046e6b6 lea rax, [r14 + 0x30]                                                                                                                                                                                                                                             |         rax = r14 + 0x30;
    0x0046e6ba cmp byte [rax], 0                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                                 |         if (*(rax) != 0) {
    0x0046e6bd jne 0x46e756                                                                                                                                                                                                                                                      |             goto label_2;
                                                                                                                                                                                                                                                                                 |         }
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_4:
    0x0046e6c3 xorps xmm0, xmm0                                                                                                                                                                                                                                                  |     __asm ("xorps xmm0, xmm0");
    0x0046e6c6 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                 |     *((rsp + 0x10)) = xmm0;
    0x0046e6cb mov qword [rsp + 0x20], 0                                                                                                                                                                                                                                         |     *((rsp + 0x20)) = 0;
    0x0046e6d4 mov rax, qword [rip + 0x29754d]                                                                                                                                                                                                                                   |     rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046e6db test rax, rax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rax == 0) {
    0x0046e6de jne 0x46e6e5                                                                                                                                                                                                                                                      |         
    0x0046e6e0 call 0x47ce20                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0046e6e5 mov qword [rsp + 0x28], rax                                                                                                                                                                                                                                       |     *((rsp + 0x28)) = rax;
    0x0046e6ea mov rbx, qword [r14 + 0x28]                                                                                                                                                                                                                                       |     rbx = *((r14 + 0x28));
    0x0046e6ee cmp byte [r14 + 0x20], 0                                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                                 |     if (*((r14 + 0x20)) != 0) {
    0x0046e6f3 je 0x46e70c                                                                                                                                                                                                                                                       |         
    0x0046e6f5 mov byte [r14 + 0x20], 0                                                                                                                                                                                                                                          |         *((r14 + 0x20)) = 0;
    0x0046e6fa mov rsi, qword [r14]                                                                                                                                                                                                                                              |         rsi = *(r14);
    0x0046e6fd test rsi, rsi                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rsi == 0) {
    0x0046e700 je 0x46e70c                                                                                                                                                                                                                                                       |             goto label_5;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e702 mov rdi, qword [r14 + 0x18]                                                                                                                                                                                                                                       |         rdi = *((r14 + 0x18));
    0x0046e706 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x0046e709 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_5:
    0x0046e70c test rbx, rbx                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rbx == 0) {
    0x0046e70f jne 0x46e725                                                                                                                                                                                                                                                      |         
    0x0046e711 mov rbx, qword [rip + 0x297510]                                                                                                                                                                                                                                   |         rbx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0046e718 test rbx, rbx                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (rbx != 0) {
    0x0046e71b jne 0x46e725                                                                                                                                                                                                                                                      |             goto label_6;
                                                                                                                                                                                                                                                                                 |         }
    0x0046e71d call 0x47ce20                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0046e722 mov rbx, rax                                                                                                                                                                                                                                                      |         rbx = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_6:
    0x0046e725 mov qword [rsp + 0x30], rbx                                                                                                                                                                                                                                       |     *((rsp + 0x30)) = rbx;
    0x0046e72a lea rsi, [rsp + 0x10]                                                                                                                                                                                                                                             |     
    0x0046e72f lea rdx, [rsp + 0x30]                                                                                                                                                                                                                                             |     
    0x0046e734 mov rdi, r14                                                                                                                                                                                                                                                      |     
    0x0046e737 call 0x49bef0                                                                                                                                                                                                                                                     |     bsl::vector<double,bsl::allocator<double>>::vector(bsl::vector<double,bsl::allocator<double>>const&,bsl::allocator<double>const&) (r14, rsp + 0x10, rsp + 0x30);
    0x0046e73c mov byte [r14 + 0x20], 1                                                                                                                                                                                                                                          |     *((r14 + 0x20)) = 1;
    0x0046e741 mov rsi, qword [rsp + 0x10]                                                                                                                                                                                                                                       |     rsi = *((rsp + 0x10));
    0x0046e746 test rsi, rsi                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rsi != 0) {
    0x0046e749 je 0x46e756                                                                                                                                                                                                                                                       |         
    0x0046e74b mov rdi, qword [rsp + 0x28]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x28));
    0x0046e750 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x0046e753 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_2:
    0x0046e756 lea rsi, [rsp + 8]                                                                                                                                                                                                                                                |     
    0x0046e75b mov rdi, r14                                                                                                                                                                                                                                                      |     
    0x0046e75e call 0x49c880                                                                                                                                                                                                                                                     |     bsl::vector<double,bsl::allocator<double>>::push_back(doubleconst&) (r14, rsp + 8);
    0x0046e763 mov al, 1                                                                                                                                                                                                                                                         |     al = 1;
                                                                                                                                                                                                                                                                                 | label_3:
    0x0046e765 add rsp, 0x38                                                                                                                                                                                                                                                     |     
    0x0046e769 pop rbx                                                                                                                                                                                                                                                           |     
    0x0046e76a pop r12                                                                                                                                                                                                                                                           |     
    0x0046e76c pop r13                                                                                                                                                                                                                                                           |     
    0x0046e76e pop r14                                                                                                                                                                                                                                                           |     
    0x0046e770 pop r15                                                                                                                                                                                                                                                           |     
    0x0046e772 pop rbp                                                                                                                                                                                                                                                           |     
    0x0046e773 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | label_1:
    0x0046e774 ud2                                                                                                                                                                                                                                                               |     __asm ("ud2");
                                                                                                                                                                                                                                                                                 | }
