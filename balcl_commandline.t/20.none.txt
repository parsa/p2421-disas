    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* balcl_commandline.t/none @ 0x46c4a0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balcl._anonymous_namespace_::u::ScalarConstraint_double__bsl::function_bool__double_const__std::__1::basic_ostream_char__std::__1::char_traits_char_______5_::parse_BloombergLP::balcl::OptionValue__std::__1::basic_ostream_char__std: ()           | uint64_t method_BloombergLP::balcl_anonymous_namespace_::u::ScalarConstraint_double_bsl::function_bool_double_const_std::_1::basic_ostream_char_std::_1::char_traits_char_5_::parse_BloombergLP::balcl::OptionValue_std::_1::basic_ostream_char_std_ (int64_t arg4, int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_7h;
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* BloombergLP::balcl::(anonymous namespace)::u::ScalarConstraint<double, bsl::function<bool (double const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, 5>::parse(BloombergLP::balcl::OptionValue*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) const */
    0x0046c4a0 push rbp                                                                                                                                                                                                                                                              |     
    0x0046c4a1 push r15                                                                                                                                                                                                                                                              |     
    0x0046c4a3 push r14                                                                                                                                                                                                                                                              |     
    0x0046c4a5 push r12                                                                                                                                                                                                                                                              |     
    0x0046c4a7 push rbx                                                                                                                                                                                                                                                              |     
    0x0046c4a8 sub rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046c4ac mov r15, rcx                                                                                                                                                                                                                                                          |     r15 = rcx;
    0x0046c4af mov r14, rdx                                                                                                                                                                                                                                                          |     r14 = rdx;
    0x0046c4b2 mov rbx, rsi                                                                                                                                                                                                                                                          |     rbx = rsi;
    0x0046c4b5 mov r12, rdi                                                                                                                                                                                                                                                          |     r12 = rdi;
    0x0046c4b8 mov rdi, rsi                                                                                                                                                                                                                                                          |     
    0x0046c4bb call 0x465850                                                                                                                                                                                                                                                         |     eax = BloombergLP::balcl::OptionValue::type()const (rsi);
    0x0046c4c0 mov ebp, eax                                                                                                                                                                                                                                                          |     
    0x0046c4c2 mov qword [rsp + 8], 0                                                                                                                                                                                                                                                |     *((rsp + 8)) = 0;
    0x0046c4cb cmp qword [r15 + 0x20], 0x17                                                                                                                                                                                                                                          |     
    0x0046c4d0 mov rsi, r15                                                                                                                                                                                                                                                          |     rsi = r15;
                                                                                                                                                                                                                                                                                     |     if (*((r15 + 0x20)) != 0x17) {
    0x0046c4d3 je 0x46c4d8                                                                                                                                                                                                                                                           |         
    0x0046c4d5 mov rsi, qword [r15]                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                                     |     }
    0x0046c4d8 lea rdi, [rsp + 8]                                                                                                                                                                                                                                                    |     
    0x0046c4dd mov edx, ebp                                                                                                                                                                                                                                                          |     
    0x0046c4df call 0x46ff90                                                                                                                                                                                                                                                         |     al = BloombergLP::balcl::(anonymousnamespace)::u::parseValue(void*,char const*,BloombergLP::balcl::OptionType::Enum) (rsp + 8, *(r15), ebp, rcx, r8);
    0x0046c4e4 test al, al                                                                                                                                                                                                                                                           |     
                                                                                                                                                                                                                                                                                     |     if (al != 0) {
    0x0046c4e6 je 0x46c508                                                                                                                                                                                                                                                           |         
    0x0046c4e8 movsd xmm0, qword [rsp + 8]                                                                                                                                                                                                                                           |         xmm0 = *((rsp + 8));
    0x0046c4ee movsd qword [rbx], xmm0                                                                                                                                                                                                                                               |         *(rbx) = xmm0;
    0x0046c4f2 mov byte [rbx + 8], 1                                                                                                                                                                                                                                                 |         *((rbx + 8)) = 1;
    0x0046c4f6 mov rax, qword [r12]                                                                                                                                                                                                                                                  |         rax = *(r12);
    0x0046c4fa mov rdi, r12                                                                                                                                                                                                                                                          |         rdi = r12;
    0x0046c4fd mov rsi, rbx                                                                                                                                                                                                                                                          |         rsi = rbx;
    0x0046c500 mov rdx, r14                                                                                                                                                                                                                                                          |         rdx = r14;
    0x0046c503 call qword [rax + 0x28]                                                                                                                                                                                                                                               |         uint64_t (*rax + 0x28)() ();
    0x0046c506 jmp 0x46c586                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |     } else {
    0x0046c508 add ebp, 0xfffffffe                                                                                                                                                                                                                                                   |         ebp += 0xfffffffe;
    0x0046c50b mov ebx, 0x4b4147                                                                                                                                                                                                                                                     |         ebx = "An unknown type";
    0x0046c510 cmp ebp, 7                                                                                                                                                                                                                                                            |         
                                                                                                                                                                                                                                                                                     |         if (ebp <= 7) {
    0x0046c513 ja 0x46c520                                                                                                                                                                                                                                                           |             
    0x0046c515 movsxd rax, ebp                                                                                                                                                                                                                                                       |             rax = (int64_t) ebp;
    0x0046c518 mov rbx, qword [rax*8 + 0x4b4028]                                                                                                                                                                                                                                     |             rbx = *((rax*8 + 0x4b4028));
                                                                                                                                                                                                                                                                                     |         }
    0x0046c520 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x0046c523 call 0x4046c0                                                                                                                                                                                                                                                         |         rax = strlen (*((rax*8 + 0x4b4028)));
    0x0046c528 mov rdi, r14                                                                                                                                                                                                                                                          |         
    0x0046c52b mov rsi, rbx                                                                                                                                                                                                                                                          |         
    0x0046c52e mov rdx, rax                                                                                                                                                                                                                                                          |         
    0x0046c531 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, rbx, rax);
    0x0046c536 mov esi, 0x4b40bd                                                                                                                                                                                                                                                     |         
    0x0046c53b mov edx, 0x21                                                                                                                                                                                                                                                         |         
    0x0046c540 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c543 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, " value was expected, instead of \", 0x21);
    0x0046c548 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c54b mov rsi, r15                                                                                                                                                                                                                                                          |         
    0x0046c54e call 0x44f6f0                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&bsl::operator << <char,std::_1::char_traits<char>,bsl::allocator<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>const&) (rax, r15);
    0x0046c553 mov esi, 0x4b004d                                                                                                                                                                                                                                                     |         
    0x0046c558 mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046c55d mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c560 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x4b004d, 1);
    0x0046c565 mov byte [rsp + 7], 0xa                                                                                                                                                                                                                                               |         *((rsp + 7)) = 0xa;
    0x0046c56a lea rsi, [rsp + 7]                                                                                                                                                                                                                                                    |         
    0x0046c56f mov edx, 1                                                                                                                                                                                                                                                            |         
    0x0046c574 mov rdi, rax                                                                                                                                                                                                                                                          |         
    0x0046c577 call 0x455480                                                                                                                                                                                                                                                         |         rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, rsp + 7, 1);
    0x0046c57c mov rdi, rax                                                                                                                                                                                                                                                          |         rdi = rax;
    0x0046c57f call 0x404980                                                                                                                                                                                                                                                         |         eax = std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x0046c584 xor eax, eax                                                                                                                                                                                                                                                          |         eax = 0;
                                                                                                                                                                                                                                                                                     |     }
    0x0046c586 add rsp, 0x10                                                                                                                                                                                                                                                         |     
    0x0046c58a pop rbx                                                                                                                                                                                                                                                               |     
    0x0046c58b pop r12                                                                                                                                                                                                                                                               |     
    0x0046c58d pop r14                                                                                                                                                                                                                                                               |     
    0x0046c58f pop r15                                                                                                                                                                                                                                                               |     
    0x0046c591 pop rbp                                                                                                                                                                                                                                                               |     
    0x0046c592 ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
