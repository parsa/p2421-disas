    ; assembly                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                         | /* balb_testmessages.t/none @ 0x411270 */
                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::balb::SequenceWithAnonymity.SequenceWithAnonymity_BloombergLP::balb::SequenceWithAnonymity_const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_BloombergLP::balb::SequenceWithAnonymity_SequenceWithAnonymity_BloombergLP::balb::SequenceWithAnonymity_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                         |     /* BloombergLP::balb::SequenceWithAnonymity::SequenceWithAnonymity(BloombergLP::balb::SequenceWithAnonymity const&, BloombergLP::bslma::Allocator*) */
    0x00411270 push r15                                                                                                                                                  |     
    0x00411272 push r14                                                                                                                                                  |     
    0x00411274 push r12                                                                                                                                                  |     
    0x00411276 push rbx                                                                                                                                                  |     
    0x00411277 push rax                                                                                                                                                  |     
    0x00411278 mov r14, rdx                                                                                                                                              |     r14 = rdx;
    0x0041127b mov rbx, rsi                                                                                                                                              |     rbx = rsi;
    0x0041127e mov r15, rdi                                                                                                                                              |     r15 = rdi;
    0x00411281 test rdx, rdx                                                                                                                                             |     
                                                                                                                                                                         |     if (rdx == 0) {
    0x00411284 jne 0x41129a                                                                                                                                              |         
    0x00411286 mov rdx, qword [rip + 0x26d8c3]                                                                                                                           |         rdx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041128d test rdx, rdx                                                                                                                                             |         
                                                                                                                                                                         |         if (rdx != 0) {
    0x00411290 jne 0x41129a                                                                                                                                              |             goto label_0;
                                                                                                                                                                         |         }
    0x00411292 call 0x4207c0                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00411297 mov rdx, rax                                                                                                                                              |         rdx = rax;
                                                                                                                                                                         |     }
                                                                                                                                                                         | label_0:
    0x0041129a mov byte [r15 + 0x18], 0                                                                                                                                  |     *((r15 + 0x18)) = 0;
    0x0041129f mov qword [r15 + 0x20], rdx                                                                                                                               |     *((r15 + 0x20)) = rdx;
    0x004112a3 cmp byte [rbx + 0x18], 0                                                                                                                                  |     
                                                                                                                                                                         |     if (*((rbx + 0x18)) != 0) {
    0x004112a7 je 0x4112b9                                                                                                                                               |         
    0x004112a9 mov rdi, r15                                                                                                                                              |         
    0x004112ac mov rsi, rbx                                                                                                                                              |         
    0x004112af call 0x410970                                                                                                                                             |         BloombergLP::balb::SequenceWithAnonymityChoice2::SequenceWithAnonymityChoice2(BloombergLP::balb::SequenceWithAnonymityChoice2const&,BloombergLP::bslma::Allocator*) (r15, rbx, rdx);
    0x004112b4 mov byte [r15 + 0x18], 1                                                                                                                                  |         *((r15 + 0x18)) = 1;
                                                                                                                                                                         |     }
    0x004112b9 lea rdi, [r15 + 0x28]                                                                                                                                     |     
    0x004112bd lea rsi, [rbx + 0x28]                                                                                                                                     |     
    0x004112c1 mov rdx, r14                                                                                                                                              |     
    0x004112c4 call 0x405030                                                                                                                                             |     BloombergLP::balb::SequenceWithAnonymityChoice1::SequenceWithAnonymityChoice1(BloombergLP::balb::SequenceWithAnonymityChoice1const&,BloombergLP::bslma::Allocator*) (r15 + 0x28, rbx + 0x28, r14);
    0x004112c9 lea r12, [r15 + 0x68]                                                                                                                                     |     r12 = r15 + 0x68;
    0x004112cd lea rsi, [rbx + 0x68]                                                                                                                                     |     
    0x004112d1 mov rdi, r12                                                                                                                                              |     
    0x004112d4 mov rdx, r14                                                                                                                                              |     
    0x004112d7 call 0x40adf0                                                                                                                                             |     BloombergLP::balb::SequenceWithAnonymityChoice::SequenceWithAnonymityChoice(BloombergLP::balb::SequenceWithAnonymityChoiceconst&,BloombergLP::bslma::Allocator*) (r12, rbx + 0x68, r14);
    0x004112dc lea rdi, [r15 + 0x1e8]                                                                                                                                    |     
    0x004112e3 add rbx, 0x1e8                                                                                                                                            |     rbx += 0x1e8;
    0x004112ea mov rsi, rbx                                                                                                                                              |     
    0x004112ed mov rdx, r14                                                                                                                                              |     
    0x004112f0 call 0x408bf0                                                                                                                                             |     BloombergLP::balb::Sequence6::Sequence6(BloombergLP::balb::Sequence6const&,BloombergLP::bslma::Allocator*) (r15 + 0x1e8, rbx, r14);
    0x004112f5 add rsp, 8                                                                                                                                                |     
    0x004112f9 pop rbx                                                                                                                                                   |     
    0x004112fa pop r12                                                                                                                                                   |     
    0x004112fc pop r14                                                                                                                                                   |     
    0x004112fe pop r15                                                                                                                                                   |     
    0x00411300 ret                                                                                                                                                       |     return rax;
                                                                                                                                                                         | }
