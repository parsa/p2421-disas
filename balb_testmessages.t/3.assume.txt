    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* balb_testmessages.t/assume @ 0x40daf0 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.BloombergLP::balb::Sequence4.Sequence4_BloombergLP::balb::Sequence4_const__BloombergLP::bslma::Allocator_ ()      | int64_t method_BloombergLP::balb::Sequence4_Sequence4_BloombergLP::balb::Sequence4_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                     |     char * var_8h;
                                                                                                                                     |     int64_t var_10h;
                                                                                                                                     |     char * var_18h;
                                                                                                                                     |     int64_t var_20h;
                                                                                                                                     |     int64_t var_28h;
                                                                                                                                     |     int64_t var_30h;
                                                                                                                                     |     int64_t var_38h;
                                                                                                                                     |     int64_t var_40h;
                                                                                                                                     |     int64_t var_48h;
                                                                                                                                     |     int64_t var_50h;
                                                                                                                                     |     int64_t var_58h;
                                                                                                                                     |     rdx = arg3;
                                                                                                                                     |     rsi = arg2;
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* BloombergLP::balb::Sequence4::Sequence4(BloombergLP::balb::Sequence4 const&, BloombergLP::bslma::Allocator*) */
    0x0040daf0 push rbp                                                                                                              |     
    0x0040daf1 push r15                                                                                                              |     
    0x0040daf3 push r14                                                                                                              |     
    0x0040daf5 push r13                                                                                                              |     
    0x0040daf7 push r12                                                                                                              |     
    0x0040daf9 push rbx                                                                                                              |     
    0x0040dafa sub rsp, 0x68                                                                                                         |     
    0x0040dafe mov r15, rdx                                                                                                          |     r15 = rdx;
    0x0040db01 mov r14, rsi                                                                                                          |     r14 = rsi;
    0x0040db04 mov r12, rdi                                                                                                          |     r12 = rdi;
    0x0040db07 movsd xmm0, qword [rsi]                                                                                               |     xmm0 = *(rsi);
    0x0040db0b movsd qword [rdi], xmm0                                                                                               |     *(rdi) = xmm0;
    0x0040db0f lea rbx, [rdi + 8]                                                                                                    |     rbx = rdi + 8;
    0x0040db13 lea rbp, [rsi + 8]                                                                                                    |     rbp = rsi + 8;
    0x0040db17 mov rax, rdx                                                                                                          |     rax = rdx;
    0x0040db1a test rdx, rdx                                                                                                         |     
                                                                                                                                     |     if (rdx == 0) {
    0x0040db1d jne 0x40db30                                                                                                          |         
    0x0040db1f mov rax, qword [rip + 0x27202a]                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040db26 test rax, rax                                                                                                         |         
                                                                                                                                     |         if (rax != 0) {
    0x0040db29 jne 0x40db30                                                                                                          |             goto label_1;
                                                                                                                                     |         }
    0x0040db2b call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |     }
                                                                                                                                     | label_1:
    0x0040db30 mov qword [rsp], rax                                                                                                  |     *(rsp) = rax;
    0x0040db34 mov rdx, rsp                                                                                                          |     
    0x0040db37 mov rdi, rbx                                                                                                          |     
    0x0040db3a mov rsi, rbp                                                                                                          |     
    0x0040db3d call 0x4341d0                                                                                                         |     bsl::vector<int,bsl::allocator<int>>::vector(bsl::vector<int,bsl::allocator<int>>const&,bsl::allocator<int>const&) (rbx, rbp, rsp);
    0x0040db42 mov rax, r15                                                                                                          |     rax = r15;
    0x0040db45 test r15, r15                                                                                                         |     
    0x0040db48 mov qword [rsp + 0x58], rbx                                                                                           |     *((rsp + 0x58)) = rbx;
                                                                                                                                     |     if (r15 == 0) {
    0x0040db4d jne 0x40db60                                                                                                          |         
    0x0040db4f mov rax, qword [rip + 0x271ffa]                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040db56 test rax, rax                                                                                                         |         
                                                                                                                                     |         if (rax != 0) {
    0x0040db59 jne 0x40db60                                                                                                          |             goto label_2;
                                                                                                                                     |         }
    0x0040db5b call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |     }
                                                                                                                                     | label_2:
    0x0040db60 lea rdi, [r12 + 0x28]                                                                                                 |     
    0x0040db65 mov qword [rsp], rax                                                                                                  |     *(rsp) = rax;
    0x0040db69 lea rsi, [r14 + 0x28]                                                                                                 |     
    0x0040db6d mov rdx, rsp                                                                                                          |     
    0x0040db70 mov qword [rsp + 0x50], rdi                                                                                           |     *((rsp + 0x50)) = rdi;
    0x0040db75 call 0x43cbf0                                                                                                         |     bsl::vector<double,bsl::allocator<double>>::vector(bsl::vector<double,bsl::allocator<double>>const&,bsl::allocator<double>const&) (r12 + 0x28, r14 + 0x28, rsp);
    0x0040db7a mov rax, r15                                                                                                          |     rax = r15;
    0x0040db7d test r15, r15                                                                                                         |     
                                                                                                                                     |     if (r15 == 0) {
    0x0040db80 jne 0x40db93                                                                                                          |         
    0x0040db82 mov rax, qword [rip + 0x271fc7]                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040db89 test rax, rax                                                                                                         |         
                                                                                                                                     |         if (rax != 0) {
    0x0040db8c jne 0x40db93                                                                                                          |             goto label_3;
                                                                                                                                     |         }
    0x0040db8e call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |     }
                                                                                                                                     | label_3:
    0x0040db93 lea rdi, [r12 + 0x48]                                                                                                 |     
    0x0040db98 mov qword [rsp], rax                                                                                                  |     *(rsp) = rax;
    0x0040db9c lea rsi, [r14 + 0x48]                                                                                                 |     
    0x0040dba0 mov rdx, rsp                                                                                                          |     
    0x0040dba3 mov qword [rsp + 0x48], rdi                                                                                           |     *((rsp + 0x48)) = rdi;
    0x0040dba8 call 0x42e4a0                                                                                                         |     bsl::vector<char,bsl::allocator<char>>::vector(bsl::vector<char,bsl::allocator<char>>const&,bsl::allocator<char>const&) (r12 + 0x48, r14 + 0x48, rsp);
    0x0040dbad mov rax, r15                                                                                                          |     rax = r15;
    0x0040dbb0 test r15, r15                                                                                                         |     
                                                                                                                                     |     if (r15 == 0) {
    0x0040dbb3 jne 0x40dbc6                                                                                                          |         
    0x0040dbb5 mov rax, qword [rip + 0x271f94]                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dbbc test rax, rax                                                                                                         |         
                                                                                                                                     |         if (rax != 0) {
    0x0040dbbf jne 0x40dbc6                                                                                                          |             goto label_4;
                                                                                                                                     |         }
    0x0040dbc1 call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |     }
                                                                                                                                     | label_4:
    0x0040dbc6 lea rdi, [r12 + 0x68]                                                                                                 |     
    0x0040dbcb mov qword [rsp], rax                                                                                                  |     *(rsp) = rax;
    0x0040dbcf lea rsi, [r14 + 0x68]                                                                                                 |     
    0x0040dbd3 mov rdx, rsp                                                                                                          |     
    0x0040dbd6 mov qword [rsp + 0x38], rdi                                                                                           |     *((rsp + 0x38)) = rdi;
    0x0040dbdb call 0x414d40                                                                                                         |     bsl::vector<bsl::vector<char,bsl::allocator<char>>,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>>::vector(bsl::vector<bsl::vector<char,bsl::allocator<char>>,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>>const&,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>const&) (r12 + 0x68, r14 + 0x68, rsp);
    0x0040dbe0 mov rax, r15                                                                                                          |     rax = r15;
    0x0040dbe3 test r15, r15                                                                                                         |     
                                                                                                                                     |     if (r15 == 0) {
    0x0040dbe6 jne 0x40dbf9                                                                                                          |         
    0x0040dbe8 mov rax, qword [rip + 0x271f61]                                                                                       |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dbef test rax, rax                                                                                                         |         
                                                                                                                                     |         if (rax != 0) {
    0x0040dbf2 jne 0x40dbf9                                                                                                          |             goto label_5;
                                                                                                                                     |         }
    0x0040dbf4 call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |     }
                                                                                                                                     | label_5:
    0x0040dbf9 lea rdi, [r12 + 0x88]                                                                                                 |     
    0x0040dc01 mov qword [rsp], rax                                                                                                  |     *(rsp) = rax;
    0x0040dc05 lea rsi, [r14 + 0x88]                                                                                                 |     
    0x0040dc0c mov rdx, rsp                                                                                                          |     
    0x0040dc0f mov qword [rsp + 0x40], rdi                                                                                           |     *((rsp + 0x40)) = rdi;
    0x0040dc14 call 0x42d2b0                                                                                                         |     bsl::vector<bool,bsl::allocator<bool>>::vector(bsl::vector<bool,bsl::allocator<bool>>const&,bsl::allocator<bool>const&) (r12 + 0x88, r14 + 0x88, rsp);
    0x0040dc19 mov rdi, r15                                                                                                          |     rdi = r15;
    0x0040dc1c test r15, r15                                                                                                         |     
                                                                                                                                     |     if (r15 == 0) {
    0x0040dc1f jne 0x40dc35                                                                                                          |         
    0x0040dc21 mov rdi, qword [rip + 0x271f28]                                                                                       |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dc28 test rdi, rdi                                                                                                         |         
                                                                                                                                     |         if (rdi != 0) {
    0x0040dc2b jne 0x40dc35                                                                                                          |             goto label_6;
                                                                                                                                     |         }
    0x0040dc2d call 0x4206c0                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040dc32 mov rdi, rax                                                                                                          |         rdi = rax;
                                                                                                                                     |     }
                                                                                                                                     | label_6:
    0x0040dc35 lea rbx, [r12 + 0xa8]                                                                                                 |     rbx = r12 + 0xa8;
    0x0040dc3d xorps xmm0, xmm0                                                                                                      |     __asm ("xorps xmm0, xmm0");
    0x0040dc40 movups xmmword [rbx], xmm0                                                                                            |     __asm ("movups xmmword [rbx], xmm0");
    0x0040dc43 mov qword [rbx + 0x10], 0                                                                                             |     *((rbx + 0x10)) = 0;
    0x0040dc4b mov qword [r12 + 0xc0], rdi                                                                                           |     *((r12 + 0xc0)) = rdi;
    0x0040dc53 mov rbp, qword [r14 + 0xb0]                                                                                           |     rbp = *((r14 + 0xb0));
    0x0040dc5a sub rbp, qword [r14 + 0xa8]                                                                                           |     rbp -= *((r14 + 0xa8));
                                                                                                                                     |     if (rbp == 0) {
    0x0040dc61 je 0x40dcd0                                                                                                           |         goto label_7;
                                                                                                                                     |     }
    0x0040dc63 mov rax, qword [rdi]                                                                                                  |     rax = *(rdi);
    0x0040dc66 mov rsi, rbp                                                                                                          |     rsi = rbp;
    0x0040dc69 call qword [rax + 0x10]                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x0040dc6c sar rbp, 4                                                                                                            |     rbp >>= 4;
    0x0040dc70 mov qword [r12 + 0xb0], rax                                                                                           |     *((r12 + 0xb0)) = rax;
    0x0040dc78 mov qword [r12 + 0xa8], rax                                                                                           |     *((r12 + 0xa8)) = rax;
    0x0040dc80 mov qword [r12 + 0xb8], rbp                                                                                           |     *((r12 + 0xb8)) = rbp;
    0x0040dc88 mov rsi, qword [r14 + 0xa8]                                                                                           |     rsi = *((r14 + 0xa8));
    0x0040dc8f mov rdx, qword [r14 + 0xb0]                                                                                           |     rdx = *((r14 + 0xb0));
    0x0040dc96 sub rdx, rsi                                                                                                          |     rdx -= rsi;
                                                                                                                                     |     if (rdx == 0) {
    0x0040dc99 je 0x40dfcb                                                                                                           |         goto label_8;
                                                                                                                                     |     }
    0x0040dc9f mov rdi, rax                                                                                                          |     
    0x0040dca2 call 0x403a30                                                                                                         |     memcpy (rax, rsi, rdx);
    0x0040dca7 mov rcx, qword [r14 + 0xb0]                                                                                           |     rcx = *((r14 + 0xb0));
    0x0040dcae mov rax, qword [r12 + 0xb0]                                                                                           |     rax = *((r12 + 0xb0));
    0x0040dcb6 sub rcx, qword [r14 + 0xa8]                                                                                           |     rcx -= *((r14 + 0xa8));
    0x0040dcbd sar rcx, 4                                                                                                            |     rcx >>= 4;
                                                                                                                                     |     do {
    0x0040dcc1 shl rcx, 4                                                                                                            |         rcx <<= 4;
    0x0040dcc5 add rcx, rax                                                                                                          |         rcx += rax;
    0x0040dcc8 mov qword [r12 + 0xb0], rcx                                                                                           |         *((r12 + 0xb0)) = rcx;
                                                                                                                                     | label_7:
    0x0040dcd0 mov rax, r15                                                                                                          |         rax = r15;
    0x0040dcd3 test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040dcd6 jne 0x40dce9                                                                                                          |             
    0x0040dcd8 mov rax, qword [rip + 0x271e71]                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dcdf test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax != 0) {
    0x0040dce2 jne 0x40dce9                                                                                                          |                 goto label_9;
                                                                                                                                     |             }
    0x0040dce4 call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |         }
                                                                                                                                     | label_9:
    0x0040dce9 lea rdi, [r12 + 0xc8]                                                                                                 |         
    0x0040dcf1 mov qword [rsp], rax                                                                                                  |         *(rsp) = rax;
    0x0040dcf5 lea rsi, [r14 + 0xc8]                                                                                                 |         
    0x0040dcfc mov rdx, rsp                                                                                                          |         
    0x0040dcff mov qword [rsp + 0x30], rdi                                                                                           |         *((rsp + 0x30)) = rdi;
    0x0040dd04 call 0x414e90                                                                                                         |         bsl::vector<BloombergLP::balb::Sequence3,bsl::allocator<BloombergLP::balb::Sequence3>>::vector(bsl::vector<BloombergLP::balb::Sequence3,bsl::allocator<BloombergLP::balb::Sequence3>>const&,bsl::allocator<BloombergLP::balb::Sequence3>const&) (r12 + 0xc8, r14 + 0xc8, rsp);
    0x0040dd09 mov rax, r15                                                                                                          |         rax = r15;
    0x0040dd0c test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040dd0f jne 0x40dd22                                                                                                          |             
    0x0040dd11 mov rax, qword [rip + 0x271e38]                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dd18 test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax != 0) {
    0x0040dd1b jne 0x40dd22                                                                                                          |                 goto label_10;
                                                                                                                                     |             }
    0x0040dd1d call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |         }
                                                                                                                                     | label_10:
    0x0040dd22 lea rdi, [r12 + 0xe8]                                                                                                 |         
    0x0040dd2a mov qword [rsp], rax                                                                                                  |         *(rsp) = rax;
    0x0040dd2e lea rsi, [r14 + 0xe8]                                                                                                 |         
    0x0040dd35 mov rdx, rsp                                                                                                          |         
    0x0040dd38 mov qword [rsp + 0x28], rdi                                                                                           |         *((rsp + 0x28)) = rdi;
    0x0040dd3d call 0x4148c0                                                                                                         |         bsl::vector<BloombergLP::balb::CustomString,bsl::allocator<BloombergLP::balb::CustomString>>::vector(bsl::vector<BloombergLP::balb::CustomString,bsl::allocator<BloombergLP::balb::CustomString>>const&,bsl::allocator<BloombergLP::balb::CustomString>const&) (r12 + 0xe8, r14 + 0xe8, rsp);
    0x0040dd42 mov rax, r15                                                                                                          |         rax = r15;
    0x0040dd45 test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040dd48 jne 0x40dd5b                                                                                                          |             
    0x0040dd4a mov rax, qword [rip + 0x271dff]                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dd51 test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax != 0) {
    0x0040dd54 jne 0x40dd5b                                                                                                          |                 goto label_11;
                                                                                                                                     |             }
    0x0040dd56 call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |         }
                                                                                                                                     | label_11:
    0x0040dd5b lea rbp, [r12 + 0x108]                                                                                                |         rbp = r12 + 0x108;
    0x0040dd63 mov qword [rsp], rax                                                                                                  |         *(rsp) = rax;
    0x0040dd67 lea rsi, [r14 + 0x108]                                                                                                |         
    0x0040dd6e mov rdx, rsp                                                                                                          |         
    0x0040dd71 mov rdi, rbp                                                                                                          |         
    0x0040dd74 call 0x414fb0                                                                                                         |         bsl::vector<BloombergLP::balb::Choice1,bsl::allocator<BloombergLP::balb::Choice1>>::vector(bsl::vector<BloombergLP::balb::Choice1,bsl::allocator<BloombergLP::balb::Choice1>>const&,bsl::allocator<BloombergLP::balb::Choice1>const&) (rbp, r14 + 0x108, rsp);
    0x0040dd79 mov rdi, r15                                                                                                          |         rdi = r15;
    0x0040dd7c test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040dd7f jne 0x40dd95                                                                                                          |             
    0x0040dd81 mov rdi, qword [rip + 0x271dc8]                                                                                       |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dd88 test rdi, rdi                                                                                                         |             
                                                                                                                                     |             if (rdi != 0) {
    0x0040dd8b jne 0x40dd95                                                                                                          |                 goto label_12;
                                                                                                                                     |             }
    0x0040dd8d call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040dd92 mov rdi, rax                                                                                                          |             rdi = rax;
                                                                                                                                     |         }
                                                                                                                                     | label_12:
    0x0040dd95 lea r13, [r12 + 0x128]                                                                                                |         r13 = r12 + 0x128;
    0x0040dd9d mov rax, qword [r14 + 0x148]                                                                                          |         rax = *((r14 + 0x148));
    0x0040dda4 mov qword [r13 + 0x20], rax                                                                                           |         *((r13 + 0x20)) = rax;
    0x0040dda8 movups xmm0, xmmword [r14 + 0x128]                                                                                    |         __asm ("movups xmm0, xmmword [r14 + 0x128]");
    0x0040ddb0 movups xmm1, xmmword [r14 + 0x138]                                                                                    |         __asm ("movups xmm1, xmmword [r14 + 0x138]");
    0x0040ddb8 movups xmmword [r13 + 0x10], xmm1                                                                                     |         __asm ("movups xmmword [r13 + 0x10], xmm1");
    0x0040ddbd movups xmmword [r13], xmm0                                                                                            |         __asm ("movups xmmword [r13], xmm0");
    0x0040ddc2 mov qword [r12 + 0x150], rdi                                                                                          |         *((r12 + 0x150)) = rdi;
    0x0040ddca cmp qword [r12 + 0x148], 0x17                                                                                         |         
                                                                                                                                     |         if (*((r12 + 0x148)) != 0x17) {
    0x0040ddd3 je 0x40de5d                                                                                                           |             
    0x0040ddd9 mov rax, qword [r14 + 0x140]                                                                                          |             rax = *((r14 + 0x140));
    0x0040dde0 cmp rax, 0x17                                                                                                         |             
    0x0040dde4 mov esi, 0x17                                                                                                         |             esi = 0x17;
                                                                                                                                     |             if (rax > 0x17) {
    0x0040dde9 cmova rsi, rax                                                                                                        |                 rsi = rax;
                                                                                                                                     |             }
    0x0040dded mov qword [r12 + 0x128], 0                                                                                            |             *((r12 + 0x128)) = 0;
    0x0040ddf9 mov qword [r12 + 0x140], rax                                                                                          |             *((r12 + 0x140)) = rax;
    0x0040de01 mov qword [r12 + 0x148], rsi                                                                                          |             *((r12 + 0x148)) = rsi;
    0x0040de09 cmp rax, 0x18                                                                                                         |             
                                                                                                                                     |             if (rax >= 0x18) {
    0x0040de0d jb 0x40de2b                                                                                                           |                 
    0x0040de0f inc rsi                                                                                                               |                 rsi++;
    0x0040de12 mov rax, qword [rdi]                                                                                                  |                 rax = *(rdi);
    0x0040de15 call qword [rax + 0x10]                                                                                               |                 rax = uint64_t (*rax + 0x10)() ();
    0x0040de18 mov qword [r12 + 0x128], rax                                                                                          |                 *((r12 + 0x128)) = rax;
    0x0040de20 cmp qword [r12 + 0x148], 0x17                                                                                         |                 
                                                                                                                                     |                 if (*((r12 + 0x148)) != 0x17) {
    0x0040de29 jne 0x40de2e                                                                                                          |                     goto label_13;
                                                                                                                                     |                 }
                                                                                                                                     |             }
    0x0040de2b mov rax, r13                                                                                                          |             rax = r13;
                                                                                                                                     | label_13:
    0x0040de2e mov rdx, qword [r12 + 0x140]                                                                                          |             rdx = *((r12 + 0x140));
    0x0040de36 inc rdx                                                                                                               |             rdx++;
                                                                                                                                     |             if (rdx == 0) {
    0x0040de39 je 0x40de5d                                                                                                           |                 goto label_14;
                                                                                                                                     |             }
    0x0040de3b cmp qword [r14 + 0x148], 0x17                                                                                         |             
                                                                                                                                     |             if (*((r14 + 0x148)) != 0x17) {
    0x0040de43 je 0x40de4e                                                                                                           |                 
    0x0040de45 mov rsi, qword [r14 + 0x128]                                                                                          |                 rsi = *((r14 + 0x128));
    0x0040de4c jmp 0x40de55                                                                                                          |                 
                                                                                                                                     |             } else {
    0x0040de4e lea rsi, [r14 + 0x128]                                                                                                |                 
                                                                                                                                     |             }
    0x0040de55 mov rdi, rax                                                                                                          |             
    0x0040de58 call 0x403a30                                                                                                         |             memcpy (rax, r14 + 0x128, rdx);
                                                                                                                                     |         }
                                                                                                                                     | label_14:
    0x0040de5d mov rax, r15                                                                                                          |         rax = r15;
    0x0040de60 test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040de63 jne 0x40de76                                                                                                          |             
    0x0040de65 mov rax, qword [rip + 0x271ce4]                                                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040de6c test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax != 0) {
    0x0040de6f jne 0x40de76                                                                                                          |                 goto label_15;
                                                                                                                                     |             }
    0x0040de71 call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |         }
                                                                                                                                     | label_15:
    0x0040de76 mov byte [r12 + 0x178], 0                                                                                             |         *((r12 + 0x178)) = 0;
    0x0040de7f mov qword [r12 + 0x180], rax                                                                                          |         *((r12 + 0x180)) = rax;
    0x0040de87 cmp byte [r14 + 0x178], 0                                                                                             |         
                                                                                                                                     |         if (*((r14 + 0x178)) != 0) {
    0x0040de8f je 0x40decb                                                                                                           |             
    0x0040de91 test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax == 0) {
    0x0040de94 jne 0x40dea7                                                                                                          |                 
    0x0040de96 mov rax, qword [rip + 0x271cb3]                                                                                       |                 rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040de9d test rax, rax                                                                                                         |                 
                                                                                                                                     |                 if (rax != 0) {
    0x0040dea0 jne 0x40dea7                                                                                                          |                     goto label_16;
                                                                                                                                     |                 }
    0x0040dea2 call 0x4206c0                                                                                                         |                 rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                     |             }
                                                                                                                                     | label_16:
    0x0040dea7 lea rdi, [r12 + 0x158]                                                                                                |             
    0x0040deaf lea rsi, [r14 + 0x158]                                                                                                |             
    0x0040deb6 mov qword [rsp], rax                                                                                                  |             *(rsp) = rax;
    0x0040deba mov rdx, rsp                                                                                                          |             
    0x0040debd call 0x42e4a0                                                                                                         |             bsl::vector<char,bsl::allocator<char>>::vector(bsl::vector<char,bsl::allocator<char>>const&,bsl::allocator<char>const&) (r12 + 0x158, r14 + 0x158, rsp);
    0x0040dec2 mov byte [r12 + 0x178], 1                                                                                             |             *((r12 + 0x178)) = 1;
                                                                                                                                     |         }
    0x0040decb mov byte [r12 + 0x188], 0                                                                                             |         *((r12 + 0x188)) = 0;
    0x0040ded4 mov byte [r12 + 0x198], 0                                                                                             |         *((r12 + 0x198)) = 0;
    0x0040dedd cmp byte [r14 + 0x198], 0                                                                                             |         
                                                                                                                                     |         if (*((r14 + 0x198)) != 0) {
    0x0040dee5 je 0x40df1f                                                                                                           |             
    0x0040dee7 mov rax, qword [r14 + 0x188]                                                                                          |             rax = *((r14 + 0x188));
    0x0040deee mov qword [r12 + 0x188], rax                                                                                          |             *((r12 + 0x188)) = rax;
    0x0040def6 test rax, rax                                                                                                         |             
                                                                                                                                     |             if (rax >= 0) {
    0x0040def9 jns 0x40dfd2                                                                                                          |                 goto label_17;
                                                                                                                                     |             }
                                                                                                                                     | label_0:
    0x0040deff mov qword [r12 + 0x188], rax                                                                                          |             *((r12 + 0x188)) = rax;
    0x0040df07 mov eax, dword [r14 + 0x190]                                                                                          |             eax = *((r14 + 0x190));
    0x0040df0e mov dword [r12 + 0x190], eax                                                                                          |             *((r12 + 0x190)) = eax;
    0x0040df16 mov byte [r12 + 0x198], 1                                                                                             |             *((r12 + 0x198)) = 1;
                                                                                                                                     |         }
    0x0040df1f test r15, r15                                                                                                         |         
                                                                                                                                     |         if (r15 == 0) {
    0x0040df22 jne 0x40df38                                                                                                          |             
    0x0040df24 mov r15, qword [rip + 0x271c25]                                                                                       |             r15 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040df2b test r15, r15                                                                                                         |             
                                                                                                                                     |             if (r15 != 0) {
    0x0040df2e jne 0x40df38                                                                                                          |                 goto label_18;
                                                                                                                                     |             }
    0x0040df30 call 0x4206c0                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040df35 mov r15, rax                                                                                                          |             r15 = rax;
                                                                                                                                     |         }
                                                                                                                                     | label_18:
    0x0040df38 mov qword [rsp], r15                                                                                                  |         *(rsp) = r15;
    0x0040df3c lea rsi, [r14 + 0x1a0]                                                                                                |         
    0x0040df43 lea rdi, [r12 + 0x1a0]                                                                                                |         
    0x0040df4b mov rdx, rsp                                                                                                          |         
    0x0040df4e call 0x414970                                                                                                         |         BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomString>::NullableValue(BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomString>const&,bsl::allocator<char>const&) (r12 + 0x1a0, r14 + 0x1a0, rsp);
    0x0040df53 mov eax, dword [r14 + 0x1e0]                                                                                          |         eax = *((r14 + 0x1e0));
    0x0040df5a mov dword [r12 + 0x1e0], eax                                                                                          |         *((r12 + 0x1e0)) = eax;
    0x0040df62 mov al, byte [r14 + 0x1e8]                                                                                            |         al = *((r14 + 0x1e8));
    0x0040df69 mov byte [r12 + 0x1e8], al                                                                                            |         *((r12 + 0x1e8)) = al;
    0x0040df71 mov eax, dword [r14 + 0x1e4]                                                                                          |         eax = *((r14 + 0x1e4));
    0x0040df78 mov dword [r12 + 0x1e4], eax                                                                                          |         *((r12 + 0x1e4)) = eax;
    0x0040df80 mov eax, dword [r14 + 0x1ec]                                                                                          |         eax = *((r14 + 0x1ec));
    0x0040df87 mov dword [r12 + 0x1ec], eax                                                                                          |         *((r12 + 0x1ec)) = eax;
    0x0040df8f mov al, byte [r14 + 0x1f0]                                                                                            |         al = *((r14 + 0x1f0));
    0x0040df96 mov byte [r12 + 0x1f0], al                                                                                            |         *((r12 + 0x1f0)) = al;
    0x0040df9e mov eax, dword [r14 + 0x1f4]                                                                                          |         eax = *((r14 + 0x1f4));
    0x0040dfa5 mov dword [r12 + 0x1f4], eax                                                                                          |         *((r12 + 0x1f4)) = eax;
    0x0040dfad mov al, byte [r14 + 0x1f8]                                                                                            |         al = *((r14 + 0x1f8));
    0x0040dfb4 mov byte [r12 + 0x1f8], al                                                                                            |         *((r12 + 0x1f8)) = al;
    0x0040dfbc add rsp, 0x68                                                                                                         |         
    0x0040dfc0 pop rbx                                                                                                               |         
    0x0040dfc1 pop r12                                                                                                               |         
    0x0040dfc3 pop r13                                                                                                               |         
    0x0040dfc5 pop r14                                                                                                               |         
    0x0040dfc7 pop r15                                                                                                               |         
    0x0040dfc9 pop rbp                                                                                                               |         
    0x0040dfca ret                                                                                                                   |         return rax;
                                                                                                                                     | label_8:
    0x0040dfcb xor ecx, ecx                                                                                                          |         ecx = 0;
    0x0040dfcd jmp 0x40dcc1                                                                                                          |         
                                                                                                                                     |     } while (1);
                                                                                                                                     | label_17:
    0x0040dfd2 mov edi, 0x67fb38                                                                                                     |     
    0x0040dfd7 call 0x420960                                                                                                         |     eax = BloombergLP::bsls::Review::updateCount(BloombergLP::bsls::Atomic_TypeTraits<BloombergLP::bsls::AtomicOperations_ALL_ALL_ClangIntrinsics>::Int*) (method.BloombergLP::bdlt::Datetime.validateAndTraceLogRepresentation___const::lambda__1::operator_____const::count);
    0x0040dfdc mov qword [rsp], 0x448568                                                                                             |     *(rsp) = "detected invalid 'bdlt::Datetime'; see TEAM 579660115";
    0x0040dfe4 mov qword [rsp + 8], 0x44859e                                                                                         |     *((rsp + 8)) = "/home/parsa/experiments/assumptions/crush/ccm-assume/groups/bdl/bdlt/bdlt_datetime.h";
    0x0040dfed mov dword [rsp + 0x10], 0x466                                                                                         |     *((rsp + 0x10)) = 0x466;
    0x0040dff5 mov qword [rsp + 0x18], 0x4616c1                                                                                      |     *((rsp + 0x18)) = "R-INV";
    0x0040dffe mov dword [rsp + 0x20], eax                                                                                           |     *((rsp + 0x20)) = eax;
    0x0040e002 mov rdi, rsp                                                                                                          |     rdi = rsp;
    0x0040e005 call 0x420980                                                                                                         |     BloombergLP::bsls::Review::invokeHandler(BloombergLP::bsls::ReviewViolationconst&) ();
    0x0040e00a mov rax, qword [r12 + 0x188]                                                                                          |     rax = *((r12 + 0x188));
    0x0040e012 mov rcx, rax                                                                                                          |     rcx = *((r12 + 0x188));
    0x0040e015 shr rcx, 0x20                                                                                                         |     rcx >>= 0x20;
    0x0040e019 shl rax, 0x25                                                                                                         |     rax <<= 0x25;
    0x0040e01d movabs rdx, 0x7fffffe000000000                                                                                        |     rdx = 0x7fffffe000000000;
    0x0040e027 add rdx, rax                                                                                                          |     rdx += rax;
    0x0040e02a imul rcx, rcx, 0x3e8                                                                                                  |     rcx *= 0x3e8;
    0x0040e031 movabs rax, 0x8000000000000000                                                                                        |     rax = 0x8000000000000000;
    0x0040e03b or rax, rdx                                                                                                           |     rax |= rdx;
    0x0040e03e or rax, rcx                                                                                                           |     rax |= rcx;
    0x0040e041 jmp 0x40deff                                                                                                          |     goto label_0;
                                                                                                                                     | }
