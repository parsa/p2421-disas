    ; assembly                                                           | /* r2dec pseudo code output */
                                                                         | /* balb_testmessages.t/assume @ 0x404be0 */
                                                                         | #include <stdint.h>
                                                                         |  
    ; (fcn) method.BloombergLP::balb::Choice4.makeSelection1__ ()        | int64_t method_BloombergLP::balb::Choice4_makeSelection1_ (int64_t arg1) {
                                                                         |     rdi = arg1;
                                                                         |     /* BloombergLP::balb::Choice4::makeSelection1() */
    0x00404be0 push r15                                                  |     
    0x00404be2 push r14                                                  |     
    0x00404be4 push rbx                                                  |     
    0x00404be5 mov r14, rdi                                              |     r14 = rdi;
    0x00404be8 mov eax, dword [rdi + 0x20]                               |     eax = *((rdi + 0x20));
    0x00404beb cmp eax, 1                                                |     
                                                                         |     if (eax == 1) {
    0x00404bee je 0x404c37                                               |         goto label_1;
                                                                         |     }
    0x00404bf0 test eax, eax                                             |     
                                                                         |     if (eax != 0) {
    0x00404bf2 jne 0x404c37                                              |         goto label_1;
                                                                         |     }
    0x00404bf4 mov rbx, qword [r14]                                      |     rbx = *(r14);
    0x00404bf7 mov r15, qword [r14 + 8]                                  |     r15 = *((r14 + 8));
    0x00404bfb cmp r15, rbx                                              |     
                                                                         |     if (r15 != rbx) {
    0x00404bfe jne 0x404c21                                              |         goto label_2;
                                                                         |     }
    0x00404c00 jmp 0x404c7d                                              |     goto label_3;
                                                                         |     do {
                                                                         | label_0:
    0x00404c10 mov qword [rbx + 0x18], 0xffffffffffffffff                |         *((rbx + 0x18)) = 0xffffffffffffffff;
    0x00404c18 add rbx, 0x30                                             |         rbx += 0x30;
    0x00404c1c cmp r15, rbx                                              |         
                                                                         |         if (r15 == rbx) {
    0x00404c1f je 0x404c76                                               |             goto label_4;
                                                                         |         }
                                                                         | label_2:
    0x00404c21 cmp qword [rbx + 0x20], 0x17                              |         
    0x00404c26 je 0x404c10                                               |         
                                                                         |     } while (*((rbx + 0x20)) == 0x17);
    0x00404c28 mov rsi, qword [rbx]                                      |     rsi = *(rbx);
    0x00404c2b mov rdi, qword [rbx + 0x28]                               |     rdi = *((rbx + 0x28));
    0x00404c2f mov rax, qword [rdi]                                      |     rax = *(rdi);
    0x00404c32 call qword [rax + 0x18]                                   |     uint64_t (*rax + 0x18)() ();
    0x00404c35 jmp 0x404c10                                              |     goto label_0;
                                                                         | label_1:
    0x00404c37 mov dword [r14 + 0x20], 0xffffffff                        |     *((r14 + 0x20)) = 0xffffffff;
    0x00404c3f mov rax, qword [r14 + 0x28]                               |     rax = *((r14 + 0x28));
    0x00404c43 test rax, rax                                             |     
                                                                         |     if (rax == 0) {
    0x00404c46 jne 0x404c59                                              |         
    0x00404c48 mov rax, qword [rip + 0x27af01]                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00404c4f test rax, rax                                             |         
                                                                         |         if (rax != 0) {
    0x00404c52 jne 0x404c59                                              |             goto label_5;
                                                                         |         }
    0x00404c54 call 0x4206c0                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                         |     }
                                                                         | label_5:
    0x00404c59 xorps xmm0, xmm0                                          |     __asm ("xorps xmm0, xmm0");
    0x00404c5c movups xmmword [r14], xmm0                                |     __asm ("movups xmmword [r14], xmm0");
    0x00404c60 mov qword [r14 + 0x10], 0                                 |     *((r14 + 0x10)) = 0;
    0x00404c68 mov qword [r14 + 0x18], rax                               |     *((r14 + 0x18)) = rax;
    0x00404c6c mov dword [r14 + 0x20], 0                                 |     *((r14 + 0x20)) = 0;
    0x00404c74 jmp 0x404c7d                                              |     goto label_3;
                                                                         | label_4:
    0x00404c76 mov rax, qword [r14]                                      |     rax = *(r14);
    0x00404c79 mov qword [r14 + 8], rax                                  |     *((r14 + 8)) = rax;
                                                                         | label_3:
    0x00404c7d mov rax, r14                                              |     rax = r14;
    0x00404c80 pop rbx                                                   |     
    0x00404c81 pop r14                                                   |     
    0x00404c83 pop r15                                                   |     
    0x00404c85 ret                                                       |     return rax;
                                                                         | }
