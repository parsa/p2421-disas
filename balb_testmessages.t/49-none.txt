    ; assembly                                                                                               | /* r2dec pseudo code output */
                                                                                                             | /* balb_testmessages.t/none @ 0x40a610 */
                                                                                                             | #include <stdint.h>
                                                                                                             |  
    ; (fcn) method.BloombergLP::balb::Choice3.makeSelection4_BloombergLP::balb::CustomInt_const_ ()          | int64_t method_BloombergLP::balb::Choice3_makeSelection4_BloombergLP::balb::CustomInt_const_ (int64_t arg2, int64_t arg1) {
                                                                                                             |     rsi = arg2;
                                                                                                             |     rdi = arg1;
                                                                                                             |     /* BloombergLP::balb::Choice3::makeSelection4(BloombergLP::balb::CustomInt const&) */
    0x0040a610 push r14                                                                                      |     
    0x0040a612 push rbx                                                                                      |     
    0x0040a613 push rax                                                                                      |     
    0x0040a614 mov r14, rsi                                                                                  |     r14 = rsi;
    0x0040a617 mov rbx, rdi                                                                                  |     rbx = rdi;
    0x0040a61a mov eax, dword [rdi + 0x170]                                                                  |     eax = *((rdi + 0x170));
    0x0040a620 test eax, eax                                                                                 |     
                                                                                                             |     if (eax != 0) {
    0x0040a622 je 0x40a635                                                                                   |         
    0x0040a624 cmp eax, 2                                                                                    |         
                                                                                                             |         if (eax != 2) {
    0x0040a627 je 0x40a63f                                                                                   |             
    0x0040a629 cmp eax, 3                                                                                    |             
                                                                                                             |             if (eax != 3) {
    0x0040a62c jne 0x40a65b                                                                                  |                 goto label_0;
                                                                                                             |             }
    0x0040a62e mov eax, dword [r14]                                                                          |             eax = *(r14);
    0x0040a631 mov dword [rbx], eax                                                                          |             *(rbx) = eax;
    0x0040a633 jmp 0x40a674                                                                                  |             
    0x0040a635 mov rdi, rbx                                                                                  |             
    0x0040a638 call 0x4093b0                                                                                 |             BloombergLP::balb::Sequence6::~Sequence6() (rbx);
    0x0040a63d jmp 0x40a65b                                                                                  |             
                                                                                                             |         } else {
                                                                                                             |         } else {
    0x0040a63f cmp qword [rbx + 0x20], 0x17                                                                  |             
                                                                                                             |             if (*((rbx + 0x20)) != 0x17) {
    0x0040a644 je 0x40a653                                                                                   |                 
    0x0040a646 mov rsi, qword [rbx]                                                                          |                 rsi = *(rbx);
    0x0040a649 mov rdi, qword [rbx + 0x28]                                                                   |                 rdi = *((rbx + 0x28));
    0x0040a64d mov rax, qword [rdi]                                                                          |                 rax = *(rdi);
    0x0040a650 call qword [rax + 0x18]                                                                       |                 uint64_t (*rax + 0x18)() ();
                                                                                                             |             }
    0x0040a653 mov qword [rbx + 0x18], 0xffffffffffffffff                                                    |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                             |         }
                                                                                                             | label_0:
    0x0040a65b mov dword [rbx + 0x170], 0xffffffff                                                           |         *((rbx + 0x170)) = 0xffffffff;
    0x0040a665 mov eax, dword [r14]                                                                          |         eax = *(r14);
    0x0040a668 mov dword [rbx], eax                                                                          |         *(rbx) = eax;
    0x0040a66a mov dword [rbx + 0x170], 3                                                                    |         *((rbx + 0x170)) = 3;
                                                                                                             |     }
    0x0040a674 mov rax, rbx                                                                                  |     rax = rbx;
    0x0040a677 add rsp, 8                                                                                    |     
    0x0040a67b pop rbx                                                                                       |     
    0x0040a67c pop r14                                                                                       |     
    0x0040a67e ret                                                                                           |     return rax;
                                                                                                             | }
