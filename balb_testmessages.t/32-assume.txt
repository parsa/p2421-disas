    ; assembly                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                         | /* balb_testmessages.t/assume @ 0x411370 */
                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                         |  
    ; (fcn) method.BloombergLP::balb::SequenceWithAnonymity.SequenceWithAnonymity_BloombergLP::balb::SequenceWithAnonymity_const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_BloombergLP::balb::SequenceWithAnonymity_SequenceWithAnonymity_BloombergLP::balb::SequenceWithAnonymity_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                         |     /* BloombergLP::balb::SequenceWithAnonymity::SequenceWithAnonymity(BloombergLP::balb::SequenceWithAnonymity const&, BloombergLP::bslma::Allocator*) */
    0x00411370 push r15                                                                                                                                                  |     
    0x00411372 push r14                                                                                                                                                  |     
    0x00411374 push r12                                                                                                                                                  |     
    0x00411376 push rbx                                                                                                                                                  |     
    0x00411377 push rax                                                                                                                                                  |     
    0x00411378 mov r14, rdx                                                                                                                                              |     r14 = rdx;
    0x0041137b mov rbx, rsi                                                                                                                                              |     rbx = rsi;
    0x0041137e mov r15, rdi                                                                                                                                              |     r15 = rdi;
    0x00411381 test rdx, rdx                                                                                                                                             |     
                                                                                                                                                                         |     if (rdx == 0) {
    0x00411384 jne 0x41139a                                                                                                                                              |         
    0x00411386 mov rdx, qword [rip + 0x26e7c3]                                                                                                                           |         rdx = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041138d test rdx, rdx                                                                                                                                             |         
                                                                                                                                                                         |         if (rdx != 0) {
    0x00411390 jne 0x41139a                                                                                                                                              |             goto label_0;
                                                                                                                                                                         |         }
    0x00411392 call 0x4206c0                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00411397 mov rdx, rax                                                                                                                                              |         rdx = rax;
                                                                                                                                                                         |     }
                                                                                                                                                                         | label_0:
    0x0041139a mov byte [r15 + 0x18], 0                                                                                                                                  |     *((r15 + 0x18)) = 0;
    0x0041139f mov qword [r15 + 0x20], rdx                                                                                                                               |     *((r15 + 0x20)) = rdx;
    0x004113a3 cmp byte [rbx + 0x18], 0                                                                                                                                  |     
                                                                                                                                                                         |     if (*((rbx + 0x18)) != 0) {
    0x004113a7 je 0x4113b9                                                                                                                                               |         
    0x004113a9 mov rdi, r15                                                                                                                                              |         
    0x004113ac mov rsi, rbx                                                                                                                                              |         
    0x004113af call 0x410a50                                                                                                                                             |         BloombergLP::balb::SequenceWithAnonymityChoice2::SequenceWithAnonymityChoice2(BloombergLP::balb::SequenceWithAnonymityChoice2const&,BloombergLP::bslma::Allocator*) (r15, rbx, rdx);
    0x004113b4 mov byte [r15 + 0x18], 1                                                                                                                                  |         *((r15 + 0x18)) = 1;
                                                                                                                                                                         |     }
    0x004113b9 lea rdi, [r15 + 0x28]                                                                                                                                     |     
    0x004113bd lea rsi, [rbx + 0x28]                                                                                                                                     |     
    0x004113c1 mov rdx, r14                                                                                                                                              |     
    0x004113c4 call 0x405050                                                                                                                                             |     BloombergLP::balb::SequenceWithAnonymityChoice1::SequenceWithAnonymityChoice1(BloombergLP::balb::SequenceWithAnonymityChoice1const&,BloombergLP::bslma::Allocator*) (r15 + 0x28, rbx + 0x28, r14);
    0x004113c9 lea r12, [r15 + 0x68]                                                                                                                                     |     r12 = r15 + 0x68;
    0x004113cd lea rsi, [rbx + 0x68]                                                                                                                                     |     
    0x004113d1 mov rdi, r12                                                                                                                                              |     
    0x004113d4 mov rdx, r14                                                                                                                                              |     
    0x004113d7 call 0x40ae50                                                                                                                                             |     BloombergLP::balb::SequenceWithAnonymityChoice::SequenceWithAnonymityChoice(BloombergLP::balb::SequenceWithAnonymityChoiceconst&,BloombergLP::bslma::Allocator*) (r12, rbx + 0x68, r14);
    0x004113dc lea rdi, [r15 + 0x1e8]                                                                                                                                    |     
    0x004113e3 add rbx, 0x1e8                                                                                                                                            |     rbx += 0x1e8;
    0x004113ea mov rsi, rbx                                                                                                                                              |     
    0x004113ed mov rdx, r14                                                                                                                                              |     
    0x004113f0 call 0x408c40                                                                                                                                             |     BloombergLP::balb::Sequence6::Sequence6(BloombergLP::balb::Sequence6const&,BloombergLP::bslma::Allocator*) (r15 + 0x1e8, rbx, r14);
    0x004113f5 add rsp, 8                                                                                                                                                |     
    0x004113f9 pop rbx                                                                                                                                                   |     
    0x004113fa pop r12                                                                                                                                                   |     
    0x004113fc pop r14                                                                                                                                                   |     
    0x004113fe pop r15                                                                                                                                                   |     
    0x00411400 ret                                                                                                                                                       |     return rax;
                                                                                                                                                                         | }
