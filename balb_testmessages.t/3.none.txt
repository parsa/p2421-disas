    ; assembly                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                         | /* balb_testmessages.t/none @ 0x40da00 */
                                                                                                                                         | #include <stdint.h>
                                                                                                                                         |  
    ; (fcn) method.BloombergLP::balb::Sequence4.Sequence4_BloombergLP::balb::Sequence4_const__BloombergLP::bslma::Allocator_ ()          | int64_t method_BloombergLP::balb::Sequence4_Sequence4_BloombergLP::balb::Sequence4_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                         |     char * var_8h;
                                                                                                                                         |     char * var_10h;
                                                                                                                                         |     int64_t var_18h;
                                                                                                                                         |     char * var_20h;
                                                                                                                                         |     int64_t var_28h;
                                                                                                                                         |     int64_t var_30h;
                                                                                                                                         |     int64_t var_38h;
                                                                                                                                         |     int64_t var_40h;
                                                                                                                                         |     int64_t var_48h;
                                                                                                                                         |     int64_t var_50h;
                                                                                                                                         |     int64_t var_58h;
                                                                                                                                         |     int64_t var_60h;
                                                                                                                                         |     rdx = arg3;
                                                                                                                                         |     rsi = arg2;
                                                                                                                                         |     rdi = arg1;
                                                                                                                                         |     /* BloombergLP::balb::Sequence4::Sequence4(BloombergLP::balb::Sequence4 const&, BloombergLP::bslma::Allocator*) */
    0x0040da00 push rbp                                                                                                                  |     
    0x0040da01 push r15                                                                                                                  |     
    0x0040da03 push r14                                                                                                                  |     
    0x0040da05 push r13                                                                                                                  |     
    0x0040da07 push r12                                                                                                                  |     
    0x0040da09 push rbx                                                                                                                  |     
    0x0040da0a sub rsp, 0x68                                                                                                             |     
    0x0040da0e mov r15, rdx                                                                                                              |     r15 = rdx;
    0x0040da11 mov r14, rsi                                                                                                              |     r14 = rsi;
    0x0040da14 mov r12, rdi                                                                                                              |     r12 = rdi;
    0x0040da17 movsd xmm0, qword [rsi]                                                                                                   |     xmm0 = *(rsi);
    0x0040da1b movsd qword [rdi], xmm0                                                                                                   |     *(rdi) = xmm0;
    0x0040da1f lea rbx, [rdi + 8]                                                                                                        |     rbx = rdi + 8;
    0x0040da23 lea rbp, [rsi + 8]                                                                                                        |     rbp = rsi + 8;
    0x0040da27 mov rax, rdx                                                                                                              |     rax = rdx;
    0x0040da2a test rdx, rdx                                                                                                             |     
                                                                                                                                         |     if (rdx == 0) {
    0x0040da2d jne 0x40da40                                                                                                              |         
    0x0040da2f mov rax, qword [rip + 0x27111a]                                                                                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040da36 test rax, rax                                                                                                             |         
                                                                                                                                         |         if (rax != 0) {
    0x0040da39 jne 0x40da40                                                                                                              |             goto label_1;
                                                                                                                                         |         }
    0x0040da3b call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |     }
                                                                                                                                         | label_1:
    0x0040da40 mov qword [rsp + 8], rax                                                                                                  |     *((rsp + 8)) = rax;
    0x0040da45 lea rdx, [rsp + 8]                                                                                                        |     
    0x0040da4a mov rdi, rbx                                                                                                              |     
    0x0040da4d mov rsi, rbp                                                                                                              |     
    0x0040da50 call 0x4342d0                                                                                                             |     bsl::vector<int,bsl::allocator<int>>::vector(bsl::vector<int,bsl::allocator<int>>const&,bsl::allocator<int>const&) (rbx, rbp, rsp + 8);
    0x0040da55 mov rax, r15                                                                                                              |     rax = r15;
    0x0040da58 test r15, r15                                                                                                             |     
    0x0040da5b mov qword [rsp + 0x60], rbx                                                                                               |     *((rsp + 0x60)) = rbx;
                                                                                                                                         |     if (r15 == 0) {
    0x0040da60 jne 0x40da73                                                                                                              |         
    0x0040da62 mov rax, qword [rip + 0x2710e7]                                                                                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040da69 test rax, rax                                                                                                             |         
                                                                                                                                         |         if (rax != 0) {
    0x0040da6c jne 0x40da73                                                                                                              |             goto label_2;
                                                                                                                                         |         }
    0x0040da6e call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |     }
                                                                                                                                         | label_2:
    0x0040da73 lea rdi, [r12 + 0x28]                                                                                                     |     
    0x0040da78 mov qword [rsp + 8], rax                                                                                                  |     *((rsp + 8)) = rax;
    0x0040da7d lea rsi, [r14 + 0x28]                                                                                                     |     
    0x0040da81 lea rdx, [rsp + 8]                                                                                                        |     
    0x0040da86 mov qword [rsp + 0x58], rdi                                                                                               |     *((rsp + 0x58)) = rdi;
    0x0040da8b call 0x43ccf0                                                                                                             |     bsl::vector<double,bsl::allocator<double>>::vector(bsl::vector<double,bsl::allocator<double>>const&,bsl::allocator<double>const&) (r12 + 0x28, r14 + 0x28, rsp + 8);
    0x0040da90 mov rax, r15                                                                                                              |     rax = r15;
    0x0040da93 test r15, r15                                                                                                             |     
                                                                                                                                         |     if (r15 == 0) {
    0x0040da96 jne 0x40daa9                                                                                                              |         
    0x0040da98 mov rax, qword [rip + 0x2710b1]                                                                                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040da9f test rax, rax                                                                                                             |         
                                                                                                                                         |         if (rax != 0) {
    0x0040daa2 jne 0x40daa9                                                                                                              |             goto label_3;
                                                                                                                                         |         }
    0x0040daa4 call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |     }
                                                                                                                                         | label_3:
    0x0040daa9 lea rdi, [r12 + 0x48]                                                                                                     |     
    0x0040daae mov qword [rsp + 8], rax                                                                                                  |     *((rsp + 8)) = rax;
    0x0040dab3 lea rsi, [r14 + 0x48]                                                                                                     |     
    0x0040dab7 lea rdx, [rsp + 8]                                                                                                        |     
    0x0040dabc mov qword [rsp + 0x50], rdi                                                                                               |     *((rsp + 0x50)) = rdi;
    0x0040dac1 call 0x42e5a0                                                                                                             |     bsl::vector<char,bsl::allocator<char>>::vector(bsl::vector<char,bsl::allocator<char>>const&,bsl::allocator<char>const&) (r12 + 0x48, r14 + 0x48, rsp + 8);
    0x0040dac6 mov rax, r15                                                                                                              |     rax = r15;
    0x0040dac9 test r15, r15                                                                                                             |     
                                                                                                                                         |     if (r15 == 0) {
    0x0040dacc jne 0x40dadf                                                                                                              |         
    0x0040dace mov rax, qword [rip + 0x27107b]                                                                                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dad5 test rax, rax                                                                                                             |         
                                                                                                                                         |         if (rax != 0) {
    0x0040dad8 jne 0x40dadf                                                                                                              |             goto label_4;
                                                                                                                                         |         }
    0x0040dada call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |     }
                                                                                                                                         | label_4:
    0x0040dadf lea rdi, [r12 + 0x68]                                                                                                     |     
    0x0040dae4 mov qword [rsp + 8], rax                                                                                                  |     *((rsp + 8)) = rax;
    0x0040dae9 lea rsi, [r14 + 0x68]                                                                                                     |     
    0x0040daed lea rdx, [rsp + 8]                                                                                                        |     
    0x0040daf2 mov qword [rsp + 0x40], rdi                                                                                               |     *((rsp + 0x40)) = rdi;
    0x0040daf7 call 0x414d20                                                                                                             |     bsl::vector<bsl::vector<char,bsl::allocator<char>>,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>>::vector(bsl::vector<bsl::vector<char,bsl::allocator<char>>,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>>const&,bsl::allocator<bsl::vector<char,bsl::allocator<char>>>const&) (r12 + 0x68, r14 + 0x68, rsp + 8);
    0x0040dafc mov rax, r15                                                                                                              |     rax = r15;
    0x0040daff test r15, r15                                                                                                             |     
                                                                                                                                         |     if (r15 == 0) {
    0x0040db02 jne 0x40db15                                                                                                              |         
    0x0040db04 mov rax, qword [rip + 0x271045]                                                                                           |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040db0b test rax, rax                                                                                                             |         
                                                                                                                                         |         if (rax != 0) {
    0x0040db0e jne 0x40db15                                                                                                              |             goto label_5;
                                                                                                                                         |         }
    0x0040db10 call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |     }
                                                                                                                                         | label_5:
    0x0040db15 lea rdi, [r12 + 0x88]                                                                                                     |     
    0x0040db1d mov qword [rsp + 8], rax                                                                                                  |     *((rsp + 8)) = rax;
    0x0040db22 lea rsi, [r14 + 0x88]                                                                                                     |     
    0x0040db29 lea rdx, [rsp + 8]                                                                                                        |     
    0x0040db2e mov qword [rsp + 0x48], rdi                                                                                               |     *((rsp + 0x48)) = rdi;
    0x0040db33 call 0x42d3b0                                                                                                             |     bsl::vector<bool,bsl::allocator<bool>>::vector(bsl::vector<bool,bsl::allocator<bool>>const&,bsl::allocator<bool>const&) (r12 + 0x88, r14 + 0x88, rsp + 8);
    0x0040db38 mov rdi, r15                                                                                                              |     rdi = r15;
    0x0040db3b test r15, r15                                                                                                             |     
                                                                                                                                         |     if (r15 == 0) {
    0x0040db3e jne 0x40db54                                                                                                              |         
    0x0040db40 mov rdi, qword [rip + 0x271009]                                                                                           |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040db47 test rdi, rdi                                                                                                             |         
                                                                                                                                         |         if (rdi != 0) {
    0x0040db4a jne 0x40db54                                                                                                              |             goto label_6;
                                                                                                                                         |         }
    0x0040db4c call 0x4207c0                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040db51 mov rdi, rax                                                                                                              |         rdi = rax;
                                                                                                                                         |     }
                                                                                                                                         | label_6:
    0x0040db54 lea rbx, [r12 + 0xa8]                                                                                                     |     rbx = r12 + 0xa8;
    0x0040db5c xorps xmm0, xmm0                                                                                                          |     __asm ("xorps xmm0, xmm0");
    0x0040db5f movups xmmword [rbx], xmm0                                                                                                |     __asm ("movups xmmword [rbx], xmm0");
    0x0040db62 mov qword [rbx + 0x10], 0                                                                                                 |     *((rbx + 0x10)) = 0;
    0x0040db6a mov qword [r12 + 0xc0], rdi                                                                                               |     *((r12 + 0xc0)) = rdi;
    0x0040db72 mov rbp, qword [r14 + 0xb0]                                                                                               |     rbp = *((r14 + 0xb0));
    0x0040db79 sub rbp, qword [r14 + 0xa8]                                                                                               |     rbp -= *((r14 + 0xa8));
                                                                                                                                         |     if (rbp == 0) {
    0x0040db80 je 0x40dbef                                                                                                               |         goto label_7;
                                                                                                                                         |     }
    0x0040db82 mov rax, qword [rdi]                                                                                                      |     rax = *(rdi);
    0x0040db85 mov rsi, rbp                                                                                                              |     rsi = rbp;
    0x0040db88 call qword [rax + 0x10]                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0040db8b sar rbp, 4                                                                                                                |     rbp >>= 4;
    0x0040db8f mov qword [r12 + 0xb0], rax                                                                                               |     *((r12 + 0xb0)) = rax;
    0x0040db97 mov qword [r12 + 0xa8], rax                                                                                               |     *((r12 + 0xa8)) = rax;
    0x0040db9f mov qword [r12 + 0xb8], rbp                                                                                               |     *((r12 + 0xb8)) = rbp;
    0x0040dba7 mov rsi, qword [r14 + 0xa8]                                                                                               |     rsi = *((r14 + 0xa8));
    0x0040dbae mov rdx, qword [r14 + 0xb0]                                                                                               |     rdx = *((r14 + 0xb0));
    0x0040dbb5 sub rdx, rsi                                                                                                              |     rdx -= rsi;
                                                                                                                                         |     if (rdx == 0) {
    0x0040dbb8 je 0x40def9                                                                                                               |         goto label_8;
                                                                                                                                         |     }
    0x0040dbbe mov rdi, rax                                                                                                              |     
    0x0040dbc1 call 0x403a30                                                                                                             |     memcpy (rax, rsi, rdx);
    0x0040dbc6 mov rcx, qword [r14 + 0xb0]                                                                                               |     rcx = *((r14 + 0xb0));
    0x0040dbcd mov rax, qword [r12 + 0xb0]                                                                                               |     rax = *((r12 + 0xb0));
    0x0040dbd5 sub rcx, qword [r14 + 0xa8]                                                                                               |     rcx -= *((r14 + 0xa8));
    0x0040dbdc sar rcx, 4                                                                                                                |     rcx >>= 4;
                                                                                                                                         |     do {
    0x0040dbe0 shl rcx, 4                                                                                                                |         rcx <<= 4;
    0x0040dbe4 add rcx, rax                                                                                                              |         rcx += rax;
    0x0040dbe7 mov qword [r12 + 0xb0], rcx                                                                                               |         *((r12 + 0xb0)) = rcx;
                                                                                                                                         | label_7:
    0x0040dbef mov rax, r15                                                                                                              |         rax = r15;
    0x0040dbf2 test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040dbf5 jne 0x40dc08                                                                                                              |             
    0x0040dbf7 mov rax, qword [rip + 0x270f52]                                                                                           |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dbfe test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax != 0) {
    0x0040dc01 jne 0x40dc08                                                                                                              |                 goto label_9;
                                                                                                                                         |             }
    0x0040dc03 call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |         }
                                                                                                                                         | label_9:
    0x0040dc08 lea rdi, [r12 + 0xc8]                                                                                                     |         
    0x0040dc10 mov qword [rsp + 8], rax                                                                                                  |         *((rsp + 8)) = rax;
    0x0040dc15 lea rsi, [r14 + 0xc8]                                                                                                     |         
    0x0040dc1c lea rdx, [rsp + 8]                                                                                                        |         
    0x0040dc21 mov qword [rsp + 0x38], rdi                                                                                               |         *((rsp + 0x38)) = rdi;
    0x0040dc26 call 0x414e70                                                                                                             |         bsl::vector<BloombergLP::balb::Sequence3,bsl::allocator<BloombergLP::balb::Sequence3>>::vector(bsl::vector<BloombergLP::balb::Sequence3,bsl::allocator<BloombergLP::balb::Sequence3>>const&,bsl::allocator<BloombergLP::balb::Sequence3>const&) (r12 + 0xc8, r14 + 0xc8, rsp + 8);
    0x0040dc2b mov rax, r15                                                                                                              |         rax = r15;
    0x0040dc2e test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040dc31 jne 0x40dc44                                                                                                              |             
    0x0040dc33 mov rax, qword [rip + 0x270f16]                                                                                           |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dc3a test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax != 0) {
    0x0040dc3d jne 0x40dc44                                                                                                              |                 goto label_10;
                                                                                                                                         |             }
    0x0040dc3f call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |         }
                                                                                                                                         | label_10:
    0x0040dc44 lea rdi, [r12 + 0xe8]                                                                                                     |         
    0x0040dc4c mov qword [rsp + 8], rax                                                                                                  |         *((rsp + 8)) = rax;
    0x0040dc51 lea rsi, [r14 + 0xe8]                                                                                                     |         
    0x0040dc58 lea rdx, [rsp + 8]                                                                                                        |         
    0x0040dc5d mov qword [rsp + 0x30], rdi                                                                                               |         *((rsp + 0x30)) = rdi;
    0x0040dc62 call 0x4147b0                                                                                                             |         bsl::vector<BloombergLP::balb::CustomString,bsl::allocator<BloombergLP::balb::CustomString>>::vector(bsl::vector<BloombergLP::balb::CustomString,bsl::allocator<BloombergLP::balb::CustomString>>const&,bsl::allocator<BloombergLP::balb::CustomString>const&) (r12 + 0xe8, r14 + 0xe8, rsp + 8);
    0x0040dc67 mov rax, r15                                                                                                              |         rax = r15;
    0x0040dc6a test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040dc6d jne 0x40dc80                                                                                                              |             
    0x0040dc6f mov rax, qword [rip + 0x270eda]                                                                                           |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dc76 test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax != 0) {
    0x0040dc79 jne 0x40dc80                                                                                                              |                 goto label_11;
                                                                                                                                         |             }
    0x0040dc7b call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |         }
                                                                                                                                         | label_11:
    0x0040dc80 lea rbp, [r12 + 0x108]                                                                                                    |         rbp = r12 + 0x108;
    0x0040dc88 mov qword [rsp + 8], rax                                                                                                  |         *((rsp + 8)) = rax;
    0x0040dc8d lea rsi, [r14 + 0x108]                                                                                                    |         
    0x0040dc94 lea rdx, [rsp + 8]                                                                                                        |         
    0x0040dc99 mov rdi, rbp                                                                                                              |         
    0x0040dc9c call 0x414f90                                                                                                             |         bsl::vector<BloombergLP::balb::Choice1,bsl::allocator<BloombergLP::balb::Choice1>>::vector(bsl::vector<BloombergLP::balb::Choice1,bsl::allocator<BloombergLP::balb::Choice1>>const&,bsl::allocator<BloombergLP::balb::Choice1>const&) (rbp, r14 + 0x108, rsp + 8);
    0x0040dca1 mov rdi, r15                                                                                                              |         rdi = r15;
    0x0040dca4 test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040dca7 jne 0x40dcbd                                                                                                              |             
    0x0040dca9 mov rdi, qword [rip + 0x270ea0]                                                                                           |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dcb0 test rdi, rdi                                                                                                             |             
                                                                                                                                         |             if (rdi != 0) {
    0x0040dcb3 jne 0x40dcbd                                                                                                              |                 goto label_12;
                                                                                                                                         |             }
    0x0040dcb5 call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040dcba mov rdi, rax                                                                                                              |             rdi = rax;
                                                                                                                                         |         }
                                                                                                                                         | label_12:
    0x0040dcbd lea r13, [r12 + 0x128]                                                                                                    |         r13 = r12 + 0x128;
    0x0040dcc5 mov rax, qword [r14 + 0x148]                                                                                              |         rax = *((r14 + 0x148));
    0x0040dccc mov qword [r13 + 0x20], rax                                                                                               |         *((r13 + 0x20)) = rax;
    0x0040dcd0 movups xmm0, xmmword [r14 + 0x128]                                                                                        |         __asm ("movups xmm0, xmmword [r14 + 0x128]");
    0x0040dcd8 movups xmm1, xmmword [r14 + 0x138]                                                                                        |         __asm ("movups xmm1, xmmword [r14 + 0x138]");
    0x0040dce0 movups xmmword [r13 + 0x10], xmm1                                                                                         |         __asm ("movups xmmword [r13 + 0x10], xmm1");
    0x0040dce5 movups xmmword [r13], xmm0                                                                                                |         __asm ("movups xmmword [r13], xmm0");
    0x0040dcea mov qword [r12 + 0x150], rdi                                                                                              |         *((r12 + 0x150)) = rdi;
    0x0040dcf2 cmp qword [r12 + 0x148], 0x17                                                                                             |         
                                                                                                                                         |         if (*((r12 + 0x148)) != 0x17) {
    0x0040dcfb je 0x40dd85                                                                                                               |             
    0x0040dd01 mov rax, qword [r14 + 0x140]                                                                                              |             rax = *((r14 + 0x140));
    0x0040dd08 cmp rax, 0x17                                                                                                             |             
    0x0040dd0c mov esi, 0x17                                                                                                             |             esi = 0x17;
                                                                                                                                         |             if (rax > 0x17) {
    0x0040dd11 cmova rsi, rax                                                                                                            |                 rsi = rax;
                                                                                                                                         |             }
    0x0040dd15 mov qword [r12 + 0x128], 0                                                                                                |             *((r12 + 0x128)) = 0;
    0x0040dd21 mov qword [r12 + 0x140], rax                                                                                              |             *((r12 + 0x140)) = rax;
    0x0040dd29 mov qword [r12 + 0x148], rsi                                                                                              |             *((r12 + 0x148)) = rsi;
    0x0040dd31 cmp rax, 0x18                                                                                                             |             
                                                                                                                                         |             if (rax >= 0x18) {
    0x0040dd35 jb 0x40dd53                                                                                                               |                 
    0x0040dd37 inc rsi                                                                                                                   |                 rsi++;
    0x0040dd3a mov rax, qword [rdi]                                                                                                      |                 rax = *(rdi);
    0x0040dd3d call qword [rax + 0x10]                                                                                                   |                 rax = uint64_t (*rax + 0x10)() ();
    0x0040dd40 mov qword [r12 + 0x128], rax                                                                                              |                 *((r12 + 0x128)) = rax;
    0x0040dd48 cmp qword [r12 + 0x148], 0x17                                                                                             |                 
                                                                                                                                         |                 if (*((r12 + 0x148)) != 0x17) {
    0x0040dd51 jne 0x40dd56                                                                                                              |                     goto label_13;
                                                                                                                                         |                 }
                                                                                                                                         |             }
    0x0040dd53 mov rax, r13                                                                                                              |             rax = r13;
                                                                                                                                         | label_13:
    0x0040dd56 mov rdx, qword [r12 + 0x140]                                                                                              |             rdx = *((r12 + 0x140));
    0x0040dd5e inc rdx                                                                                                                   |             rdx++;
                                                                                                                                         |             if (rdx == 0) {
    0x0040dd61 je 0x40dd85                                                                                                               |                 goto label_14;
                                                                                                                                         |             }
    0x0040dd63 cmp qword [r14 + 0x148], 0x17                                                                                             |             
                                                                                                                                         |             if (*((r14 + 0x148)) != 0x17) {
    0x0040dd6b je 0x40dd76                                                                                                               |                 
    0x0040dd6d mov rsi, qword [r14 + 0x128]                                                                                              |                 rsi = *((r14 + 0x128));
    0x0040dd74 jmp 0x40dd7d                                                                                                              |                 
                                                                                                                                         |             } else {
    0x0040dd76 lea rsi, [r14 + 0x128]                                                                                                    |                 
                                                                                                                                         |             }
    0x0040dd7d mov rdi, rax                                                                                                              |             
    0x0040dd80 call 0x403a30                                                                                                             |             memcpy (rax, r14 + 0x128, rdx);
                                                                                                                                         |         }
                                                                                                                                         | label_14:
    0x0040dd85 mov rax, r15                                                                                                              |         rax = r15;
    0x0040dd88 test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040dd8b jne 0x40dd9e                                                                                                              |             
    0x0040dd8d mov rax, qword [rip + 0x270dbc]                                                                                           |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040dd94 test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax != 0) {
    0x0040dd97 jne 0x40dd9e                                                                                                              |                 goto label_15;
                                                                                                                                         |             }
    0x0040dd99 call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |         }
                                                                                                                                         | label_15:
    0x0040dd9e mov byte [r12 + 0x178], 0                                                                                                 |         *((r12 + 0x178)) = 0;
    0x0040dda7 mov qword [r12 + 0x180], rax                                                                                              |         *((r12 + 0x180)) = rax;
    0x0040ddaf cmp byte [r14 + 0x178], 0                                                                                                 |         
                                                                                                                                         |         if (*((r14 + 0x178)) != 0) {
    0x0040ddb7 je 0x40ddf6                                                                                                               |             
    0x0040ddb9 test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax == 0) {
    0x0040ddbc jne 0x40ddcf                                                                                                              |                 
    0x0040ddbe mov rax, qword [rip + 0x270d8b]                                                                                           |                 rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040ddc5 test rax, rax                                                                                                             |                 
                                                                                                                                         |                 if (rax != 0) {
    0x0040ddc8 jne 0x40ddcf                                                                                                              |                     goto label_16;
                                                                                                                                         |                 }
    0x0040ddca call 0x4207c0                                                                                                             |                 rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                                                         |             }
                                                                                                                                         | label_16:
    0x0040ddcf lea rdi, [r12 + 0x158]                                                                                                    |             
    0x0040ddd7 lea rsi, [r14 + 0x158]                                                                                                    |             
    0x0040ddde mov qword [rsp + 8], rax                                                                                                  |             *((rsp + 8)) = rax;
    0x0040dde3 lea rdx, [rsp + 8]                                                                                                        |             
    0x0040dde8 call 0x42e5a0                                                                                                             |             bsl::vector<char,bsl::allocator<char>>::vector(bsl::vector<char,bsl::allocator<char>>const&,bsl::allocator<char>const&) (r12 + 0x158, r14 + 0x158, rsp + 8);
    0x0040dded mov byte [r12 + 0x178], 1                                                                                                 |             *((r12 + 0x178)) = 1;
                                                                                                                                         |         }
    0x0040ddf6 mov byte [r12 + 0x188], 0                                                                                                 |         *((r12 + 0x188)) = 0;
    0x0040ddff mov byte [r12 + 0x198], 0                                                                                                 |         *((r12 + 0x198)) = 0;
    0x0040de08 cmp byte [r14 + 0x198], 0                                                                                                 |         
                                                                                                                                         |         if (*((r14 + 0x198)) != 0) {
    0x0040de10 je 0x40de4a                                                                                                               |             
    0x0040de12 mov rax, qword [r14 + 0x188]                                                                                              |             rax = *((r14 + 0x188));
    0x0040de19 mov qword [r12 + 0x188], rax                                                                                              |             *((r12 + 0x188)) = rax;
    0x0040de21 test rax, rax                                                                                                             |             
                                                                                                                                         |             if (rax >= 0) {
    0x0040de24 jns 0x40df00                                                                                                              |                 goto label_17;
                                                                                                                                         |             }
                                                                                                                                         | label_0:
    0x0040de2a mov qword [r12 + 0x188], rax                                                                                              |             *((r12 + 0x188)) = rax;
    0x0040de32 mov eax, dword [r14 + 0x190]                                                                                              |             eax = *((r14 + 0x190));
    0x0040de39 mov dword [r12 + 0x190], eax                                                                                              |             *((r12 + 0x190)) = eax;
    0x0040de41 mov byte [r12 + 0x198], 1                                                                                                 |             *((r12 + 0x198)) = 1;
                                                                                                                                         |         }
    0x0040de4a test r15, r15                                                                                                             |         
                                                                                                                                         |         if (r15 == 0) {
    0x0040de4d jne 0x40de63                                                                                                              |             
    0x0040de4f mov r15, qword [rip + 0x270cfa]                                                                                           |             r15 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0040de56 test r15, r15                                                                                                             |             
                                                                                                                                         |             if (r15 != 0) {
    0x0040de59 jne 0x40de63                                                                                                              |                 goto label_18;
                                                                                                                                         |             }
    0x0040de5b call 0x4207c0                                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0040de60 mov r15, rax                                                                                                              |             r15 = rax;
                                                                                                                                         |         }
                                                                                                                                         | label_18:
    0x0040de63 mov qword [rsp + 8], r15                                                                                                  |         *((rsp + 8)) = r15;
    0x0040de68 lea rsi, [r14 + 0x1a0]                                                                                                    |         
    0x0040de6f lea rdi, [r12 + 0x1a0]                                                                                                    |         
    0x0040de77 lea rdx, [rsp + 8]                                                                                                        |         
    0x0040de7c call 0x414860                                                                                                             |         BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomString>::NullableValue(BloombergLP::bdlb::NullableValue<BloombergLP::balb::CustomString>const&,bsl::allocator<char>const&) (r12 + 0x1a0, r14 + 0x1a0, rsp + 8);
    0x0040de81 mov eax, dword [r14 + 0x1e0]                                                                                              |         eax = *((r14 + 0x1e0));
    0x0040de88 mov dword [r12 + 0x1e0], eax                                                                                              |         *((r12 + 0x1e0)) = eax;
    0x0040de90 mov al, byte [r14 + 0x1e8]                                                                                                |         al = *((r14 + 0x1e8));
    0x0040de97 mov byte [r12 + 0x1e8], al                                                                                                |         *((r12 + 0x1e8)) = al;
    0x0040de9f mov eax, dword [r14 + 0x1e4]                                                                                              |         eax = *((r14 + 0x1e4));
    0x0040dea6 mov dword [r12 + 0x1e4], eax                                                                                              |         *((r12 + 0x1e4)) = eax;
    0x0040deae mov eax, dword [r14 + 0x1ec]                                                                                              |         eax = *((r14 + 0x1ec));
    0x0040deb5 mov dword [r12 + 0x1ec], eax                                                                                              |         *((r12 + 0x1ec)) = eax;
    0x0040debd mov al, byte [r14 + 0x1f0]                                                                                                |         al = *((r14 + 0x1f0));
    0x0040dec4 mov byte [r12 + 0x1f0], al                                                                                                |         *((r12 + 0x1f0)) = al;
    0x0040decc mov eax, dword [r14 + 0x1f4]                                                                                              |         eax = *((r14 + 0x1f4));
    0x0040ded3 mov dword [r12 + 0x1f4], eax                                                                                              |         *((r12 + 0x1f4)) = eax;
    0x0040dedb mov al, byte [r14 + 0x1f8]                                                                                                |         al = *((r14 + 0x1f8));
    0x0040dee2 mov byte [r12 + 0x1f8], al                                                                                                |         *((r12 + 0x1f8)) = al;
    0x0040deea add rsp, 0x68                                                                                                             |         
    0x0040deee pop rbx                                                                                                                   |         
    0x0040deef pop r12                                                                                                                   |         
    0x0040def1 pop r13                                                                                                                   |         
    0x0040def3 pop r14                                                                                                                   |         
    0x0040def5 pop r15                                                                                                                   |         
    0x0040def7 pop rbp                                                                                                                   |         
    0x0040def8 ret                                                                                                                       |         return rax;
                                                                                                                                         | label_8:
    0x0040def9 xor ecx, ecx                                                                                                              |         ecx = 0;
    0x0040defb jmp 0x40dbe0                                                                                                              |         
                                                                                                                                         |     } while (1);
                                                                                                                                         | label_17:
    0x0040df00 mov edi, 0x67eb38                                                                                                         |     
    0x0040df05 call 0x420a60                                                                                                             |     eax = BloombergLP::bsls::Review::updateCount(BloombergLP::bsls::Atomic_TypeTraits<BloombergLP::bsls::AtomicOperations_ALL_ALL_ClangIntrinsics>::Int*) (method.BloombergLP::bdlt::Datetime.validateAndTraceLogRepresentation___const::lambda__1::operator_____const::count);
    0x0040df0a mov qword [rsp + 8], 0x447dd8                                                                                             |     *((rsp + 8)) = "detected invalid 'bdlt::Datetime'; see TEAM 579660115";
    0x0040df13 mov qword [rsp + 0x10], 0x447e0e                                                                                          |     *((rsp + 0x10)) = "/home/parsa/experiments/assumptions/crush/ccm-none/groups/bdl/bdlt/bdlt_datetime.h";
    0x0040df1c mov dword [rsp + 0x18], 0x466                                                                                             |     *((rsp + 0x18)) = 0x466;
    0x0040df24 mov qword [rsp + 0x20], 0x461021                                                                                          |     *((rsp + 0x20)) = "R-INV";
    0x0040df2d mov dword [rsp + 0x28], eax                                                                                               |     *((rsp + 0x28)) = eax;
    0x0040df31 lea rdi, [rsp + 8]                                                                                                        |     rdi = rsp + 8;
    0x0040df36 call 0x420a80                                                                                                             |     BloombergLP::bsls::Review::invokeHandler(BloombergLP::bsls::ReviewViolationconst&) ();
    0x0040df3b mov rax, qword [r12 + 0x188]                                                                                              |     rax = *((r12 + 0x188));
    0x0040df43 mov rcx, rax                                                                                                              |     rcx = *((r12 + 0x188));
    0x0040df46 shr rcx, 0x20                                                                                                             |     rcx >>= 0x20;
    0x0040df4a shl rax, 0x25                                                                                                             |     rax <<= 0x25;
    0x0040df4e movabs rdx, 0x7fffffe000000000                                                                                            |     rdx = 0x7fffffe000000000;
    0x0040df58 add rdx, rax                                                                                                              |     rdx += rax;
    0x0040df5b imul rcx, rcx, 0x3e8                                                                                                      |     rcx *= 0x3e8;
    0x0040df62 movabs rax, 0x8000000000000000                                                                                            |     rax = 0x8000000000000000;
    0x0040df6c or rax, rdx                                                                                                               |     rax |= rdx;
    0x0040df6f or rax, rcx                                                                                                               |     rax |= rcx;
    0x0040df72 jmp 0x40de2a                                                                                                              |     goto label_0;
                                                                                                                                         | }
