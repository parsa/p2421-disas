    ; assembly                                                   | /* r2dec pseudo code output */
                                                                 | /* balb_testmessages.t/none @ 0x415670 */
                                                                 | #include <stdint.h>
                                                                 |  
    ; (fcn) method.BloombergLP::balb::Choice1.Choice1__ ()       | int64_t method_BloombergLP::balb::Choice1_Choice1_ (int64_t arg1) {
                                                                 |     rdi = arg1;
                                                                 |     do {
                                                                 |         /* BloombergLP::balb::Choice1::~Choice1() */
    0x00415670 push r15                                          |         
    0x00415672 push r14                                          |         
    0x00415674 push r13                                          |         
    0x00415676 push r12                                          |         
    0x00415678 push rbx                                          |         
    0x00415679 mov rbx, rdi                                      |         rbx = rdi;
    0x0041567c mov eax, dword [rdi + 8]                          |         eax = *((rdi + 8));
    0x0041567f cmp eax, 3                                        |         
                                                                 |         if (eax != 3) {
    0x00415682 je 0x4156b3                                       |             
    0x00415684 cmp eax, 2                                        |             
                                                                 |             if (eax != 2) {
    0x00415687 jne 0x415720                                      |                 goto label_0;
                                                                 |             }
    0x0041568d mov r14, qword [rbx]                              |             r14 = *(rbx);
    0x00415690 test r14, r14                                     |             
                                                                 |             if (r14 == 0) {
    0x00415693 je 0x415720                                       |                 goto label_0;
                                                                 |             }
    0x00415699 mov r15, qword [rbx + 0x10]                       |             r15 = *((rbx + 0x10));
    0x0041569d mov rdi, r14                                      |             
    0x004156a0 call 0x40e240                                     |             BloombergLP::balb::Sequence4::~Sequence4() (r14);
    0x004156a5 mov rax, qword [r15]                              |             rax = *(r15);
    0x004156a8 mov rdi, r15                                      |             rdi = r15;
    0x004156ab mov rsi, r14                                      |             rsi = r14;
    0x004156ae call qword [rax + 0x18]                           |             uint64_t (*rax + 0x18)() ();
    0x004156b1 jmp 0x415720                                      |             goto label_0;
                                                                 |         }
    0x004156b3 mov r14, qword [rbx]                              |         r14 = *(rbx);
    0x004156b6 test r14, r14                                     |         
                                                                 |         if (r14 == 0) {
    0x004156b9 je 0x415720                                       |             goto label_0;
                                                                 |         }
    0x004156bb mov r15, qword [rbx + 0x10]                       |         r15 = *((rbx + 0x10));
    0x004156bf mov eax, dword [r14 + 0x30]                       |         eax = *((r14 + 0x30));
    0x004156c3 cmp eax, 2                                        |         
                                                                 |         if (eax != 2) {
    0x004156c6 je 0x4156eb                                       |             
    0x004156c8 cmp eax, 1                                        |             
                                                                 |             if (eax != 1) {
    0x004156cb jne 0x41570c                                      |                 goto label_1;
                                                                 |             }
    0x004156cd cmp qword [r14 + 0x20], 0x17                      |             
                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x004156d2 je 0x4156e1                                       |                 
    0x004156d4 mov rsi, qword [r14]                              |                 rsi = *(r14);
    0x004156d7 mov rdi, qword [r14 + 0x28]                       |                 rdi = *((r14 + 0x28));
    0x004156db mov rax, qword [rdi]                              |                 rax = *(rdi);
    0x004156de call qword [rax + 0x18]                           |                 uint64_t (*rax + 0x18)() ();
                                                                 |             }
    0x004156e1 mov qword [r14 + 0x18], 0xffffffffffffffff        |             *((r14 + 0x18)) = 0xffffffffffffffff;
    0x004156e9 jmp 0x41570c                                      |             goto label_1;
                                                                 |         }
    0x004156eb mov r12, qword [r14]                              |         r12 = *(r14);
    0x004156ee test r12, r12                                     |         
                                                                 |         if (r12 == 0) {
    0x004156f1 je 0x41570c                                       |             goto label_1;
                                                                 |         }
    0x004156f3 mov r13, qword [r14 + 0x38]                       |         r13 = *((r14 + 0x38));
    0x004156f7 mov rdi, r12                                      |         
    0x004156fa call 0x415670                                     |         BloombergLP::balb::Choice1::~Choice1() (r12);
                                                                 |     } while (1);
    0x004156ff mov rax, qword [r13]                              |     rax = *(r13);
    0x00415703 mov rdi, r13                                      |     rdi = r13;
    0x00415706 mov rsi, r12                                      |     rsi = r12;
    0x00415709 call qword [rax + 0x18]                           |     uint64_t (*rax + 0x18)() ();
                                                                 | label_1:
    0x0041570c mov dword [r14 + 0x30], 0xffffffff                |     *((r14 + 0x30)) = 0xffffffff;
    0x00415714 mov rax, qword [r15]                              |     rax = *(r15);
    0x00415717 mov rdi, r15                                      |     rdi = r15;
    0x0041571a mov rsi, r14                                      |     rsi = r14;
    0x0041571d call qword [rax + 0x18]                           |     uint64_t (*rax + 0x18)() ();
                                                                 | label_0:
    0x00415720 mov dword [rbx + 8], 0xffffffff                   |     *((rbx + 8)) = 0xffffffff;
    0x00415727 pop rbx                                           |     
    0x00415728 pop r12                                           |     
    0x0041572a pop r13                                           |     
    0x0041572c pop r14                                           |     
    0x0041572e pop r15                                           |     
    0x00415730 ret                                               |     return rax;
                                                                 | }
