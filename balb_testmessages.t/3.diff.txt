000000000040daf0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::balb::Sequence4 const&, B   |	000000000040da00 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::balb::Sequence4 const&, B
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 04	subq	$104, %rsp								000000000000000a: 04	subq	$104, %rsp
000000000000000e: 03	movq	%rdx, %r15								000000000000000e: 03	movq	%rdx, %r15
0000000000000011: 03	movq	%rsi, %r14								0000000000000011: 03	movq	%rsi, %r14
0000000000000014: 03	movq	%rdi, %r12								0000000000000014: 03	movq	%rdi, %r12
0000000000000017: 04	movsd	(%rsi), %xmm0								0000000000000017: 04	movsd	(%rsi), %xmm0
000000000000001b: 04	movsd	%xmm0, (%rdi)								000000000000001b: 04	movsd	%xmm0, (%rdi)
000000000000001f: 04	leaq	8(%rdi), %rbx								000000000000001f: 04	leaq	8(%rdi), %rbx
0000000000000023: 04	leaq	8(%rsi), %rbp								0000000000000023: 04	leaq	8(%rsi), %rbp
0000000000000027: 03	movq	%rdx, %rax								0000000000000027: 03	movq	%rdx, %rax
000000000000002a: 03	testq	%rdx, %rdx								000000000000002a: 03	testq	%rdx, %rdx
000000000000002d: 02	jne	0x40db30 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000002d: 02	jne	0x40da40 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000002f: 07	movq	2564138(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	000000000000002f: 07	movq	2560282(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000036: 03	testq	%rax, %rax								0000000000000036: 03	testq	%rax, %rax
0000000000000039: 02	jne	0x40db30 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000039: 02	jne	0x40da40 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000003b: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000003b: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000040: 04	movq	%rax, (%rsp)							   |	0000000000000040: 05	movq	%rax, 8(%rsp)
0000000000000044: 03	movq	%rsp, %rdx							   |	0000000000000045: 05	leaq	8(%rsp), %rdx
0000000000000047: 03	movq	%rbx, %rdi							   |	000000000000004a: 03	movq	%rbx, %rdi
000000000000004a: 03	movq	%rbp, %rsi							   |	000000000000004d: 03	movq	%rbp, %rsi
000000000000004d: 05	callq	0x4341d0 <bsl::vector<int, bsl::allocator<int> >::vector(bsl::ve   |	0000000000000050: 05	callq	0x4342d0 <bsl::vector<int, bsl::allocator<int> >::vector(bsl::ve
0000000000000052: 03	movq	%r15, %rax							   |	0000000000000055: 03	movq	%r15, %rax
0000000000000055: 03	testq	%r15, %r15							   |	0000000000000058: 03	testq	%r15, %r15
0000000000000058: 05	movq	%rbx, 88(%rsp)							   |	000000000000005b: 05	movq	%rbx, 96(%rsp)
000000000000005d: 02	jne	0x40db60 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000060: 02	jne	0x40da73 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000005f: 07	movq	2564090(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	0000000000000062: 07	movq	2560231(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000066: 03	testq	%rax, %rax							   |	0000000000000069: 03	testq	%rax, %rax
0000000000000069: 02	jne	0x40db60 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000006c: 02	jne	0x40da73 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000006b: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000006e: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000070: 05	leaq	40(%r12), %rdi							   |	0000000000000073: 05	leaq	40(%r12), %rdi
0000000000000075: 04	movq	%rax, (%rsp)							   |	0000000000000078: 05	movq	%rax, 8(%rsp)
0000000000000079: 04	leaq	40(%r14), %rsi							   |	000000000000007d: 04	leaq	40(%r14), %rsi
000000000000007d: 03	movq	%rsp, %rdx							   |	0000000000000081: 05	leaq	8(%rsp), %rdx
0000000000000080: 05	movq	%rdi, 80(%rsp)							   |	0000000000000086: 05	movq	%rdi, 88(%rsp)
0000000000000085: 05	callq	0x43cbf0 <bsl::vector<double, bsl::allocator<double> >::vector(b   |	000000000000008b: 05	callq	0x43ccf0 <bsl::vector<double, bsl::allocator<double> >::vector(b
000000000000008a: 03	movq	%r15, %rax							   |	0000000000000090: 03	movq	%r15, %rax
000000000000008d: 03	testq	%r15, %r15							   |	0000000000000093: 03	testq	%r15, %r15
0000000000000090: 02	jne	0x40db93 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000096: 02	jne	0x40daa9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000092: 07	movq	2564039(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	0000000000000098: 07	movq	2560177(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000099: 03	testq	%rax, %rax							   |	000000000000009f: 03	testq	%rax, %rax
000000000000009c: 02	jne	0x40db93 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000000a2: 02	jne	0x40daa9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000009e: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000000a4: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000000a3: 05	leaq	72(%r12), %rdi							   |	00000000000000a9: 05	leaq	72(%r12), %rdi
00000000000000a8: 04	movq	%rax, (%rsp)							   |	00000000000000ae: 05	movq	%rax, 8(%rsp)
00000000000000ac: 04	leaq	72(%r14), %rsi							   |	00000000000000b3: 04	leaq	72(%r14), %rsi
00000000000000b0: 03	movq	%rsp, %rdx							   |	00000000000000b7: 05	leaq	8(%rsp), %rdx
00000000000000b3: 05	movq	%rdi, 72(%rsp)							   |	00000000000000bc: 05	movq	%rdi, 80(%rsp)
00000000000000b8: 05	callq	0x42e4a0 <bsl::vector<char, bsl::allocator<char> >::vector(bsl::   |	00000000000000c1: 05	callq	0x42e5a0 <bsl::vector<char, bsl::allocator<char> >::vector(bsl::
00000000000000bd: 03	movq	%r15, %rax							   |	00000000000000c6: 03	movq	%r15, %rax
00000000000000c0: 03	testq	%r15, %r15							   |	00000000000000c9: 03	testq	%r15, %r15
00000000000000c3: 02	jne	0x40dbc6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000000cc: 02	jne	0x40dadf <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000000c5: 07	movq	2563988(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	00000000000000ce: 07	movq	2560123(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
00000000000000cc: 03	testq	%rax, %rax							   |	00000000000000d5: 03	testq	%rax, %rax
00000000000000cf: 02	jne	0x40dbc6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000000d8: 02	jne	0x40dadf <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000000d1: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000000da: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000000d6: 05	leaq	104(%r12), %rdi							   |	00000000000000df: 05	leaq	104(%r12), %rdi
00000000000000db: 04	movq	%rax, (%rsp)							   |	00000000000000e4: 05	movq	%rax, 8(%rsp)
00000000000000df: 04	leaq	104(%r14), %rsi							   |	00000000000000e9: 04	leaq	104(%r14), %rsi
00000000000000e3: 03	movq	%rsp, %rdx							   |	00000000000000ed: 05	leaq	8(%rsp), %rdx
00000000000000e6: 05	movq	%rdi, 56(%rsp)							   |	00000000000000f2: 05	movq	%rdi, 64(%rsp)
00000000000000eb: 05	callq	0x414d40 <bsl::vector<bsl::vector<char, bsl::allocator<char> >,    |	00000000000000f7: 05	callq	0x414d20 <bsl::vector<bsl::vector<char, bsl::allocator<char> >, 
00000000000000f0: 03	movq	%r15, %rax							   |	00000000000000fc: 03	movq	%r15, %rax
00000000000000f3: 03	testq	%r15, %r15							   |	00000000000000ff: 03	testq	%r15, %r15
00000000000000f6: 02	jne	0x40dbf9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000102: 02	jne	0x40db15 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000000f8: 07	movq	2563937(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	0000000000000104: 07	movq	2560069(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
00000000000000ff: 03	testq	%rax, %rax							   |	000000000000010b: 03	testq	%rax, %rax
0000000000000102: 02	jne	0x40dbf9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000010e: 02	jne	0x40db15 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000104: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	0000000000000110: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000109: 08	leaq	136(%r12), %rdi							   |	0000000000000115: 08	leaq	136(%r12), %rdi
0000000000000111: 04	movq	%rax, (%rsp)							   |	000000000000011d: 05	movq	%rax, 8(%rsp)
0000000000000115: 07	leaq	136(%r14), %rsi							   |	0000000000000122: 07	leaq	136(%r14), %rsi
000000000000011c: 03	movq	%rsp, %rdx							   |	0000000000000129: 05	leaq	8(%rsp), %rdx
000000000000011f: 05	movq	%rdi, 64(%rsp)							   |	000000000000012e: 05	movq	%rdi, 72(%rsp)
0000000000000124: 05	callq	0x42d2b0 <bsl::vector<bool, bsl::allocator<bool> >::vector(bsl::   |	0000000000000133: 05	callq	0x42d3b0 <bsl::vector<bool, bsl::allocator<bool> >::vector(bsl::
0000000000000129: 03	movq	%r15, %rdi							   |	0000000000000138: 03	movq	%r15, %rdi
000000000000012c: 03	testq	%r15, %r15							   |	000000000000013b: 03	testq	%r15, %r15
000000000000012f: 02	jne	0x40dc35 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000013e: 02	jne	0x40db54 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000131: 07	movq	2563880(%rip), %rdi  # 67fb50 <BloombergLP::bslma::Default::s_de   |	0000000000000140: 07	movq	2560009(%rip), %rdi  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000138: 03	testq	%rdi, %rdi							   |	0000000000000147: 03	testq	%rdi, %rdi
000000000000013b: 02	jne	0x40dc35 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000014a: 02	jne	0x40db54 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000013d: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000014c: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000142: 03	movq	%rax, %rdi							   |	0000000000000151: 03	movq	%rax, %rdi
0000000000000145: 08	leaq	168(%r12), %rbx							   |	0000000000000154: 08	leaq	168(%r12), %rbx
000000000000014d: 03	xorps	%xmm0, %xmm0							   |	000000000000015c: 03	xorps	%xmm0, %xmm0
0000000000000150: 03	movups	%xmm0, (%rbx)							   |	000000000000015f: 03	movups	%xmm0, (%rbx)
0000000000000153: 08	movq	$0, 16(%rbx)							   |	0000000000000162: 08	movq	$0, 16(%rbx)
000000000000015b: 08	movq	%rdi, 192(%r12)							   |	000000000000016a: 08	movq	%rdi, 192(%r12)
0000000000000163: 07	movq	176(%r14), %rbp							   |	0000000000000172: 07	movq	176(%r14), %rbp
000000000000016a: 07	subq	168(%r14), %rbp							   |	0000000000000179: 07	subq	168(%r14), %rbp
0000000000000171: 02	je	0x40dcd0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000180: 02	je	0x40dbef <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000173: 03	movq	(%rdi), %rax							   |	0000000000000182: 03	movq	(%rdi), %rax
0000000000000176: 03	movq	%rbp, %rsi							   |	0000000000000185: 03	movq	%rbp, %rsi
0000000000000179: 03	callq	*16(%rax)							   |	0000000000000188: 03	callq	*16(%rax)
000000000000017c: 04	sarq	$4, %rbp							   |	000000000000018b: 04	sarq	$4, %rbp
0000000000000180: 08	movq	%rax, 176(%r12)							   |	000000000000018f: 08	movq	%rax, 176(%r12)
0000000000000188: 08	movq	%rax, 168(%r12)							   |	0000000000000197: 08	movq	%rax, 168(%r12)
0000000000000190: 08	movq	%rbp, 184(%r12)							   |	000000000000019f: 08	movq	%rbp, 184(%r12)
0000000000000198: 07	movq	168(%r14), %rsi							   |	00000000000001a7: 07	movq	168(%r14), %rsi
000000000000019f: 07	movq	176(%r14), %rdx							   |	00000000000001ae: 07	movq	176(%r14), %rdx
00000000000001a6: 03	subq	%rsi, %rdx							   |	00000000000001b5: 03	subq	%rsi, %rdx
00000000000001a9: 06	je	0x40dfcb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000001b8: 06	je	0x40def9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000001af: 03	movq	%rax, %rdi							   |	00000000000001be: 03	movq	%rax, %rdi
00000000000001b2: 05	callq	0x403a30 <memcpy@plt>						   |	00000000000001c1: 05	callq	0x403a30 <memcpy@plt>
00000000000001b7: 07	movq	176(%r14), %rcx							   |	00000000000001c6: 07	movq	176(%r14), %rcx
00000000000001be: 08	movq	176(%r12), %rax							   |	00000000000001cd: 08	movq	176(%r12), %rax
00000000000001c6: 07	subq	168(%r14), %rcx							   |	00000000000001d5: 07	subq	168(%r14), %rcx
00000000000001cd: 04	sarq	$4, %rcx							   |	00000000000001dc: 04	sarq	$4, %rcx
00000000000001d1: 04	shlq	$4, %rcx							   |	00000000000001e0: 04	shlq	$4, %rcx
00000000000001d5: 03	addq	%rax, %rcx							   |	00000000000001e4: 03	addq	%rax, %rcx
00000000000001d8: 08	movq	%rcx, 176(%r12)							   |	00000000000001e7: 08	movq	%rcx, 176(%r12)
00000000000001e0: 03	movq	%r15, %rax							   |	00000000000001ef: 03	movq	%r15, %rax
00000000000001e3: 03	testq	%r15, %r15							   |	00000000000001f2: 03	testq	%r15, %r15
00000000000001e6: 02	jne	0x40dce9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000001f5: 02	jne	0x40dc08 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000001e8: 07	movq	2563697(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	00000000000001f7: 07	movq	2559826(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
00000000000001ef: 03	testq	%rax, %rax							   |	00000000000001fe: 03	testq	%rax, %rax
00000000000001f2: 02	jne	0x40dce9 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000201: 02	jne	0x40dc08 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000001f4: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	0000000000000203: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000001f9: 08	leaq	200(%r12), %rdi							   |	0000000000000208: 08	leaq	200(%r12), %rdi
0000000000000201: 04	movq	%rax, (%rsp)							   |	0000000000000210: 05	movq	%rax, 8(%rsp)
0000000000000205: 07	leaq	200(%r14), %rsi							   |	0000000000000215: 07	leaq	200(%r14), %rsi
000000000000020c: 03	movq	%rsp, %rdx							   |	000000000000021c: 05	leaq	8(%rsp), %rdx
000000000000020f: 05	movq	%rdi, 48(%rsp)							   |	0000000000000221: 05	movq	%rdi, 56(%rsp)
0000000000000214: 05	callq	0x414e90 <bsl::vector<BloombergLP::balb::Sequence3, bsl::allocat   |	0000000000000226: 05	callq	0x414e70 <bsl::vector<BloombergLP::balb::Sequence3, bsl::allocat
0000000000000219: 03	movq	%r15, %rax							   |	000000000000022b: 03	movq	%r15, %rax
000000000000021c: 03	testq	%r15, %r15							   |	000000000000022e: 03	testq	%r15, %r15
000000000000021f: 02	jne	0x40dd22 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000231: 02	jne	0x40dc44 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000221: 07	movq	2563640(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	0000000000000233: 07	movq	2559766(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000228: 03	testq	%rax, %rax							   |	000000000000023a: 03	testq	%rax, %rax
000000000000022b: 02	jne	0x40dd22 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000023d: 02	jne	0x40dc44 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000022d: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000023f: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000232: 08	leaq	232(%r12), %rdi							   |	0000000000000244: 08	leaq	232(%r12), %rdi
000000000000023a: 04	movq	%rax, (%rsp)							   |	000000000000024c: 05	movq	%rax, 8(%rsp)
000000000000023e: 07	leaq	232(%r14), %rsi							   |	0000000000000251: 07	leaq	232(%r14), %rsi
0000000000000245: 03	movq	%rsp, %rdx							   |	0000000000000258: 05	leaq	8(%rsp), %rdx
0000000000000248: 05	movq	%rdi, 40(%rsp)							   |	000000000000025d: 05	movq	%rdi, 48(%rsp)
000000000000024d: 05	callq	0x4148c0 <bsl::vector<BloombergLP::balb::CustomString, bsl::allo   |	0000000000000262: 05	callq	0x4147b0 <bsl::vector<BloombergLP::balb::CustomString, bsl::allo
0000000000000252: 03	movq	%r15, %rax							   |	0000000000000267: 03	movq	%r15, %rax
0000000000000255: 03	testq	%r15, %r15							   |	000000000000026a: 03	testq	%r15, %r15
0000000000000258: 02	jne	0x40dd5b <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000026d: 02	jne	0x40dc80 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000025a: 07	movq	2563583(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	000000000000026f: 07	movq	2559706(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000261: 03	testq	%rax, %rax							   |	0000000000000276: 03	testq	%rax, %rax
0000000000000264: 02	jne	0x40dd5b <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000279: 02	jne	0x40dc80 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000266: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000027b: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000026b: 08	leaq	264(%r12), %rbp							   |	0000000000000280: 08	leaq	264(%r12), %rbp
0000000000000273: 04	movq	%rax, (%rsp)							   |	0000000000000288: 05	movq	%rax, 8(%rsp)
0000000000000277: 07	leaq	264(%r14), %rsi							   |	000000000000028d: 07	leaq	264(%r14), %rsi
000000000000027e: 03	movq	%rsp, %rdx							   |	0000000000000294: 05	leaq	8(%rsp), %rdx
0000000000000281: 03	movq	%rbp, %rdi							   |	0000000000000299: 03	movq	%rbp, %rdi
0000000000000284: 05	callq	0x414fb0 <bsl::vector<BloombergLP::balb::Choice1, bsl::allocator   |	000000000000029c: 05	callq	0x414f90 <bsl::vector<BloombergLP::balb::Choice1, bsl::allocator
0000000000000289: 03	movq	%r15, %rdi							   |	00000000000002a1: 03	movq	%r15, %rdi
000000000000028c: 03	testq	%r15, %r15							   |	00000000000002a4: 03	testq	%r15, %r15
000000000000028f: 02	jne	0x40dd95 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000002a7: 02	jne	0x40dcbd <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000291: 07	movq	2563528(%rip), %rdi  # 67fb50 <BloombergLP::bslma::Default::s_de   |	00000000000002a9: 07	movq	2559648(%rip), %rdi  # 67eb50 <BloombergLP::bslma::Default::s_de
0000000000000298: 03	testq	%rdi, %rdi							   |	00000000000002b0: 03	testq	%rdi, %rdi
000000000000029b: 02	jne	0x40dd95 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000002b3: 02	jne	0x40dcbd <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000029d: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000002b5: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000002a2: 03	movq	%rax, %rdi							   |	00000000000002ba: 03	movq	%rax, %rdi
00000000000002a5: 08	leaq	296(%r12), %r13							   |	00000000000002bd: 08	leaq	296(%r12), %r13
00000000000002ad: 07	movq	328(%r14), %rax							   |	00000000000002c5: 07	movq	328(%r14), %rax
00000000000002b4: 04	movq	%rax, 32(%r13)							   |	00000000000002cc: 04	movq	%rax, 32(%r13)
00000000000002b8: 08	movups	296(%r14), %xmm0						   |	00000000000002d0: 08	movups	296(%r14), %xmm0
00000000000002c0: 08	movups	312(%r14), %xmm1						   |	00000000000002d8: 08	movups	312(%r14), %xmm1
00000000000002c8: 05	movups	%xmm1, 16(%r13)							   |	00000000000002e0: 05	movups	%xmm1, 16(%r13)
00000000000002cd: 05	movups	%xmm0, (%r13)							   |	00000000000002e5: 05	movups	%xmm0, (%r13)
00000000000002d2: 08	movq	%rdi, 336(%r12)							   |	00000000000002ea: 08	movq	%rdi, 336(%r12)
00000000000002da: 09	cmpq	$23, 328(%r12)							   |	00000000000002f2: 09	cmpq	$23, 328(%r12)
00000000000002e3: 06	je	0x40de5d <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000002fb: 06	je	0x40dd85 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000002e9: 07	movq	320(%r14), %rax							   |	0000000000000301: 07	movq	320(%r14), %rax
00000000000002f0: 04	cmpq	$23, %rax							   |	0000000000000308: 04	cmpq	$23, %rax
00000000000002f4: 05	movl	$23, %esi							   |	000000000000030c: 05	movl	$23, %esi
00000000000002f9: 04	cmovaq	%rax, %rsi							   |	0000000000000311: 04	cmovaq	%rax, %rsi
00000000000002fd: 12	movq	$0, 296(%r12)							   |	0000000000000315: 12	movq	$0, 296(%r12)
0000000000000309: 08	movq	%rax, 320(%r12)							   |	0000000000000321: 08	movq	%rax, 320(%r12)
0000000000000311: 08	movq	%rsi, 328(%r12)							   |	0000000000000329: 08	movq	%rsi, 328(%r12)
0000000000000319: 04	cmpq	$24, %rax							   |	0000000000000331: 04	cmpq	$24, %rax
000000000000031d: 02	jb	0x40de2b <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000335: 02	jb	0x40dd53 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000031f: 03	incq	%rsi								   |	0000000000000337: 03	incq	%rsi
0000000000000322: 03	movq	(%rdi), %rax							   |	000000000000033a: 03	movq	(%rdi), %rax
0000000000000325: 03	callq	*16(%rax)							   |	000000000000033d: 03	callq	*16(%rax)
0000000000000328: 08	movq	%rax, 296(%r12)							   |	0000000000000340: 08	movq	%rax, 296(%r12)
0000000000000330: 09	cmpq	$23, 328(%r12)							   |	0000000000000348: 09	cmpq	$23, 328(%r12)
0000000000000339: 02	jne	0x40de2e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000351: 02	jne	0x40dd56 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000033b: 03	movq	%r13, %rax							   |	0000000000000353: 03	movq	%r13, %rax
000000000000033e: 08	movq	320(%r12), %rdx							   |	0000000000000356: 08	movq	320(%r12), %rdx
0000000000000346: 03	incq	%rdx								   |	000000000000035e: 03	incq	%rdx
0000000000000349: 02	je	0x40de5d <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000361: 02	je	0x40dd85 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000034b: 08	cmpq	$23, 328(%r14)							   |	0000000000000363: 08	cmpq	$23, 328(%r14)
0000000000000353: 02	je	0x40de4e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000036b: 02	je	0x40dd76 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000355: 07	movq	296(%r14), %rsi							   |	000000000000036d: 07	movq	296(%r14), %rsi
000000000000035c: 02	jmp	0x40de55 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000374: 02	jmp	0x40dd7d <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000035e: 07	leaq	296(%r14), %rsi							   |	0000000000000376: 07	leaq	296(%r14), %rsi
0000000000000365: 03	movq	%rax, %rdi							   |	000000000000037d: 03	movq	%rax, %rdi
0000000000000368: 05	callq	0x403a30 <memcpy@plt>						   |	0000000000000380: 05	callq	0x403a30 <memcpy@plt>
000000000000036d: 03	movq	%r15, %rax							   |	0000000000000385: 03	movq	%r15, %rax
0000000000000370: 03	testq	%r15, %r15							   |	0000000000000388: 03	testq	%r15, %r15
0000000000000373: 02	jne	0x40de76 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000038b: 02	jne	0x40dd9e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000375: 07	movq	2563300(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	000000000000038d: 07	movq	2559420(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
000000000000037c: 03	testq	%rax, %rax							   |	0000000000000394: 03	testq	%rax, %rax
000000000000037f: 02	jne	0x40de76 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000397: 02	jne	0x40dd9e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000381: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	0000000000000399: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000386: 09	movb	$0, 376(%r12)							   |	000000000000039e: 09	movb	$0, 376(%r12)
000000000000038f: 08	movq	%rax, 384(%r12)							   |	00000000000003a7: 08	movq	%rax, 384(%r12)
0000000000000397: 08	cmpb	$0, 376(%r14)							   |	00000000000003af: 08	cmpb	$0, 376(%r14)
000000000000039f: 02	je	0x40decb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000003b7: 02	je	0x40ddf6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000003a1: 03	testq	%rax, %rax							   |	00000000000003b9: 03	testq	%rax, %rax
00000000000003a4: 02	jne	0x40dea7 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000003bc: 02	jne	0x40ddcf <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000003a6: 07	movq	2563251(%rip), %rax  # 67fb50 <BloombergLP::bslma::Default::s_de   |	00000000000003be: 07	movq	2559371(%rip), %rax  # 67eb50 <BloombergLP::bslma::Default::s_de
00000000000003ad: 03	testq	%rax, %rax							   |	00000000000003c5: 03	testq	%rax, %rax
00000000000003b0: 02	jne	0x40dea7 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000003c8: 02	jne	0x40ddcf <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000003b2: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	00000000000003ca: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
00000000000003b7: 08	leaq	344(%r12), %rdi							   |	00000000000003cf: 08	leaq	344(%r12), %rdi
00000000000003bf: 07	leaq	344(%r14), %rsi							   |	00000000000003d7: 07	leaq	344(%r14), %rsi
00000000000003c6: 04	movq	%rax, (%rsp)							   |	00000000000003de: 05	movq	%rax, 8(%rsp)
00000000000003ca: 03	movq	%rsp, %rdx							   |	00000000000003e3: 05	leaq	8(%rsp), %rdx
00000000000003cd: 05	callq	0x42e4a0 <bsl::vector<char, bsl::allocator<char> >::vector(bsl::   |	00000000000003e8: 05	callq	0x42e5a0 <bsl::vector<char, bsl::allocator<char> >::vector(bsl::
00000000000003d2: 09	movb	$1, 376(%r12)							   |	00000000000003ed: 09	movb	$1, 376(%r12)
00000000000003db: 09	movb	$0, 392(%r12)							   |	00000000000003f6: 09	movb	$0, 392(%r12)
00000000000003e4: 09	movb	$0, 408(%r12)							   |	00000000000003ff: 09	movb	$0, 408(%r12)
00000000000003ed: 08	cmpb	$0, 408(%r14)							   |	0000000000000408: 08	cmpb	$0, 408(%r14)
00000000000003f5: 02	je	0x40df1f <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000410: 02	je	0x40de4a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000003f7: 07	movq	392(%r14), %rax							   |	0000000000000412: 07	movq	392(%r14), %rax
00000000000003fe: 08	movq	%rax, 392(%r12)							   |	0000000000000419: 08	movq	%rax, 392(%r12)
0000000000000406: 03	testq	%rax, %rax							   |	0000000000000421: 03	testq	%rax, %rax
0000000000000409: 06	jns	0x40dfd2 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000424: 06	jns	0x40df00 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000040f: 08	movq	%rax, 392(%r12)							   |	000000000000042a: 08	movq	%rax, 392(%r12)
0000000000000417: 07	movl	400(%r14), %eax							   |	0000000000000432: 07	movl	400(%r14), %eax
000000000000041e: 08	movl	%eax, 400(%r12)							   |	0000000000000439: 08	movl	%eax, 400(%r12)
0000000000000426: 09	movb	$1, 408(%r12)							   |	0000000000000441: 09	movb	$1, 408(%r12)
000000000000042f: 03	testq	%r15, %r15							   |	000000000000044a: 03	testq	%r15, %r15
0000000000000432: 02	jne	0x40df38 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000044d: 02	jne	0x40de63 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000434: 07	movq	2563109(%rip), %r15  # 67fb50 <BloombergLP::bslma::Default::s_de   |	000000000000044f: 07	movq	2559226(%rip), %r15  # 67eb50 <BloombergLP::bslma::Default::s_de
000000000000043b: 03	testq	%r15, %r15							   |	0000000000000456: 03	testq	%r15, %r15
000000000000043e: 02	jne	0x40df38 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000459: 02	jne	0x40de63 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000440: 05	callq	0x4206c0 <BloombergLP::bslma::Default::determineAndReturnDefault   |	000000000000045b: 05	callq	0x4207c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000445: 03	movq	%rax, %r15							   |	0000000000000460: 03	movq	%rax, %r15
0000000000000448: 04	movq	%r15, (%rsp)							   |	0000000000000463: 05	movq	%r15, 8(%rsp)
000000000000044c: 07	leaq	416(%r14), %rsi							   |	0000000000000468: 07	leaq	416(%r14), %rsi
0000000000000453: 08	leaq	416(%r12), %rdi							   |	000000000000046f: 08	leaq	416(%r12), %rdi
000000000000045b: 03	movq	%rsp, %rdx							   |	0000000000000477: 05	leaq	8(%rsp), %rdx
000000000000045e: 05	callq	0x414970 <BloombergLP::bdlb::NullableValue<BloombergLP::balb::Cu   |	000000000000047c: 05	callq	0x414860 <BloombergLP::bdlb::NullableValue<BloombergLP::balb::Cu
0000000000000463: 07	movl	480(%r14), %eax							   |	0000000000000481: 07	movl	480(%r14), %eax
000000000000046a: 08	movl	%eax, 480(%r12)							   |	0000000000000488: 08	movl	%eax, 480(%r12)
0000000000000472: 07	movb	488(%r14), %al							   |	0000000000000490: 07	movb	488(%r14), %al
0000000000000479: 08	movb	%al, 488(%r12)							   |	0000000000000497: 08	movb	%al, 488(%r12)
0000000000000481: 07	movl	484(%r14), %eax							   |	000000000000049f: 07	movl	484(%r14), %eax
0000000000000488: 08	movl	%eax, 484(%r12)							   |	00000000000004a6: 08	movl	%eax, 484(%r12)
0000000000000490: 07	movl	492(%r14), %eax							   |	00000000000004ae: 07	movl	492(%r14), %eax
0000000000000497: 08	movl	%eax, 492(%r12)							   |	00000000000004b5: 08	movl	%eax, 492(%r12)
000000000000049f: 07	movb	496(%r14), %al							   |	00000000000004bd: 07	movb	496(%r14), %al
00000000000004a6: 08	movb	%al, 496(%r12)							   |	00000000000004c4: 08	movb	%al, 496(%r12)
00000000000004ae: 07	movl	500(%r14), %eax							   |	00000000000004cc: 07	movl	500(%r14), %eax
00000000000004b5: 08	movl	%eax, 500(%r12)							   |	00000000000004d3: 08	movl	%eax, 500(%r12)
00000000000004bd: 07	movb	504(%r14), %al							   |	00000000000004db: 07	movb	504(%r14), %al
00000000000004c4: 08	movb	%al, 504(%r12)							   |	00000000000004e2: 08	movb	%al, 504(%r12)
00000000000004cc: 04	addq	$104, %rsp							   |	00000000000004ea: 04	addq	$104, %rsp
00000000000004d0: 01	popq	%rbx								   |	00000000000004ee: 01	popq	%rbx
00000000000004d1: 02	popq	%r12								   |	00000000000004ef: 02	popq	%r12
00000000000004d3: 02	popq	%r13								   |	00000000000004f1: 02	popq	%r13
00000000000004d5: 02	popq	%r14								   |	00000000000004f3: 02	popq	%r14
00000000000004d7: 02	popq	%r15								   |	00000000000004f5: 02	popq	%r15
00000000000004d9: 01	popq	%rbp								   |	00000000000004f7: 01	popq	%rbp
00000000000004da: 01	retq									   |	00000000000004f8: 01	retq	
00000000000004db: 02	xorl	%ecx, %ecx							   |	00000000000004f9: 02	xorl	%ecx, %ecx
00000000000004dd: 05	jmp	0x40dcc1 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000004fb: 05	jmp	0x40dbe0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000004e2: 05	movl	$6814520, %edi							   |	0000000000000500: 05	movl	$6810424, %edi
00000000000004e7: 05	callq	0x420960 <BloombergLP::bsls::Review::updateCount(BloombergLP::bs   |	0000000000000505: 05	callq	0x420a60 <BloombergLP::bsls::Review::updateCount(BloombergLP::bs
00000000000004ec: 08	movq	$4490600, (%rsp)						   |	000000000000050a: 09	movq	$4488664, 8(%rsp)
00000000000004f4: 09	movq	$4490654, 8(%rsp)						   |	0000000000000513: 09	movq	$4488718, 16(%rsp)
00000000000004fd: 08	movl	$1126, 16(%rsp)							   |	000000000000051c: 08	movl	$1126, 24(%rsp)
0000000000000505: 09	movq	$4593345, 24(%rsp)						   |	0000000000000524: 09	movq	$4591649, 32(%rsp)
000000000000050e: 04	movl	%eax, 32(%rsp)							   |	000000000000052d: 04	movl	%eax, 40(%rsp)
0000000000000512: 03	movq	%rsp, %rdi							   |	0000000000000531: 05	leaq	8(%rsp), %rdi
0000000000000515: 05	callq	0x420980 <BloombergLP::bsls::Review::invokeHandler(BloombergLP::   |	0000000000000536: 05	callq	0x420a80 <BloombergLP::bsls::Review::invokeHandler(BloombergLP::
000000000000051a: 08	movq	392(%r12), %rax							   |	000000000000053b: 08	movq	392(%r12), %rax
0000000000000522: 03	movq	%rax, %rcx							   |	0000000000000543: 03	movq	%rax, %rcx
0000000000000525: 04	shrq	$32, %rcx							   |	0000000000000546: 04	shrq	$32, %rcx
0000000000000529: 04	shlq	$37, %rax							   |	000000000000054a: 04	shlq	$37, %rax
000000000000052d: 10	movabsq	$9223371899415822336, %rdx					   |	000000000000054e: 10	movabsq	$9223371899415822336, %rdx
0000000000000537: 03	addq	%rax, %rdx							   |	0000000000000558: 03	addq	%rax, %rdx
000000000000053a: 07	imulq	$1000, %rcx, %rcx						   |	000000000000055b: 07	imulq	$1000, %rcx, %rcx
0000000000000541: 10	movabsq	$-9223372036854775808, %rax					   |	0000000000000562: 10	movabsq	$-9223372036854775808, %rax
000000000000054b: 03	orq	%rdx, %rax							   |	000000000000056c: 03	orq	%rdx, %rax
000000000000054e: 03	orq	%rcx, %rax							   |	000000000000056f: 03	orq	%rcx, %rax
0000000000000551: 05	jmp	0x40deff <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000572: 05	jmp	0x40de2a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000556: 02	jmp	0x40e099 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000577: 02	jmp	0x40dfca <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000558: 03	movq	%rax, %r14							   |	0000000000000579: 03	movq	%rax, %r14
000000000000055b: 02	jmp	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000057c: 02	jmp	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000055d: 03	movq	%rax, %r14							   |	000000000000057e: 03	movq	%rax, %r14
0000000000000560: 05	jmp	0x40e0f8 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000581: 05	jmp	0x40e029 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000565: 03	movq	%rax, %r14							   |	0000000000000586: 03	movq	%rax, %r14
0000000000000568: 09	cmpb	$0, 376(%r12)							   |	0000000000000589: 09	cmpb	$0, 376(%r12)
0000000000000571: 02	je	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000592: 02	je	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000573: 09	movb	$0, 376(%r12)							   |	0000000000000594: 09	movb	$0, 376(%r12)
000000000000057c: 08	movq	344(%r12), %rsi							   |	000000000000059d: 08	movq	344(%r12), %rsi
0000000000000584: 03	testq	%rsi, %rsi							   |	00000000000005a5: 03	testq	%rsi, %rsi
0000000000000587: 02	je	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000005a8: 02	je	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000589: 08	movq	368(%r12), %rdi							   |	00000000000005aa: 08	movq	368(%r12), %rdi
0000000000000591: 03	movq	(%rdi), %rax							   |	00000000000005b2: 03	movq	(%rdi), %rax
0000000000000594: 03	callq	*24(%rax)							   |	00000000000005b5: 03	callq	*24(%rax)
0000000000000597: 02	jmp	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000005b8: 02	jmp	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000599: 03	movq	%rax, %rdi							   |	00000000000005ba: 03	movq	%rax, %rdi
000000000000059c: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000005bd: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000005a1: 03	movq	%rax, %r14							   |	00000000000005c2: 03	movq	%rax, %r14
00000000000005a4: 05	jmp	0x40e230 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000005c5: 05	jmp	0x40e130 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000005a9: 03	movq	%rax, %r14							   |	00000000000005ca: 03	movq	%rax, %r14
00000000000005ac: 09	cmpb	$0, 376(%r12)							   |	00000000000005cd: 09	cmpb	$0, 376(%r12)
00000000000005b5: 02	je	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000005d6: 02	je	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000005b7: 09	movb	$0, 376(%r12)							   |	00000000000005d8: 09	movb	$0, 376(%r12)
00000000000005c0: 08	movq	344(%r12), %rsi							   |	00000000000005e1: 08	movq	344(%r12), %rsi
00000000000005c8: 03	testq	%rsi, %rsi							   |	00000000000005e9: 03	testq	%rsi, %rsi
00000000000005cb: 02	je	0x40e0cb <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000005ec: 02	je	0x40dffc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000005cd: 08	movq	368(%r12), %rdi							   |	00000000000005ee: 08	movq	368(%r12), %rdi
00000000000005d5: 03	movq	(%rdi), %rax							   <
00000000000005d8: 03	callq	*24(%rax)							   <
00000000000005db: 09	cmpq	$23, 328(%r12)							   <
00000000000005e4: 02	je	0x40e0ec <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   <
00000000000005e6: 08	movq	296(%r12), %rsi							   <
00000000000005ee: 08	movq	336(%r12), %rdi							   <
00000000000005f6: 03	movq	(%rdi), %rax								00000000000005f6: 03	movq	(%rdi), %rax
00000000000005f9: 03	callq	*24(%rax)								00000000000005f9: 03	callq	*24(%rax)
00000000000005fc: 12	movq	$-1, 320(%r12)							   |	00000000000005fc: 09	cmpq	$23, 328(%r12)
0000000000000608: 04	movq	(%rbp), %rdi							   |	0000000000000605: 02	je	0x40e01d <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000060c: 03	testq	%rdi, %rdi							   |	0000000000000607: 08	movq	296(%r12), %rsi
000000000000060f: 02	je	0x40e153 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000060f: 08	movq	336(%r12), %rdi
0000000000000611: 08	movq	272(%r12), %rsi							   |	0000000000000617: 03	movq	(%rdi), %rax
0000000000000619: 08	movq	288(%r12), %rax							   |	000000000000061a: 03	callq	*24(%rax)
0000000000000621: 05	movq	%rax, 96(%rsp)							   |	000000000000061d: 12	movq	$-1, 320(%r12)
0000000000000626: 05	leaq	96(%rsp), %rdx							   |	0000000000000629: 03	movq	%rbp, %rdi
000000000000062b: 05	callq	0x419cc0 <void BloombergLP::bslalg::ArrayDestructionPrimitives::   |	000000000000062c: 05	callq	0x414be0 <bsl::vector<BloombergLP::balb::Choice1, bsl::allocator
0000000000000630: 08	movq	264(%r12), %rsi							   |	0000000000000631: 02	jmp	0x40e046 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000638: 08	movq	288(%r12), %rdi							   |	0000000000000633: 03	movq	%rax, %rdi
0000000000000640: 03	movq	(%rdi), %rax							   |	0000000000000636: 05	callq	0x4043c0 <__clang_call_terminate>
0000000000000643: 03	callq	*24(%rax)							   |	000000000000063b: 03	movq	%rax, %rdi
0000000000000646: 02	jmp	0x40e153 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000063e: 05	callq	0x4043c0 <__clang_call_terminate>
0000000000000648: 03	movq	%rax, %rdi							   |	0000000000000643: 03	movq	%rax, %r14
000000000000064b: 05	callq	0x4043c0 <__clang_call_terminate>				   |	0000000000000646: 05	movq	48(%rsp), %rax
0000000000000650: 03	movq	%rax, %rdi							   |	000000000000064b: 03	movq	(%rax), %rbp
0000000000000653: 05	callq	0x4043c0 <__clang_call_terminate>				   |	000000000000064e: 03	testq	%rbp, %rbp
0000000000000658: 03	movq	%rax, %rdi							   |	0000000000000651: 02	je	0x40e0c6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000065b: 05	callq	0x4043c0 <__clang_call_terminate>				   |	0000000000000653: 08	movq	240(%r12), %r15
0000000000000660: 03	movq	%rax, %r14							   |	000000000000065b: 03	cmpq	%r15, %rbp
0000000000000663: 05	movq	40(%rsp), %rax							   |	000000000000065e: 02	jne	0x40e081 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000668: 03	movq	(%rax), %rbp							   |	0000000000000660: 02	jmp	0x40e0a0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000066b: 03	testq	%rbp, %rbp							   |	0000000000000662: 10	nopw	%cs:(%rax,%rax)
000000000000066e: 02	je	0x40e1c6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000066c: 04	nopl	(%rax)
0000000000000670: 08	movq	240(%r12), %r15							   |	0000000000000670: 08	movq	$-1, 24(%rbp)
0000000000000678: 03	cmpq	%r15, %rbp							   |	0000000000000678: 04	addq	$48, %rbp
000000000000067b: 02	jne	0x40e181 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000067c: 03	cmpq	%rbp, %r15
000000000000067d: 02	jmp	0x40e1a0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000067f: 02	je	0x40e098 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000067f: 01	nop									   |	0000000000000681: 05	cmpq	$23, 32(%rbp)
0000000000000680: 08	movq	$-1, 24(%rbp)							   |	0000000000000686: 02	je	0x40e070 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000688: 04	addq	$48, %rbp							   |	0000000000000688: 04	movq	(%rbp), %rsi
000000000000068c: 03	cmpq	%rbp, %r15							   |	000000000000068c: 04	movq	40(%rbp), %rdi
000000000000068f: 02	je	0x40e198 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000690: 03	movq	(%rdi), %rax
0000000000000691: 05	cmpq	$23, 32(%rbp)							   |	0000000000000693: 03	callq	*24(%rax)
0000000000000696: 02	je	0x40e170 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000696: 02	jmp	0x40e070 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000698: 04	movq	(%rbp), %rsi							   |	0000000000000698: 05	movq	48(%rsp), %rax
000000000000069c: 04	movq	40(%rbp), %rdi							   |	000000000000069d: 03	movq	(%rax), %rbp
00000000000006a0: 03	movq	(%rdi), %rax							   |	00000000000006a0: 08	movq	256(%r12), %rdi
00000000000006a3: 03	callq	*24(%rax)							   |	00000000000006a8: 03	movq	(%rdi), %rax
00000000000006a6: 02	jmp	0x40e170 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000006ab: 03	movq	%rbp, %rsi
00000000000006a8: 05	movq	40(%rsp), %rax							   |	00000000000006ae: 03	callq	*24(%rax)
00000000000006ad: 03	movq	(%rax), %rbp							   |	00000000000006b1: 02	jmp	0x40e0c6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000006b0: 08	movq	256(%r12), %rdi							   |	00000000000006b3: 03	movq	%rax, %rdi
00000000000006b8: 03	movq	(%rdi), %rax							   |	00000000000006b6: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000006bb: 03	movq	%rbp, %rsi							   |	00000000000006bb: 03	movq	%rax, %rdi
00000000000006be: 03	callq	*24(%rax)							   |	00000000000006be: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000006c1: 02	jmp	0x40e1c6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000006c3: 03	movq	%rax, %r14
00000000000006c3: 03	movq	%rax, %rdi							   |	00000000000006c6: 05	movq	56(%rsp), %rax
00000000000006c6: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000006cb: 03	movq	(%rax), %rbp
00000000000006cb: 03	movq	%rax, %rdi							   |	00000000000006ce: 03	testq	%rbp, %rbp
00000000000006ce: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000006d1: 02	je	0x40e11a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000006d3: 03	movq	%rax, %r14							   |	00000000000006d3: 08	movq	208(%r12), %r15
00000000000006d6: 05	movq	48(%rsp), %rax							   |	00000000000006db: 03	cmpq	%r15, %rbp
00000000000006db: 03	movq	(%rax), %rbp							   |	00000000000006de: 02	je	0x40e0fc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000006de: 03	testq	%rbp, %rbp							   |	00000000000006e0: 03	movq	%rbp, %rdi
00000000000006e1: 02	je	0x40e21a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000006e3: 05	callq	0x406b30 <BloombergLP::balb::Sequence3::~Sequence3()>
00000000000006e3: 08	movq	208(%r12), %r15							   |	00000000000006e8: 07	addq	$184, %rbp
00000000000006eb: 03	cmpq	%r15, %rbp							   |	00000000000006ef: 03	cmpq	%rbp, %r15
00000000000006ee: 02	je	0x40e1fc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000006f2: 02	jne	0x40e0e0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000006f0: 03	movq	%rbp, %rdi							   |	00000000000006f4: 05	movq	56(%rsp), %rax
00000000000006f3: 05	callq	0x406b80 <BloombergLP::balb::Sequence3::~Sequence3()>		   |	00000000000006f9: 03	movq	(%rax), %rbp
00000000000006f8: 07	addq	$184, %rbp							   |	00000000000006fc: 08	movq	224(%r12), %rdi
00000000000006ff: 03	cmpq	%rbp, %r15							   |	0000000000000704: 03	movq	(%rdi), %rax
0000000000000702: 02	jne	0x40e1e0 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000707: 03	movq	%rbp, %rsi
0000000000000704: 05	movq	48(%rsp), %rax							   |	000000000000070a: 03	callq	*24(%rax)
0000000000000709: 03	movq	(%rax), %rbp							   |	000000000000070d: 02	jmp	0x40e11a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000070c: 08	movq	224(%r12), %rdi							   |	000000000000070f: 03	movq	%rax, %rdi
0000000000000714: 03	movq	(%rdi), %rax							   |	0000000000000712: 05	callq	0x4043c0 <__clang_call_terminate>
0000000000000717: 03	movq	%rbp, %rsi							   |	0000000000000717: 03	movq	%rax, %r14
000000000000071a: 03	callq	*24(%rax)							   |	000000000000071a: 03	movq	(%rbx), %rsi
000000000000071d: 02	jmp	0x40e21a <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000071d: 03	testq	%rsi, %rsi
000000000000071f: 03	movq	%rax, %rdi							   |	0000000000000720: 02	je	0x40e130 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000722: 05	callq	0x4043c0 <__clang_call_terminate>				   |	0000000000000722: 08	movq	192(%r12), %rdi
0000000000000727: 03	movq	%rax, %r14							   |	000000000000072a: 03	movq	(%rdi), %rax
000000000000072a: 03	movq	(%rbx), %rsi							   |	000000000000072d: 03	callq	*24(%rax)
000000000000072d: 03	testq	%rsi, %rsi							   |	0000000000000730: 05	movq	72(%rsp), %rax
0000000000000730: 02	je	0x40e230 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000735: 03	movq	(%rax), %rsi
0000000000000732: 08	movq	192(%r12), %rdi							   |	0000000000000738: 03	testq	%rsi, %rsi
000000000000073a: 03	movq	(%rdi), %rax							   |	000000000000073b: 02	je	0x40e160 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000073d: 03	callq	*24(%rax)							   |	000000000000073d: 08	movq	160(%r12), %rdi
0000000000000740: 05	movq	64(%rsp), %rax							   |	0000000000000745: 03	movq	(%rdi), %rax
0000000000000745: 03	movq	(%rax), %rsi							   |	0000000000000748: 03	callq	*24(%rax)
0000000000000748: 03	testq	%rsi, %rsi							   |	000000000000074b: 02	jmp	0x40e160 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000074b: 02	je	0x40e260 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000074d: 03	movq	%rax, %rdi
000000000000074d: 08	movq	160(%r12), %rdi							   |	0000000000000750: 05	callq	0x4043c0 <__clang_call_terminate>
0000000000000755: 03	movq	(%rdi), %rax							   |	0000000000000755: 03	movq	%rax, %rdi
0000000000000758: 03	callq	*24(%rax)							   |	0000000000000758: 05	callq	0x4043c0 <__clang_call_terminate>
000000000000075b: 02	jmp	0x40e260 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000075d: 03	movq	%rax, %r14
000000000000075d: 03	movq	%rax, %rdi							   |	0000000000000760: 05	movq	64(%rsp), %rax
0000000000000760: 05	callq	0x4043c0 <__clang_call_terminate>				   |	0000000000000765: 03	movq	(%rax), %rbp
0000000000000765: 03	movq	%rax, %rdi							   |	0000000000000768: 03	testq	%rbp, %rbp
0000000000000768: 05	callq	0x4043c0 <__clang_call_terminate>				   |	000000000000076b: 02	je	0x40e1cc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000076d: 03	movq	%rax, %r14							   |	000000000000076d: 05	movq	112(%r12), %r15
0000000000000770: 05	movq	56(%rsp), %rax							   |	0000000000000772: 03	cmpq	%r15, %rbp
0000000000000775: 03	movq	(%rax), %rbp							   |	0000000000000775: 02	jne	0x40e189 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000778: 03	testq	%rbp, %rbp							   |	0000000000000777: 02	jmp	0x40e1a6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000077b: 02	je	0x40e2cc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000779: 07	nopl	(%rax)
000000000000077d: 05	movq	112(%r12), %r15							   |	0000000000000780: 04	addq	$32, %rbp
0000000000000782: 03	cmpq	%r15, %rbp							   |	0000000000000784: 03	cmpq	%rbp, %r15
0000000000000785: 02	jne	0x40e289 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000787: 02	je	0x40e19e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000787: 02	jmp	0x40e2a6 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000789: 04	movq	(%rbp), %rsi
0000000000000789: 07	nopl	(%rax)								   |	000000000000078d: 03	testq	%rsi, %rsi
0000000000000790: 04	addq	$32, %rbp							   |	0000000000000790: 02	je	0x40e180 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000794: 03	cmpq	%rbp, %r15							   |	0000000000000792: 04	movq	24(%rbp), %rdi
0000000000000797: 02	je	0x40e29e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000796: 03	movq	(%rdi), %rax
0000000000000799: 04	movq	(%rbp), %rsi							   |	0000000000000799: 03	callq	*24(%rax)
000000000000079d: 03	testq	%rsi, %rsi							   |	000000000000079c: 02	jmp	0x40e180 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000007a0: 02	je	0x40e280 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000079e: 05	movq	64(%rsp), %rax
00000000000007a2: 04	movq	24(%rbp), %rdi							   |	00000000000007a3: 03	movq	(%rax), %rbp
00000000000007a6: 03	movq	(%rdi), %rax							   |	00000000000007a6: 08	movq	128(%r12), %rdi
00000000000007a9: 03	callq	*24(%rax)							   |	00000000000007ae: 03	movq	(%rdi), %rax
00000000000007ac: 02	jmp	0x40e280 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000007b1: 03	movq	%rbp, %rsi
00000000000007ae: 05	movq	56(%rsp), %rax							   |	00000000000007b4: 03	callq	*24(%rax)
00000000000007b3: 03	movq	(%rax), %rbp							   |	00000000000007b7: 02	jmp	0x40e1cc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000007b6: 08	movq	128(%r12), %rdi							   |	00000000000007b9: 03	movq	%rax, %rdi
00000000000007be: 03	movq	(%rdi), %rax							   |	00000000000007bc: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000007c1: 03	movq	%rbp, %rsi							   |	00000000000007c1: 03	movq	%rax, %rdi
00000000000007c4: 03	callq	*24(%rax)							   |	00000000000007c4: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000007c7: 02	jmp	0x40e2cc <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000007c9: 03	movq	%rax, %r14
00000000000007c9: 03	movq	%rax, %rdi							   |	00000000000007cc: 05	movq	80(%rsp), %rax
00000000000007cc: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000007d1: 03	movq	(%rax), %rsi
00000000000007d1: 03	movq	%rax, %rdi							   |	00000000000007d4: 03	testq	%rsi, %rsi
00000000000007d4: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000007d7: 02	je	0x40e1f1 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000007d9: 03	movq	%rax, %r14							   |	00000000000007d9: 05	movq	96(%r12), %rdi
00000000000007dc: 05	movq	72(%rsp), %rax							   |	00000000000007de: 03	movq	(%rdi), %rax
00000000000007e1: 03	movq	(%rax), %rsi							   |	00000000000007e1: 03	callq	*24(%rax)
00000000000007e4: 03	testq	%rsi, %rsi							   |	00000000000007e4: 02	jmp	0x40e1f1 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000007e7: 02	je	0x40e2f1 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000007e6: 03	movq	%rax, %rdi
00000000000007e9: 05	movq	96(%r12), %rdi							   |	00000000000007e9: 05	callq	0x4043c0 <__clang_call_terminate>
00000000000007ee: 03	movq	(%rdi), %rax							   |	00000000000007ee: 03	movq	%rax, %r14
00000000000007f1: 03	callq	*24(%rax)							   |	00000000000007f1: 05	movq	88(%rsp), %rax
00000000000007f4: 02	jmp	0x40e2f1 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	00000000000007f6: 03	movq	(%rax), %rsi
00000000000007f6: 03	movq	%rax, %rdi							   |	00000000000007f9: 03	testq	%rsi, %rsi
00000000000007f9: 05	callq	0x4043c0 <__clang_call_terminate>				   |	00000000000007fc: 02	je	0x40e216 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
00000000000007fe: 03	movq	%rax, %r14							   |	00000000000007fe: 05	movq	64(%r12), %rdi
0000000000000801: 05	movq	80(%rsp), %rax							   |	0000000000000803: 03	movq	(%rdi), %rax
0000000000000806: 03	movq	(%rax), %rsi							   |	0000000000000806: 03	callq	*24(%rax)
0000000000000809: 03	testq	%rsi, %rsi							   |	0000000000000809: 02	jmp	0x40e216 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
000000000000080c: 02	je	0x40e316 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000080b: 03	movq	%rax, %rdi
000000000000080e: 05	movq	64(%r12), %rdi							   |	000000000000080e: 05	callq	0x4043c0 <__clang_call_terminate>
0000000000000813: 03	movq	(%rdi), %rax							   |	0000000000000813: 03	movq	%rax, %r14
0000000000000816: 03	callq	*24(%rax)							   |	0000000000000816: 05	movq	96(%rsp), %rax
0000000000000819: 02	jmp	0x40e316 <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	000000000000081b: 03	movq	(%rax), %rsi
000000000000081b: 03	movq	%rax, %rdi							   |	000000000000081e: 03	testq	%rsi, %rsi
000000000000081e: 05	callq	0x4043c0 <__clang_call_terminate>				   |	0000000000000821: 02	je	0x40e22e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b
0000000000000823: 03	movq	%rax, %r14							   |	0000000000000823: 05	movq	32(%r12), %rdi
0000000000000826: 05	movq	88(%rsp), %rax							   |	0000000000000828: 03	movq	(%rdi), %rax
000000000000082b: 03	movq	(%rax), %rsi							   |	000000000000082b: 03	callq	*24(%rax)
000000000000082e: 03	testq	%rsi, %rsi							   |	000000000000082e: 03	movq	%r14, %rdi
0000000000000831: 02	je	0x40e32e <BloombergLP::balb::Sequence4::Sequence4(BloombergLP::b   |	0000000000000831: 05	callq	0x4039f0 <_Unwind_Resume@plt>
0000000000000833: 05	movq	32(%r12), %rdi							   |	0000000000000836: 03	movq	%rax, %rdi
0000000000000838: 03	movq	(%rdi), %rax							   |	0000000000000839: 05	callq	0x4043c0 <__clang_call_terminate>
000000000000083b: 03	callq	*24(%rax)							   |	000000000000083e: 02	nop	
000000000000083e: 03	movq	%r14, %rdi							   <
0000000000000841: 05	callq	0x4039f0 <_Unwind_Resume@plt>					   <
0000000000000846: 03	movq	%rax, %rdi							   <
0000000000000849: 05	callq	0x4043c0 <__clang_call_terminate>				   <
000000000000084e: 02	nop									   <
