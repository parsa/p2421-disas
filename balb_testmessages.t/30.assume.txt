    ; assembly                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                             | /* balb_testmessages.t/assume @ 0x405250 */
                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::balb::SequenceWithAnonymityChoice1.makeSelection6_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()      | uint64_t method_BloombergLP::balb::SequenceWithAnonymityChoice1_makeSelection6_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                             |     /* BloombergLP::balb::SequenceWithAnonymityChoice1::makeSelection6(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x00405250 push r15                                                                                                                                                      |     
    0x00405252 push r14                                                                                                                                                      |     
    0x00405254 push rbx                                                                                                                                                      |     
    0x00405255 mov r14, rsi                                                                                                                                                  |     r14 = rsi;
    0x00405258 mov rbx, rdi                                                                                                                                                  |     rbx = rdi;
    0x0040525b mov eax, dword [rdi + 0x30]                                                                                                                                   |     eax = *((rdi + 0x30));
    0x0040525e test eax, eax                                                                                                                                                 |     
                                                                                                                                                                             |     if (eax != 0) {
    0x00405260 je 0x40529f                                                                                                                                                   |         
    0x00405262 cmp eax, 1                                                                                                                                                    |         
                                                                                                                                                                             |         if (eax == 1) {
    0x00405265 jne 0x40529f                                                                                                                                                  |             
    0x00405267 cmp rbx, r14                                                                                                                                                  |             
                                                                                                                                                                             |             if (rbx == r14) {
    0x0040526a je 0x405346                                                                                                                                                   |                 goto label_0;
                                                                                                                                                                             |             }
    0x00405270 mov rdx, qword [r14 + 0x18]                                                                                                                                   |             rdx = *((r14 + 0x18));
    0x00405274 cmp qword [r14 + 0x20], 0x17                                                                                                                                  |             
                                                                                                                                                                             |             if (*((r14 + 0x20)) != 0x17) {
    0x00405279 je 0x40527e                                                                                                                                                   |                 
    0x0040527b mov r14, qword [r14]                                                                                                                                          |                 r14 = *(r14);
                                                                                                                                                                             |             }
    0x0040527e mov r15, qword [rbx + 0x18]                                                                                                                                   |             r15 = *((rbx + 0x18));
    0x00405282 mov qword [rbx + 0x18], 0                                                                                                                                     |             *((rbx + 0x18)) = 0;
    0x0040528a mov ecx, 0x4485f3                                                                                                                                             |             
    0x0040528f mov rdi, rbx                                                                                                                                                  |             
    0x00405292 mov rsi, r14                                                                                                                                                  |             
    0x00405295 call 0x422b80                                                                                                                                                 |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x0040529a jmp 0x405346                                                                                                                                                  |             
                                                                                                                                                                             |         }
                                                                                                                                                                             |     } else {
    0x0040529f mov dword [rbx + 0x30], 0xffffffff                                                                                                                            |         *((rbx + 0x30)) = 0xffffffff;
    0x004052a6 mov rdi, qword [rbx + 0x38]                                                                                                                                   |         rdi = *((rbx + 0x38));
    0x004052aa test rdi, rdi                                                                                                                                                 |         
                                                                                                                                                                             |         if (rdi == 0) {
    0x004052ad jne 0x4052c3                                                                                                                                                  |             
    0x004052af mov rdi, qword [rip + 0x27a89a]                                                                                                                               |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004052b6 test rdi, rdi                                                                                                                                                 |             
                                                                                                                                                                             |             if (rdi != 0) {
    0x004052b9 jne 0x4052c3                                                                                                                                                  |                 goto label_1;
                                                                                                                                                                             |             }
    0x004052bb call 0x4206c0                                                                                                                                                 |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004052c0 mov rdi, rax                                                                                                                                                  |             rdi = rax;
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_1:
    0x004052c3 mov rax, qword [r14 + 0x20]                                                                                                                                   |         rax = *((r14 + 0x20));
    0x004052c7 mov qword [rbx + 0x20], rax                                                                                                                                   |         *((rbx + 0x20)) = rax;
    0x004052cb movups xmm0, xmmword [r14]                                                                                                                                    |         __asm ("movups xmm0, xmmword [r14]");
    0x004052cf movups xmm1, xmmword [r14 + 0x10]                                                                                                                             |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004052d4 movups xmmword [rbx + 0x10], xmm1                                                                                                                             |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004052d8 movups xmmword [rbx], xmm0                                                                                                                                    |         __asm ("movups xmmword [rbx], xmm0");
    0x004052db mov qword [rbx + 0x28], rdi                                                                                                                                   |         *((rbx + 0x28)) = rdi;
    0x004052df cmp rax, 0x17                                                                                                                                                 |         
                                                                                                                                                                             |         if (rax != 0x17) {
    0x004052e3 je 0x40533f                                                                                                                                                   |             
    0x004052e5 mov rax, qword [r14 + 0x18]                                                                                                                                   |             rax = *((r14 + 0x18));
    0x004052e9 cmp rax, 0x17                                                                                                                                                 |             
    0x004052ed mov esi, 0x17                                                                                                                                                 |             esi = 0x17;
                                                                                                                                                                             |             if (rax > 0x17) {
    0x004052f2 cmova rsi, rax                                                                                                                                                |                 rsi = rax;
                                                                                                                                                                             |             }
    0x004052f6 mov qword [rbx], 0                                                                                                                                            |             *(rbx) = 0;
    0x004052fd mov qword [rbx + 0x18], rax                                                                                                                                   |             *((rbx + 0x18)) = rax;
    0x00405301 mov qword [rbx + 0x20], rsi                                                                                                                                   |             *((rbx + 0x20)) = rsi;
    0x00405305 cmp rax, 0x18                                                                                                                                                 |             
                                                                                                                                                                             |             if (rax >= 0x18) {
    0x00405309 jb 0x40531e                                                                                                                                                   |                 
    0x0040530b inc rsi                                                                                                                                                       |                 rsi++;
    0x0040530e mov rax, qword [rdi]                                                                                                                                          |                 rax = *(rdi);
    0x00405311 call qword [rax + 0x10]                                                                                                                                       |                 rax = uint64_t (*rax + 0x10)() ();
    0x00405314 mov qword [rbx], rax                                                                                                                                          |                 *(rbx) = rax;
    0x00405317 cmp qword [rbx + 0x20], 0x17                                                                                                                                  |                 
                                                                                                                                                                             |                 if (*((rbx + 0x20)) != 0x17) {
    0x0040531c jne 0x405321                                                                                                                                                  |                     goto label_2;
                                                                                                                                                                             |                 }
                                                                                                                                                                             |             }
    0x0040531e mov rax, rbx                                                                                                                                                  |             rax = rbx;
                                                                                                                                                                             | label_2:
    0x00405321 mov rdx, qword [rbx + 0x18]                                                                                                                                   |             rdx = *((rbx + 0x18));
    0x00405325 inc rdx                                                                                                                                                       |             rdx++;
                                                                                                                                                                             |             if (rdx == 0) {
    0x00405328 je 0x40533f                                                                                                                                                   |                 goto label_3;
                                                                                                                                                                             |             }
    0x0040532a cmp qword [r14 + 0x20], 0x17                                                                                                                                  |             
                                                                                                                                                                             |             if (*((r14 + 0x20)) != 0x17) {
    0x0040532f je 0x405334                                                                                                                                                   |                 
    0x00405331 mov r14, qword [r14]                                                                                                                                          |                 r14 = *(r14);
                                                                                                                                                                             |             }
    0x00405334 mov rdi, rax                                                                                                                                                  |             
    0x00405337 mov rsi, r14                                                                                                                                                  |             
    0x0040533a call 0x403a30                                                                                                                                                 |             memcpy (rax, r14, rdx);
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_3:
    0x0040533f mov dword [rbx + 0x30], 1                                                                                                                                     |         *((rbx + 0x30)) = 1;
                                                                                                                                                                             |     }
                                                                                                                                                                             | label_0:
    0x00405346 mov rax, rbx                                                                                                                                                  |     rax = rbx;
    0x00405349 pop rbx                                                                                                                                                       |     
    0x0040534a pop r14                                                                                                                                                       |     
    0x0040534c pop r15                                                                                                                                                       |     
    0x0040534e ret                                                                                                                                                           |     return rax;
                                                                                                                                                                             | }
