    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* balb_testmessages.t/none @ 0x40b310 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::balb::SequenceWithAnonymityChoice.makeSelection4_BloombergLP::balb::CustomInt_const_ ()          | int64_t method_BloombergLP::balb::SequenceWithAnonymityChoice_makeSelection4_BloombergLP::balb::CustomInt_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                 |     rsi = arg2;
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::balb::SequenceWithAnonymityChoice::makeSelection4(BloombergLP::balb::CustomInt const&) */
    0x0040b310 push r14                                                                                                          |     
    0x0040b312 push rbx                                                                                                          |     
    0x0040b313 push rax                                                                                                          |     
    0x0040b314 mov r14, rsi                                                                                                      |     r14 = rsi;
    0x0040b317 mov rbx, rdi                                                                                                      |     rbx = rdi;
    0x0040b31a mov eax, dword [rdi + 0x170]                                                                                      |     eax = *((rdi + 0x170));
    0x0040b320 test eax, eax                                                                                                     |     
                                                                                                                                 |     if (eax != 0) {
    0x0040b322 je 0x40b335                                                                                                       |         
    0x0040b324 cmp eax, 2                                                                                                        |         
                                                                                                                                 |         if (eax != 2) {
    0x0040b327 je 0x40b33f                                                                                                       |             
    0x0040b329 cmp eax, 3                                                                                                        |             
                                                                                                                                 |             if (eax != 3) {
    0x0040b32c jne 0x40b35b                                                                                                      |                 goto label_0;
                                                                                                                                 |             }
    0x0040b32e mov eax, dword [r14]                                                                                              |             eax = *(r14);
    0x0040b331 mov dword [rbx], eax                                                                                              |             *(rbx) = eax;
    0x0040b333 jmp 0x40b374                                                                                                      |             
    0x0040b335 mov rdi, rbx                                                                                                      |             
    0x0040b338 call 0x4093b0                                                                                                     |             BloombergLP::balb::Sequence6::~Sequence6() (rbx);
    0x0040b33d jmp 0x40b35b                                                                                                      |             
                                                                                                                                 |         } else {
                                                                                                                                 |         } else {
    0x0040b33f cmp qword [rbx + 0x20], 0x17                                                                                      |             
                                                                                                                                 |             if (*((rbx + 0x20)) != 0x17) {
    0x0040b344 je 0x40b353                                                                                                       |                 
    0x0040b346 mov rsi, qword [rbx]                                                                                              |                 rsi = *(rbx);
    0x0040b349 mov rdi, qword [rbx + 0x28]                                                                                       |                 rdi = *((rbx + 0x28));
    0x0040b34d mov rax, qword [rdi]                                                                                              |                 rax = *(rdi);
    0x0040b350 call qword [rax + 0x18]                                                                                           |                 uint64_t (*rax + 0x18)() ();
                                                                                                                                 |             }
    0x0040b353 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                        |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                 |         }
                                                                                                                                 | label_0:
    0x0040b35b mov dword [rbx + 0x170], 0xffffffff                                                                               |         *((rbx + 0x170)) = 0xffffffff;
    0x0040b365 mov eax, dword [r14]                                                                                              |         eax = *(r14);
    0x0040b368 mov dword [rbx], eax                                                                                              |         *(rbx) = eax;
    0x0040b36a mov dword [rbx + 0x170], 3                                                                                        |         *((rbx + 0x170)) = 3;
                                                                                                                                 |     }
    0x0040b374 mov rax, rbx                                                                                                      |     rax = rbx;
    0x0040b377 add rsp, 8                                                                                                        |     
    0x0040b37b pop rbx                                                                                                           |     
    0x0040b37c pop r14                                                                                                           |     
    0x0040b37e ret                                                                                                               |     return rax;
                                                                                                                                 | }
