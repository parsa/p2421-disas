    ; assembly                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                         | /* ball_asyncfileobserver.t/assume @ 0x42c440 */
                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_bsl.function_void_______unsigned_long__bsl::function_void_____const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_bsl_function_void_unsigned_long_bsl::function_void_const_BloombergLP::bslma::Allocator_ (int64_t arg3, char * arg2, int64_t arg1) {
                                                                                                                                                                                         |     int64_t var_8h;
                                                                                                                                                                                         |     int64_t var_20h;
                                                                                                                                                                                         |     uint32_t var_40h;
                                                                                                                                                                                         |     int64_t var_48h;
                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<bsl::function<void ()> >(unsigned long*, bsl::function<void ()> const&, BloombergLP::bslma::Allocator*) */
    0x0042c440 push rbp                                                                                                                                                                  |     
    0x0042c441 push r15                                                                                                                                                                  |     
    0x0042c443 push r14                                                                                                                                                                  |     
    0x0042c445 push r12                                                                                                                                                                  |     
    0x0042c447 push rbx                                                                                                                                                                  |     
    0x0042c448 sub rsp, 0x50                                                                                                                                                             |     
    0x0042c44c mov r14, rdx                                                                                                                                                              |     r14 = rdx;
    0x0042c44f mov rbp, rsi                                                                                                                                                              |     
    0x0042c452 mov r12, rdi                                                                                                                                                              |     r12 = rdi;
    0x0042c455 mov rax, qword [rdx]                                                                                                                                                      |     rax = *(rdx);
    0x0042c458 mov esi, 0x90                                                                                                                                                             |     esi = 0x90;
    0x0042c45d mov rdi, rdx                                                                                                                                                              |     rdi = rdx;
    0x0042c460 call qword [rax + 0x10]                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)(void, void, void, void) (rbx, r12, r14, r15);
    0x0042c463 mov rbx, rax                                                                                                                                                              |     rbx = rax;
    0x0042c466 mov qword [rax], 0x42c600                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_bsl.function_void______::invokerFunction_void_;
    0x0042c46d lea r15, [rax + 0x10]                                                                                                                                                     |     r15 = rax + 0x10;
    0x0042c471 mov qword [rax + 0x40], r14                                                                                                                                               |     *((rax + 0x40)) = r14;
    0x0042c475 xorps xmm0, xmm0                                                                                                                                                          |     __asm ("xorps xmm0, xmm0");
    0x0042c478 movups xmmword [rax + 0x48], xmm0                                                                                                                                         |     __asm ("movups xmmword [rax + 0x48], xmm0");
    0x0042c47c mov rdi, r15                                                                                                                                                              |     
    0x0042c47f mov rsi, rbp                                                                                                                                                              |     
    0x0042c482 call 0x46ed40                                                                                                                                                             |     BloombergLP::bslstl::Function_Rep::copyInit(BloombergLP::bslstl::Function_Repconst&) (r15, rbp);
    0x0042c487 mov rdi, rbx                                                                                                                                                              |     
    0x0042c48a add rdi, 0x60                                                                                                                                                             |     rdi += 0x60;
    0x0042c48e mov qword [rbx + 0x60], 0                                                                                                                                                 |     *((rbx + 0x60)) = 0;
    0x0042c496 mov qword [rbx + 0x88], r14                                                                                                                                               |     *((rbx + 0x88)) = r14;
    0x0042c49d movaps xmm0, xmmword [rip + 0x66d5c]                                                                                                                                      |     xmm0 = .comment;
    0x0042c4a4 movups xmmword [rbx + 0x78], xmm0                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x78], xmm0");
    0x0042c4a8 mov ecx, 0x4959c9                                                                                                                                                         |     
    0x0042c4ad xor esi, esi                                                                                                                                                              |     
    0x0042c4af xor edx, edx                                                                                                                                                              |     
    0x0042c4b1 call 0x471090                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0042c4b6 lea rdi, [rsp + 8]                                                                                                                                                        |     
    0x0042c4bb call 0x46d0a0                                                                                                                                                             |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp + 8);
    0x0042c4c0 lea rsi, [rsp + 8]                                                                                                                                                        |     
    0x0042c4c5 mov edx, 0x46bdd0                                                                                                                                                         |     
    0x0042c4ca mov rdi, r12                                                                                                                                                              |     
    0x0042c4cd mov rcx, rbx                                                                                                                                                              |     
    0x0042c4d0 call 0x46d3f0                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, rsp + 8, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0042c4d5 mov ebp, eax                                                                                                                                                              |     
    0x0042c4d7 cmp qword [rsp + 0x40], 0x17                                                                                                                                              |     
                                                                                                                                                                                         |     if (*((rsp + 0x40)) != 0x17) {
    0x0042c4dd je 0x42c4ef                                                                                                                                                               |         
    0x0042c4df mov rsi, qword [rsp + 0x20]                                                                                                                                               |         rsi = *((rsp + 0x20));
    0x0042c4e4 mov rdi, qword [rsp + 0x48]                                                                                                                                               |         rdi = *((rsp + 0x48));
    0x0042c4e9 mov rax, qword [rdi]                                                                                                                                                      |         rax = *(rdi);
    0x0042c4ec call qword [rax + 0x18]                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                         |     }
    0x0042c4ef test ebp, ebp                                                                                                                                                             |     
                                                                                                                                                                                         |     if (ebp != 0) {
    0x0042c4f1 je 0x42c52a                                                                                                                                                               |         
    0x0042c4f3 cmp qword [rbx + 0x80], 0x17                                                                                                                                              |         
                                                                                                                                                                                         |         if (*((rbx + 0x80)) != 0x17) {
    0x0042c4fb je 0x42c50e                                                                                                                                                               |             
    0x0042c4fd mov rsi, qword [rbx + 0x60]                                                                                                                                               |             rsi = *((rbx + 0x60));
    0x0042c501 mov rdi, qword [rbx + 0x88]                                                                                                                                               |             rdi = *((rbx + 0x88));
    0x0042c508 mov rax, qword [rdi]                                                                                                                                                      |             rax = *(rdi);
    0x0042c50b call qword [rax + 0x18]                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                         |         }
    0x0042c50e mov qword [rbx + 0x78], 0xffffffffffffffff                                                                                                                                |         *((rbx + 0x78)) = 0xffffffffffffffff;
    0x0042c516 mov rdi, r15                                                                                                                                                              |         
    0x0042c519 call 0x46ecb0                                                                                                                                                             |         BloombergLP::bslstl::Function_Rep::~Function_Rep() (r15);
    0x0042c51e mov rax, qword [r14]                                                                                                                                                      |         rax = *(r14);
    0x0042c521 mov rdi, r14                                                                                                                                                              |         rdi = r14;
    0x0042c524 mov rsi, rbx                                                                                                                                                              |         rsi = rbx;
    0x0042c527 call qword [rax + 0x18]                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                         |     }
    0x0042c52a mov eax, ebp                                                                                                                                                              |     eax = ebp;
    0x0042c52c add rsp, 0x50                                                                                                                                                             |     
    0x0042c530 pop rbx                                                                                                                                                                   |     
    0x0042c531 pop r12                                                                                                                                                                   |     
    0x0042c533 pop r14                                                                                                                                                                   |     
    0x0042c535 pop r15                                                                                                                                                                   |     
    0x0042c537 pop rbp                                                                                                                                                                   |     
    0x0042c538 ret                                                                                                                                                                       |     return rax;
                                                                                                                                                                                         | }
