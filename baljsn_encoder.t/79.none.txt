    ; assembly                                                                                   | /* r2dec pseudo code output */
                                                                                                 | /* baljsn_encoder.t/none @ 0x4d08a0 */
                                                                                                 | #include <stdint.h>
                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection4__ ()        | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection4_ (int64_t arg1) {
                                                                                                 |     rdi = arg1;
                                                                                                 |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection4() */
    0x004d08a0 push rbx                                                                          |     
    0x004d08a1 mov rbx, rdi                                                                      |     rbx = rdi;
    0x004d08a4 mov eax, dword [rdi + 0x170]                                                      |     eax = *((rdi + 0x170));
    0x004d08aa test eax, eax                                                                     |     
                                                                                                 |     if (eax != 0) {
    0x004d08ac je 0x4d08c0                                                                       |         
    0x004d08ae cmp eax, 2                                                                        |         
                                                                                                 |         if (eax != 2) {
    0x004d08b1 je 0x4d08ca                                                                       |             
    0x004d08b3 cmp eax, 3                                                                        |             
                                                                                                 |             if (eax != 3) {
    0x004d08b6 jne 0x4d08e6                                                                      |                 goto label_0;
                                                                                                 |             }
    0x004d08b8 mov dword [rbx], 0                                                                |             *(rbx) = 0;
    0x004d08be jmp 0x4d08f6                                                                      |             
    0x004d08c0 mov rdi, rbx                                                                      |             
    0x004d08c3 call 0x4c4be0                                                                     |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004d08c8 jmp 0x4d08e6                                                                      |             
                                                                                                 |         } else {
                                                                                                 |         } else {
    0x004d08ca cmp qword [rbx + 0x20], 0x17                                                      |             
                                                                                                 |             if (*((rbx + 0x20)) != 0x17) {
    0x004d08cf je 0x4d08de                                                                       |                 
    0x004d08d1 mov rsi, qword [rbx]                                                              |                 rsi = *(rbx);
    0x004d08d4 mov rdi, qword [rbx + 0x28]                                                       |                 rdi = *((rbx + 0x28));
    0x004d08d8 mov rax, qword [rdi]                                                              |                 rax = *(rdi);
    0x004d08db call qword [rax + 0x18]                                                           |                 uint64_t (*rax + 0x18)() ();
                                                                                                 |             }
    0x004d08de mov qword [rbx + 0x18], 0xffffffffffffffff                                        |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                 |         }
                                                                                                 | label_0:
    0x004d08e6 mov dword [rbx], 0                                                                |         *(rbx) = 0;
    0x004d08ec mov dword [rbx + 0x170], 3                                                        |         *((rbx + 0x170)) = 3;
                                                                                                 |     }
    0x004d08f6 mov rax, rbx                                                                      |     rax = rbx;
    0x004d08f9 pop rbx                                                                           |     
    0x004d08fa ret                                                                               |     return rax;
                                                                                                 | }
