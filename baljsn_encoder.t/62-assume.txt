    ; assembly                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                         | /* baljsn_encoder.t/assume @ 0x4cfc40 */
                                                                                                                                         | #include <stdint.h>
                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection1_BloombergLP::s_baltst::Sequence6_const_ ()          | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection1_BloombergLP::s_baltst::Sequence6_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                         |     rsi = arg2;
                                                                                                                                         |     rdi = arg1;
                                                                                                                                         |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection1(BloombergLP::s_baltst::Sequence6 const&) */
    0x004cfc40 push r14                                                                                                                  |     
    0x004cfc42 push rbx                                                                                                                  |     
    0x004cfc43 push rax                                                                                                                  |     
    0x004cfc44 mov r14, rsi                                                                                                              |     r14 = rsi;
    0x004cfc47 mov rbx, rdi                                                                                                              |     rbx = rdi;
    0x004cfc4a mov eax, dword [rdi + 0x170]                                                                                              |     eax = *((rdi + 0x170));
    0x004cfc50 cmp rax, 3                                                                                                                |     
                                                                                                                                         |     if (rax <= 3) {
    0x004cfc54 ja 0x4cfc86                                                                                                               |         
                                                                                                                                         |         /* switch table (4 cases) at 0x64a280 */
    0x004cfc56 jmp qword [rax*8 + 0x64a280]                                                                                              |         
    0x004cfc5d mov rdi, rbx                                                                                                              |         
    0x004cfc60 mov rsi, r14                                                                                                              |         
    0x004cfc63 call 0x4b9de0                                                                                                             |         BloombergLP::s_baltst::Sequence6::operator=(BloombergLP::s_baltst::Sequence6const&) (rbx, r14);
    0x004cfc68 jmp 0x4cfcac                                                                                                              |         goto label_0;
    0x004cfc6a cmp qword [rbx + 0x20], 0x17                                                                                              |         
                                                                                                                                         |         if (*((rbx + 0x20)) != 0x17) {
    0x004cfc6f je 0x4cfc7e                                                                                                               |             
    0x004cfc71 mov rsi, qword [rbx]                                                                                                      |             rsi = *(rbx);
    0x004cfc74 mov rdi, qword [rbx + 0x28]                                                                                               |             rdi = *((rbx + 0x28));
    0x004cfc78 mov rax, qword [rdi]                                                                                                      |             rax = *(rdi);
    0x004cfc7b call qword [rax + 0x18]                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                         |         }
    0x004cfc7e mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                         |     }
    0x004cfc86 mov dword [rbx + 0x170], 0xffffffff                                                                                       |     *((rbx + 0x170)) = 0xffffffff;
    0x004cfc90 mov rdx, qword [rbx + 0x178]                                                                                              |     
    0x004cfc97 mov rdi, rbx                                                                                                              |     
    0x004cfc9a mov rsi, r14                                                                                                              |     
    0x004cfc9d call 0x4c35f0                                                                                                             |     BloombergLP::s_baltst::Sequence6::Sequence6(BloombergLP::s_baltst::Sequence6const&,BloombergLP::bslma::Allocator*) (rbx, r14, *((rbx + 0x178)));
    0x004cfca2 mov dword [rbx + 0x170], 0                                                                                                |     *((rbx + 0x170)) = 0;
                                                                                                                                         | label_0:
    0x004cfcac mov rax, rbx                                                                                                              |     rax = rbx;
    0x004cfcaf add rsp, 8                                                                                                                |     
    0x004cfcb3 pop rbx                                                                                                                   |     
    0x004cfcb4 pop r14                                                                                                                   |     
    0x004cfcb6 ret                                                                                                                       |     return rax;
                                                                                                                                         | }
