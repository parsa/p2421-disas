    ; assembly                                                                                                       | /* r2dec pseudo code output */
                                                                                                                     | /* baljsn_encoder.t/none @ 0x4b96e0 */
                                                                                                                     | #include <stdint.h>
                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection4_BloombergLP::s_baltst::CustomInt_const_ ()          | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection4_BloombergLP::s_baltst::CustomInt_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                     |     rsi = arg2;
                                                                                                                     |     rdi = arg1;
                                                                                                                     |     /* BloombergLP::s_baltst::Choice3::makeSelection4(BloombergLP::s_baltst::CustomInt const&) */
    0x004b96e0 push r14                                                                                              |     
    0x004b96e2 push rbx                                                                                              |     
    0x004b96e3 push rax                                                                                              |     
    0x004b96e4 mov r14, rsi                                                                                          |     r14 = rsi;
    0x004b96e7 mov rbx, rdi                                                                                          |     rbx = rdi;
    0x004b96ea mov eax, dword [rdi + 0x170]                                                                          |     eax = *((rdi + 0x170));
    0x004b96f0 test eax, eax                                                                                         |     
                                                                                                                     |     if (eax != 0) {
    0x004b96f2 je 0x4b9705                                                                                           |         
    0x004b96f4 cmp eax, 2                                                                                            |         
                                                                                                                     |         if (eax != 2) {
    0x004b96f7 je 0x4b970f                                                                                           |             
    0x004b96f9 cmp eax, 3                                                                                            |             
                                                                                                                     |             if (eax != 3) {
    0x004b96fc jne 0x4b972b                                                                                          |                 goto label_0;
                                                                                                                     |             }
    0x004b96fe mov eax, dword [r14]                                                                                  |             eax = *(r14);
    0x004b9701 mov dword [rbx], eax                                                                                  |             *(rbx) = eax;
    0x004b9703 jmp 0x4b9744                                                                                          |             
    0x004b9705 mov rdi, rbx                                                                                          |             
    0x004b9708 call 0x4c4be0                                                                                         |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b970d jmp 0x4b972b                                                                                          |             
                                                                                                                     |         } else {
                                                                                                                     |         } else {
    0x004b970f cmp qword [rbx + 0x20], 0x17                                                                          |             
                                                                                                                     |             if (*((rbx + 0x20)) != 0x17) {
    0x004b9714 je 0x4b9723                                                                                           |                 
    0x004b9716 mov rsi, qword [rbx]                                                                                  |                 rsi = *(rbx);
    0x004b9719 mov rdi, qword [rbx + 0x28]                                                                           |                 rdi = *((rbx + 0x28));
    0x004b971d mov rax, qword [rdi]                                                                                  |                 rax = *(rdi);
    0x004b9720 call qword [rax + 0x18]                                                                               |                 uint64_t (*rax + 0x18)() ();
                                                                                                                     |             }
    0x004b9723 mov qword [rbx + 0x18], 0xffffffffffffffff                                                            |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                     |         }
                                                                                                                     | label_0:
    0x004b972b mov dword [rbx + 0x170], 0xffffffff                                                                   |         *((rbx + 0x170)) = 0xffffffff;
    0x004b9735 mov eax, dword [r14]                                                                                  |         eax = *(r14);
    0x004b9738 mov dword [rbx], eax                                                                                  |         *(rbx) = eax;
    0x004b973a mov dword [rbx + 0x170], 3                                                                            |         *((rbx + 0x170)) = 3;
                                                                                                                     |     }
    0x004b9744 mov rax, rbx                                                                                          |     rax = rbx;
    0x004b9747 add rsp, 8                                                                                            |     
    0x004b974b pop rbx                                                                                               |     
    0x004b974c pop r14                                                                                               |     
    0x004b974e ret                                                                                                   |     return rax;
                                                                                                                     | }
