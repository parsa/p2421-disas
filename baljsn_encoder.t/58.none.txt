    ; assembly                                                                                                           | /* r2dec pseudo code output */
                                                                                                                         | /* baljsn_encoder.t/none @ 0x4b95c0 */
                                                                                                                         | #include <stdint.h>
                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection3_BloombergLP::s_baltst::CustomString_const_ ()           | uint64_t method_BloombergLP::s_baltst::Choice3_makeSelection3_BloombergLP::s_baltst::CustomString_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                         |     rsi = arg2;
                                                                                                                         |     rdi = arg1;
                                                                                                                         |     /* BloombergLP::s_baltst::Choice3::makeSelection3(BloombergLP::s_baltst::CustomString const&) */
    0x004b95c0 push r15                                                                                                  |     
    0x004b95c2 push r14                                                                                                  |     
    0x004b95c4 push rbx                                                                                                  |     
    0x004b95c5 mov r14, rsi                                                                                              |     r14 = rsi;
    0x004b95c8 mov rbx, rdi                                                                                              |     rbx = rdi;
    0x004b95cb mov eax, dword [rdi + 0x170]                                                                              |     eax = *((rdi + 0x170));
    0x004b95d1 test eax, eax                                                                                             |     
                                                                                                                         |     if (eax != 0) {
    0x004b95d3 je 0x4b9612                                                                                               |         
    0x004b95d5 cmp eax, 2                                                                                                |         
                                                                                                                         |         if (eax == 2) {
    0x004b95d8 jne 0x4b961a                                                                                              |             
    0x004b95da cmp rbx, r14                                                                                              |             
                                                                                                                         |             if (rbx == r14) {
    0x004b95dd je 0x4b96ca                                                                                               |                 goto label_0;
                                                                                                                         |             }
    0x004b95e3 mov rdx, qword [r14 + 0x18]                                                                               |             rdx = *((r14 + 0x18));
    0x004b95e7 cmp qword [r14 + 0x20], 0x17                                                                              |             
                                                                                                                         |             if (*((r14 + 0x20)) != 0x17) {
    0x004b95ec je 0x4b95f1                                                                                               |                 
    0x004b95ee mov r14, qword [r14]                                                                                      |                 r14 = *(r14);
                                                                                                                         |             }
    0x004b95f1 mov r15, qword [rbx + 0x18]                                                                               |             r15 = *((rbx + 0x18));
    0x004b95f5 mov qword [rbx + 0x18], 0                                                                                 |             *((rbx + 0x18)) = 0;
    0x004b95fd mov ecx, 0x543cdc                                                                                         |             
    0x004b9602 mov rdi, rbx                                                                                              |             
    0x004b9605 mov rsi, r14                                                                                              |             
    0x004b9608 call 0x51b3c0                                                                                             |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x004b960d jmp 0x4b96ca                                                                                              |             
                                                                                                                         |         } else {
    0x004b9612 mov rdi, rbx                                                                                              |             
    0x004b9615 call 0x4c4be0                                                                                             |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                         |         }
    0x004b961a mov dword [rbx + 0x170], 0xffffffff                                                                       |         *((rbx + 0x170)) = 0xffffffff;
    0x004b9624 mov rdi, qword [rbx + 0x178]                                                                              |         rdi = *((rbx + 0x178));
    0x004b962b test rdi, rdi                                                                                             |         
                                                                                                                         |         if (rdi == 0) {
    0x004b962e jne 0x4b9644                                                                                              |             
    0x004b9630 mov rdi, qword [rip + 0x413a71]                                                                           |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004b9637 test rdi, rdi                                                                                             |             
                                                                                                                         |             if (rdi != 0) {
    0x004b963a jne 0x4b9644                                                                                              |                 goto label_1;
                                                                                                                         |             }
    0x004b963c call 0x518150                                                                                             |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004b9641 mov rdi, rax                                                                                              |             rdi = rax;
                                                                                                                         |         }
                                                                                                                         | label_1:
    0x004b9644 mov rax, qword [r14 + 0x20]                                                                               |         rax = *((r14 + 0x20));
    0x004b9648 mov qword [rbx + 0x20], rax                                                                               |         *((rbx + 0x20)) = rax;
    0x004b964c movups xmm0, xmmword [r14]                                                                                |         __asm ("movups xmm0, xmmword [r14]");
    0x004b9650 movups xmm1, xmmword [r14 + 0x10]                                                                         |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004b9655 movups xmmword [rbx + 0x10], xmm1                                                                         |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004b9659 movups xmmword [rbx], xmm0                                                                                |         __asm ("movups xmmword [rbx], xmm0");
    0x004b965c mov qword [rbx + 0x28], rdi                                                                               |         *((rbx + 0x28)) = rdi;
    0x004b9660 cmp rax, 0x17                                                                                             |         
                                                                                                                         |         if (rax != 0x17) {
    0x004b9664 je 0x4b96c0                                                                                               |             
    0x004b9666 mov rax, qword [r14 + 0x18]                                                                               |             rax = *((r14 + 0x18));
    0x004b966a cmp rax, 0x17                                                                                             |             
    0x004b966e mov esi, 0x17                                                                                             |             esi = 0x17;
                                                                                                                         |             if (rax > 0x17) {
    0x004b9673 cmova rsi, rax                                                                                            |                 rsi = rax;
                                                                                                                         |             }
    0x004b9677 mov qword [rbx], 0                                                                                        |             *(rbx) = 0;
    0x004b967e mov qword [rbx + 0x18], rax                                                                               |             *((rbx + 0x18)) = rax;
    0x004b9682 mov qword [rbx + 0x20], rsi                                                                               |             *((rbx + 0x20)) = rsi;
    0x004b9686 cmp rax, 0x18                                                                                             |             
                                                                                                                         |             if (rax >= 0x18) {
    0x004b968a jb 0x4b969f                                                                                               |                 
    0x004b968c inc rsi                                                                                                   |                 rsi++;
    0x004b968f mov rax, qword [rdi]                                                                                      |                 rax = *(rdi);
    0x004b9692 call qword [rax + 0x10]                                                                                   |                 rax = uint64_t (*rax + 0x10)() ();
    0x004b9695 mov qword [rbx], rax                                                                                      |                 *(rbx) = rax;
    0x004b9698 cmp qword [rbx + 0x20], 0x17                                                                              |                 
                                                                                                                         |                 if (*((rbx + 0x20)) != 0x17) {
    0x004b969d jne 0x4b96a2                                                                                              |                     goto label_2;
                                                                                                                         |                 }
                                                                                                                         |             }
    0x004b969f mov rax, rbx                                                                                              |             rax = rbx;
                                                                                                                         | label_2:
    0x004b96a2 mov rdx, qword [rbx + 0x18]                                                                               |             rdx = *((rbx + 0x18));
    0x004b96a6 inc rdx                                                                                                   |             rdx++;
                                                                                                                         |             if (rdx == 0) {
    0x004b96a9 je 0x4b96c0                                                                                               |                 goto label_3;
                                                                                                                         |             }
    0x004b96ab cmp qword [r14 + 0x20], 0x17                                                                              |             
                                                                                                                         |             if (*((r14 + 0x20)) != 0x17) {
    0x004b96b0 je 0x4b96b5                                                                                               |                 
    0x004b96b2 mov r14, qword [r14]                                                                                      |                 r14 = *(r14);
                                                                                                                         |             }
    0x004b96b5 mov rdi, rax                                                                                              |             
    0x004b96b8 mov rsi, r14                                                                                              |             
    0x004b96bb call 0x405c20                                                                                             |             memcpy (rax, r14, rdx);
                                                                                                                         |         }
                                                                                                                         | label_3:
    0x004b96c0 mov dword [rbx + 0x170], 2                                                                                |         *((rbx + 0x170)) = 2;
                                                                                                                         |     }
                                                                                                                         | label_0:
    0x004b96ca mov rax, rbx                                                                                              |     rax = rbx;
    0x004b96cd pop rbx                                                                                                   |     
    0x004b96ce pop r14                                                                                                   |     
    0x004b96d0 pop r15                                                                                                   |     
    0x004b96d2 ret                                                                                                       |     return rax;
                                                                                                                         | }
