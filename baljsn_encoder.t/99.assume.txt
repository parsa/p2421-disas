    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* baljsn_encoder.t/assume @ 0x4c5530 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.bsl::vector_BloombergLP::s_baltst::Choice1__bsl::allocator_BloombergLP::s_baltst::Choice1___.vector__ ()          | int64_t method_bsl::vector_BloombergLP::s_baltst::Choice1_bsl::allocator_BloombergLP::s_baltst::Choice1_vector_ (int64_t arg1) {
                                                                                                                                     |     int64_t var_8h;
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* bsl::vector<BloombergLP::s_baltst::Choice1, bsl::allocator<BloombergLP::s_baltst::Choice1> >::~vector() */
    0x004c5530 push rbx                                                                                                              |     
    0x004c5531 sub rsp, 0x10                                                                                                         |     
    0x004c5535 mov rbx, rdi                                                                                                          |     rbx = rdi;
    0x004c5538 mov rdi, qword [rdi]                                                                                                  |     rdi = *(rdi);
    0x004c553b test rdi, rdi                                                                                                         |     
                                                                                                                                     |     if (rdi != 0) {
    0x004c553e je 0x4c5564                                                                                                           |         
    0x004c5540 mov rsi, qword [rbx + 8]                                                                                              |         
    0x004c5544 mov rax, qword [rbx + 0x18]                                                                                           |         rax = *((rbx + 0x18));
    0x004c5548 mov qword [rsp + 8], rax                                                                                              |         *((rsp + 8)) = rax;
    0x004c554d lea rdx, [rsp + 8]                                                                                                    |         rdx = rsp + 8;
    0x004c5552 call 0x4c9aa0                                                                                                         |         voidBloombergLP::bslalg::ArrayDestructionPrimitives::destroy<BloombergLP::s_baltst::Choice1,bsl::allocator<BloombergLP::s_baltst::Choice1>>(BloombergLP::s_baltst::Choice1*,BloombergLP::s_baltst::Choice1*,bsl::allocator<BloombergLP::s_baltst::Choice1>,bsl::integral_constant<bool,false>) (rdi, *((rbx + 8)));
    0x004c5557 mov rsi, qword [rbx]                                                                                                  |         rsi = *(rbx);
    0x004c555a mov rdi, qword [rbx + 0x18]                                                                                           |         rdi = *((rbx + 0x18));
    0x004c555e mov rax, qword [rdi]                                                                                                  |         rax = *(rdi);
    0x004c5561 call qword [rax + 0x18]                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                     |     }
    0x004c5564 add rsp, 0x10                                                                                                         |     
    0x004c5568 pop rbx                                                                                                               |     
    0x004c5569 ret                                                                                                                   |     return rax;
                                                                                                                                     | }
