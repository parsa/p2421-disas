    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* baljsn_encoder.t/none @ 0x4833f0 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::baljsn::Encoder_ValueDispatcher.operator___BloombergLP::bdlt::TimeTz__BloombergLP::bdlt::TimeTz_const__BloombergLP::bdlat_TypeCategory::Simple_ ()       | int64_t method_int_BloombergLP::baljsn::Encoder_ValueDispatcher_operator_BloombergLP::bdlt::TimeTz_BloombergLP::bdlt::TimeTz_const_BloombergLP::bdlat_TypeCategory::Simple_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                             |     size_t var_18h;
                                                                                                                                                                                             |     int64_t var_20h;
                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* int BloombergLP::baljsn::Encoder_ValueDispatcher::operator()<BloombergLP::bdlt::TimeTz>(BloombergLP::bdlt::TimeTz const&, BloombergLP::bdlat_TypeCategory::Simple) */
    0x004833f0 push r15                                                                                                                                                                      |     
    0x004833f2 push r14                                                                                                                                                                      |     
    0x004833f4 push r12                                                                                                                                                                      |     
    0x004833f6 push rbx                                                                                                                                                                      |     
    0x004833f7 sub rsp, 0x48                                                                                                                                                                 |     
    0x004833fb mov r14, rsi                                                                                                                                                                  |     r14 = rsi;
    0x004833fe mov byte [rdi], 0                                                                                                                                                             |     *(rdi) = 0;
    0x00483401 mov rbx, qword [rdi + 8]                                                                                                                                                      |     rbx = *((rdi + 8));
    0x00483405 mov r12, qword [rdi + 0x20]                                                                                                                                                   |     r12 = *((rdi + 0x20));
    0x00483409 cmp byte [rbx + 8], 0                                                                                                                                                         |     
                                                                                                                                                                                             |     if (*((rbx + 8)) != 0) {
    0x0048340d je 0x483439                                                                                                                                                                   |         
    0x0048340f mov rax, qword [rbx + 0x18]                                                                                                                                                   |         rax = *((rbx + 0x18));
    0x00483413 mov rcx, qword [rbx + 0x38]                                                                                                                                                   |         rcx = *((rbx + 0x38));
    0x00483417 dec rcx                                                                                                                                                                       |         rcx--;
    0x0048341a mov rdx, rcx                                                                                                                                                                  |         rdx = rcx;
    0x0048341d shr rdx, 6                                                                                                                                                                    |         rdx >>= 6;
    0x00483421 mov rax, qword [rax + rdx*8]                                                                                                                                                  |         rax = *((rax + rdx*8));
    0x00483425 bt rax, rcx                                                                                                                                                                   |         
                                                                                                                                                                                             |         if (((rax >> rcx) & 1) >= 0) {
    0x00483429 jae 0x483439                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                             |         }
    0x0048342b mov rdi, qword [rbx]                                                                                                                                                          |         
    0x0048342e mov esi, dword [rbx + 0xc]                                                                                                                                                    |         
    0x00483431 mov edx, dword [rbx + 0x10]                                                                                                                                                   |         edx = *((rbx + 0x10));
    0x00483434 call 0x4d7f10                                                                                                                                                                 |         BloombergLP::bdlb::Print::indent(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,int,int) (*(rbx), *((rbx + 0xc)));
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_0:
    0x00483439 mov r15, qword [rbx]                                                                                                                                                          |     r15 = *(rbx);
    0x0048343c mov dword [rsp + 8], 3                                                                                                                                                        |     *((rsp + 8)) = 3;
    0x00483444 test r12, r12                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (r12 != 0) {
    0x00483447 je 0x483450                                                                                                                                                                   |         
    0x00483449 mov esi, dword [r12 + 8]                                                                                                                                                      |         esi = *((r12 + 8));
    0x0048344e jmp 0x483455                                                                                                                                                                  |         
                                                                                                                                                                                             |     } else {
    0x00483450 mov esi, 3                                                                                                                                                                    |         
                                                                                                                                                                                             |     }
    0x00483455 lea r12, [rsp + 8]                                                                                                                                                            |     r12 = rsp + 8;
    0x0048345a mov rdi, r12                                                                                                                                                                  |     
    0x0048345d call 0x4ea050                                                                                                                                                                 |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (r12, 3);
    0x00483462 lea rbx, [rsp + 0x20]                                                                                                                                                         |     rbx = rsp + 0x20;
    0x00483467 mov rdi, rbx                                                                                                                                                                  |     
    0x0048346a mov esi, 0x27                                                                                                                                                                 |     
    0x0048346f mov rdx, r14                                                                                                                                                                  |     
    0x00483472 mov rcx, r12                                                                                                                                                                  |     
    0x00483475 call 0x4e7e80                                                                                                                                                                 |     BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::TimeTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rbx, 0x27, r14, r12);
    0x0048347a mov qword [rsp + 0x10], rbx                                                                                                                                                   |     *((rsp + 0x10)) = rbx;
    0x0048347f mov rdi, rbx                                                                                                                                                                  |     
    0x00483482 call 0x405610                                                                                                                                                                 |     rax = strlen (rbx);
    0x00483487 mov qword [rsp + 0x18], rax                                                                                                                                                   |     *((rsp + 0x18)) = rax;
    0x0048348c lea rsi, [rsp + 0x10]                                                                                                                                                         |     
    0x00483491 mov rdi, r15                                                                                                                                                                  |     
    0x00483494 call 0x48ca40                                                                                                                                                                 |     BloombergLP::baljsn::PrintUtil::printString(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&) (r15, rsp + 0x10);
    0x00483499 add rsp, 0x48                                                                                                                                                                 |     
    0x0048349d pop rbx                                                                                                                                                                       |     
    0x0048349e pop r12                                                                                                                                                                       |     
    0x004834a0 pop r14                                                                                                                                                                       |     
    0x004834a2 pop r15                                                                                                                                                                       |     
    0x004834a4 ret                                                                                                                                                                           |     return rax;
                                                                                                                                                                                             | }
