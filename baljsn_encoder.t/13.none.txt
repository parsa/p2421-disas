    ; assembly                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                             | /* baljsn_encoder.t/none @ 0x4d11c0 */
                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice1.makeSelection6_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()        | uint64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice1_makeSelection6_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (int64_t arg2, uint32_t arg1) {
                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                             |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice1::makeSelection6(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x004d11c0 push r14                                                                                                                                                      |     
    0x004d11c2 push rbx                                                                                                                                                      |     
    0x004d11c3 push rax                                                                                                                                                      |     
    0x004d11c4 mov r14, rsi                                                                                                                                                  |     r14 = rsi;
    0x004d11c7 mov rbx, rdi                                                                                                                                                  |     rbx = rdi;
    0x004d11ca cmp dword [rdi + 0x30], 1                                                                                                                                     |     
                                                                                                                                                                             |     if (*((rdi + 0x30)) == 1) {
    0x004d11ce jne 0x4d11e0                                                                                                                                                  |         
    0x004d11d0 mov rdi, rbx                                                                                                                                                  |         
    0x004d11d3 mov rsi, r14                                                                                                                                                  |         
    0x004d11d6 call 0x51c980                                                                                                                                                 |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x004d11db jmp 0x4d12a2                                                                                                                                                  |         
                                                                                                                                                                             |     } else {
    0x004d11e0 mov dword [rbx + 0x30], 0xffffffff                                                                                                                            |         *((rbx + 0x30)) = 0xffffffff;
    0x004d11e7 mov rdi, qword [rbx + 0x38]                                                                                                                                   |         rdi = *((rbx + 0x38));
    0x004d11eb test rdi, rdi                                                                                                                                                 |         
                                                                                                                                                                             |         if (rdi == 0) {
    0x004d11ee jne 0x4d1204                                                                                                                                                  |             
    0x004d11f0 mov rdi, qword [rip + 0x3fbeb1]                                                                                                                               |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004d11f7 test rdi, rdi                                                                                                                                                 |             
                                                                                                                                                                             |             if (rdi != 0) {
    0x004d11fa jne 0x4d1204                                                                                                                                                  |                 goto label_0;
                                                                                                                                                                             |             }
    0x004d11fc call 0x518150                                                                                                                                                 |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004d1201 mov rdi, rax                                                                                                                                                  |             rdi = rax;
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_0:
    0x004d1204 mov rax, qword [r14 + 0x20]                                                                                                                                   |         rax = *((r14 + 0x20));
    0x004d1208 mov qword [rbx + 0x20], rax                                                                                                                                   |         *((rbx + 0x20)) = rax;
    0x004d120c movups xmm0, xmmword [r14]                                                                                                                                    |         __asm ("movups xmm0, xmmword [r14]");
    0x004d1210 movups xmm1, xmmword [r14 + 0x10]                                                                                                                             |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004d1215 movups xmmword [rbx + 0x10], xmm1                                                                                                                             |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004d1219 movups xmmword [rbx], xmm0                                                                                                                                    |         __asm ("movups xmmword [rbx], xmm0");
    0x004d121c mov qword [rbx + 0x28], rdi                                                                                                                                   |         *((rbx + 0x28)) = rdi;
    0x004d1220 cmp rax, 0x17                                                                                                                                                 |         
                                                                                                                                                                             |         if (rax != 0x17) {
    0x004d1224 je 0x4d129b                                                                                                                                                   |             
    0x004d1226 cmp rdi, qword [r14 + 0x28]                                                                                                                                   |             
                                                                                                                                                                             |             if (rdi != *((r14 + 0x28))) {
    0x004d122a je 0x4d1288                                                                                                                                                   |                 
    0x004d122c mov rax, qword [r14 + 0x18]                                                                                                                                   |                 rax = *((r14 + 0x18));
    0x004d1230 cmp rax, 0x17                                                                                                                                                 |                 
    0x004d1234 mov esi, 0x17                                                                                                                                                 |                 esi = 0x17;
                                                                                                                                                                             |                 if (rax > 0x17) {
    0x004d1239 cmova rsi, rax                                                                                                                                                |                     rsi = rax;
                                                                                                                                                                             |                 }
    0x004d123d mov qword [rbx], 0                                                                                                                                            |                 *(rbx) = 0;
    0x004d1244 mov qword [rbx + 0x18], rax                                                                                                                                   |                 *((rbx + 0x18)) = rax;
    0x004d1248 mov qword [rbx + 0x20], rsi                                                                                                                                   |                 *((rbx + 0x20)) = rsi;
    0x004d124c cmp rax, 0x18                                                                                                                                                 |                 
                                                                                                                                                                             |                 if (rax >= 0x18) {
    0x004d1250 jb 0x4d1265                                                                                                                                                   |                     
    0x004d1252 inc rsi                                                                                                                                                       |                     rsi++;
    0x004d1255 mov rax, qword [rdi]                                                                                                                                          |                     rax = *(rdi);
    0x004d1258 call qword [rax + 0x10]                                                                                                                                       |                     rax = uint64_t (*rax + 0x10)() ();
    0x004d125b mov qword [rbx], rax                                                                                                                                          |                     *(rbx) = rax;
    0x004d125e cmp qword [rbx + 0x20], 0x17                                                                                                                                  |                     
                                                                                                                                                                             |                     if (*((rbx + 0x20)) != 0x17) {
    0x004d1263 jne 0x4d1268                                                                                                                                                  |                         goto label_1;
                                                                                                                                                                             |                     }
                                                                                                                                                                             |                 }
    0x004d1265 mov rax, rbx                                                                                                                                                  |                 rax = rbx;
                                                                                                                                                                             | label_1:
    0x004d1268 mov rdx, qword [rbx + 0x18]                                                                                                                                   |                 rdx = *((rbx + 0x18));
    0x004d126c inc rdx                                                                                                                                                       |                 rdx++;
                                                                                                                                                                             |                 if (rdx == 0) {
    0x004d126f je 0x4d129b                                                                                                                                                   |                     goto label_2;
                                                                                                                                                                             |                 }
    0x004d1271 cmp qword [r14 + 0x20], 0x17                                                                                                                                  |                 
                                                                                                                                                                             |                 if (*((r14 + 0x20)) != 0x17) {
    0x004d1276 je 0x4d127b                                                                                                                                                   |                     
    0x004d1278 mov r14, qword [r14]                                                                                                                                          |                     r14 = *(r14);
                                                                                                                                                                             |                 }
    0x004d127b mov rdi, rax                                                                                                                                                  |                 
    0x004d127e mov rsi, r14                                                                                                                                                  |                 
    0x004d1281 call 0x405c20                                                                                                                                                 |                 memcpy (rax, r14, rdx);
    0x004d1286 jmp 0x4d129b                                                                                                                                                  |                 
                                                                                                                                                                             |             } else {
    0x004d1288 mov qword [r14], 0                                                                                                                                            |                 *(r14) = 0;
    0x004d128f movaps xmm0, xmmword [rip + 0x6c39a]                                                                                                                          |                 xmm0 = .comment;
    0x004d1296 movups xmmword [r14 + 0x18], xmm0                                                                                                                             |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                                             |             }
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_2:
    0x004d129b mov dword [rbx + 0x30], 1                                                                                                                                     |         *((rbx + 0x30)) = 1;
                                                                                                                                                                             |     }
    0x004d12a2 mov rax, rbx                                                                                                                                                  |     rax = rbx;
    0x004d12a5 add rsp, 8                                                                                                                                                    |     
    0x004d12a9 pop rbx                                                                                                                                                       |     
    0x004d12aa pop r14                                                                                                                                                       |     
    0x004d12ac ret                                                                                                                                                           |     return rax;
                                                                                                                                                                             | }
