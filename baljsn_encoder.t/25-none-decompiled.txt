    ; assembly                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                             | /* baljsn_encoder.t/none @ 0x4b6810 */
                                                                                                                                             | #include <stdint.h>
                                                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithChoiceChoice.operator_BloombergLP::s_baltst::MySequenceWithChoiceChoice_ ()          | int64_t method_BloombergLP::s_baltst::MySequenceWithChoiceChoice_operator_BloombergLP::s_baltst::MySequenceWithChoiceChoice_ (uint32_t arg2, uint32_t arg1) {
                                                                                                                                             |     rsi = arg2;
                                                                                                                                             |     rdi = arg1;
                                                                                                                                             |     /* BloombergLP::s_baltst::MySequenceWithChoiceChoice::operator=(BloombergLP::s_baltst::MySequenceWithChoiceChoice&&) */
    0x004b6810 mov rax, rdi                                                                                                                  |     rax = rdi;
    0x004b6813 cmp rdi, rsi                                                                                                                  |     
                                                                                                                                             |     if (rdi == rsi) {
    0x004b6816 je 0x4b6825                                                                                                                   |         goto label_0;
                                                                                                                                             |     }
    0x004b6818 cmp dword [rsi + 4], 0                                                                                                        |     
                                                                                                                                             |     if (*((rsi + 4)) == 0) {
    0x004b681c je 0x4b6826                                                                                                                   |         goto label_1;
                                                                                                                                             |     }
    0x004b681e mov dword [rax + 4], 0xffffffff                                                                                               |     *((rax + 4)) = 0xffffffff;
                                                                                                                                             |     do {
                                                                                                                                             | label_0:
    0x004b6825 ret                                                                                                                           |         return rax;
                                                                                                                                             | label_1:
    0x004b6826 mov ecx, dword [rsi]                                                                                                          |         ecx = *(rsi);
    0x004b6828 cmp dword [rax + 4], 0                                                                                                        |         
    0x004b682c mov dword [rax], ecx                                                                                                          |         *(rax) = ecx;
    0x004b682e je 0x4b6825                                                                                                                   |         
                                                                                                                                             |     } while (*((rax + 4)) == 0);
    0x004b6830 mov dword [rax + 4], 0                                                                                                        |     *((rax + 4)) = 0;
    0x004b6837 ret                                                                                                                           |     return rax;
                                                                                                                                             | }
