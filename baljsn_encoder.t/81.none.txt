    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* baljsn_encoder.t/none @ 0x4d0470 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection4_BloombergLP::s_baltst::CustomInt_ ()        | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection4_BloombergLP::s_baltst::CustomInt_ (int64_t arg2, int64_t arg1) {
                                                                                                                                 |     rsi = arg2;
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection4(BloombergLP::s_baltst::CustomInt&&) */
    0x004d0470 push r14                                                                                                          |     
    0x004d0472 push rbx                                                                                                          |     
    0x004d0473 push rax                                                                                                          |     
    0x004d0474 mov r14, rsi                                                                                                      |     r14 = rsi;
    0x004d0477 mov rbx, rdi                                                                                                      |     rbx = rdi;
    0x004d047a mov eax, dword [rdi + 0x170]                                                                                      |     eax = *((rdi + 0x170));
    0x004d0480 test eax, eax                                                                                                     |     
                                                                                                                                 |     if (eax != 0) {
    0x004d0482 je 0x4d0495                                                                                                       |         
    0x004d0484 cmp eax, 2                                                                                                        |         
                                                                                                                                 |         if (eax != 2) {
    0x004d0487 je 0x4d049f                                                                                                       |             
    0x004d0489 cmp eax, 3                                                                                                        |             
                                                                                                                                 |             if (eax != 3) {
    0x004d048c jne 0x4d04bb                                                                                                      |                 goto label_0;
                                                                                                                                 |             }
    0x004d048e mov eax, dword [r14]                                                                                              |             eax = *(r14);
    0x004d0491 mov dword [rbx], eax                                                                                              |             *(rbx) = eax;
    0x004d0493 jmp 0x4d04d4                                                                                                      |             
    0x004d0495 mov rdi, rbx                                                                                                      |             
    0x004d0498 call 0x4c4be0                                                                                                     |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004d049d jmp 0x4d04bb                                                                                                      |             
                                                                                                                                 |         } else {
                                                                                                                                 |         } else {
    0x004d049f cmp qword [rbx + 0x20], 0x17                                                                                      |             
                                                                                                                                 |             if (*((rbx + 0x20)) != 0x17) {
    0x004d04a4 je 0x4d04b3                                                                                                       |                 
    0x004d04a6 mov rsi, qword [rbx]                                                                                              |                 rsi = *(rbx);
    0x004d04a9 mov rdi, qword [rbx + 0x28]                                                                                       |                 rdi = *((rbx + 0x28));
    0x004d04ad mov rax, qword [rdi]                                                                                              |                 rax = *(rdi);
    0x004d04b0 call qword [rax + 0x18]                                                                                           |                 uint64_t (*rax + 0x18)() ();
                                                                                                                                 |             }
    0x004d04b3 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                        |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                 |         }
                                                                                                                                 | label_0:
    0x004d04bb mov dword [rbx + 0x170], 0xffffffff                                                                               |         *((rbx + 0x170)) = 0xffffffff;
    0x004d04c5 mov eax, dword [r14]                                                                                              |         eax = *(r14);
    0x004d04c8 mov dword [rbx], eax                                                                                              |         *(rbx) = eax;
    0x004d04ca mov dword [rbx + 0x170], 3                                                                                        |         *((rbx + 0x170)) = 3;
                                                                                                                                 |     }
    0x004d04d4 mov rax, rbx                                                                                                      |     rax = rbx;
    0x004d04d7 add rsp, 8                                                                                                        |     
    0x004d04db pop rbx                                                                                                           |     
    0x004d04dc pop r14                                                                                                           |     
    0x004d04de ret                                                                                                               |     return rax;
                                                                                                                                 | }
