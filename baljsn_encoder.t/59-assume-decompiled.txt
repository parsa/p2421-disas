    ; assembly                                                                                                   | /* r2dec pseudo code output */
                                                                                                                 | /* baljsn_encoder.t/assume @ 0x4b9790 */
                                                                                                                 | #include <stdint.h>
                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection3_BloombergLP::s_baltst::CustomString_ ()         | uint64_t method_BloombergLP::s_baltst::Choice3_makeSelection3_BloombergLP::s_baltst::CustomString_ (int64_t arg2, int64_t arg1) {
                                                                                                                 |     rsi = arg2;
                                                                                                                 |     rdi = arg1;
                                                                                                                 |     /* BloombergLP::s_baltst::Choice3::makeSelection3(BloombergLP::s_baltst::CustomString&&) */
    0x004b9790 push r14                                                                                          |     
    0x004b9792 push rbx                                                                                          |     
    0x004b9793 push rax                                                                                          |     
    0x004b9794 mov r14, rsi                                                                                      |     r14 = rsi;
    0x004b9797 mov rbx, rdi                                                                                      |     rbx = rdi;
    0x004b979a mov eax, dword [rdi + 0x170]                                                                      |     eax = *((rdi + 0x170));
    0x004b97a0 cmp rax, 3                                                                                        |     
                                                                                                                 |     if (rax <= 3) {
    0x004b97a4 ja 0x4b97b5                                                                                       |         
                                                                                                                 |         /* switch table (4 cases) at 0x648cc0 */
    0x004b97a6 jmp qword [rax*8 + 0x648cc0]                                                                      |         
    0x004b97ad mov rdi, rbx                                                                                      |         
    0x004b97b0 call 0x4c4a50                                                                                     |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                 |     }
    0x004b97b5 mov dword [rbx + 0x170], 0xffffffff                                                               |     *((rbx + 0x170)) = 0xffffffff;
    0x004b97bf mov rdi, qword [rbx + 0x178]                                                                      |     rdi = *((rbx + 0x178));
    0x004b97c6 test rdi, rdi                                                                                     |     
                                                                                                                 |     if (rdi == 0) {
    0x004b97c9 jne 0x4b97df                                                                                      |         
    0x004b97cb mov rdi, qword [rip + 0x4138d6]                                                                   |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004b97d2 test rdi, rdi                                                                                     |         
                                                                                                                 |         if (rdi != 0) {
    0x004b97d5 jne 0x4b97df                                                                                      |             goto label_0;
                                                                                                                 |         }
    0x004b97d7 call 0x517520                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004b97dc mov rdi, rax                                                                                      |         rdi = rax;
                                                                                                                 |     }
                                                                                                                 | label_0:
    0x004b97df mov rax, qword [r14 + 0x20]                                                                       |     rax = *((r14 + 0x20));
    0x004b97e3 mov qword [rbx + 0x20], rax                                                                       |     *((rbx + 0x20)) = rax;
    0x004b97e7 movups xmm0, xmmword [r14]                                                                        |     __asm ("movups xmm0, xmmword [r14]");
    0x004b97eb movups xmm1, xmmword [r14 + 0x10]                                                                 |     __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004b97f0 movups xmmword [rbx + 0x10], xmm1                                                                 |     __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004b97f4 movups xmmword [rbx], xmm0                                                                        |     __asm ("movups xmmword [rbx], xmm0");
    0x004b97f7 mov qword [rbx + 0x28], rdi                                                                       |     *((rbx + 0x28)) = rdi;
    0x004b97fb cmp rax, 0x17                                                                                     |     
                                                                                                                 |     if (rax != 0x17) {
    0x004b97ff je 0x4b9887                                                                                       |         
    0x004b9805 cmp rdi, qword [r14 + 0x28]                                                                       |         
                                                                                                                 |         if (rdi != *((r14 + 0x28))) {
    0x004b9809 je 0x4b9874                                                                                       |             
    0x004b980b mov rax, qword [r14 + 0x18]                                                                       |             rax = *((r14 + 0x18));
    0x004b980f cmp rax, 0x17                                                                                     |             
    0x004b9813 mov esi, 0x17                                                                                     |             esi = 0x17;
                                                                                                                 |             if (rax > 0x17) {
    0x004b9818 cmova rsi, rax                                                                                    |                 rsi = rax;
                                                                                                                 |             }
    0x004b981c mov qword [rbx], 0                                                                                |             *(rbx) = 0;
    0x004b9823 mov qword [rbx + 0x18], rax                                                                       |             *((rbx + 0x18)) = rax;
    0x004b9827 mov qword [rbx + 0x20], rsi                                                                       |             *((rbx + 0x20)) = rsi;
    0x004b982b cmp rax, 0x18                                                                                     |             
                                                                                                                 |             if (rax >= 0x18) {
    0x004b982f jb 0x4b9844                                                                                       |                 
    0x004b9831 inc rsi                                                                                           |                 rsi++;
    0x004b9834 mov rax, qword [rdi]                                                                              |                 rax = *(rdi);
    0x004b9837 call qword [rax + 0x10]                                                                           |                 rax = uint64_t (*rax + 0x10)() ();
    0x004b983a mov qword [rbx], rax                                                                              |                 *(rbx) = rax;
    0x004b983d cmp qword [rbx + 0x20], 0x17                                                                      |                 
                                                                                                                 |                 if (*((rbx + 0x20)) != 0x17) {
    0x004b9842 jne 0x4b9847                                                                                      |                     goto label_1;
                                                                                                                 |                 }
                                                                                                                 |             }
    0x004b9844 mov rax, rbx                                                                                      |             rax = rbx;
                                                                                                                 | label_1:
    0x004b9847 mov rdx, qword [rbx + 0x18]                                                                       |             rdx = *((rbx + 0x18));
    0x004b984b inc rdx                                                                                           |             rdx++;
                                                                                                                 |             if (rdx == 0) {
    0x004b984e je 0x4b9887                                                                                       |                 goto label_2;
                                                                                                                 |             }
    0x004b9850 cmp qword [r14 + 0x20], 0x17                                                                      |             
                                                                                                                 |             if (*((r14 + 0x20)) != 0x17) {
    0x004b9855 je 0x4b985a                                                                                       |                 
    0x004b9857 mov r14, qword [r14]                                                                              |                 r14 = *(r14);
                                                                                                                 |             }
    0x004b985a mov rdi, rax                                                                                      |             
    0x004b985d mov rsi, r14                                                                                      |             
    0x004b9860 call 0x405bd0                                                                                     |             memcpy (rax, r14, rdx);
    0x004b9865 jmp 0x4b9887                                                                                      |             goto label_2;
    0x004b9867 mov rdi, rbx                                                                                      |             
    0x004b986a mov rsi, r14                                                                                      |             
    0x004b986d call 0x51bd40                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x004b9872 jmp 0x4b9891                                                                                      |             goto label_3;
                                                                                                                 |         }
    0x004b9874 mov qword [r14], 0                                                                                |         *(r14) = 0;
    0x004b987b movaps xmm0, xmmword [rip + 0x8318e]                                                              |         xmm0 = .comment;
    0x004b9882 movups xmmword [r14 + 0x18], xmm0                                                                 |         __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                 |     }
                                                                                                                 | label_2:
    0x004b9887 mov dword [rbx + 0x170], 2                                                                        |     *((rbx + 0x170)) = 2;
                                                                                                                 | label_3:
    0x004b9891 mov rax, rbx                                                                                      |     rax = rbx;
    0x004b9894 add rsp, 8                                                                                        |     
    0x004b9898 pop rbx                                                                                           |     
    0x004b9899 pop r14                                                                                           |     
    0x004b989b ret                                                                                               |     return rax;
                                                                                                                 | }
