    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* baljsn_encoder.t/assume @ 0x4b67b0 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithChoice.operator_BloombergLP::s_baltst::MySequenceWithChoice_ ()          | int64_t method_BloombergLP::s_baltst::MySequenceWithChoice_operator_BloombergLP::s_baltst::MySequenceWithChoice_ (uint32_t arg2, uint32_t arg1) {
                                                                                                                                 |     rsi = arg2;
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::s_baltst::MySequenceWithChoice::operator=(BloombergLP::s_baltst::MySequenceWithChoice&&) */
    0x004b67b0 mov rax, rdi                                                                                                      |     rax = rdi;
    0x004b67b3 cmp rdi, rsi                                                                                                      |     
                                                                                                                                 |     if (rdi != rsi) {
    0x004b67b6 je 0x4b67c9                                                                                                       |         
    0x004b67b8 cmp dword [rsi + 4], 0                                                                                            |         
                                                                                                                                 |         if (*((rsi + 4)) == 0) {
    0x004b67bc je 0x4b67ca                                                                                                       |             goto label_0;
                                                                                                                                 |         }
    0x004b67be cmp dword [rax + 4], 0                                                                                            |         
    0x004b67c2 mov dword [rax + 4], 0xffffffff                                                                                   |         *((rax + 4)) = 0xffffffff;
                                                                                                                                 |     }
    0x004b67c9 ret                                                                                                               |     return rax;
                                                                                                                                 | label_0:
    0x004b67ca mov ecx, dword [rsi]                                                                                              |     ecx = *(rsi);
    0x004b67cc cmp dword [rax + 4], 0                                                                                            |     
                                                                                                                                 |     if (*((rax + 4)) != 0) {
    0x004b67d0 je 0x4b67dc                                                                                                       |         
    0x004b67d2 mov dword [rax], ecx                                                                                              |         *(rax) = ecx;
    0x004b67d4 mov dword [rax + 4], 0                                                                                            |         *((rax + 4)) = 0;
    0x004b67db ret                                                                                                               |         return rax;
                                                                                                                                 |     }
    0x004b67dc mov dword [rax], ecx                                                                                              |     *(rax) = ecx;
    0x004b67de ret                                                                                                               |     return rax;
                                                                                                                                 | }
