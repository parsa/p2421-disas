    ; assembly                                                                                       | /* r2dec pseudo code output */
                                                                                                     | /* baljsn_encoder.t/none @ 0x4d04f0 */
                                                                                                     | #include <stdint.h>
                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection_int_ ()          | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection_int_ (uint32_t arg2, int64_t arg1) {
                                                                                                     |     rsi = arg2;
                                                                                                     |     rdi = arg1;
                                                                                                     |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection(int) */
    0x004d04f0 push r14                                                                              |     
    0x004d04f2 push rbx                                                                              |     
    0x004d04f3 push rax                                                                              |     
    0x004d04f4 inc esi                                                                               |     esi++;
    0x004d04f6 cmp esi, 4                                                                            |     
                                                                                                     |     if (esi <= 4) {
    0x004d04f9 ja 0x4d0557                                                                           |         
    0x004d04fb mov r14, rdi                                                                          |         r14 = rdi;
                                                                                                     |         /* switch table (5 cases) at 0x649f20 */
    0x004d04fe jmp qword [rsi*8 + 0x649f20]                                                          |         
    0x004d0505 mov eax, dword [r14 + 0x170]                                                          |         eax = *((r14 + 0x170));
    0x004d050c cmp eax, 2                                                                            |         
                                                                                                     |         if (eax != 2) {
    0x004d050f je 0x4d05e0                                                                           |             
    0x004d0515 test eax, eax                                                                         |             
                                                                                                     |             if (eax != 0) {
    0x004d0517 jne 0x4d05fc                                                                          |                 goto label_0;
                                                                                                     |             }
    0x004d051d mov rdi, r14                                                                          |             
    0x004d0520 call 0x4c4be0                                                                         |             BloombergLP::s_baltst::Sequence6::~Sequence6() (r14);
    0x004d0525 jmp 0x4d05fc                                                                          |             goto label_0;
    0x004d052a mov eax, dword [r14 + 0x170]                                                          |             eax = *((r14 + 0x170));
    0x004d0531 test eax, eax                                                                         |             
                                                                                                     |             if (eax == 0) {
    0x004d0533 je 0x4d06aa                                                                           |                 goto label_1;
                                                                                                     |             }
    0x004d0539 cmp eax, 2                                                                            |             
                                                                                                     |             if (eax == 2) {
    0x004d053c je 0x4d06b4                                                                           |                 goto label_2;
                                                                                                     |             }
    0x004d0542 cmp eax, 3                                                                            |             
                                                                                                     |             if (eax != 3) {
    0x004d0545 jne 0x4d06d0                                                                          |                 goto label_3;
                                                                                                     |             }
    0x004d054b mov dword [r14], 0                                                                    |             *(r14) = 0;
    0x004d0552 jmp 0x4d0719                                                                          |             
                                                                                                     |         } else {
    0x004d0557 mov ebx, 0xffffffff                                                                   |             ebx = 0xffffffff;
    0x004d055c jmp 0x4d071b                                                                          |             goto label_4;
    0x004d0561 mov eax, dword [r14 + 0x170]                                                          |             eax = *((r14 + 0x170));
    0x004d0568 cmp eax, 2                                                                            |             
                                                                                                     |             if (eax == 2) {
    0x004d056b je 0x4d060c                                                                           |                 goto label_5;
                                                                                                     |             }
    0x004d0571 test eax, eax                                                                         |             
                                                                                                     |             if (eax != 0) {
    0x004d0573 jne 0x4d0628                                                                          |                 goto label_6;
                                                                                                     |             }
    0x004d0579 mov rdi, r14                                                                          |             
    0x004d057c call 0x4c4d80                                                                         |             BloombergLP::s_baltst::Sequence6::reset() (r14);
    0x004d0581 jmp 0x4d0719                                                                          |             goto label_7;
    0x004d0586 mov eax, dword [r14 + 0x170]                                                          |             eax = *((r14 + 0x170));
    0x004d058d test eax, eax                                                                         |             
                                                                                                     |             if (eax == 0) {
    0x004d058f je 0x4d06e4                                                                           |                 goto label_8;
                                                                                                     |             }
    0x004d0595 cmp eax, 2                                                                            |             
                                                                                                     |             if (eax == 2) {
    0x004d0598 je 0x4d06ee                                                                           |                 goto label_9;
                                                                                                     |             }
    0x004d059e cmp eax, 1                                                                            |             
                                                                                                     |             if (eax != 1) {
    0x004d05a1 jne 0x4d070a                                                                          |                 goto label_10;
                                                                                                     |             }
    0x004d05a7 mov byte [r14], 0                                                                     |             *(r14) = 0;
    0x004d05ab jmp 0x4d0719                                                                          |             goto label_7;
    0x004d05b0 mov eax, dword [r14 + 0x170]                                                          |             eax = *((r14 + 0x170));
    0x004d05b7 test eax, eax                                                                         |             
                                                                                                     |             if (eax == 0) {
    0x004d05b9 je 0x4d0652                                                                           |                 goto label_11;
                                                                                                     |             }
    0x004d05bf cmp eax, 2                                                                            |             
                                                                                                     |             if (eax != 2) {
    0x004d05c2 jne 0x4d065a                                                                          |                 goto label_12;
                                                                                                     |             }
    0x004d05c8 xor ebx, ebx                                                                          |             ebx = 0;
    0x004d05ca mov rdi, r14                                                                          |             
    0x004d05cd xor esi, esi                                                                          |             
    0x004d05cf mov rdx, 0xffffffffffffffff                                                           |             
    0x004d05d6 call 0x51d460                                                                         |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::erase(unsigned long,unsigned long) (r14, 0, 0xffffffffffffffff);
    0x004d05db jmp 0x4d071b                                                                          |             goto label_4;
                                                                                                     |         }
    0x004d05e0 cmp qword [r14 + 0x20], 0x17                                                          |         
                                                                                                     |         if (*((r14 + 0x20)) != 0x17) {
    0x004d05e5 je 0x4d05f4                                                                           |             
    0x004d05e7 mov rsi, qword [r14]                                                                  |             rsi = *(r14);
    0x004d05ea mov rdi, qword [r14 + 0x28]                                                           |             rdi = *((r14 + 0x28));
    0x004d05ee mov rax, qword [rdi]                                                                  |             rax = *(rdi);
    0x004d05f1 call qword [rax + 0x18]                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                     |         }
    0x004d05f4 mov qword [r14 + 0x18], 0xffffffffffffffff                                            |         *((r14 + 0x18)) = 0xffffffffffffffff;
                                                                                                     | label_0:
    0x004d05fc mov dword [r14 + 0x170], 0xffffffff                                                   |         *((r14 + 0x170)) = 0xffffffff;
    0x004d0607 jmp 0x4d0719                                                                          |         goto label_7;
                                                                                                     | label_5:
    0x004d060c cmp qword [r14 + 0x20], 0x17                                                          |         
                                                                                                     |         if (*((r14 + 0x20)) != 0x17) {
    0x004d0611 je 0x4d0620                                                                           |             
    0x004d0613 mov rsi, qword [r14]                                                                  |             rsi = *(r14);
    0x004d0616 mov rdi, qword [r14 + 0x28]                                                           |             rdi = *((r14 + 0x28));
    0x004d061a mov rax, qword [rdi]                                                                  |             rax = *(rdi);
    0x004d061d call qword [rax + 0x18]                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                     |         }
    0x004d0620 mov qword [r14 + 0x18], 0xffffffffffffffff                                            |         *((r14 + 0x18)) = 0xffffffffffffffff;
                                                                                                     | label_6:
    0x004d0628 mov dword [r14 + 0x170], 0xffffffff                                                   |         *((r14 + 0x170)) = 0xffffffff;
    0x004d0633 mov rsi, qword [r14 + 0x178]                                                          |         
    0x004d063a mov rdi, r14                                                                          |         
    0x004d063d call 0x4c32d0                                                                         |         BloombergLP::s_baltst::Sequence6::Sequence6(BloombergLP::bslma::Allocator*) (r14, *((r14 + 0x178)));
    0x004d0642 mov dword [r14 + 0x170], 0                                                            |         *((r14 + 0x170)) = 0;
    0x004d064d jmp 0x4d0719                                                                          |         goto label_7;
                                                                                                     | label_11:
    0x004d0652 mov rdi, r14                                                                          |         
    0x004d0655 call 0x4c4be0                                                                         |         BloombergLP::s_baltst::Sequence6::~Sequence6() (r14);
                                                                                                     | label_12:
    0x004d065a mov dword [r14 + 0x170], 0xffffffff                                                   |         *((r14 + 0x170)) = 0xffffffff;
    0x004d0665 mov rax, qword [r14 + 0x178]                                                          |         rax = *((r14 + 0x178));
    0x004d066c test rax, rax                                                                         |         
                                                                                                     |         if (rax == 0) {
    0x004d066f jne 0x4d0682                                                                          |             
    0x004d0671 mov rax, qword [rip + 0x3fca30]                                                       |             rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004d0678 test rax, rax                                                                         |             
                                                                                                     |             if (rax != 0) {
    0x004d067b jne 0x4d0682                                                                          |                 goto label_13;
                                                                                                     |             }
    0x004d067d call 0x518150                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
                                                                                                     |         }
                                                                                                     | label_13:
    0x004d0682 mov qword [r14], 0                                                                    |         *(r14) = 0;
    0x004d0689 movaps xmm0, xmmword [rip + 0x6cfa0]                                                  |         xmm0 = .comment;
    0x004d0690 movups xmmword [r14 + 0x18], xmm0                                                     |         __asm ("movups xmmword [r14 + 0x18], xmm0");
    0x004d0695 mov qword [r14 + 0x28], rax                                                           |         *((r14 + 0x28)) = rax;
    0x004d0699 mov byte [r14], 0                                                                     |         *(r14) = 0;
    0x004d069d mov dword [r14 + 0x170], 2                                                            |         *((r14 + 0x170)) = 2;
    0x004d06a8 jmp 0x4d0719                                                                          |         goto label_7;
                                                                                                     | label_1:
    0x004d06aa mov rdi, r14                                                                          |         
    0x004d06ad call 0x4c4be0                                                                         |         BloombergLP::s_baltst::Sequence6::~Sequence6() (r14);
    0x004d06b2 jmp 0x4d06d0                                                                          |         goto label_3;
                                                                                                     | label_2:
    0x004d06b4 cmp qword [r14 + 0x20], 0x17                                                          |         
                                                                                                     |         if (*((r14 + 0x20)) != 0x17) {
    0x004d06b9 je 0x4d06c8                                                                           |             
    0x004d06bb mov rsi, qword [r14]                                                                  |             rsi = *(r14);
    0x004d06be mov rdi, qword [r14 + 0x28]                                                           |             rdi = *((r14 + 0x28));
    0x004d06c2 mov rax, qword [rdi]                                                                  |             rax = *(rdi);
    0x004d06c5 call qword [rax + 0x18]                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                     |         }
    0x004d06c8 mov qword [r14 + 0x18], 0xffffffffffffffff                                            |         *((r14 + 0x18)) = 0xffffffffffffffff;
                                                                                                     | label_3:
    0x004d06d0 mov dword [r14], 0                                                                    |         *(r14) = 0;
    0x004d06d7 mov dword [r14 + 0x170], 3                                                            |         *((r14 + 0x170)) = 3;
    0x004d06e2 jmp 0x4d0719                                                                          |         goto label_7;
                                                                                                     | label_8:
    0x004d06e4 mov rdi, r14                                                                          |         
    0x004d06e7 call 0x4c4be0                                                                         |         BloombergLP::s_baltst::Sequence6::~Sequence6() (r14);
    0x004d06ec jmp 0x4d070a                                                                          |         goto label_10;
                                                                                                     | label_9:
    0x004d06ee cmp qword [r14 + 0x20], 0x17                                                          |         
                                                                                                     |         if (*((r14 + 0x20)) != 0x17) {
    0x004d06f3 je 0x4d0702                                                                           |             
    0x004d06f5 mov rsi, qword [r14]                                                                  |             rsi = *(r14);
    0x004d06f8 mov rdi, qword [r14 + 0x28]                                                           |             rdi = *((r14 + 0x28));
    0x004d06fc mov rax, qword [rdi]                                                                  |             rax = *(rdi);
    0x004d06ff call qword [rax + 0x18]                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                     |         }
    0x004d0702 mov qword [r14 + 0x18], 0xffffffffffffffff                                            |         *((r14 + 0x18)) = 0xffffffffffffffff;
                                                                                                     | label_10:
    0x004d070a mov byte [r14], 0                                                                     |         *(r14) = 0;
    0x004d070e mov dword [r14 + 0x170], 1                                                            |         *((r14 + 0x170)) = 1;
                                                                                                     |     }
                                                                                                     | label_7:
    0x004d0719 xor ebx, ebx                                                                          |     ebx = 0;
                                                                                                     | label_4:
    0x004d071b mov eax, ebx                                                                          |     eax = ebx;
    0x004d071d add rsp, 8                                                                            |     
    0x004d0721 pop rbx                                                                               |     
    0x004d0722 pop r14                                                                               |     
    0x004d0724 ret                                                                                   |     return rax;
                                                                                                     | }
