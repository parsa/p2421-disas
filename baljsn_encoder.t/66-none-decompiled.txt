    ; assembly                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                             | /* baljsn_encoder.t/none @ 0x461f20 */
                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::balxml::Decoder_ParseObject::executeImp_BloombergLP::s_baltst.SequenceWithAnonymityChoice2__BloombergLP::s_baltst::SequenceWithAnonymityChoice2__int__BloombergLP::bdlat_TypeCategory::Choice_ ()        | int64_t method_int_BloombergLP::balxml::Decoder_ParseObject::executeImp_BloombergLP::s_baltst_SequenceWithAnonymityChoice2_BloombergLP::s_baltst::SequenceWithAnonymityChoice2_int_BloombergLP::bdlat_TypeCategory::Choice_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                                             |     int64_t var_20h;
                                                                                                                                                                                                                                             |     int64_t var_28h;
                                                                                                                                                                                                                                             |     int64_t var_38h;
                                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                                             |     uint32_t var_48h;
                                                                                                                                                                                                                                             |     int64_t var_50h;
                                                                                                                                                                                                                                             |     int64_t var_f0h;
                                                                                                                                                                                                                                             |     int64_t var_f8h;
                                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                             |     /* int BloombergLP::balxml::Decoder_ParseObject::executeImp<BloombergLP::s_baltst::SequenceWithAnonymityChoice2>(BloombergLP::s_baltst::SequenceWithAnonymityChoice2*, int, BloombergLP::bdlat_TypeCategory::Choice) */
    0x00461f20 push rbp                                                                                                                                                                                                                      |     
    0x00461f21 push r14                                                                                                                                                                                                                      |     
    0x00461f23 push rbx                                                                                                                                                                                                                      |     
    0x00461f24 sub rsp, 0x100                                                                                                                                                                                                                |     
    0x00461f2b mov r14, rsi                                                                                                                                                                                                                  |     r14 = rsi;
    0x00461f2e mov rbx, rdi                                                                                                                                                                                                                  |     rbx = rdi;
    0x00461f31 test edx, 0x10000                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                             |     if ((edx & 0x10000) == 0) {
    0x00461f37 jne 0x461f85                                                                                                                                                                                                                  |         
    0x00461f39 mov qword [rsp + 8], 0x54aad8                                                                                                                                                                                                 |         *((rsp + 8)) = vtable.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::SequenceWithAnonymityChoice2_.0;
    0x00461f42 mov byte [rsp + 0x10], 0                                                                                                                                                                                                      |         *((rsp + 0x10)) = 0;
    0x00461f47 mov qword [rsp + 0x18], r14                                                                                                                                                                                                   |         *((rsp + 0x18)) = r14;
    0x00461f4c mov byte [rsp + 0x20], 0                                                                                                                                                                                                      |         *((rsp + 0x20)) = 0;
    0x00461f51 mov qword [rsp + 0x28], 0                                                                                                                                                                                                     |         *((rsp + 0x28)) = 0;
    0x00461f5a movaps xmm0, xmmword [rip + 0xdb6cf]                                                                                                                                                                                          |         xmm0 = .comment;
    0x00461f61 movups xmmword [rsp + 0x40], xmm0                                                                                                                                                                                             |         __asm ("movups xmmword [rsp + 0x40], xmm0");
    0x00461f66 mov rax, qword [rip + 0x46b13b]                                                                                                                                                                                               |         rax = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00461f6d test rax, rax                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                             |         if (rax != 0) {
    0x00461f70 je 0x462066                                                                                                                                                                                                                   |             
    0x00461f76 mov qword [rsp + 0x50], rax                                                                                                                                                                                                   |             *((rsp + 0x50)) = rax;
    0x00461f7b lea rcx, [rsp + 0x28]                                                                                                                                                                                                         |             rcx = rsp + 0x28;
    0x00461f80 jmp 0x4620df                                                                                                                                                                                                                  |             
                                                                                                                                                                                                                                             |         } else {
    0x00461f85 mov rax, qword [rbx]                                                                                                                                                                                                          |             rax = *(rbx);
    0x00461f88 mov rax, qword [rax]                                                                                                                                                                                                          |             rax = *(rax);
    0x00461f8b cmp byte [rax + 8], 0                                                                                                                                                                                                         |             
                                                                                                                                                                                                                                             |             if (*((rax + 8)) != 0) {
    0x00461f8f je 0x461fa6                                                                                                                                                                                                                   |                 
    0x00461f91 mov rdi, qword [rbx + 8]                                                                                                                                                                                                      |                 
    0x00461f95 mov esi, dword [rbx + 0x10]                                                                                                                                                                                                   |                 
    0x00461f98 call 0x4d1650                                                                                                                                                                                                                 |                 rax = BloombergLP::s_baltst::SequenceWithAnonymityChoice2::lookupSelectionInfo(char const*,int) (*((rbx + 8)), *((rbx + 0x10)));
    0x00461f9d test rax, rax                                                                                                                                                                                                                 |                 
                                                                                                                                                                                                                                             |                 if (rax == 0) {
    0x00461fa0 je 0x4620b5                                                                                                                                                                                                                   |                     goto label_0;
                                                                                                                                                                                                                                             |                 }
                                                                                                                                                                                                                                             |             }
    0x00461fa6 mov rsi, qword [rbx + 8]                                                                                                                                                                                                      |             
    0x00461faa mov edx, dword [rbx + 0x10]                                                                                                                                                                                                   |             
    0x00461fad mov rdi, r14                                                                                                                                                                                                                  |             
    0x00461fb0 call 0x4d2010                                                                                                                                                                                                                 |             eax = BloombergLP::s_baltst::SequenceWithAnonymityChoice2::makeSelection(char const*,int) (r14, *((rbx + 8)), *((rbx + 0x10)));
    0x00461fb5 test eax, eax                                                                                                                                                                                                                 |             
                                                                                                                                                                                                                                             |             if (eax == 0) {
    0x00461fb7 je 0x46207f                                                                                                                                                                                                                   |                 goto label_1;
                                                                                                                                                                                                                                             |             }
    0x00461fbd mov rbp, qword [rbx]                                                                                                                                                                                                          |             rbp = *(rbx);
    0x00461fc0 mov rsi, qword [rbp + 0x2d0]                                                                                                                                                                                                  |             
    0x00461fc7 lea r14, [rsp + 8]                                                                                                                                                                                                            |             r14 = rsp + 8;
    0x00461fcc mov rdi, r14                                                                                                                                                                                                                  |             
    0x00461fcf call 0x429810                                                                                                                                                                                                                 |             BloombergLP::balxml::Decoder::MemOutStream::MemOutStream(BloombergLP::bslma::Allocator*) (r14, *((rbp + 0x2d0)));
    0x00461fd4 mov dword [rsp + 0xf0], 2                                                                                                                                                                                                     |             *((rsp + 0xf0)) = 2;
    0x00461fdf mov qword [rsp + 0xf8], rbp                                                                                                                                                                                                   |             *((rsp + 0xf8)) = rbp;
    0x00461fe7 mov esi, 0x543ef8                                                                                                                                                                                                             |             
    0x00461fec mov edx, 0x1b                                                                                                                                                                                                                 |             
    0x00461ff1 mov rdi, r14                                                                                                                                                                                                                  |             
    0x00461ff4 call 0x428ba0                                                                                                                                                                                                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (r14, "Unable to make selection: \", 0x1b);
    0x00461ff9 mov rbp, rax                                                                                                                                                                                                                  |             
    0x00461ffc mov rbx, qword [rbx + 8]                                                                                                                                                                                                      |             rbx = *((rbx + 8));
    0x00462000 mov rdi, rbx                                                                                                                                                                                                                  |             
    0x00462003 call 0x405610                                                                                                                                                                                                                 |             rax = strlen (*((rbx + 8)));
    0x00462008 mov rdi, rbp                                                                                                                                                                                                                  |             
    0x0046200b mov rsi, rbx                                                                                                                                                                                                                  |             
    0x0046200e mov rdx, rax                                                                                                                                                                                                                  |             
    0x00462011 call 0x428ba0                                                                                                                                                                                                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rbp, rbx, rax);
    0x00462016 mov esi, 0x543f14                                                                                                                                                                                                             |             
    0x0046201b mov edx, 2                                                                                                                                                                                                                    |             
    0x00462020 mov rdi, rax                                                                                                                                                                                                                  |             
    0x00462023 call 0x428ba0                                                                                                                                                                                                                 |             rax = std::_1::basic_ostream<char,std::_1::char_traits<char>>&std::_1::_put_character_sequence<char,std::_1::char_traits<char>>(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,char const*,unsigned long) (rax, 0x543f14, 2);
    0x00462028 mov rdi, rax                                                                                                                                                                                                                  |             rdi = rax;
    0x0046202b call 0x4058f0                                                                                                                                                                                                                 |             std::_1::basic_ostream<char,std::_1::char_traits<char>>::flush() ();
    0x00462030 mov rdi, qword [rsp + 0xf8]                                                                                                                                                                                                   |             
    0x00462038 mov esi, dword [rsp + 0xf0]                                                                                                                                                                                                   |             
    0x0046203f mov rdx, qword [rsp + 0x38]                                                                                                                                                                                                   |             
    0x00462044 mov eax, dword [rsp + 0x40]                                                                                                                                                                                                   |             eax = *((rsp + 0x40));
    0x00462048 sub eax, edx                                                                                                                                                                                                                  |             eax -= edx;
    0x0046204a movsxd rcx, eax                                                                                                                                                                                                               |             rcx = (int64_t) eax;
    0x0046204d call 0x4a5470                                                                                                                                                                                                                 |             BloombergLP::balxml::Decoder::setDecoderError(BloombergLP::balxml::ErrorInfo::Severity,std::_1::basic_string_view<char,std::_1::char_traits<char>>) (*((rsp + 0xf8)), *((rsp + 0xf0)), *((rsp + 0x38)), rcx);
    0x00462052 lea rdi, [rsp + 8]                                                                                                                                                                                                            |             
    0x00462057 call 0x4a4a30                                                                                                                                                                                                                 |             BloombergLP::balxml::Decoder::MemOutStream::~MemOutStream() (rsp + 8);
    0x0046205c mov ebp, 0xffffffff                                                                                                                                                                                                           |             
    0x00462061 jmp 0x462125                                                                                                                                                                                                                  |             goto label_2;
                                                                                                                                                                                                                                             |         }
    0x00462066 call 0x518150                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0046206b cmp qword [rsp + 0x48], 0x17                                                                                                                                                                                                  |         
    0x00462071 mov qword [rsp + 0x50], rax                                                                                                                                                                                                   |         *((rsp + 0x50)) = rax;
                                                                                                                                                                                                                                             |         if (*((rsp + 0x48)) == 0x17) {
    0x00462076 jne 0x4620da                                                                                                                                                                                                                  |             
    0x00462078 lea rcx, [rsp + 0x28]                                                                                                                                                                                                         |             rcx = rsp + 0x28;
    0x0046207d jmp 0x4620df                                                                                                                                                                                                                  |             goto label_3;
                                                                                                                                                                                                                                             | label_1:
    0x0046207f mov eax, dword [r14 + 8]                                                                                                                                                                                                      |             eax = *((r14 + 8));
    0x00462083 cmp eax, 1                                                                                                                                                                                                                    |             
                                                                                                                                                                                                                                             |             if (eax == 1) {
    0x00462086 je 0x462133                                                                                                                                                                                                                   |                 goto label_4;
                                                                                                                                                                                                                                             |             }
    0x0046208c mov ebp, 0xffffffff                                                                                                                                                                                                           |             
    0x00462091 test eax, eax                                                                                                                                                                                                                 |             
                                                                                                                                                                                                                                             |             if (eax != 0) {
    0x00462093 jne 0x462125                                                                                                                                                                                                                  |                 goto label_2;
                                                                                                                                                                                                                                             |             }
    0x00462099 mov rsi, qword [r14]                                                                                                                                                                                                          |             rsi = *(r14);
    0x0046209c mov edx, dword [rip + 0x1e807e]                                                                                                                                                                                               |             edx = .comment;
    0x004620a2 mov rdi, rbx                                                                                                                                                                                                                  |             rdi = rbx;
    0x004620a5 add rsp, 0x100                                                                                                                                                                                                                |             
    0x004620ac pop rbx                                                                                                                                                                                                                       |             
    0x004620ad pop r14                                                                                                                                                                                                                       |             
    0x004620af pop rbp                                                                                                                                                                                                                       |             
    0x004620b0 jmp 0x438c30                                                                                                                                                                                                                  |             void (*0x438c30)() ();
                                                                                                                                                                                                                                             | label_0:
    0x004620b5 mov rax, qword [rbx]                                                                                                                                                                                                          |             rax = *(rbx);
    0x004620b8 inc dword [rax + 0x410]                                                                                                                                                                                                       |             *((rax + 0x410))++;
    0x004620be lea rbp, [rsp + 8]                                                                                                                                                                                                            |             rbp = rsp + 8;
    0x004620c3 mov rdi, rbp                                                                                                                                                                                                                  |             rdi = rbp;
    0x004620c6 call 0x4a5870                                                                                                                                                                                                                 |             BloombergLP::balxml::Decoder_UnknownElementContext::Decoder_UnknownElementContext() ();
    0x004620cb mov rsi, qword [rbx]                                                                                                                                                                                                          |             
    0x004620ce mov rdi, rbp                                                                                                                                                                                                                  |             
    0x004620d1 call 0x4a43a0                                                                                                                                                                                                                 |             eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rbp, *(rbx));
    0x004620d6 mov ebp, eax                                                                                                                                                                                                                  |             
    0x004620d8 jmp 0x46211b                                                                                                                                                                                                                  |             goto label_5;
                                                                                                                                                                                                                                             |         }
    0x004620da mov rcx, qword [rsp + 0x28]                                                                                                                                                                                                   |         rcx = *((rsp + 0x28));
                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                             | label_3:
    0x004620df mov byte [rcx], 0                                                                                                                                                                                                             |     *(rcx) = 0;
    0x004620e2 mov rsi, qword [rbx]                                                                                                                                                                                                          |     
    0x004620e5 lea rdi, [rsp + 8]                                                                                                                                                                                                            |     
    0x004620ea call 0x4a43a0                                                                                                                                                                                                                 |     eax = BloombergLP::balxml::Decoder_ElementContext::beginParse(BloombergLP::balxml::Decoder*) (rsp + 8, *(rbx));
    0x004620ef mov ebp, eax                                                                                                                                                                                                                  |     
    0x004620f1 mov qword [rsp + 8], 0x54aad8                                                                                                                                                                                                 |     *((rsp + 8)) = vtable.BloombergLP::balxml::Decoder_ChoiceContext_BloombergLP::s_baltst::SequenceWithAnonymityChoice2_.0;
    0x004620fa cmp qword [rsp + 0x48], 0x17                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                             |     if (*((rsp + 0x48)) != 0x17) {
    0x00462100 je 0x462112                                                                                                                                                                                                                   |         
    0x00462102 mov rsi, qword [rsp + 0x28]                                                                                                                                                                                                   |         rsi = *((rsp + 0x28));
    0x00462107 mov rdi, qword [rsp + 0x50]                                                                                                                                                                                                   |         rdi = *((rsp + 0x50));
    0x0046210c mov rax, qword [rdi]                                                                                                                                                                                                          |         rax = *(rdi);
    0x0046210f call qword [rax + 0x18]                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                             |     }
    0x00462112 mov qword [rsp + 0x40], 0xffffffffffffffff                                                                                                                                                                                    |     *((rsp + 0x40)) = 0xffffffffffffffff;
                                                                                                                                                                                                                                             | label_5:
    0x0046211b lea rdi, [rsp + 8]                                                                                                                                                                                                            |     rdi = rsp + 8;
    0x00462120 call 0x4a5ca0                                                                                                                                                                                                                 |     BloombergLP::balxml::Decoder_ElementContext::~Decoder_ElementContext() ();
                                                                                                                                                                                                                                             | label_2:
    0x00462125 mov eax, ebp                                                                                                                                                                                                                  |     eax = ebp;
    0x00462127 add rsp, 0x100                                                                                                                                                                                                                |     
    0x0046212e pop rbx                                                                                                                                                                                                                       |     
    0x0046212f pop r14                                                                                                                                                                                                                       |     
    0x00462131 pop rbp                                                                                                                                                                                                                       |     
    0x00462132 ret                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                             | label_4:
    0x00462133 mov rsi, qword [r14]                                                                                                                                                                                                          |     rsi = *(r14);
    0x00462136 mov edx, dword [rip + 0x1e800c]                                                                                                                                                                                               |     edx = .comment;
    0x0046213c mov rdi, rbx                                                                                                                                                                                                                  |     rdi = rbx;
    0x0046213f add rsp, 0x100                                                                                                                                                                                                                |     
    0x00462146 pop rbx                                                                                                                                                                                                                       |     
    0x00462147 pop r14                                                                                                                                                                                                                       |     
    0x00462149 pop rbp                                                                                                                                                                                                                       |     
    0x0046214a jmp 0x455190                                                                                                                                                                                                                  |     return void (*0x455190)() ();
                                                                                                                                                                                                                                             | }
