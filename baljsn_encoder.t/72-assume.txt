    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* baljsn_encoder.t/assume @ 0x4c5580 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.bsl::vector_BloombergLP::s_baltst::Choice3__bsl::allocator_BloombergLP::s_baltst::Choice3___.vector__ ()          | int64_t method_bsl::vector_BloombergLP::s_baltst::Choice3_bsl::allocator_BloombergLP::s_baltst::Choice3_vector_ (int64_t arg1) {
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* bsl::vector<BloombergLP::s_baltst::Choice3, bsl::allocator<BloombergLP::s_baltst::Choice3> >::~vector() */
    0x004c5580 push r15                                                                                                              |     
    0x004c5582 push r14                                                                                                              |     
    0x004c5584 push rbx                                                                                                              |     
    0x004c5585 mov rbx, qword [rdi]                                                                                                  |     rbx = *(rdi);
    0x004c5588 test rbx, rbx                                                                                                         |     
                                                                                                                                     |     if (rbx == 0) {
    0x004c558b je 0x4c55ff                                                                                                           |         goto label_1;
                                                                                                                                     |     }
    0x004c558d mov r14, rdi                                                                                                          |     r14 = rdi;
    0x004c5590 mov r15, qword [rdi + 8]                                                                                              |     r15 = *((rdi + 8));
    0x004c5594 cmp rbx, r15                                                                                                          |     
                                                                                                                                     |     if (rbx != r15) {
    0x004c5597 jne 0x4c55be                                                                                                          |         goto label_2;
                                                                                                                                     |     }
    0x004c5599 jmp 0x4c55f2                                                                                                          |     goto label_3;
    0x004c55a0 mov rdi, rbx                                                                                                          |     
    0x004c55a3 call 0x4c4a50                                                                                                         |     BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                                     |     do {
                                                                                                                                     | label_0:
    0x004c55a8 mov dword [rbx + 0x170], 0xffffffff                                                                                   |         *((rbx + 0x170)) = 0xffffffff;
    0x004c55b2 add rbx, 0x180                                                                                                        |         rbx += 0x180;
    0x004c55b9 cmp r15, rbx                                                                                                          |         
                                                                                                                                     |         if (r15 == rbx) {
    0x004c55bc je 0x4c55ef                                                                                                           |             goto label_4;
                                                                                                                                     |         }
                                                                                                                                     | label_2:
    0x004c55be mov eax, dword [rbx + 0x170]                                                                                          |         eax = *((rbx + 0x170));
    0x004c55c4 cmp rax, 3                                                                                                            |         
    0x004c55c8 ja 0x4c55a8                                                                                                           |         
                                                                                                                                     |     } while (rax > 3);
                                                                                                                                     |     /* switch table (4 cases) at 0x649ec0 */
    0x004c55ca jmp qword [rax*8 + 0x649ec0]                                                                                          |     
    0x004c55d1 cmp qword [rbx + 0x20], 0x17                                                                                          |     
                                                                                                                                     |     if (*((rbx + 0x20)) != 0x17) {
    0x004c55d6 je 0x4c55e5                                                                                                           |         
    0x004c55d8 mov rsi, qword [rbx]                                                                                                  |         rsi = *(rbx);
    0x004c55db mov rdi, qword [rbx + 0x28]                                                                                           |         rdi = *((rbx + 0x28));
    0x004c55df mov rax, qword [rdi]                                                                                                  |         rax = *(rdi);
    0x004c55e2 call qword [rax + 0x18]                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                     |     }
    0x004c55e5 mov qword [rbx + 0x18], 0xffffffffffffffff                                                                            |     *((rbx + 0x18)) = 0xffffffffffffffff;
    0x004c55ed jmp 0x4c55a8                                                                                                          |     goto label_0;
                                                                                                                                     | label_4:
    0x004c55ef mov rbx, qword [r14]                                                                                                  |     rbx = *(r14);
                                                                                                                                     | label_3:
    0x004c55f2 mov rdi, qword [r14 + 0x18]                                                                                           |     rdi = *((r14 + 0x18));
    0x004c55f6 mov rax, qword [rdi]                                                                                                  |     rax = *(rdi);
    0x004c55f9 mov rsi, rbx                                                                                                          |     rsi = rbx;
    0x004c55fc call qword [rax + 0x18]                                                                                               |     uint64_t (*rax + 0x18)() ();
                                                                                                                                     | label_1:
    0x004c55ff pop rbx                                                                                                               |     
    0x004c5600 pop r14                                                                                                               |     
    0x004c5602 pop r15                                                                                                               |     
    0x004c5604 ret                                                                                                                   |     return rax;
                                                                                                                                     | }
