    ; assembly                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                 | /* baljsn_encoder.t/assume @ 0x4d02b0 */
                                                                                                                                 | #include <stdint.h>
                                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection4_BloombergLP::s_baltst::CustomInt_ ()        | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection4_BloombergLP::s_baltst::CustomInt_ (int64_t arg2, int64_t arg1) {
                                                                                                                                 |     rsi = arg2;
                                                                                                                                 |     rdi = arg1;
                                                                                                                                 |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection4(BloombergLP::s_baltst::CustomInt&&) */
    0x004d02b0 push r14                                                                                                          |     
    0x004d02b2 push rbx                                                                                                          |     
    0x004d02b3 push rax                                                                                                          |     
    0x004d02b4 mov r14, rsi                                                                                                      |     r14 = rsi;
    0x004d02b7 mov rbx, rdi                                                                                                      |     rbx = rdi;
    0x004d02ba mov eax, dword [rdi + 0x170]                                                                                      |     eax = *((rdi + 0x170));
    0x004d02c0 cmp rax, 3                                                                                                        |     
                                                                                                                                 |     if (rax <= 3) {
    0x004d02c4 ja 0x4d02f3                                                                                                       |         
                                                                                                                                 |         /* switch table (4 cases) at 0x64a400 */
    0x004d02c6 jmp qword [rax*8 + 0x64a400]                                                                                      |         
    0x004d02cd mov rdi, rbx                                                                                                      |         
    0x004d02d0 call 0x4c4a50                                                                                                     |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004d02d5 jmp 0x4d02f3                                                                                                      |         goto label_0;
    0x004d02d7 cmp qword [rbx + 0x20], 0x17                                                                                      |         
                                                                                                                                 |         if (*((rbx + 0x20)) != 0x17) {
    0x004d02dc je 0x4d02eb                                                                                                       |             
    0x004d02de mov rsi, qword [rbx]                                                                                              |             rsi = *(rbx);
    0x004d02e1 mov rdi, qword [rbx + 0x28]                                                                                       |             rdi = *((rbx + 0x28));
    0x004d02e5 mov rax, qword [rdi]                                                                                              |             rax = *(rdi);
    0x004d02e8 call qword [rax + 0x18]                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                 |         }
    0x004d02eb mov qword [rbx + 0x18], 0xffffffffffffffff                                                                        |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                 |     }
                                                                                                                                 | label_0:
    0x004d02f3 mov dword [rbx + 0x170], 0xffffffff                                                                               |     *((rbx + 0x170)) = 0xffffffff;
    0x004d02fd mov eax, dword [r14]                                                                                              |     eax = *(r14);
    0x004d0300 mov dword [rbx], eax                                                                                              |     *(rbx) = eax;
    0x004d0302 mov dword [rbx + 0x170], 3                                                                                        |     *((rbx + 0x170)) = 3;
    0x004d030c jmp 0x4d0313                                                                                                      |     goto label_1;
    0x004d030e mov eax, dword [r14]                                                                                              |     eax = *(r14);
    0x004d0311 mov dword [rbx], eax                                                                                              |     *(rbx) = eax;
                                                                                                                                 | label_1:
    0x004d0313 mov rax, rbx                                                                                                      |     rax = rbx;
    0x004d0316 add rsp, 8                                                                                                        |     
    0x004d031a pop rbx                                                                                                           |     
    0x004d031b pop r14                                                                                                           |     
    0x004d031d ret                                                                                                               |     return rax;
                                                                                                                                 | }
