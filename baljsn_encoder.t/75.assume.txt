    ; assembly                                                                                                       | /* r2dec pseudo code output */
                                                                                                                     | /* baljsn_encoder.t/assume @ 0x4b9440 */
                                                                                                                     | #include <stdint.h>
                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection4_BloombergLP::s_baltst::CustomInt_const_ ()          | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection4_BloombergLP::s_baltst::CustomInt_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                     |     rsi = arg2;
                                                                                                                     |     rdi = arg1;
                                                                                                                     |     /* BloombergLP::s_baltst::Choice3::makeSelection4(BloombergLP::s_baltst::CustomInt const&) */
    0x004b9440 push r14                                                                                              |     
    0x004b9442 push rbx                                                                                              |     
    0x004b9443 push rax                                                                                              |     
    0x004b9444 mov r14, rsi                                                                                          |     r14 = rsi;
    0x004b9447 mov rbx, rdi                                                                                          |     rbx = rdi;
    0x004b944a mov eax, dword [rdi + 0x170]                                                                          |     eax = *((rdi + 0x170));
    0x004b9450 cmp rax, 3                                                                                            |     
                                                                                                                     |     if (rax <= 3) {
    0x004b9454 ja 0x4b9483                                                                                           |         
                                                                                                                     |         /* switch table (4 cases) at 0x648bc0 */
    0x004b9456 jmp qword [rax*8 + 0x648bc0]                                                                          |         
    0x004b945d mov rdi, rbx                                                                                          |         
    0x004b9460 call 0x4c4a50                                                                                         |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b9465 jmp 0x4b9483                                                                                          |         goto label_0;
    0x004b9467 cmp qword [rbx + 0x20], 0x17                                                                          |         
                                                                                                                     |         if (*((rbx + 0x20)) != 0x17) {
    0x004b946c je 0x4b947b                                                                                           |             
    0x004b946e mov rsi, qword [rbx]                                                                                  |             rsi = *(rbx);
    0x004b9471 mov rdi, qword [rbx + 0x28]                                                                           |             rdi = *((rbx + 0x28));
    0x004b9475 mov rax, qword [rdi]                                                                                  |             rax = *(rdi);
    0x004b9478 call qword [rax + 0x18]                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                     |         }
    0x004b947b mov qword [rbx + 0x18], 0xffffffffffffffff                                                            |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                     |     }
                                                                                                                     | label_0:
    0x004b9483 mov dword [rbx + 0x170], 0xffffffff                                                                   |     *((rbx + 0x170)) = 0xffffffff;
    0x004b948d mov eax, dword [r14]                                                                                  |     eax = *(r14);
    0x004b9490 mov dword [rbx], eax                                                                                  |     *(rbx) = eax;
    0x004b9492 mov dword [rbx + 0x170], 3                                                                            |     *((rbx + 0x170)) = 3;
    0x004b949c jmp 0x4b94a3                                                                                          |     goto label_1;
    0x004b949e mov eax, dword [r14]                                                                                  |     eax = *(r14);
    0x004b94a1 mov dword [rbx], eax                                                                                  |     *(rbx) = eax;
                                                                                                                     | label_1:
    0x004b94a3 mov rax, rbx                                                                                          |     rax = rbx;
    0x004b94a6 add rsp, 8                                                                                            |     
    0x004b94aa pop rbx                                                                                               |     
    0x004b94ab pop r14                                                                                               |     
    0x004b94ad ret                                                                                                   |     return rax;
                                                                                                                     | }
