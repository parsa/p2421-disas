    ; assembly                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                     | /* baljsn_encoder.t/none @ 0x474d90 */
                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::baljsn::Encoder_ValueDispatcher.operator___BloombergLP::bdlt::DatetimeTz__BloombergLP::bdlt::DatetimeTz_const__BloombergLP::bdlat_TypeCategory::Simple_ ()       | int64_t method_int_BloombergLP::baljsn::Encoder_ValueDispatcher_operator_BloombergLP::bdlt::DatetimeTz_BloombergLP::bdlt::DatetimeTz_const_BloombergLP::bdlat_TypeCategory::Simple_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                     |     size_t var_18h;
                                                                                                                                                                                                     |     int64_t var_20h;
                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                     |     /* int BloombergLP::baljsn::Encoder_ValueDispatcher::operator()<BloombergLP::bdlt::DatetimeTz>(BloombergLP::bdlt::DatetimeTz const&, BloombergLP::bdlat_TypeCategory::Simple) */
    0x00474d90 push r15                                                                                                                                                                              |     
    0x00474d92 push r14                                                                                                                                                                              |     
    0x00474d94 push r12                                                                                                                                                                              |     
    0x00474d96 push rbx                                                                                                                                                                              |     
    0x00474d97 sub rsp, 0x48                                                                                                                                                                         |     
    0x00474d9b mov r14, rsi                                                                                                                                                                          |     r14 = rsi;
    0x00474d9e mov byte [rdi], 0                                                                                                                                                                     |     *(rdi) = 0;
    0x00474da1 mov rbx, qword [rdi + 8]                                                                                                                                                              |     rbx = *((rdi + 8));
    0x00474da5 mov r12, qword [rdi + 0x20]                                                                                                                                                           |     r12 = *((rdi + 0x20));
    0x00474da9 cmp byte [rbx + 8], 0                                                                                                                                                                 |     
                                                                                                                                                                                                     |     if (*((rbx + 8)) != 0) {
    0x00474dad je 0x474dd9                                                                                                                                                                           |         
    0x00474daf mov rax, qword [rbx + 0x18]                                                                                                                                                           |         rax = *((rbx + 0x18));
    0x00474db3 mov rcx, qword [rbx + 0x38]                                                                                                                                                           |         rcx = *((rbx + 0x38));
    0x00474db7 dec rcx                                                                                                                                                                               |         rcx--;
    0x00474dba mov rdx, rcx                                                                                                                                                                          |         rdx = rcx;
    0x00474dbd shr rdx, 6                                                                                                                                                                            |         rdx >>= 6;
    0x00474dc1 mov rax, qword [rax + rdx*8]                                                                                                                                                          |         rax = *((rax + rdx*8));
    0x00474dc5 bt rax, rcx                                                                                                                                                                           |         
                                                                                                                                                                                                     |         if (((rax >> rcx) & 1) >= 0) {
    0x00474dc9 jae 0x474dd9                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                     |         }
    0x00474dcb mov rdi, qword [rbx]                                                                                                                                                                  |         
    0x00474dce mov esi, dword [rbx + 0xc]                                                                                                                                                            |         
    0x00474dd1 mov edx, dword [rbx + 0x10]                                                                                                                                                           |         edx = *((rbx + 0x10));
    0x00474dd4 call 0x4d7f10                                                                                                                                                                         |         BloombergLP::bdlb::Print::indent(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,int,int) (*(rbx), *((rbx + 0xc)));
                                                                                                                                                                                                     |     }
                                                                                                                                                                                                     | label_0:
    0x00474dd9 mov r15, qword [rbx]                                                                                                                                                                  |     r15 = *(rbx);
    0x00474ddc mov dword [rsp + 8], 3                                                                                                                                                                |     *((rsp + 8)) = 3;
    0x00474de4 test r12, r12                                                                                                                                                                         |     
                                                                                                                                                                                                     |     if (r12 != 0) {
    0x00474de7 je 0x474df0                                                                                                                                                                           |         
    0x00474de9 mov esi, dword [r12 + 8]                                                                                                                                                              |         esi = *((r12 + 8));
    0x00474dee jmp 0x474df5                                                                                                                                                                          |         
                                                                                                                                                                                                     |     } else {
    0x00474df0 mov esi, 3                                                                                                                                                                            |         
                                                                                                                                                                                                     |     }
    0x00474df5 lea r12, [rsp + 8]                                                                                                                                                                    |     r12 = rsp + 8;
    0x00474dfa mov rdi, r12                                                                                                                                                                          |     
    0x00474dfd call 0x4ea050                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (r12, 3);
    0x00474e02 lea rbx, [rsp + 0x20]                                                                                                                                                                 |     rbx = rsp + 0x20;
    0x00474e07 mov rdi, rbx                                                                                                                                                                          |     
    0x00474e0a mov esi, 0x27                                                                                                                                                                         |     
    0x00474e0f mov rdx, r14                                                                                                                                                                          |     
    0x00474e12 mov rcx, r12                                                                                                                                                                          |     
    0x00474e15 call 0x4e8070                                                                                                                                                                         |     BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::DatetimeTzconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rbx, 0x27, r14, r12);
    0x00474e1a mov qword [rsp + 0x10], rbx                                                                                                                                                           |     *((rsp + 0x10)) = rbx;
    0x00474e1f mov rdi, rbx                                                                                                                                                                          |     
    0x00474e22 call 0x405610                                                                                                                                                                         |     rax = strlen (rbx);
    0x00474e27 mov qword [rsp + 0x18], rax                                                                                                                                                           |     *((rsp + 0x18)) = rax;
    0x00474e2c lea rsi, [rsp + 0x10]                                                                                                                                                                 |     
    0x00474e31 mov rdi, r15                                                                                                                                                                          |     
    0x00474e34 call 0x48ca40                                                                                                                                                                         |     BloombergLP::baljsn::PrintUtil::printString(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&) (r15, rsp + 0x10);
    0x00474e39 add rsp, 0x48                                                                                                                                                                         |     
    0x00474e3d pop rbx                                                                                                                                                                               |     
    0x00474e3e pop r12                                                                                                                                                                               |     
    0x00474e40 pop r14                                                                                                                                                                               |     
    0x00474e42 pop r15                                                                                                                                                                               |     
    0x00474e44 ret                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                     | }
