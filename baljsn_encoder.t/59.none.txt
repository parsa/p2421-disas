    ; assembly                                                                                                   | /* r2dec pseudo code output */
                                                                                                                 | /* baljsn_encoder.t/none @ 0x4b9a20 */
                                                                                                                 | #include <stdint.h>
                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection3_BloombergLP::s_baltst::CustomString_ ()         | uint64_t method_BloombergLP::s_baltst::Choice3_makeSelection3_BloombergLP::s_baltst::CustomString_ (int64_t arg2, int64_t arg1) {
                                                                                                                 |     rsi = arg2;
                                                                                                                 |     rdi = arg1;
                                                                                                                 |     /* BloombergLP::s_baltst::Choice3::makeSelection3(BloombergLP::s_baltst::CustomString&&) */
    0x004b9a20 push r14                                                                                          |     
    0x004b9a22 push rbx                                                                                          |     
    0x004b9a23 push rax                                                                                          |     
    0x004b9a24 mov r14, rsi                                                                                      |     r14 = rsi;
    0x004b9a27 mov rbx, rdi                                                                                      |     rbx = rdi;
    0x004b9a2a mov eax, dword [rdi + 0x170]                                                                      |     eax = *((rdi + 0x170));
    0x004b9a30 test eax, eax                                                                                     |     
                                                                                                                 |     if (eax != 0) {
    0x004b9a32 je 0x4b9a49                                                                                       |         
    0x004b9a34 cmp eax, 2                                                                                        |         
                                                                                                                 |         if (eax == 2) {
    0x004b9a37 jne 0x4b9a51                                                                                      |             
    0x004b9a39 mov rdi, rbx                                                                                      |             
    0x004b9a3c mov rsi, r14                                                                                      |             
    0x004b9a3f call 0x51c980                                                                                     |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x004b9a44 jmp 0x4b9b1c                                                                                      |             
                                                                                                                 |         } else {
    0x004b9a49 mov rdi, rbx                                                                                      |             
    0x004b9a4c call 0x4c4be0                                                                                     |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                 |         }
    0x004b9a51 mov dword [rbx + 0x170], 0xffffffff                                                               |         *((rbx + 0x170)) = 0xffffffff;
    0x004b9a5b mov rdi, qword [rbx + 0x178]                                                                      |         rdi = *((rbx + 0x178));
    0x004b9a62 test rdi, rdi                                                                                     |         
                                                                                                                 |         if (rdi == 0) {
    0x004b9a65 jne 0x4b9a7b                                                                                      |             
    0x004b9a67 mov rdi, qword [rip + 0x41363a]                                                                   |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004b9a6e test rdi, rdi                                                                                     |             
                                                                                                                 |             if (rdi != 0) {
    0x004b9a71 jne 0x4b9a7b                                                                                      |                 goto label_0;
                                                                                                                 |             }
    0x004b9a73 call 0x518150                                                                                     |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004b9a78 mov rdi, rax                                                                                      |             rdi = rax;
                                                                                                                 |         }
                                                                                                                 | label_0:
    0x004b9a7b mov rax, qword [r14 + 0x20]                                                                       |         rax = *((r14 + 0x20));
    0x004b9a7f mov qword [rbx + 0x20], rax                                                                       |         *((rbx + 0x20)) = rax;
    0x004b9a83 movups xmm0, xmmword [r14]                                                                        |         __asm ("movups xmm0, xmmword [r14]");
    0x004b9a87 movups xmm1, xmmword [r14 + 0x10]                                                                 |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004b9a8c movups xmmword [rbx + 0x10], xmm1                                                                 |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004b9a90 movups xmmword [rbx], xmm0                                                                        |         __asm ("movups xmmword [rbx], xmm0");
    0x004b9a93 mov qword [rbx + 0x28], rdi                                                                       |         *((rbx + 0x28)) = rdi;
    0x004b9a97 cmp rax, 0x17                                                                                     |         
                                                                                                                 |         if (rax != 0x17) {
    0x004b9a9b je 0x4b9b12                                                                                       |             
    0x004b9a9d cmp rdi, qword [r14 + 0x28]                                                                       |             
                                                                                                                 |             if (rdi != *((r14 + 0x28))) {
    0x004b9aa1 je 0x4b9aff                                                                                       |                 
    0x004b9aa3 mov rax, qword [r14 + 0x18]                                                                       |                 rax = *((r14 + 0x18));
    0x004b9aa7 cmp rax, 0x17                                                                                     |                 
    0x004b9aab mov esi, 0x17                                                                                     |                 esi = 0x17;
                                                                                                                 |                 if (rax > 0x17) {
    0x004b9ab0 cmova rsi, rax                                                                                    |                     rsi = rax;
                                                                                                                 |                 }
    0x004b9ab4 mov qword [rbx], 0                                                                                |                 *(rbx) = 0;
    0x004b9abb mov qword [rbx + 0x18], rax                                                                       |                 *((rbx + 0x18)) = rax;
    0x004b9abf mov qword [rbx + 0x20], rsi                                                                       |                 *((rbx + 0x20)) = rsi;
    0x004b9ac3 cmp rax, 0x18                                                                                     |                 
                                                                                                                 |                 if (rax >= 0x18) {
    0x004b9ac7 jb 0x4b9adc                                                                                       |                     
    0x004b9ac9 inc rsi                                                                                           |                     rsi++;
    0x004b9acc mov rax, qword [rdi]                                                                              |                     rax = *(rdi);
    0x004b9acf call qword [rax + 0x10]                                                                           |                     rax = uint64_t (*rax + 0x10)() ();
    0x004b9ad2 mov qword [rbx], rax                                                                              |                     *(rbx) = rax;
    0x004b9ad5 cmp qword [rbx + 0x20], 0x17                                                                      |                     
                                                                                                                 |                     if (*((rbx + 0x20)) != 0x17) {
    0x004b9ada jne 0x4b9adf                                                                                      |                         goto label_1;
                                                                                                                 |                     }
                                                                                                                 |                 }
    0x004b9adc mov rax, rbx                                                                                      |                 rax = rbx;
                                                                                                                 | label_1:
    0x004b9adf mov rdx, qword [rbx + 0x18]                                                                       |                 rdx = *((rbx + 0x18));
    0x004b9ae3 inc rdx                                                                                           |                 rdx++;
                                                                                                                 |                 if (rdx == 0) {
    0x004b9ae6 je 0x4b9b12                                                                                       |                     goto label_2;
                                                                                                                 |                 }
    0x004b9ae8 cmp qword [r14 + 0x20], 0x17                                                                      |                 
                                                                                                                 |                 if (*((r14 + 0x20)) != 0x17) {
    0x004b9aed je 0x4b9af2                                                                                       |                     
    0x004b9aef mov r14, qword [r14]                                                                              |                     r14 = *(r14);
                                                                                                                 |                 }
    0x004b9af2 mov rdi, rax                                                                                      |                 
    0x004b9af5 mov rsi, r14                                                                                      |                 
    0x004b9af8 call 0x405c20                                                                                     |                 memcpy (rax, r14, rdx);
    0x004b9afd jmp 0x4b9b12                                                                                      |                 
                                                                                                                 |             } else {
    0x004b9aff mov qword [r14], 0                                                                                |                 *(r14) = 0;
    0x004b9b06 movaps xmm0, xmmword [rip + 0x83b23]                                                              |                 xmm0 = .comment;
    0x004b9b0d movups xmmword [r14 + 0x18], xmm0                                                                 |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                 |             }
                                                                                                                 |         }
                                                                                                                 | label_2:
    0x004b9b12 mov dword [rbx + 0x170], 2                                                                        |         *((rbx + 0x170)) = 2;
                                                                                                                 |     }
    0x004b9b1c mov rax, rbx                                                                                      |     rax = rbx;
    0x004b9b1f add rsp, 8                                                                                        |     
    0x004b9b23 pop rbx                                                                                           |     
    0x004b9b24 pop r14                                                                                           |     
    0x004b9b26 ret                                                                                               |     return rax;
                                                                                                                 | }
