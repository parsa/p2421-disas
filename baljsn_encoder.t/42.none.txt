    ; assembly                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                     | /* baljsn_encoder.t/none @ 0x4d0fd0 */
                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice1.makeSelection6_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____const_ ()          | uint64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice1_makeSelection6_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_const_ (int64_t arg2, uint32_t arg1) {
                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                     |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice1::makeSelection6(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> > const&) */
    0x004d0fd0 push r15                                                                                                                                                              |     
    0x004d0fd2 push r14                                                                                                                                                              |     
    0x004d0fd4 push rbx                                                                                                                                                              |     
    0x004d0fd5 mov r14, rsi                                                                                                                                                          |     r14 = rsi;
    0x004d0fd8 mov rbx, rdi                                                                                                                                                          |     rbx = rdi;
    0x004d0fdb cmp dword [rdi + 0x30], 1                                                                                                                                             |     
                                                                                                                                                                                     |     if (*((rdi + 0x30)) == 1) {
    0x004d0fdf jne 0x4d1019                                                                                                                                                          |         
    0x004d0fe1 cmp rbx, r14                                                                                                                                                          |         
                                                                                                                                                                                     |         if (rbx == r14) {
    0x004d0fe4 je 0x4d10c0                                                                                                                                                           |             goto label_0;
                                                                                                                                                                                     |         }
    0x004d0fea mov rdx, qword [r14 + 0x18]                                                                                                                                           |         rdx = *((r14 + 0x18));
    0x004d0fee cmp qword [r14 + 0x20], 0x17                                                                                                                                          |         
                                                                                                                                                                                     |         if (*((r14 + 0x20)) != 0x17) {
    0x004d0ff3 je 0x4d0ff8                                                                                                                                                           |             
    0x004d0ff5 mov r14, qword [r14]                                                                                                                                                  |             r14 = *(r14);
                                                                                                                                                                                     |         }
    0x004d0ff8 mov r15, qword [rbx + 0x18]                                                                                                                                           |         r15 = *((rbx + 0x18));
    0x004d0ffc mov qword [rbx + 0x18], 0                                                                                                                                             |         *((rbx + 0x18)) = 0;
    0x004d1004 mov ecx, 0x543cdc                                                                                                                                                     |         
    0x004d1009 mov rdi, rbx                                                                                                                                                          |         
    0x004d100c mov rsi, r14                                                                                                                                                          |         
    0x004d100f call 0x51b3c0                                                                                                                                                         |         bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x004d1014 jmp 0x4d10c0                                                                                                                                                          |         
                                                                                                                                                                                     |     } else {
    0x004d1019 mov dword [rbx + 0x30], 0xffffffff                                                                                                                                    |         *((rbx + 0x30)) = 0xffffffff;
    0x004d1020 mov rdi, qword [rbx + 0x38]                                                                                                                                           |         rdi = *((rbx + 0x38));
    0x004d1024 test rdi, rdi                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rdi == 0) {
    0x004d1027 jne 0x4d103d                                                                                                                                                          |             
    0x004d1029 mov rdi, qword [rip + 0x3fc078]                                                                                                                                       |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004d1030 test rdi, rdi                                                                                                                                                         |             
                                                                                                                                                                                     |             if (rdi != 0) {
    0x004d1033 jne 0x4d103d                                                                                                                                                          |                 goto label_1;
                                                                                                                                                                                     |             }
    0x004d1035 call 0x518150                                                                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004d103a mov rdi, rax                                                                                                                                                          |             rdi = rax;
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_1:
    0x004d103d mov rax, qword [r14 + 0x20]                                                                                                                                           |         rax = *((r14 + 0x20));
    0x004d1041 mov qword [rbx + 0x20], rax                                                                                                                                           |         *((rbx + 0x20)) = rax;
    0x004d1045 movups xmm0, xmmword [r14]                                                                                                                                            |         __asm ("movups xmm0, xmmword [r14]");
    0x004d1049 movups xmm1, xmmword [r14 + 0x10]                                                                                                                                     |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004d104e movups xmmword [rbx + 0x10], xmm1                                                                                                                                     |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004d1052 movups xmmword [rbx], xmm0                                                                                                                                            |         __asm ("movups xmmword [rbx], xmm0");
    0x004d1055 mov qword [rbx + 0x28], rdi                                                                                                                                           |         *((rbx + 0x28)) = rdi;
    0x004d1059 cmp rax, 0x17                                                                                                                                                         |         
                                                                                                                                                                                     |         if (rax != 0x17) {
    0x004d105d je 0x4d10b9                                                                                                                                                           |             
    0x004d105f mov rax, qword [r14 + 0x18]                                                                                                                                           |             rax = *((r14 + 0x18));
    0x004d1063 cmp rax, 0x17                                                                                                                                                         |             
    0x004d1067 mov esi, 0x17                                                                                                                                                         |             esi = 0x17;
                                                                                                                                                                                     |             if (rax > 0x17) {
    0x004d106c cmova rsi, rax                                                                                                                                                        |                 rsi = rax;
                                                                                                                                                                                     |             }
    0x004d1070 mov qword [rbx], 0                                                                                                                                                    |             *(rbx) = 0;
    0x004d1077 mov qword [rbx + 0x18], rax                                                                                                                                           |             *((rbx + 0x18)) = rax;
    0x004d107b mov qword [rbx + 0x20], rsi                                                                                                                                           |             *((rbx + 0x20)) = rsi;
    0x004d107f cmp rax, 0x18                                                                                                                                                         |             
                                                                                                                                                                                     |             if (rax >= 0x18) {
    0x004d1083 jb 0x4d1098                                                                                                                                                           |                 
    0x004d1085 inc rsi                                                                                                                                                               |                 rsi++;
    0x004d1088 mov rax, qword [rdi]                                                                                                                                                  |                 rax = *(rdi);
    0x004d108b call qword [rax + 0x10]                                                                                                                                               |                 rax = uint64_t (*rax + 0x10)() ();
    0x004d108e mov qword [rbx], rax                                                                                                                                                  |                 *(rbx) = rax;
    0x004d1091 cmp qword [rbx + 0x20], 0x17                                                                                                                                          |                 
                                                                                                                                                                                     |                 if (*((rbx + 0x20)) != 0x17) {
    0x004d1096 jne 0x4d109b                                                                                                                                                          |                     goto label_2;
                                                                                                                                                                                     |                 }
                                                                                                                                                                                     |             }
    0x004d1098 mov rax, rbx                                                                                                                                                          |             rax = rbx;
                                                                                                                                                                                     | label_2:
    0x004d109b mov rdx, qword [rbx + 0x18]                                                                                                                                           |             rdx = *((rbx + 0x18));
    0x004d109f inc rdx                                                                                                                                                               |             rdx++;
                                                                                                                                                                                     |             if (rdx == 0) {
    0x004d10a2 je 0x4d10b9                                                                                                                                                           |                 goto label_3;
                                                                                                                                                                                     |             }
    0x004d10a4 cmp qword [r14 + 0x20], 0x17                                                                                                                                          |             
                                                                                                                                                                                     |             if (*((r14 + 0x20)) != 0x17) {
    0x004d10a9 je 0x4d10ae                                                                                                                                                           |                 
    0x004d10ab mov r14, qword [r14]                                                                                                                                                  |                 r14 = *(r14);
                                                                                                                                                                                     |             }
    0x004d10ae mov rdi, rax                                                                                                                                                          |             
    0x004d10b1 mov rsi, r14                                                                                                                                                          |             
    0x004d10b4 call 0x405c20                                                                                                                                                         |             memcpy (rax, r14, rdx);
                                                                                                                                                                                     |         }
                                                                                                                                                                                     | label_3:
    0x004d10b9 mov dword [rbx + 0x30], 1                                                                                                                                             |         *((rbx + 0x30)) = 1;
                                                                                                                                                                                     |     }
                                                                                                                                                                                     | label_0:
    0x004d10c0 mov rax, rbx                                                                                                                                                          |     rax = rbx;
    0x004d10c3 pop rbx                                                                                                                                                               |     
    0x004d10c4 pop r14                                                                                                                                                               |     
    0x004d10c6 pop r15                                                                                                                                                               |     
    0x004d10c8 ret                                                                                                                                                                   |     return rax;
                                                                                                                                                                                     | }
