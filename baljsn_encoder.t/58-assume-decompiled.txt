    ; assembly                                                                                                           | /* r2dec pseudo code output */
                                                                                                                         | /* baljsn_encoder.t/assume @ 0x4b9320 */
                                                                                                                         | #include <stdint.h>
                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection3_BloombergLP::s_baltst::CustomString_const_ ()           | uint64_t method_BloombergLP::s_baltst::Choice3_makeSelection3_BloombergLP::s_baltst::CustomString_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                         |     rsi = arg2;
                                                                                                                         |     rdi = arg1;
                                                                                                                         |     /* BloombergLP::s_baltst::Choice3::makeSelection3(BloombergLP::s_baltst::CustomString const&) */
    0x004b9320 push r15                                                                                                  |     
    0x004b9322 push r14                                                                                                  |     
    0x004b9324 push rbx                                                                                                  |     
    0x004b9325 mov r14, rsi                                                                                              |     r14 = rsi;
    0x004b9328 mov rbx, rdi                                                                                              |     rbx = rdi;
    0x004b932b mov eax, dword [rdi + 0x170]                                                                              |     eax = *((rdi + 0x170));
    0x004b9331 cmp rax, 3                                                                                                |     
                                                                                                                         |     if (rax <= 3) {
    0x004b9335 ja 0x4b9346                                                                                               |         
                                                                                                                         |         /* switch table (4 cases) at 0x648ba0 */
    0x004b9337 jmp qword [rax*8 + 0x648ba0]                                                                              |         
    0x004b933e mov rdi, rbx                                                                                              |         
    0x004b9341 call 0x4c4a50                                                                                             |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                         |     }
    0x004b9346 mov dword [rbx + 0x170], 0xffffffff                                                                       |     *((rbx + 0x170)) = 0xffffffff;
    0x004b9350 mov rdi, qword [rbx + 0x178]                                                                              |     rdi = *((rbx + 0x178));
    0x004b9357 test rdi, rdi                                                                                             |     
                                                                                                                         |     if (rdi == 0) {
    0x004b935a jne 0x4b9370                                                                                              |         
    0x004b935c mov rdi, qword [rip + 0x413d45]                                                                           |         rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004b9363 test rdi, rdi                                                                                             |         
                                                                                                                         |         if (rdi != 0) {
    0x004b9366 jne 0x4b9370                                                                                              |             goto label_1;
                                                                                                                         |         }
    0x004b9368 call 0x517520                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004b936d mov rdi, rax                                                                                              |         rdi = rax;
                                                                                                                         |     }
                                                                                                                         | label_1:
    0x004b9370 mov rax, qword [r14 + 0x20]                                                                               |     rax = *((r14 + 0x20));
    0x004b9374 mov qword [rbx + 0x20], rax                                                                               |     *((rbx + 0x20)) = rax;
    0x004b9378 movups xmm0, xmmword [r14]                                                                                |     __asm ("movups xmm0, xmmword [r14]");
    0x004b937c movups xmm1, xmmword [r14 + 0x10]                                                                         |     __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004b9381 movups xmmword [rbx + 0x10], xmm1                                                                         |     __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004b9385 movups xmmword [rbx], xmm0                                                                                |     __asm ("movups xmmword [rbx], xmm0");
    0x004b9388 mov qword [rbx + 0x28], rdi                                                                               |     *((rbx + 0x28)) = rdi;
    0x004b938c cmp rax, 0x17                                                                                             |     
                                                                                                                         |     if (rax != 0x17) {
    0x004b9390 je 0x4b93ec                                                                                               |         
    0x004b9392 mov rax, qword [r14 + 0x18]                                                                               |         rax = *((r14 + 0x18));
    0x004b9396 cmp rax, 0x17                                                                                             |         
    0x004b939a mov esi, 0x17                                                                                             |         esi = 0x17;
                                                                                                                         |         if (rax > 0x17) {
    0x004b939f cmova rsi, rax                                                                                            |             rsi = rax;
                                                                                                                         |         }
    0x004b93a3 mov qword [rbx], 0                                                                                        |         *(rbx) = 0;
    0x004b93aa mov qword [rbx + 0x18], rax                                                                               |         *((rbx + 0x18)) = rax;
    0x004b93ae mov qword [rbx + 0x20], rsi                                                                               |         *((rbx + 0x20)) = rsi;
    0x004b93b2 cmp rax, 0x18                                                                                             |         
                                                                                                                         |         if (rax >= 0x18) {
    0x004b93b6 jb 0x4b93cb                                                                                               |             
    0x004b93b8 inc rsi                                                                                                   |             rsi++;
    0x004b93bb mov rax, qword [rdi]                                                                                      |             rax = *(rdi);
    0x004b93be call qword [rax + 0x10]                                                                                   |             rax = uint64_t (*rax + 0x10)() ();
    0x004b93c1 mov qword [rbx], rax                                                                                      |             *(rbx) = rax;
    0x004b93c4 cmp qword [rbx + 0x20], 0x17                                                                              |             
                                                                                                                         |             if (*((rbx + 0x20)) != 0x17) {
    0x004b93c9 jne 0x4b93ce                                                                                              |                 goto label_2;
                                                                                                                         |             }
                                                                                                                         |         }
    0x004b93cb mov rax, rbx                                                                                              |         rax = rbx;
                                                                                                                         | label_2:
    0x004b93ce mov rdx, qword [rbx + 0x18]                                                                               |         rdx = *((rbx + 0x18));
    0x004b93d2 inc rdx                                                                                                   |         rdx++;
                                                                                                                         |         if (rdx == 0) {
    0x004b93d5 je 0x4b93ec                                                                                               |             goto label_3;
                                                                                                                         |         }
    0x004b93d7 cmp qword [r14 + 0x20], 0x17                                                                              |         
                                                                                                                         |         if (*((r14 + 0x20)) != 0x17) {
    0x004b93dc je 0x4b93e1                                                                                               |             
    0x004b93de mov r14, qword [r14]                                                                                      |             r14 = *(r14);
                                                                                                                         |         }
    0x004b93e1 mov rdi, rax                                                                                              |         
    0x004b93e4 mov rsi, r14                                                                                              |         
    0x004b93e7 call 0x405bd0                                                                                             |         memcpy (rax, r14, rdx);
                                                                                                                         |     }
                                                                                                                         | label_3:
    0x004b93ec mov dword [rbx + 0x170], 2                                                                                |     *((rbx + 0x170)) = 2;
                                                                                                                         |     do {
                                                                                                                         | label_0:
    0x004b93f6 mov rax, rbx                                                                                              |         rax = rbx;
    0x004b93f9 pop rbx                                                                                                   |         
    0x004b93fa pop r14                                                                                                   |         
    0x004b93fc pop r15                                                                                                   |         
    0x004b93fe ret                                                                                                       |         return rax;
    0x004b93ff cmp rbx, r14                                                                                              |         
    0x004b9402 je 0x4b93f6                                                                                               |         
                                                                                                                         |     } while (rbx == r14);
    0x004b9404 mov rdx, qword [r14 + 0x18]                                                                               |     rdx = *((r14 + 0x18));
    0x004b9408 cmp qword [r14 + 0x20], 0x17                                                                              |     
                                                                                                                         |     if (*((r14 + 0x20)) != 0x17) {
    0x004b940d je 0x4b9412                                                                                               |         
    0x004b940f mov r14, qword [r14]                                                                                      |         r14 = *(r14);
                                                                                                                         |     }
    0x004b9412 mov r15, qword [rbx + 0x18]                                                                               |     r15 = *((rbx + 0x18));
    0x004b9416 mov qword [rbx + 0x18], 0                                                                                 |     *((rbx + 0x18)) = 0;
    0x004b941e mov ecx, 0x5430c0                                                                                         |     
    0x004b9423 mov rdi, rbx                                                                                              |     
    0x004b9426 mov rsi, r14                                                                                              |     
    0x004b9429 call 0x51a780                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx, r14, rdx, "string<...>::operator=(const string&...): string too long");
    0x004b942e jmp 0x4b93f6                                                                                              |     goto label_0;
                                                                                                                         | }
