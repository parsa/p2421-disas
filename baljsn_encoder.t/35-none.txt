    ; assembly                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                             | /* baljsn_encoder.t/none @ 0x482f40 */
                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::baljsn::Encoder_ValueDispatcher.operator___BloombergLP::bdlt::Date__BloombergLP::bdlt::Date_const__BloombergLP::bdlat_TypeCategory::Simple_ ()           | int64_t method_int_BloombergLP::baljsn::Encoder_ValueDispatcher_operator_BloombergLP::bdlt::Date_BloombergLP::bdlt::Date_const_BloombergLP::bdlat_TypeCategory::Simple_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                                             |     int64_t var_8h;
                                                                                                                                                                                             |     int64_t var_10h;
                                                                                                                                                                                             |     size_t var_18h;
                                                                                                                                                                                             |     int64_t var_20h;
                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                             |     /* int BloombergLP::baljsn::Encoder_ValueDispatcher::operator()<BloombergLP::bdlt::Date>(BloombergLP::bdlt::Date const&, BloombergLP::bdlat_TypeCategory::Simple) */
    0x00482f40 push r15                                                                                                                                                                      |     
    0x00482f42 push r14                                                                                                                                                                      |     
    0x00482f44 push r12                                                                                                                                                                      |     
    0x00482f46 push rbx                                                                                                                                                                      |     
    0x00482f47 sub rsp, 0x48                                                                                                                                                                 |     
    0x00482f4b mov r14, rsi                                                                                                                                                                  |     r14 = rsi;
    0x00482f4e mov byte [rdi], 0                                                                                                                                                             |     *(rdi) = 0;
    0x00482f51 mov rbx, qword [rdi + 8]                                                                                                                                                      |     rbx = *((rdi + 8));
    0x00482f55 mov r12, qword [rdi + 0x20]                                                                                                                                                   |     r12 = *((rdi + 0x20));
    0x00482f59 cmp byte [rbx + 8], 0                                                                                                                                                         |     
                                                                                                                                                                                             |     if (*((rbx + 8)) != 0) {
    0x00482f5d je 0x482f89                                                                                                                                                                   |         
    0x00482f5f mov rax, qword [rbx + 0x18]                                                                                                                                                   |         rax = *((rbx + 0x18));
    0x00482f63 mov rcx, qword [rbx + 0x38]                                                                                                                                                   |         rcx = *((rbx + 0x38));
    0x00482f67 dec rcx                                                                                                                                                                       |         rcx--;
    0x00482f6a mov rdx, rcx                                                                                                                                                                  |         rdx = rcx;
    0x00482f6d shr rdx, 6                                                                                                                                                                    |         rdx >>= 6;
    0x00482f71 mov rax, qword [rax + rdx*8]                                                                                                                                                  |         rax = *((rax + rdx*8));
    0x00482f75 bt rax, rcx                                                                                                                                                                   |         
                                                                                                                                                                                             |         if (((rax >> rcx) & 1) >= 0) {
    0x00482f79 jae 0x482f89                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                             |         }
    0x00482f7b mov rdi, qword [rbx]                                                                                                                                                          |         
    0x00482f7e mov esi, dword [rbx + 0xc]                                                                                                                                                    |         
    0x00482f81 mov edx, dword [rbx + 0x10]                                                                                                                                                   |         edx = *((rbx + 0x10));
    0x00482f84 call 0x4d7f10                                                                                                                                                                 |         BloombergLP::bdlb::Print::indent(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,int,int) (*(rbx), *((rbx + 0xc)));
                                                                                                                                                                                             |     }
                                                                                                                                                                                             | label_0:
    0x00482f89 mov r15, qword [rbx]                                                                                                                                                          |     r15 = *(rbx);
    0x00482f8c mov dword [rsp + 8], 3                                                                                                                                                        |     *((rsp + 8)) = 3;
    0x00482f94 test r12, r12                                                                                                                                                                 |     
                                                                                                                                                                                             |     if (r12 != 0) {
    0x00482f97 je 0x482fa0                                                                                                                                                                   |         
    0x00482f99 mov esi, dword [r12 + 8]                                                                                                                                                      |         esi = *((r12 + 8));
    0x00482f9e jmp 0x482fa5                                                                                                                                                                  |         
                                                                                                                                                                                             |     } else {
    0x00482fa0 mov esi, 3                                                                                                                                                                    |         
                                                                                                                                                                                             |     }
    0x00482fa5 lea r12, [rsp + 8]                                                                                                                                                            |     r12 = rsp + 8;
    0x00482faa mov rdi, r12                                                                                                                                                                  |     
    0x00482fad call 0x4ea050                                                                                                                                                                 |     BloombergLP::bdlt::Iso8601UtilConfiguration::setFractionalSecondPrecision(int) (r12, 3);
    0x00482fb2 lea rbx, [rsp + 0x20]                                                                                                                                                         |     rbx = rsp + 0x20;
    0x00482fb7 mov rdi, rbx                                                                                                                                                                  |     
    0x00482fba mov esi, 0x27                                                                                                                                                                 |     
    0x00482fbf mov rdx, r14                                                                                                                                                                  |     
    0x00482fc2 mov rcx, r12                                                                                                                                                                  |     rcx = r12;
    0x00482fc5 call 0x4e6780                                                                                                                                                                 |     BloombergLP::bdlt::Iso8601Util::generate(char*,int,BloombergLP::bdlt::Dateconst&,BloombergLP::bdlt::Iso8601UtilConfigurationconst&) (rbx, 0x27, r14);
    0x00482fca mov qword [rsp + 0x10], rbx                                                                                                                                                   |     *((rsp + 0x10)) = rbx;
    0x00482fcf mov rdi, rbx                                                                                                                                                                  |     
    0x00482fd2 call 0x405610                                                                                                                                                                 |     rax = strlen (rbx);
    0x00482fd7 mov qword [rsp + 0x18], rax                                                                                                                                                   |     *((rsp + 0x18)) = rax;
    0x00482fdc lea rsi, [rsp + 0x10]                                                                                                                                                         |     
    0x00482fe1 mov rdi, r15                                                                                                                                                                  |     
    0x00482fe4 call 0x48ca40                                                                                                                                                                 |     BloombergLP::baljsn::PrintUtil::printString(std::_1::basic_ostream<char,std::_1::char_traits<char>>&,std::_1::basic_string_view<char,std::_1::char_traits<char>>const&) (r15, rsp + 0x10);
    0x00482fe9 add rsp, 0x48                                                                                                                                                                 |     
    0x00482fed pop rbx                                                                                                                                                                       |     
    0x00482fee pop r12                                                                                                                                                                       |     
    0x00482ff0 pop r14                                                                                                                                                                       |     
    0x00482ff2 pop r15                                                                                                                                                                       |     
    0x00482ff4 ret                                                                                                                                                                           |     return rax;
                                                                                                                                                                                             | }
