    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* baljsn_encoder.t/none @ 0x4b6a30 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::MySequenceWithChoice.operator_BloombergLP::s_baltst::MySequenceWithChoice_const_ ()        | int64_t method_BloombergLP::s_baltst::MySequenceWithChoice_operator_BloombergLP::s_baltst::MySequenceWithChoice_const_ (uint32_t arg2, uint32_t arg1) {
                                                                                                                                     |     rsi = arg2;
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* BloombergLP::s_baltst::MySequenceWithChoice::operator=(BloombergLP::s_baltst::MySequenceWithChoice const&) */
    0x004b6a30 mov rax, rdi                                                                                                          |     rax = rdi;
    0x004b6a33 cmp rdi, rsi                                                                                                          |     
                                                                                                                                     |     if (rdi == rsi) {
    0x004b6a36 je 0x4b6a45                                                                                                           |         goto label_0;
                                                                                                                                     |     }
    0x004b6a38 cmp dword [rsi + 4], 0                                                                                                |     
                                                                                                                                     |     if (*((rsi + 4)) == 0) {
    0x004b6a3c je 0x4b6a46                                                                                                           |         goto label_1;
                                                                                                                                     |     }
    0x004b6a3e mov dword [rax + 4], 0xffffffff                                                                                       |     *((rax + 4)) = 0xffffffff;
                                                                                                                                     |     do {
                                                                                                                                     | label_0:
    0x004b6a45 ret                                                                                                                   |         return rax;
                                                                                                                                     | label_1:
    0x004b6a46 mov ecx, dword [rsi]                                                                                                  |         ecx = *(rsi);
    0x004b6a48 cmp dword [rax + 4], 0                                                                                                |         
    0x004b6a4c mov dword [rax], ecx                                                                                                  |         *(rax) = ecx;
    0x004b6a4e je 0x4b6a45                                                                                                           |         
                                                                                                                                     |     } while (*((rax + 4)) == 0);
    0x004b6a50 mov dword [rax + 4], 0                                                                                                |     *((rax + 4)) = 0;
    0x004b6a57 ret                                                                                                                   |     return rax;
                                                                                                                                     | }
