    ; assembly                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                             | /* baljsn_encoder.t/assume @ 0x4d1020 */
                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice1.makeSelection6_bsl::basic_string_char__std::__1::char_traits_char___bsl::allocator_char____ ()        | uint64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice1_makeSelection6_bsl::basic_string_char_std::_1::char_traits_char_bsl::allocator_char_ (int64_t arg2, int64_t arg1) {
                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                             |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice1::makeSelection6(bsl::basic_string<char, std::__1::char_traits<char>, bsl::allocator<char> >&&) */
    0x004d1020 push r14                                                                                                                                                      |     
    0x004d1022 push rbx                                                                                                                                                      |     
    0x004d1023 push rax                                                                                                                                                      |     
    0x004d1024 mov r14, rsi                                                                                                                                                  |     r14 = rsi;
    0x004d1027 mov rbx, rdi                                                                                                                                                  |     rbx = rdi;
    0x004d102a mov eax, dword [rdi + 0x30]                                                                                                                                   |     eax = *((rdi + 0x30));
    0x004d102d test eax, eax                                                                                                                                                 |     
                                                                                                                                                                             |     if (eax != 0) {
    0x004d102f je 0x4d1046                                                                                                                                                   |         
    0x004d1031 cmp eax, 1                                                                                                                                                    |         
                                                                                                                                                                             |         if (eax == 1) {
    0x004d1034 jne 0x4d1046                                                                                                                                                  |             
    0x004d1036 mov rdi, rbx                                                                                                                                                  |             
    0x004d1039 mov rsi, r14                                                                                                                                                  |             
    0x004d103c call 0x51bd40                                                                                                                                                 |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x004d1041 jmp 0x4d1108                                                                                                                                                  |             
                                                                                                                                                                             |         }
                                                                                                                                                                             |     } else {
    0x004d1046 mov dword [rbx + 0x30], 0xffffffff                                                                                                                            |         *((rbx + 0x30)) = 0xffffffff;
    0x004d104d mov rdi, qword [rbx + 0x38]                                                                                                                                   |         rdi = *((rbx + 0x38));
    0x004d1051 test rdi, rdi                                                                                                                                                 |         
                                                                                                                                                                             |         if (rdi == 0) {
    0x004d1054 jne 0x4d106a                                                                                                                                                  |             
    0x004d1056 mov rdi, qword [rip + 0x3fc04b]                                                                                                                               |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004d105d test rdi, rdi                                                                                                                                                 |             
                                                                                                                                                                             |             if (rdi != 0) {
    0x004d1060 jne 0x4d106a                                                                                                                                                  |                 goto label_0;
                                                                                                                                                                             |             }
    0x004d1062 call 0x517520                                                                                                                                                 |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004d1067 mov rdi, rax                                                                                                                                                  |             rdi = rax;
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_0:
    0x004d106a mov rax, qword [r14 + 0x20]                                                                                                                                   |         rax = *((r14 + 0x20));
    0x004d106e mov qword [rbx + 0x20], rax                                                                                                                                   |         *((rbx + 0x20)) = rax;
    0x004d1072 movups xmm0, xmmword [r14]                                                                                                                                    |         __asm ("movups xmm0, xmmword [r14]");
    0x004d1076 movups xmm1, xmmword [r14 + 0x10]                                                                                                                             |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004d107b movups xmmword [rbx + 0x10], xmm1                                                                                                                             |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004d107f movups xmmword [rbx], xmm0                                                                                                                                    |         __asm ("movups xmmword [rbx], xmm0");
    0x004d1082 mov qword [rbx + 0x28], rdi                                                                                                                                   |         *((rbx + 0x28)) = rdi;
    0x004d1086 cmp rax, 0x17                                                                                                                                                 |         
                                                                                                                                                                             |         if (rax != 0x17) {
    0x004d108a je 0x4d1101                                                                                                                                                   |             
    0x004d108c cmp rdi, qword [r14 + 0x28]                                                                                                                                   |             
                                                                                                                                                                             |             if (rdi != *((r14 + 0x28))) {
    0x004d1090 je 0x4d10ee                                                                                                                                                   |                 
    0x004d1092 mov rax, qword [r14 + 0x18]                                                                                                                                   |                 rax = *((r14 + 0x18));
    0x004d1096 cmp rax, 0x17                                                                                                                                                 |                 
    0x004d109a mov esi, 0x17                                                                                                                                                 |                 esi = 0x17;
                                                                                                                                                                             |                 if (rax > 0x17) {
    0x004d109f cmova rsi, rax                                                                                                                                                |                     rsi = rax;
                                                                                                                                                                             |                 }
    0x004d10a3 mov qword [rbx], 0                                                                                                                                            |                 *(rbx) = 0;
    0x004d10aa mov qword [rbx + 0x18], rax                                                                                                                                   |                 *((rbx + 0x18)) = rax;
    0x004d10ae mov qword [rbx + 0x20], rsi                                                                                                                                   |                 *((rbx + 0x20)) = rsi;
    0x004d10b2 cmp rax, 0x18                                                                                                                                                 |                 
                                                                                                                                                                             |                 if (rax >= 0x18) {
    0x004d10b6 jb 0x4d10cb                                                                                                                                                   |                     
    0x004d10b8 inc rsi                                                                                                                                                       |                     rsi++;
    0x004d10bb mov rax, qword [rdi]                                                                                                                                          |                     rax = *(rdi);
    0x004d10be call qword [rax + 0x10]                                                                                                                                       |                     rax = uint64_t (*rax + 0x10)() ();
    0x004d10c1 mov qword [rbx], rax                                                                                                                                          |                     *(rbx) = rax;
    0x004d10c4 cmp qword [rbx + 0x20], 0x17                                                                                                                                  |                     
                                                                                                                                                                             |                     if (*((rbx + 0x20)) != 0x17) {
    0x004d10c9 jne 0x4d10ce                                                                                                                                                  |                         goto label_1;
                                                                                                                                                                             |                     }
                                                                                                                                                                             |                 }
    0x004d10cb mov rax, rbx                                                                                                                                                  |                 rax = rbx;
                                                                                                                                                                             | label_1:
    0x004d10ce mov rdx, qword [rbx + 0x18]                                                                                                                                   |                 rdx = *((rbx + 0x18));
    0x004d10d2 inc rdx                                                                                                                                                       |                 rdx++;
                                                                                                                                                                             |                 if (rdx == 0) {
    0x004d10d5 je 0x4d1101                                                                                                                                                   |                     goto label_2;
                                                                                                                                                                             |                 }
    0x004d10d7 cmp qword [r14 + 0x20], 0x17                                                                                                                                  |                 
                                                                                                                                                                             |                 if (*((r14 + 0x20)) != 0x17) {
    0x004d10dc je 0x4d10e1                                                                                                                                                   |                     
    0x004d10de mov r14, qword [r14]                                                                                                                                          |                     r14 = *(r14);
                                                                                                                                                                             |                 }
    0x004d10e1 mov rdi, rax                                                                                                                                                  |                 
    0x004d10e4 mov rsi, r14                                                                                                                                                  |                 
    0x004d10e7 call 0x405bd0                                                                                                                                                 |                 memcpy (rax, r14, rdx);
    0x004d10ec jmp 0x4d1101                                                                                                                                                  |                 
                                                                                                                                                                             |             } else {
    0x004d10ee mov qword [r14], 0                                                                                                                                            |                 *(r14) = 0;
    0x004d10f5 movaps xmm0, xmmword [rip + 0x6b914]                                                                                                                          |                 xmm0 = .comment;
    0x004d10fc movups xmmword [r14 + 0x18], xmm0                                                                                                                             |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                                                             |             }
                                                                                                                                                                             |         }
                                                                                                                                                                             | label_2:
    0x004d1101 mov dword [rbx + 0x30], 1                                                                                                                                     |         *((rbx + 0x30)) = 1;
                                                                                                                                                                             |     }
    0x004d1108 mov rax, rbx                                                                                                                                                  |     rax = rbx;
    0x004d110b add rsp, 8                                                                                                                                                    |     
    0x004d110f pop rbx                                                                                                                                                       |     
    0x004d1110 pop r14                                                                                                                                                       |     
    0x004d1112 ret                                                                                                                                                           |     return rax;
                                                                                                                                                                             | }
