    ; assembly                                                               | /* r2dec pseudo code output */
                                                                             | /* baljsn_encoder.t/none @ 0x4b9e80 */
                                                                             | #include <stdint.h>
                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection2__ ()        | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection2_ (int64_t arg1) {
                                                                             |     rdi = arg1;
                                                                             |     /* BloombergLP::s_baltst::Choice3::makeSelection2() */
    0x004b9e80 push rbx                                                      |     
    0x004b9e81 mov rbx, rdi                                                  |     rbx = rdi;
    0x004b9e84 mov eax, dword [rdi + 0x170]                                  |     eax = *((rdi + 0x170));
    0x004b9e8a test eax, eax                                                 |     
                                                                             |     if (eax != 0) {
    0x004b9e8c je 0x4b9e9d                                                   |         
    0x004b9e8e cmp eax, 2                                                    |         
                                                                             |         if (eax != 2) {
    0x004b9e91 je 0x4b9ea7                                                   |             
    0x004b9e93 cmp eax, 1                                                    |             
                                                                             |             if (eax != 1) {
    0x004b9e96 jne 0x4b9ec3                                                  |                 goto label_0;
                                                                             |             }
    0x004b9e98 mov byte [rbx], 0                                             |             *(rbx) = 0;
    0x004b9e9b jmp 0x4b9ed0                                                  |             
    0x004b9e9d mov rdi, rbx                                                  |             
    0x004b9ea0 call 0x4c4be0                                                 |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b9ea5 jmp 0x4b9ec3                                                  |             
                                                                             |         } else {
                                                                             |         } else {
    0x004b9ea7 cmp qword [rbx + 0x20], 0x17                                  |             
                                                                             |             if (*((rbx + 0x20)) != 0x17) {
    0x004b9eac je 0x4b9ebb                                                   |                 
    0x004b9eae mov rsi, qword [rbx]                                          |                 rsi = *(rbx);
    0x004b9eb1 mov rdi, qword [rbx + 0x28]                                   |                 rdi = *((rbx + 0x28));
    0x004b9eb5 mov rax, qword [rdi]                                          |                 rax = *(rdi);
    0x004b9eb8 call qword [rax + 0x18]                                       |                 uint64_t (*rax + 0x18)() ();
                                                                             |             }
    0x004b9ebb mov qword [rbx + 0x18], 0xffffffffffffffff                    |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                             |         }
                                                                             | label_0:
    0x004b9ec3 mov byte [rbx], 0                                             |         *(rbx) = 0;
    0x004b9ec6 mov dword [rbx + 0x170], 1                                    |         *((rbx + 0x170)) = 1;
                                                                             |     }
    0x004b9ed0 mov rax, rbx                                                  |     rax = rbx;
    0x004b9ed3 pop rbx                                                       |     
    0x004b9ed4 ret                                                           |     return rax;
                                                                             | }
