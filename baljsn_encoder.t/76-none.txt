    ; assembly                                                                                               | /* r2dec pseudo code output */
                                                                                                             | /* baljsn_encoder.t/none @ 0x4b9b30 */
                                                                                                             | #include <stdint.h>
                                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection4_BloombergLP::s_baltst::CustomInt_ ()        | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection4_BloombergLP::s_baltst::CustomInt_ (int64_t arg2, int64_t arg1) {
                                                                                                             |     rsi = arg2;
                                                                                                             |     rdi = arg1;
                                                                                                             |     /* BloombergLP::s_baltst::Choice3::makeSelection4(BloombergLP::s_baltst::CustomInt&&) */
    0x004b9b30 push r14                                                                                      |     
    0x004b9b32 push rbx                                                                                      |     
    0x004b9b33 push rax                                                                                      |     
    0x004b9b34 mov r14, rsi                                                                                  |     r14 = rsi;
    0x004b9b37 mov rbx, rdi                                                                                  |     rbx = rdi;
    0x004b9b3a mov eax, dword [rdi + 0x170]                                                                  |     eax = *((rdi + 0x170));
    0x004b9b40 test eax, eax                                                                                 |     
                                                                                                             |     if (eax != 0) {
    0x004b9b42 je 0x4b9b55                                                                                   |         
    0x004b9b44 cmp eax, 2                                                                                    |         
                                                                                                             |         if (eax != 2) {
    0x004b9b47 je 0x4b9b5f                                                                                   |             
    0x004b9b49 cmp eax, 3                                                                                    |             
                                                                                                             |             if (eax != 3) {
    0x004b9b4c jne 0x4b9b7b                                                                                  |                 goto label_0;
                                                                                                             |             }
    0x004b9b4e mov eax, dword [r14]                                                                          |             eax = *(r14);
    0x004b9b51 mov dword [rbx], eax                                                                          |             *(rbx) = eax;
    0x004b9b53 jmp 0x4b9b94                                                                                  |             
    0x004b9b55 mov rdi, rbx                                                                                  |             
    0x004b9b58 call 0x4c4be0                                                                                 |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b9b5d jmp 0x4b9b7b                                                                                  |             
                                                                                                             |         } else {
                                                                                                             |         } else {
    0x004b9b5f cmp qword [rbx + 0x20], 0x17                                                                  |             
                                                                                                             |             if (*((rbx + 0x20)) != 0x17) {
    0x004b9b64 je 0x4b9b73                                                                                   |                 
    0x004b9b66 mov rsi, qword [rbx]                                                                          |                 rsi = *(rbx);
    0x004b9b69 mov rdi, qword [rbx + 0x28]                                                                   |                 rdi = *((rbx + 0x28));
    0x004b9b6d mov rax, qword [rdi]                                                                          |                 rax = *(rdi);
    0x004b9b70 call qword [rax + 0x18]                                                                       |                 uint64_t (*rax + 0x18)() ();
                                                                                                             |             }
    0x004b9b73 mov qword [rbx + 0x18], 0xffffffffffffffff                                                    |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                             |         }
                                                                                                             | label_0:
    0x004b9b7b mov dword [rbx + 0x170], 0xffffffff                                                           |         *((rbx + 0x170)) = 0xffffffff;
    0x004b9b85 mov eax, dword [r14]                                                                          |         eax = *(r14);
    0x004b9b88 mov dword [rbx], eax                                                                          |         *(rbx) = eax;
    0x004b9b8a mov dword [rbx + 0x170], 3                                                                    |         *((rbx + 0x170)) = 3;
                                                                                                             |     }
    0x004b9b94 mov rax, rbx                                                                                  |     rax = rbx;
    0x004b9b97 add rsp, 8                                                                                    |     
    0x004b9b9b pop rbx                                                                                       |     
    0x004b9b9c pop r14                                                                                       |     
    0x004b9b9e ret                                                                                           |     return rax;
                                                                                                             | }
