    ; assembly                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                     | /* baljsn_encoder.t/none @ 0x4d0360 */
                                                                                                                                     | #include <stdint.h>
                                                                                                                                     |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection3_BloombergLP::s_baltst::CustomString_ ()         | uint64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection3_BloombergLP::s_baltst::CustomString_ (int64_t arg2, int64_t arg1) {
                                                                                                                                     |     rsi = arg2;
                                                                                                                                     |     rdi = arg1;
                                                                                                                                     |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection3(BloombergLP::s_baltst::CustomString&&) */
    0x004d0360 push r14                                                                                                              |     
    0x004d0362 push rbx                                                                                                              |     
    0x004d0363 push rax                                                                                                              |     
    0x004d0364 mov r14, rsi                                                                                                          |     r14 = rsi;
    0x004d0367 mov rbx, rdi                                                                                                          |     rbx = rdi;
    0x004d036a mov eax, dword [rdi + 0x170]                                                                                          |     eax = *((rdi + 0x170));
    0x004d0370 test eax, eax                                                                                                         |     
                                                                                                                                     |     if (eax != 0) {
    0x004d0372 je 0x4d0389                                                                                                           |         
    0x004d0374 cmp eax, 2                                                                                                            |         
                                                                                                                                     |         if (eax == 2) {
    0x004d0377 jne 0x4d0391                                                                                                          |             
    0x004d0379 mov rdi, rbx                                                                                                          |             
    0x004d037c mov rsi, r14                                                                                                          |             
    0x004d037f call 0x51c980                                                                                                         |             bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::operator=(bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>&&) (rbx, r14);
    0x004d0384 jmp 0x4d045c                                                                                                          |             
                                                                                                                                     |         } else {
    0x004d0389 mov rdi, rbx                                                                                                          |             
    0x004d038c call 0x4c4be0                                                                                                         |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
                                                                                                                                     |         }
    0x004d0391 mov dword [rbx + 0x170], 0xffffffff                                                                                   |         *((rbx + 0x170)) = 0xffffffff;
    0x004d039b mov rdi, qword [rbx + 0x178]                                                                                          |         rdi = *((rbx + 0x178));
    0x004d03a2 test rdi, rdi                                                                                                         |         
                                                                                                                                     |         if (rdi == 0) {
    0x004d03a5 jne 0x4d03bb                                                                                                          |             
    0x004d03a7 mov rdi, qword [rip + 0x3fccfa]                                                                                       |             rdi = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004d03ae test rdi, rdi                                                                                                         |             
                                                                                                                                     |             if (rdi != 0) {
    0x004d03b1 jne 0x4d03bb                                                                                                          |                 goto label_0;
                                                                                                                                     |             }
    0x004d03b3 call 0x518150                                                                                                         |             rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004d03b8 mov rdi, rax                                                                                                          |             rdi = rax;
                                                                                                                                     |         }
                                                                                                                                     | label_0:
    0x004d03bb mov rax, qword [r14 + 0x20]                                                                                           |         rax = *((r14 + 0x20));
    0x004d03bf mov qword [rbx + 0x20], rax                                                                                           |         *((rbx + 0x20)) = rax;
    0x004d03c3 movups xmm0, xmmword [r14]                                                                                            |         __asm ("movups xmm0, xmmword [r14]");
    0x004d03c7 movups xmm1, xmmword [r14 + 0x10]                                                                                     |         __asm ("movups xmm1, xmmword [r14 + 0x10]");
    0x004d03cc movups xmmword [rbx + 0x10], xmm1                                                                                     |         __asm ("movups xmmword [rbx + 0x10], xmm1");
    0x004d03d0 movups xmmword [rbx], xmm0                                                                                            |         __asm ("movups xmmword [rbx], xmm0");
    0x004d03d3 mov qword [rbx + 0x28], rdi                                                                                           |         *((rbx + 0x28)) = rdi;
    0x004d03d7 cmp rax, 0x17                                                                                                         |         
                                                                                                                                     |         if (rax != 0x17) {
    0x004d03db je 0x4d0452                                                                                                           |             
    0x004d03dd cmp rdi, qword [r14 + 0x28]                                                                                           |             
                                                                                                                                     |             if (rdi != *((r14 + 0x28))) {
    0x004d03e1 je 0x4d043f                                                                                                           |                 
    0x004d03e3 mov rax, qword [r14 + 0x18]                                                                                           |                 rax = *((r14 + 0x18));
    0x004d03e7 cmp rax, 0x17                                                                                                         |                 
    0x004d03eb mov esi, 0x17                                                                                                         |                 esi = 0x17;
                                                                                                                                     |                 if (rax > 0x17) {
    0x004d03f0 cmova rsi, rax                                                                                                        |                     rsi = rax;
                                                                                                                                     |                 }
    0x004d03f4 mov qword [rbx], 0                                                                                                    |                 *(rbx) = 0;
    0x004d03fb mov qword [rbx + 0x18], rax                                                                                           |                 *((rbx + 0x18)) = rax;
    0x004d03ff mov qword [rbx + 0x20], rsi                                                                                           |                 *((rbx + 0x20)) = rsi;
    0x004d0403 cmp rax, 0x18                                                                                                         |                 
                                                                                                                                     |                 if (rax >= 0x18) {
    0x004d0407 jb 0x4d041c                                                                                                           |                     
    0x004d0409 inc rsi                                                                                                               |                     rsi++;
    0x004d040c mov rax, qword [rdi]                                                                                                  |                     rax = *(rdi);
    0x004d040f call qword [rax + 0x10]                                                                                               |                     rax = uint64_t (*rax + 0x10)() ();
    0x004d0412 mov qword [rbx], rax                                                                                                  |                     *(rbx) = rax;
    0x004d0415 cmp qword [rbx + 0x20], 0x17                                                                                          |                     
                                                                                                                                     |                     if (*((rbx + 0x20)) != 0x17) {
    0x004d041a jne 0x4d041f                                                                                                          |                         goto label_1;
                                                                                                                                     |                     }
                                                                                                                                     |                 }
    0x004d041c mov rax, rbx                                                                                                          |                 rax = rbx;
                                                                                                                                     | label_1:
    0x004d041f mov rdx, qword [rbx + 0x18]                                                                                           |                 rdx = *((rbx + 0x18));
    0x004d0423 inc rdx                                                                                                               |                 rdx++;
                                                                                                                                     |                 if (rdx == 0) {
    0x004d0426 je 0x4d0452                                                                                                           |                     goto label_2;
                                                                                                                                     |                 }
    0x004d0428 cmp qword [r14 + 0x20], 0x17                                                                                          |                 
                                                                                                                                     |                 if (*((r14 + 0x20)) != 0x17) {
    0x004d042d je 0x4d0432                                                                                                           |                     
    0x004d042f mov r14, qword [r14]                                                                                                  |                     r14 = *(r14);
                                                                                                                                     |                 }
    0x004d0432 mov rdi, rax                                                                                                          |                 
    0x004d0435 mov rsi, r14                                                                                                          |                 
    0x004d0438 call 0x405c20                                                                                                         |                 memcpy (rax, r14, rdx);
    0x004d043d jmp 0x4d0452                                                                                                          |                 
                                                                                                                                     |             } else {
    0x004d043f mov qword [r14], 0                                                                                                    |                 *(r14) = 0;
    0x004d0446 movaps xmm0, xmmword [rip + 0x6d1e3]                                                                                  |                 xmm0 = .comment;
    0x004d044d movups xmmword [r14 + 0x18], xmm0                                                                                     |                 __asm ("movups xmmword [r14 + 0x18], xmm0");
                                                                                                                                     |             }
                                                                                                                                     |         }
                                                                                                                                     | label_2:
    0x004d0452 mov dword [rbx + 0x170], 2                                                                                            |         *((rbx + 0x170)) = 2;
                                                                                                                                     |     }
    0x004d045c mov rax, rbx                                                                                                          |     rax = rbx;
    0x004d045f add rsp, 8                                                                                                            |     
    0x004d0463 pop rbx                                                                                                               |     
    0x004d0464 pop r14                                                                                                               |     
    0x004d0466 ret                                                                                                                   |     return rax;
                                                                                                                                     | }
