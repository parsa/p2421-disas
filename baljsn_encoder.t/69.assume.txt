    ; assembly                                                                               | /* r2dec pseudo code output */
                                                                                             | /* baljsn_encoder.t/assume @ 0x4b92b0 */
                                                                                             | #include <stdint.h>
                                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection2_unsigned_char_ ()           | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection2_unsigned_char_ (int64_t arg2, int64_t arg1) {
                                                                                             |     rsi = arg2;
                                                                                             |     rdi = arg1;
                                                                                             |     /* BloombergLP::s_baltst::Choice3::makeSelection2(unsigned char) */
    0x004b92b0 push rbp                                                                      |     
    0x004b92b1 push rbx                                                                      |     
    0x004b92b2 push rax                                                                      |     
    0x004b92b3 mov ebp, esi                                                                  |     
    0x004b92b5 mov rbx, rdi                                                                  |     rbx = rdi;
    0x004b92b8 mov eax, dword [rdi + 0x170]                                                  |     eax = *((rdi + 0x170));
    0x004b92be cmp rax, 3                                                                    |     
                                                                                             |     if (rax <= 3) {
    0x004b92c2 ja 0x4b92f6                                                                   |         
                                                                                             |         /* switch table (4 cases) at 0x648b80 */
    0x004b92c4 jmp qword [rax*8 + 0x648b80]                                                  |         
    0x004b92cb mov rdi, rbx                                                                  |         
    0x004b92ce call 0x4c4a50                                                                 |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b92d3 jmp 0x4b92f6                                                                  |         goto label_0;
    0x004b92d5 mov byte [rbx], bpl                                                           |         *(rbx) = bpl;
    0x004b92d8 jmp 0x4b9303                                                                  |         goto label_1;
    0x004b92da cmp qword [rbx + 0x20], 0x17                                                  |         
                                                                                             |         if (*((rbx + 0x20)) != 0x17) {
    0x004b92df je 0x4b92ee                                                                   |             
    0x004b92e1 mov rsi, qword [rbx]                                                          |             rsi = *(rbx);
    0x004b92e4 mov rdi, qword [rbx + 0x28]                                                   |             rdi = *((rbx + 0x28));
    0x004b92e8 mov rax, qword [rdi]                                                          |             rax = *(rdi);
    0x004b92eb call qword [rax + 0x18]                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                             |         }
    0x004b92ee mov qword [rbx + 0x18], 0xffffffffffffffff                                    |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                             |     }
                                                                                             | label_0:
    0x004b92f6 mov byte [rbx], bpl                                                           |     *(rbx) = bpl;
    0x004b92f9 mov dword [rbx + 0x170], 1                                                    |     *((rbx + 0x170)) = 1;
                                                                                             | label_1:
    0x004b9303 mov rax, rbx                                                                  |     rax = rbx;
    0x004b9306 add rsp, 8                                                                    |     
    0x004b930a pop rbx                                                                       |     
    0x004b930b pop rbp                                                                       |     
    0x004b930c ret                                                                           |     return rax;
                                                                                             | }
