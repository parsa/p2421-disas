    ; assembly                                                               | /* r2dec pseudo code output */
                                                                             | /* baljsn_encoder.t/none @ 0x4b9f60 */
                                                                             | #include <stdint.h>
                                                                             |  
    ; (fcn) method.BloombergLP::s_baltst::Choice3.makeSelection4__ ()        | int64_t method_BloombergLP::s_baltst::Choice3_makeSelection4_ (int64_t arg1) {
                                                                             |     rdi = arg1;
                                                                             |     /* BloombergLP::s_baltst::Choice3::makeSelection4() */
    0x004b9f60 push rbx                                                      |     
    0x004b9f61 mov rbx, rdi                                                  |     rbx = rdi;
    0x004b9f64 mov eax, dword [rdi + 0x170]                                  |     eax = *((rdi + 0x170));
    0x004b9f6a test eax, eax                                                 |     
                                                                             |     if (eax != 0) {
    0x004b9f6c je 0x4b9f80                                                   |         
    0x004b9f6e cmp eax, 2                                                    |         
                                                                             |         if (eax != 2) {
    0x004b9f71 je 0x4b9f8a                                                   |             
    0x004b9f73 cmp eax, 3                                                    |             
                                                                             |             if (eax != 3) {
    0x004b9f76 jne 0x4b9fa6                                                  |                 goto label_0;
                                                                             |             }
    0x004b9f78 mov dword [rbx], 0                                            |             *(rbx) = 0;
    0x004b9f7e jmp 0x4b9fb6                                                  |             
    0x004b9f80 mov rdi, rbx                                                  |             
    0x004b9f83 call 0x4c4be0                                                 |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004b9f88 jmp 0x4b9fa6                                                  |             
                                                                             |         } else {
                                                                             |         } else {
    0x004b9f8a cmp qword [rbx + 0x20], 0x17                                  |             
                                                                             |             if (*((rbx + 0x20)) != 0x17) {
    0x004b9f8f je 0x4b9f9e                                                   |                 
    0x004b9f91 mov rsi, qword [rbx]                                          |                 rsi = *(rbx);
    0x004b9f94 mov rdi, qword [rbx + 0x28]                                   |                 rdi = *((rbx + 0x28));
    0x004b9f98 mov rax, qword [rdi]                                          |                 rax = *(rdi);
    0x004b9f9b call qword [rax + 0x18]                                       |                 uint64_t (*rax + 0x18)() ();
                                                                             |             }
    0x004b9f9e mov qword [rbx + 0x18], 0xffffffffffffffff                    |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                             |         }
                                                                             | label_0:
    0x004b9fa6 mov dword [rbx], 0                                            |         *(rbx) = 0;
    0x004b9fac mov dword [rbx + 0x170], 3                                    |         *((rbx + 0x170)) = 3;
                                                                             |     }
    0x004b9fb6 mov rax, rbx                                                  |     rax = rbx;
    0x004b9fb9 pop rbx                                                       |     
    0x004b9fba ret                                                           |     return rax;
                                                                             | }
