    ; assembly                                                                                                   | /* r2dec pseudo code output */
                                                                                                                 | /* baljsn_encoder.t/none @ 0x4cfe90 */
                                                                                                                 | #include <stdint.h>
                                                                                                                 |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection2_unsigned_char_ ()           | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection2_unsigned_char_ (int64_t arg2, int64_t arg1) {
                                                                                                                 |     rsi = arg2;
                                                                                                                 |     rdi = arg1;
                                                                                                                 |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection2(unsigned char) */
    0x004cfe90 push rbp                                                                                          |     
    0x004cfe91 push rbx                                                                                          |     
    0x004cfe92 push rax                                                                                          |     
    0x004cfe93 mov ebp, esi                                                                                      |     
    0x004cfe95 mov rbx, rdi                                                                                      |     rbx = rdi;
    0x004cfe98 mov eax, dword [rdi + 0x170]                                                                      |     eax = *((rdi + 0x170));
    0x004cfe9e test eax, eax                                                                                     |     
                                                                                                                 |     if (eax != 0) {
    0x004cfea0 je 0x4cfeb1                                                                                       |         
    0x004cfea2 cmp eax, 2                                                                                        |         
                                                                                                                 |         if (eax != 2) {
    0x004cfea5 je 0x4cfebb                                                                                       |             
    0x004cfea7 cmp eax, 1                                                                                        |             
                                                                                                                 |             if (eax != 1) {
    0x004cfeaa jne 0x4cfed7                                                                                      |                 goto label_0;
                                                                                                                 |             }
    0x004cfeac mov byte [rbx], bpl                                                                               |             *(rbx) = bpl;
    0x004cfeaf jmp 0x4cfee4                                                                                      |             
    0x004cfeb1 mov rdi, rbx                                                                                      |             
    0x004cfeb4 call 0x4c4be0                                                                                     |             BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004cfeb9 jmp 0x4cfed7                                                                                      |             
                                                                                                                 |         } else {
                                                                                                                 |         } else {
    0x004cfebb cmp qword [rbx + 0x20], 0x17                                                                      |             
                                                                                                                 |             if (*((rbx + 0x20)) != 0x17) {
    0x004cfec0 je 0x4cfecf                                                                                       |                 
    0x004cfec2 mov rsi, qword [rbx]                                                                              |                 rsi = *(rbx);
    0x004cfec5 mov rdi, qword [rbx + 0x28]                                                                       |                 rdi = *((rbx + 0x28));
    0x004cfec9 mov rax, qword [rdi]                                                                              |                 rax = *(rdi);
    0x004cfecc call qword [rax + 0x18]                                                                           |                 uint64_t (*rax + 0x18)() ();
                                                                                                                 |             }
    0x004cfecf mov qword [rbx + 0x18], 0xffffffffffffffff                                                        |             *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                 |         }
                                                                                                                 | label_0:
    0x004cfed7 mov byte [rbx], bpl                                                                               |         *(rbx) = bpl;
    0x004cfeda mov dword [rbx + 0x170], 1                                                                        |         *((rbx + 0x170)) = 1;
                                                                                                                 |     }
    0x004cfee4 mov rax, rbx                                                                                      |     rax = rbx;
    0x004cfee7 add rsp, 8                                                                                        |     
    0x004cfeeb pop rbx                                                                                           |     
    0x004cfeec pop rbp                                                                                           |     
    0x004cfeed ret                                                                                               |     return rax;
                                                                                                                 | }
