    ; assembly                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                         | /* baljsn_encoder.t/assume @ 0x4cfe50 */
                                                                                                                                         | #include <stdint.h>
                                                                                                                                         |  
    ; (fcn) method.BloombergLP::s_baltst::SequenceWithAnonymityChoice.makeSelection4_BloombergLP::s_baltst::CustomInt_const_ ()          | int64_t method_BloombergLP::s_baltst::SequenceWithAnonymityChoice_makeSelection4_BloombergLP::s_baltst::CustomInt_const_ (int64_t arg2, int64_t arg1) {
                                                                                                                                         |     rsi = arg2;
                                                                                                                                         |     rdi = arg1;
                                                                                                                                         |     /* BloombergLP::s_baltst::SequenceWithAnonymityChoice::makeSelection4(BloombergLP::s_baltst::CustomInt const&) */
    0x004cfe50 push r14                                                                                                                  |     
    0x004cfe52 push rbx                                                                                                                  |     
    0x004cfe53 push rax                                                                                                                  |     
    0x004cfe54 mov r14, rsi                                                                                                              |     r14 = rsi;
    0x004cfe57 mov rbx, rdi                                                                                                              |     rbx = rdi;
    0x004cfe5a mov eax, dword [rdi + 0x170]                                                                                              |     eax = *((rdi + 0x170));
    0x004cfe60 cmp rax, 3                                                                                                                |     
                                                                                                                                         |     if (rax <= 3) {
    0x004cfe64 ja 0x4cfe93                                                                                                               |         
                                                                                                                                         |         /* switch table (4 cases) at 0x64a2e0 */
    0x004cfe66 jmp qword [rax*8 + 0x64a2e0]                                                                                              |         
    0x004cfe6d mov rdi, rbx                                                                                                              |         
    0x004cfe70 call 0x4c4a50                                                                                                             |         BloombergLP::s_baltst::Sequence6::~Sequence6() (rbx);
    0x004cfe75 jmp 0x4cfe93                                                                                                              |         goto label_0;
    0x004cfe77 cmp qword [rbx + 0x20], 0x17                                                                                              |         
                                                                                                                                         |         if (*((rbx + 0x20)) != 0x17) {
    0x004cfe7c je 0x4cfe8b                                                                                                               |             
    0x004cfe7e mov rsi, qword [rbx]                                                                                                      |             rsi = *(rbx);
    0x004cfe81 mov rdi, qword [rbx + 0x28]                                                                                               |             rdi = *((rbx + 0x28));
    0x004cfe85 mov rax, qword [rdi]                                                                                                      |             rax = *(rdi);
    0x004cfe88 call qword [rax + 0x18]                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                         |         }
    0x004cfe8b mov qword [rbx + 0x18], 0xffffffffffffffff                                                                                |         *((rbx + 0x18)) = 0xffffffffffffffff;
                                                                                                                                         |     }
                                                                                                                                         | label_0:
    0x004cfe93 mov dword [rbx + 0x170], 0xffffffff                                                                                       |     *((rbx + 0x170)) = 0xffffffff;
    0x004cfe9d mov eax, dword [r14]                                                                                                      |     eax = *(r14);
    0x004cfea0 mov dword [rbx], eax                                                                                                      |     *(rbx) = eax;
    0x004cfea2 mov dword [rbx + 0x170], 3                                                                                                |     *((rbx + 0x170)) = 3;
    0x004cfeac jmp 0x4cfeb3                                                                                                              |     goto label_1;
    0x004cfeae mov eax, dword [r14]                                                                                                      |     eax = *(r14);
    0x004cfeb1 mov dword [rbx], eax                                                                                                      |     *(rbx) = eax;
                                                                                                                                         | label_1:
    0x004cfeb3 mov rax, rbx                                                                                                              |     rax = rbx;
    0x004cfeb6 add rsp, 8                                                                                                                |     
    0x004cfeba pop rbx                                                                                                                   |     
    0x004cfebb pop r14                                                                                                                   |     
    0x004cfebd ret                                                                                                                       |     return rax;
                                                                                                                                         | }
