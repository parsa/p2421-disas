    ; assembly                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                 | /* balm_collector.t/assume @ 0x40b440 */
                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadGroup::addThread_bsl.function_void_______bsl::function_void_____const__BloombergLP::bslmt::ThreadAttributes_const_ ()           | uint64_t method_int_BloombergLP::bslmt::ThreadGroup::addThread_bsl_function_void_bsl::function_void_const_BloombergLP::bslmt::ThreadAttributes_const_ (uint32_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                 |     int64_t var_8h;
                                                                                                                                                                                 |     int64_t var_20h;
                                                                                                                                                                                 |     uint32_t var_40h;
                                                                                                                                                                                 |     int64_t var_48h;
                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadGroup::addThread<bsl::function<void ()> >(bsl::function<void ()> const&, BloombergLP::bslmt::ThreadAttributes const&) */
    0x0040b440 push rbp                                                                                                                                                          |     
    0x0040b441 push r14                                                                                                                                                          |     
    0x0040b443 push rbx                                                                                                                                                          |     
    0x0040b444 sub rsp, 0x50                                                                                                                                                     |     
    0x0040b448 mov rbp, rsi                                                                                                                                                      |     
    0x0040b44b mov r14, rdi                                                                                                                                                      |     r14 = rdi;
    0x0040b44e cmp dword [rdx], 0                                                                                                                                                |     
                                                                                                                                                                                 |     if (*(rdx) == 0) {
    0x0040b451 je 0x40b4a8                                                                                                                                                       |         goto label_1;
                                                                                                                                                                                 |     }
    0x0040b453 lea rbx, [rsp + 8]                                                                                                                                                |     rbx = rsp + 8;
    0x0040b458 mov rdi, rbx                                                                                                                                                      |     
    0x0040b45b mov rsi, rdx                                                                                                                                                      |     
    0x0040b45e xor edx, edx                                                                                                                                                      |     
    0x0040b460 call 0x40eb30                                                                                                                                                     |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes(BloombergLP::bslmt::ThreadAttributesconst&,BloombergLP::bslma::Allocator*) (rbx, rdx, 0);
    0x0040b465 mov dword [rsp + 8], 0                                                                                                                                            |     *((rsp + 8)) = 0;
    0x0040b46d mov rcx, qword [r14 + 0x20]                                                                                                                                       |     
    0x0040b471 mov rdi, rsp                                                                                                                                                      |     
    0x0040b474 mov rsi, rbx                                                                                                                                                      |     
    0x0040b477 mov rdx, rbp                                                                                                                                                      |     
    0x0040b47a call 0x40ba80                                                                                                                                                     |     eax = intBloombergLP::bslmt::ThreadUtil::createWithAllocator<bsl::function<void()>>(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,bsl::function<void()>const&,BloombergLP::bslma::Allocator*) (rsp, rbx, rbp, *((r14 + 0x20)));
    0x0040b47f mov ebp, eax                                                                                                                                                      |     
    0x0040b481 cmp qword [rsp + 0x40], 0x17                                                                                                                                      |     
                                                                                                                                                                                 |     if (*((rsp + 0x40)) != 0x17) {
    0x0040b487 je 0x40b499                                                                                                                                                       |         
    0x0040b489 mov rsi, qword [rsp + 0x20]                                                                                                                                       |         rsi = *((rsp + 0x20));
    0x0040b48e mov rdi, qword [rsp + 0x48]                                                                                                                                       |         rdi = *((rsp + 0x48));
    0x0040b493 mov rax, qword [rdi]                                                                                                                                              |         rax = *(rdi);
    0x0040b496 call qword [rax + 0x18]                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                 |     }
    0x0040b499 test ebp, ebp                                                                                                                                                     |     
                                                                                                                                                                                 |     if (ebp == 0) {
    0x0040b49b je 0x40b4c0                                                                                                                                                       |         goto label_2;
                                                                                                                                                                                 |     }
                                                                                                                                                                                 |     do {
                                                                                                                                                                                 | label_0:
    0x0040b49d mov eax, ebp                                                                                                                                                      |         eax = ebp;
    0x0040b49f add rsp, 0x50                                                                                                                                                     |         
    0x0040b4a3 pop rbx                                                                                                                                                           |         
    0x0040b4a4 pop r14                                                                                                                                                           |         
    0x0040b4a6 pop rbp                                                                                                                                                           |         
    0x0040b4a7 ret                                                                                                                                                               |         return rax;
                                                                                                                                                                                 | label_1:
    0x0040b4a8 mov rcx, qword [r14 + 0x20]                                                                                                                                       |         
    0x0040b4ac mov rdi, rsp                                                                                                                                                      |         
    0x0040b4af mov rsi, rdx                                                                                                                                                      |         
    0x0040b4b2 mov rdx, rbp                                                                                                                                                      |         
    0x0040b4b5 call 0x40ba80                                                                                                                                                     |         eax = intBloombergLP::bslmt::ThreadUtil::createWithAllocator<bsl::function<void()>>(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,bsl::function<void()>const&,BloombergLP::bslma::Allocator*) (rsp, rdx, rbp, *((r14 + 0x20)));
    0x0040b4ba mov ebp, eax                                                                                                                                                      |         
    0x0040b4bc test ebp, ebp                                                                                                                                                     |         
    0x0040b4be jne 0x40b49d                                                                                                                                                      |         
                                                                                                                                                                                 |     } while (ebp != 0);
                                                                                                                                                                                 | label_2:
    0x0040b4c0 mov rsi, rsp                                                                                                                                                      |     
    0x0040b4c3 mov rdi, r14                                                                                                                                                      |     
    0x0040b4c6 call 0x40ee70                                                                                                                                                     |     BloombergLP::bslmt::ThreadGroup::addThread(unsigned longconst&) (r14, rsp);
    0x0040b4cb jmp 0x40b49d                                                                                                                                                      |     goto label_0;
                                                                                                                                                                                 | }
