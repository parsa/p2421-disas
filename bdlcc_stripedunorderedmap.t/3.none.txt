    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* bdlcc_stripedunorderedmap.t/none @ 0x585ab0 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bslmt.ThroughputBenchmark_WorkFunction__unsigned_long__BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bslmt_ThroughputBenchmark_WorkFunction_unsigned_long_BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bslmt::ThroughputBenchmark_WorkFunction>(unsigned long*, BloombergLP::bslmt::ThroughputBenchmark_WorkFunction const&, BloombergLP::bslma::Allocator*) */
    0x00585ab0 push rbp                                                                                                                                                                                                                              |     
    0x00585ab1 push r15                                                                                                                                                                                                                              |     
    0x00585ab3 push r14                                                                                                                                                                                                                              |     
    0x00585ab5 push rbx                                                                                                                                                                                                                              |     
    0x00585ab6 sub rsp, 0x48                                                                                                                                                                                                                         |     
    0x00585aba mov r14, rdx                                                                                                                                                                                                                          |     r14 = rdx;
    0x00585abd mov rbp, rsi                                                                                                                                                                                                                          |     
    0x00585ac0 mov r15, rdi                                                                                                                                                                                                                          |     r15 = rdi;
    0x00585ac3 test rdx, rdx                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (rdx == 0) {
    0x00585ac6 jne 0x585adc                                                                                                                                                                                                                          |         
    0x00585ac8 mov r14, qword [rip + 0x29da11]                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00585acf test r14, r14                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x00585ad2 jne 0x585adc                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                     |         }
    0x00585ad4 call 0x5827a0                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00585ad9 mov r14, rax                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                     | label_0:
    0x00585adc mov rax, qword [r14]                                                                                                                                                                                                                  |     rax = *(r14);
    0x00585adf mov esi, 0x40                                                                                                                                                                                                                         |     esi = 0x40;
    0x00585ae4 mov rdi, r14                                                                                                                                                                                                                          |     rdi = r14;
    0x00585ae7 call qword [rax + 0x10]                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00585aea mov rbx, rax                                                                                                                                                                                                                          |     rbx = rax;
    0x00585aed mov qword [rax], 0x585c40                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_.invokerFunction_void_;
    0x00585af4 mov rax, qword [rbp]                                                                                                                                                                                                                  |     rax = *(rbp);
    0x00585af8 mov qword [rbx + 8], rax                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x00585afc lea rdi, [rbx + 0x10]                                                                                                                                                                                                                 |     
    0x00585b00 mov qword [rbx + 0x10], 0                                                                                                                                                                                                             |     *((rbx + 0x10)) = 0;
    0x00585b08 mov qword [rbx + 0x38], r14                                                                                                                                                                                                           |     *((rbx + 0x38)) = r14;
    0x00585b0c movaps xmm0, xmmword [rip + 0x28bdd]                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00585b13 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00585b17 mov ecx, 0x5bd750                                                                                                                                                                                                                     |     
    0x00585b1c xor esi, esi                                                                                                                                                                                                                          |     
    0x00585b1e xor edx, edx                                                                                                                                                                                                                          |     
    0x00585b20 call 0x58c6f0                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00585b25 mov rdi, rsp                                                                                                                                                                                                                          |     
    0x00585b28 call 0x583780                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00585b2d mov rsi, rsp                                                                                                                                                                                                                          |     
    0x00585b30 mov edx, 0x5ae480                                                                                                                                                                                                                     |     
    0x00585b35 mov rdi, r15                                                                                                                                                                                                                          |     
    0x00585b38 mov rcx, rbx                                                                                                                                                                                                                          |     
    0x00585b3b call 0x583ad0                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00585b40 mov ebp, eax                                                                                                                                                                                                                          |     
    0x00585b42 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x00585b48 je 0x585b5a                                                                                                                                                                                                                           |         
    0x00585b4a mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x00585b4f mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x00585b54 mov rax, qword [rdi]                                                                                                                                                                                                                  |         rax = *(rdi);
    0x00585b57 call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x00585b5a test ebp, ebp                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x00585b5c je 0x585b87                                                                                                                                                                                                                           |         
    0x00585b5e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |         if (*((rbx + 0x30)) != 0x17) {
    0x00585b63 je 0x585b73                                                                                                                                                                                                                           |             
    0x00585b65 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                           |             rsi = *((rbx + 0x10));
    0x00585b69 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                           |             rdi = *((rbx + 0x38));
    0x00585b6d mov rax, qword [rdi]                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00585b70 call qword [rax + 0x18]                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |         }
    0x00585b73 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                            |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00585b7b mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x00585b7e mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x00585b81 mov rsi, rbx                                                                                                                                                                                                                          |         rsi = rbx;
    0x00585b84 call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x00585b87 mov eax, ebp                                                                                                                                                                                                                          |     eax = ebp;
    0x00585b89 add rsp, 0x48                                                                                                                                                                                                                         |     
    0x00585b8d pop rbx                                                                                                                                                                                                                               |     
    0x00585b8e pop r14                                                                                                                                                                                                                               |     
    0x00585b90 pop r15                                                                                                                                                                                                                               |     
    0x00585b92 pop rbp                                                                                                                                                                                                                               |     
    0x00585b93 ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
