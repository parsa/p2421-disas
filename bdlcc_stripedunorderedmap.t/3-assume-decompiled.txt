    ; assembly                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                     | /* bdlcc_stripedunorderedmap.t/assume @ 0x585c70 */
                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bslmt.ThroughputBenchmark_WorkFunction__unsigned_long__BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bslmt_ThroughputBenchmark_WorkFunction_unsigned_long_BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bslmt::ThroughputBenchmark_WorkFunction>(unsigned long*, BloombergLP::bslmt::ThroughputBenchmark_WorkFunction const&, BloombergLP::bslma::Allocator*) */
    0x00585c70 push rbp                                                                                                                                                                                                                              |     
    0x00585c71 push r15                                                                                                                                                                                                                              |     
    0x00585c73 push r14                                                                                                                                                                                                                              |     
    0x00585c75 push rbx                                                                                                                                                                                                                              |     
    0x00585c76 sub rsp, 0x48                                                                                                                                                                                                                         |     
    0x00585c7a mov r14, rdx                                                                                                                                                                                                                          |     r14 = rdx;
    0x00585c7d mov rbp, rsi                                                                                                                                                                                                                          |     
    0x00585c80 mov r15, rdi                                                                                                                                                                                                                          |     r15 = rdi;
    0x00585c83 mov rax, qword [rdx]                                                                                                                                                                                                                  |     rax = *(rdx);
    0x00585c86 mov esi, 0x40                                                                                                                                                                                                                         |     esi = 0x40;
    0x00585c8b mov rdi, rdx                                                                                                                                                                                                                          |     rdi = rdx;
    0x00585c8e call qword [rax + 0x10]                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00585c91 mov rbx, rax                                                                                                                                                                                                                          |     rbx = rax;
    0x00585c94 mov qword [rax], 0x585de0                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bslmt::ThroughputBenchmark_WorkFunction_.invokerFunction_void_;
    0x00585c9b mov rax, qword [rbp]                                                                                                                                                                                                                  |     rax = *(rbp);
    0x00585c9f mov qword [rbx + 8], rax                                                                                                                                                                                                              |     *((rbx + 8)) = rax;
    0x00585ca3 lea rdi, [rbx + 0x10]                                                                                                                                                                                                                 |     
    0x00585ca7 mov qword [rbx + 0x10], 0                                                                                                                                                                                                             |     *((rbx + 0x10)) = 0;
    0x00585caf mov qword [rbx + 0x38], r14                                                                                                                                                                                                           |     *((rbx + 0x38)) = r14;
    0x00585cb3 movaps xmm0, xmmword [rip + 0x28ba6]                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00585cba movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                                     |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00585cbe mov ecx, 0x5bd8c0                                                                                                                                                                                                                     |     
    0x00585cc3 xor esi, esi                                                                                                                                                                                                                          |     
    0x00585cc5 xor edx, edx                                                                                                                                                                                                                          |     
    0x00585cc7 call 0x58c860                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00585ccc mov rdi, rsp                                                                                                                                                                                                                          |     
    0x00585ccf call 0x583970                                                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00585cd4 mov rsi, rsp                                                                                                                                                                                                                          |     
    0x00585cd7 mov edx, 0x5ae5f0                                                                                                                                                                                                                     |     
    0x00585cdc mov rdi, r15                                                                                                                                                                                                                          |     
    0x00585cdf mov rcx, rbx                                                                                                                                                                                                                          |     
    0x00585ce2 call 0x583cc0                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00585ce7 mov ebp, eax                                                                                                                                                                                                                          |     
    0x00585ce9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x00585cef je 0x585d01                                                                                                                                                                                                                           |         
    0x00585cf1 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x00585cf6 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x00585cfb mov rax, qword [rdi]                                                                                                                                                                                                                  |         rax = *(rdi);
    0x00585cfe call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x00585d01 test ebp, ebp                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x00585d03 je 0x585d2e                                                                                                                                                                                                                           |         
    0x00585d05 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                     |         if (*((rbx + 0x30)) != 0x17) {
    0x00585d0a je 0x585d1a                                                                                                                                                                                                                           |             
    0x00585d0c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                           |             rsi = *((rbx + 0x10));
    0x00585d10 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                           |             rdi = *((rbx + 0x38));
    0x00585d14 mov rax, qword [rdi]                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00585d17 call qword [rax + 0x18]                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |         }
    0x00585d1a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                            |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00585d22 mov rax, qword [r14]                                                                                                                                                                                                                  |         rax = *(r14);
    0x00585d25 mov rdi, r14                                                                                                                                                                                                                          |         rdi = r14;
    0x00585d28 mov rsi, rbx                                                                                                                                                                                                                          |         rsi = rbx;
    0x00585d2b call qword [rax + 0x18]                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                     |     }
    0x00585d2e mov eax, ebp                                                                                                                                                                                                                          |     eax = ebp;
    0x00585d30 add rsp, 0x48                                                                                                                                                                                                                         |     
    0x00585d34 pop rbx                                                                                                                                                                                                                               |     
    0x00585d35 pop r14                                                                                                                                                                                                                               |     
    0x00585d37 pop r15                                                                                                                                                                                                                               |     
    0x00585d39 pop rbp                                                                                                                                                                                                                               |     
    0x00585d3a ret                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                     | }
