000000000041cf10 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin   |	000000000041d090 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 01	pushq	%rax									000000000000000a: 01	pushq	%rax
000000000000000b: 03	movq	%rcx, %r14								000000000000000b: 03	movq	%rcx, %r14
000000000000000e: 03	movq	%rdx, %r12								000000000000000e: 03	movq	%rdx, %r12
0000000000000011: 03	movq	%rsi, %r15								0000000000000011: 03	movq	%rsi, %r15
0000000000000014: 04	movq	%rdi, (%rsp)								0000000000000014: 04	movq	%rdi, (%rsp)
0000000000000018: 04	movq	48(%rsi), %r13							   |	0000000000000018: 05	cmpq	$23, 56(%rsi)
000000000000001c: 05	cmpq	$23, 56(%rsi)							   |	000000000000001d: 02	je	0x41d0b5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000021: 02	je	0x41cf39 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000001f: 04	movq	24(%r15), %r13
0000000000000023: 04	movq	24(%r15), %rbp							   |	0000000000000023: 02	jmp	0x41d0b9 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000027: 02	jmp	0x41cf3d <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000025: 04	leaq	24(%r15), %r13
0000000000000029: 04	leaq	24(%r15), %rbp							   |	0000000000000029: 04	movq	48(%r15), %rbp
000000000000002d: 03	movq	(%r14), %rax							   |	000000000000002d: 03	testq	%r14, %r14
0000000000000030: 05	movl	$88, %esi							   |	0000000000000030: 02	jne	0x41d0d6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000035: 03	movq	%r14, %rdi							   |	0000000000000032: 07	movq	2395247(%rip), %r14  # 665d38 <BloombergLP::bslma::Default::s_de
0000000000000038: 03	callq	*16(%rax)							   |	0000000000000039: 03	testq	%r14, %r14
000000000000003b: 03	movq	%rax, %rbx							   |	000000000000003c: 02	jne	0x41d0d6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000003e: 07	movq	$4313200, (%rax)						   |	000000000000003e: 05	callq	0x41ecc0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000045: 04	movq	(%r12), %rax							   |	0000000000000043: 03	movq	%rax, %r14
0000000000000049: 04	movq	%rax, 8(%rbx)							   |	0000000000000046: 03	movq	(%r14), %rax
000000000000004d: 05	movq	8(%r12), %rax							   |	0000000000000049: 05	movl	$88, %esi
0000000000000052: 04	movq	%rax, 16(%rbx)							   |	000000000000004e: 03	movq	%r14, %rdi
0000000000000056: 05	movq	16(%r12), %rax							   |	0000000000000051: 03	callq	*16(%rax)
000000000000005b: 04	movq	%rax, 24(%rbx)							   |	0000000000000054: 03	movq	%rax, %rbx
000000000000005f: 05	movq	24(%r12), %rax							   |	0000000000000057: 07	movq	$4313616, (%rax)
0000000000000064: 04	movq	%rax, 32(%rbx)							   |	000000000000005e: 04	movq	(%r12), %rax
0000000000000068: 04	leaq	40(%rbx), %rdi							   |	0000000000000062: 04	movq	%rax, 8(%rbx)
000000000000006c: 08	movq	$0, 40(%rbx)							   |	0000000000000066: 05	movq	8(%r12), %rax
0000000000000074: 04	movq	%r14, 80(%rbx)							   |	000000000000006b: 04	movq	%rax, 16(%rbx)
0000000000000078: 07	movaps	169345(%rip), %xmm0  # 446510 <__dso_handle+0x48>		   |	000000000000006f: 05	movq	16(%r12), %rax
000000000000007f: 04	movups	%xmm0, 64(%rbx)							   |	0000000000000074: 04	movq	%rax, 24(%rbx)
0000000000000083: 05	movl	$4487417, %ecx							   |	0000000000000078: 05	movq	24(%r12), %rax
0000000000000088: 03	movq	%rbp, %rsi							   |	000000000000007d: 04	movq	%rax, 32(%rbx)
000000000000008b: 03	movq	%r13, %rdx							   |	0000000000000081: 04	leaq	40(%rbx), %rdi
000000000000008e: 05	callq	0x423990 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000085: 08	movq	$0, 40(%rbx)
0000000000000093: 05	movl	$4324768, %edx							   |	000000000000008d: 04	movq	%r14, 80(%rbx)
0000000000000098: 04	movq	(%rsp), %rdi							   |	0000000000000091: 07	movaps	169464(%rip), %xmm0  # 446720 <__dso_handle+0x48>
000000000000009c: 03	movq	%r15, %rsi							   |	0000000000000098: 04	movups	%xmm0, 64(%rbx)
000000000000009f: 03	movq	%rbx, %rcx							   |	000000000000009c: 05	movl	$4487943, %ecx
00000000000000a2: 05	callq	0x4207f0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	00000000000000a1: 03	movq	%r13, %rsi
00000000000000a7: 02	movl	%eax, %ebp							   |	00000000000000a4: 03	movq	%rbp, %rdx
00000000000000a9: 02	testl	%eax, %eax							   |	00000000000000a7: 05	callq	0x423bc0 <bsl::basic_string<char, std::__1::char_traits<char>, b
00000000000000ab: 02	je	0x41cfe6 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000ac: 05	movl	$4325280, %edx
00000000000000ad: 05	cmpq	$23, 72(%rbx)							   |	00000000000000b1: 04	movq	(%rsp), %rdi
00000000000000b2: 02	je	0x41cfd2 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000b5: 03	movq	%r15, %rsi
00000000000000b4: 04	movq	40(%rbx), %rsi							   |	00000000000000b8: 03	movq	%rbx, %rcx
00000000000000b8: 04	movq	80(%rbx), %rdi							   |	00000000000000bb: 05	callq	0x4209f0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000bc: 03	movq	(%rdi), %rax							   |	00000000000000c0: 02	movl	%eax, %ebp
00000000000000bf: 03	callq	*24(%rax)							   |	00000000000000c2: 02	testl	%eax, %eax
00000000000000c2: 08	movq	$-1, 64(%rbx)							   |	00000000000000c4: 02	je	0x41d17f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000ca: 03	movq	(%r14), %rax							   |	00000000000000c6: 05	cmpq	$23, 72(%rbx)
00000000000000cd: 03	movq	%r14, %rdi							   |	00000000000000cb: 02	je	0x41d16b <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000d0: 03	movq	%rbx, %rsi							   |	00000000000000cd: 04	movq	40(%rbx), %rsi
00000000000000d3: 03	callq	*24(%rax)							   |	00000000000000d1: 04	movq	80(%rbx), %rdi
00000000000000d6: 02	movl	%ebp, %eax							   |	00000000000000d5: 03	movq	(%rdi), %rax
00000000000000d8: 04	addq	$8, %rsp							   |	00000000000000d8: 03	callq	*24(%rax)
00000000000000dc: 01	popq	%rbx								   |	00000000000000db: 08	movq	$-1, 64(%rbx)
00000000000000dd: 02	popq	%r12								   |	00000000000000e3: 03	movq	(%r14), %rax
00000000000000df: 02	popq	%r13								   |	00000000000000e6: 03	movq	%r14, %rdi
00000000000000e1: 02	popq	%r14								   |	00000000000000e9: 03	movq	%rbx, %rsi
00000000000000e3: 02	popq	%r15								   |	00000000000000ec: 03	callq	*24(%rax)
00000000000000e5: 01	popq	%rbp								   |	00000000000000ef: 02	movl	%ebp, %eax
00000000000000e6: 01	retq									   |	00000000000000f1: 04	addq	$8, %rsp
00000000000000e7: 03	movq	%rax, %rdi							   |	00000000000000f5: 01	popq	%rbx
00000000000000ea: 05	callq	0x4156b0 <__clang_call_terminate>				   |	00000000000000f6: 02	popq	%r12
00000000000000ef: 03	movq	%rax, %rdi							   |	00000000000000f8: 02	popq	%r13
00000000000000f2: 05	callq	0x4156b0 <__clang_call_terminate>				   |	00000000000000fa: 02	popq	%r14
00000000000000f7: 03	movq	%rax, %r15							   |	00000000000000fc: 02	popq	%r15
00000000000000fa: 05	cmpq	$23, 72(%rbx)							   |	00000000000000fe: 01	popq	%rbp
00000000000000ff: 02	je	0x41d01f <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000ff: 01	retq	
0000000000000101: 04	movq	40(%rbx), %rsi							   |	0000000000000100: 03	movq	%rax, %rdi
0000000000000105: 04	movq	80(%rbx), %rdi							   |	0000000000000103: 05	callq	0x4156b0 <__clang_call_terminate>
0000000000000109: 03	movq	(%rdi), %rax							   |	0000000000000108: 03	movq	%rax, %rdi
000000000000010c: 03	callq	*24(%rax)							   |	000000000000010b: 05	callq	0x4156b0 <__clang_call_terminate>
000000000000010f: 08	movq	$-1, 64(%rbx)							   |	0000000000000110: 03	movq	%rax, %rbp
0000000000000117: 03	movq	(%r14), %rax							   |	0000000000000113: 05	cmpq	$23, 72(%rbx)
000000000000011a: 03	movq	%r14, %rdi							   |	0000000000000118: 02	je	0x41d1b8 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000011d: 03	movq	%rbx, %rsi							   |	000000000000011a: 04	movq	40(%rbx), %rsi
0000000000000120: 03	callq	*24(%rax)							   |	000000000000011e: 04	movq	80(%rbx), %rdi
0000000000000123: 02	jmp	0x41d05c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000122: 03	movq	(%rdi), %rax
0000000000000125: 03	movq	%rax, %rdi							   |	0000000000000125: 03	callq	*24(%rax)
0000000000000128: 05	callq	0x4156b0 <__clang_call_terminate>				   |	0000000000000128: 08	movq	$-1, 64(%rbx)
000000000000012d: 03	movq	%rax, %rdi							   |	0000000000000130: 03	movq	(%r14), %rax
0000000000000130: 05	callq	0x4156b0 <__clang_call_terminate>				   |	0000000000000133: 03	movq	%r14, %rdi
0000000000000135: 03	movq	%rax, %r15							   |	0000000000000136: 03	movq	%rbx, %rsi
0000000000000138: 08	movq	$0, 64(%rbx)							   |	0000000000000139: 03	callq	*24(%rax)
0000000000000140: 03	movq	(%r14), %rax							   |	000000000000013c: 02	jmp	0x41d1f5 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000143: 03	movq	%r14, %rdi							   |	000000000000013e: 03	movq	%rax, %rdi
0000000000000146: 03	movq	%rbx, %rsi							   |	0000000000000141: 05	callq	0x4156b0 <__clang_call_terminate>
0000000000000149: 03	callq	*24(%rax)							   |	0000000000000146: 03	movq	%rax, %rdi
000000000000014c: 03	movq	%r15, %rdi							   |	0000000000000149: 05	callq	0x4156b0 <__clang_call_terminate>
000000000000014f: 05	callq	0x404270 <_Unwind_Resume@plt>					   |	000000000000014e: 03	movq	%rax, %rbp
0000000000000154: 03	movq	%rax, %rdi							   |	0000000000000151: 08	movq	$0, 64(%rbx)
0000000000000157: 05	callq	0x4156b0 <__clang_call_terminate>				   |	0000000000000159: 03	movq	(%r14), %rax
000000000000015c: 04	nopl	(%rax)								   |	000000000000015c: 03	movq	%r14, %rdi
												   >	000000000000015f: 03	movq	%rbx, %rsi
												   >	0000000000000162: 03	callq	*24(%rax)
												   >	0000000000000165: 03	movq	%rbp, %rdi
												   >	0000000000000168: 05	callq	0x404270 <_Unwind_Resume@plt>
												   >	000000000000016d: 03	movq	%rax, %rdi
												   >	0000000000000170: 05	callq	0x4156b0 <__clang_call_terminate>
												   >	0000000000000175: 10	nopw	%cs:(%rax,%rax)
												   >	000000000000017f: 01	nop	
