    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_fixedqueue.t/assume @ 0x41c340 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____int__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_int__BloombergLP::bslmt::Barrier______unsigned_long__Bloombe ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_int_BloombergLP::bslmt::Barrier_BloombergLP::bdlf::Bind_BoundTuple2_int_BloombergLP::bslmt::Barrier_unsigned_long_Bloombe (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(int, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<int, BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(int, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<int, BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x0041c340 push rbp                                                                                                                                                                                                                                                          |     
    0x0041c341 push r15                                                                                                                                                                                                                                                          |     
    0x0041c343 push r14                                                                                                                                                                                                                                                          |     
    0x0041c345 push r13                                                                                                                                                                                                                                                          |     
    0x0041c347 push r12                                                                                                                                                                                                                                                          |     
    0x0041c349 push rbx                                                                                                                                                                                                                                                          |     
    0x0041c34a push rax                                                                                                                                                                                                                                                          |     
    0x0041c34b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041c34e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0041c351 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041c354 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0041c358 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041c35c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041c361 je 0x41c369                                                                                                                                                                                                                                                       |         
    0x0041c363 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x0041c367 jmp 0x41c36d                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041c369 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041c36d mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041c370 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x0041c375 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041c378 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041c37b mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041c37e mov qword [rax], 0x41c4a0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____int__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_int__BloombergLP::bslmt::Barrier_____::invokerFunction_void_;
    0x0041c385 mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x0041c389 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041c38d mov eax, dword [r12 + 8]                                                                                                                                                                                                                                          |     eax = *((r12 + 8));
    0x0041c392 mov dword [rbx + 0x10], eax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = eax;
    0x0041c395 mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x0041c39a mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x0041c39e lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x0041c3a2 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x0041c3aa mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x0041c3ae movaps xmm0, xmmword [rip + 0x2a15b]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041c3b5 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x0041c3b9 mov ecx, 0x4478f9                                                                                                                                                                                                                                                 |     
    0x0041c3be mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0041c3c1 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0041c3c4 call 0x423990                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041c3c9 mov edx, 0x41fda0                                                                                                                                                                                                                                                 |     
    0x0041c3ce mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0041c3d2 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041c3d5 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041c3d8 call 0x4207f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041c3dd mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041c3df test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041c3e1 je 0x41c40c                                                                                                                                                                                                                                                       |         
    0x0041c3e3 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x0041c3e8 je 0x41c3f8                                                                                                                                                                                                                                                       |             
    0x0041c3ea mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x0041c3ee mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x0041c3f2 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041c3f5 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041c3f8 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x0041c400 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041c403 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041c406 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041c409 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041c40c mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041c40e add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041c412 pop rbx                                                                                                                                                                                                                                                           |     
    0x0041c413 pop r12                                                                                                                                                                                                                                                           |     
    0x0041c415 pop r13                                                                                                                                                                                                                                                           |     
    0x0041c417 pop r14                                                                                                                                                                                                                                                           |     
    0x0041c419 pop r15                                                                                                                                                                                                                                                           |     
    0x0041c41b pop rbp                                                                                                                                                                                                                                                           |     
    0x0041c41c ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
