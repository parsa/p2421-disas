    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_fixedqueue.t/none @ 0x419110 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____nonblocktst::Control___BloombergLP::bdlf::Bind_BoundTuple1_nonblocktst::Control______unsigned_long__BloombergLP::bslmt::ThreadAttri ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_nonblocktst::Control_BloombergLP::bdlf::Bind_BoundTuple1_nonblocktst::Control_unsigned_long_BloombergLP::bslmt::ThreadAttri (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(nonblocktst::Control*), BloombergLP::bdlf::Bind_BoundTuple1<nonblocktst::Control*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(nonblocktst::Control*), BloombergLP::bdlf::Bind_BoundTuple1<nonblocktst::Control*> > const&, BloombergLP::bslma::Allocator*) */
    0x00419110 push rbp                                                                                                                                                                                                                                                          |     
    0x00419111 push r15                                                                                                                                                                                                                                                          |     
    0x00419113 push r14                                                                                                                                                                                                                                                          |     
    0x00419115 push r13                                                                                                                                                                                                                                                          |     
    0x00419117 push r12                                                                                                                                                                                                                                                          |     
    0x00419119 push rbx                                                                                                                                                                                                                                                          |     
    0x0041911a push rax                                                                                                                                                                                                                                                          |     
    0x0041911b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041911e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x00419121 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00419124 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x00419128 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041912d je 0x419135                                                                                                                                                                                                                                                       |         
    0x0041912f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x00419133 jmp 0x419139                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00419135 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00419139 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041913d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x00419140 jne 0x419156                                                                                                                                                                                                                                                      |         
    0x00419142 mov r14, qword [rip + 0x24cbef]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00419149 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041914c jne 0x419156                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041914e call 0x41ecc0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00419153 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00419156 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00419159 mov esi, 0x48                                                                                                                                                                                                                                                     |     esi = 0x48;
    0x0041915e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00419161 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00419164 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00419167 mov qword [rax], 0x419280                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____nonblocktst::Control___BloombergLP::bdlf::Bind_BoundTuple1_nonblocktst::Control_____::invokerFunction_void_;
    0x0041916e mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x00419172 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00419176 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x0041917b mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0041917f lea rdi, [rbx + 0x18]                                                                                                                                                                                                                                             |     
    0x00419183 mov qword [rbx + 0x18], 0                                                                                                                                                                                                                                         |     *((rbx + 0x18)) = 0;
    0x0041918b mov qword [rbx + 0x40], r14                                                                                                                                                                                                                                       |     *((rbx + 0x40)) = r14;
    0x0041918f movaps xmm0, xmmword [rip + 0x2d58a]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00419196 movups xmmword [rbx + 0x30], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x30], xmm0");
    0x0041919a mov ecx, 0x447b07                                                                                                                                                                                                                                                 |     
    0x0041919f mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x004191a2 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x004191a5 call 0x423bc0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x18, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004191aa mov edx, 0x41ffa0                                                                                                                                                                                                                                                 |     
    0x004191af mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x004191b3 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004191b6 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004191b9 call 0x4209f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004191be mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x004191c0 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x004191c2 je 0x4191ed                                                                                                                                                                                                                                                       |         
    0x004191c4 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x38)) != 0x17) {
    0x004191c9 je 0x4191d9                                                                                                                                                                                                                                                       |             
    0x004191cb mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x18));
    0x004191cf mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x40));
    0x004191d3 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x004191d6 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x004191d9 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x004191e1 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x004191e4 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004191e7 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x004191ea call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x004191ed mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x004191ef add rsp, 8                                                                                                                                                                                                                                                        |     
    0x004191f3 pop rbx                                                                                                                                                                                                                                                           |     
    0x004191f4 pop r12                                                                                                                                                                                                                                                           |     
    0x004191f6 pop r13                                                                                                                                                                                                                                                           |     
    0x004191f8 pop r14                                                                                                                                                                                                                                                           |     
    0x004191fa pop r15                                                                                                                                                                                                                                                           |     
    0x004191fc pop rbp                                                                                                                                                                                                                                                           |     
    0x004191fd ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
