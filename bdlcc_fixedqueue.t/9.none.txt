    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_fixedqueue.t/none @ 0x41c8c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::FixedQueue_int___double__int__bool__bool__BloombergLP::bslmt::Condition___BloombergLP::bdlf::Bind_BoundTuple6_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlcc::FixedQueue_int_double_int_bool_bool_BloombergLP::bslmt::Condition_BloombergLP::bdlf::Bind_BoundTuple6_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::FixedQueue<int>*, double, int, bool*, bool*, BloombergLP::bslmt::Condition*), BloombergLP::bdlf::Bind_BoundTuple6<BloombergLP::bdlcc::FixedQueue<int>*, double, int, bool*, bool*, BloombergLP::bslmt::Condition*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlcc::FixedQueue<int>*, double, int, bool*, bool*, BloombergLP::bslmt::Condition*), BloombergLP::bdlf::Bind_BoundTuple6<BloombergLP::bdlcc::FixedQueue<int>*, double, int, bool*, bool*, BloombergLP::bslmt::Condition*> > const&, BloombergLP::bslma::Allocator*) */
    0x0041c8c0 push rbp                                                                                                                                                                                                                                                          |     
    0x0041c8c1 push r15                                                                                                                                                                                                                                                          |     
    0x0041c8c3 push r14                                                                                                                                                                                                                                                          |     
    0x0041c8c5 push r13                                                                                                                                                                                                                                                          |     
    0x0041c8c7 push r12                                                                                                                                                                                                                                                          |     
    0x0041c8c9 push rbx                                                                                                                                                                                                                                                          |     
    0x0041c8ca push rax                                                                                                                                                                                                                                                          |     
    0x0041c8cb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041c8ce mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0041c8d1 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041c8d4 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0041c8d8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041c8dd je 0x41c8e5                                                                                                                                                                                                                                                       |         
    0x0041c8df mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x0041c8e3 jmp 0x41c8e9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041c8e5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041c8e9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041c8ed test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0041c8f0 jne 0x41c906                                                                                                                                                                                                                                                      |         
    0x0041c8f2 mov r14, qword [rip + 0x24943f]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041c8f9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041c8fc jne 0x41c906                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041c8fe call 0x41ecc0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041c903 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x0041c906 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041c909 mov esi, 0x70                                                                                                                                                                                                                                                     |     esi = 0x70;
    0x0041c90e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041c911 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041c914 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041c917 mov qword [rax], 0x41ca60                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlcc::FixedQueue_int___double__int__bool__bool__BloombergLP::bslmt::Condition___BloombergLP::bdlf::Bind_BoundTuple6_BloombergLP;
    0x0041c91e mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x0041c922 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041c926 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x0041c92b mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0041c92f movsd xmm0, qword [r12 + 0x10]                                                                                                                                                                                                                                    |     xmm0 = *((r12 + 0x10));
    0x0041c936 movsd qword [rbx + 0x18], xmm0                                                                                                                                                                                                                                    |     *((rbx + 0x18)) = xmm0;
    0x0041c93b mov eax, dword [r12 + 0x18]                                                                                                                                                                                                                                       |     eax = *((r12 + 0x18));
    0x0041c940 mov dword [rbx + 0x20], eax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = eax;
    0x0041c943 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x20));
    0x0041c948 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                       |     *((rbx + 0x28)) = rax;
    0x0041c94c mov rax, qword [r12 + 0x28]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x28));
    0x0041c951 mov qword [rbx + 0x30], rax                                                                                                                                                                                                                                       |     *((rbx + 0x30)) = rax;
    0x0041c955 mov rax, qword [r12 + 0x30]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x30));
    0x0041c95a mov qword [rbx + 0x38], rax                                                                                                                                                                                                                                       |     *((rbx + 0x38)) = rax;
    0x0041c95e lea rdi, [rbx + 0x40]                                                                                                                                                                                                                                             |     
    0x0041c962 mov qword [rbx + 0x40], 0                                                                                                                                                                                                                                         |     *((rbx + 0x40)) = 0;
    0x0041c96a mov qword [rbx + 0x68], r14                                                                                                                                                                                                                                       |     *((rbx + 0x68)) = r14;
    0x0041c96e movaps xmm0, xmmword [rip + 0x29dab]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041c975 movups xmmword [rbx + 0x58], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x58], xmm0");
    0x0041c979 mov ecx, 0x447b07                                                                                                                                                                                                                                                 |     
    0x0041c97e mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0041c981 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0041c984 call 0x423bc0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x40, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041c989 mov edx, 0x41ffa0                                                                                                                                                                                                                                                 |     
    0x0041c98e mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0041c992 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041c995 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041c998 call 0x4209f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041c99d mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041c99f test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041c9a1 je 0x41c9cc                                                                                                                                                                                                                                                       |         
    0x0041c9a3 cmp qword [rbx + 0x60], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x60)) != 0x17) {
    0x0041c9a8 je 0x41c9b8                                                                                                                                                                                                                                                       |             
    0x0041c9aa mov rsi, qword [rbx + 0x40]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x40));
    0x0041c9ae mov rdi, qword [rbx + 0x68]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x68));
    0x0041c9b2 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041c9b5 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041c9b8 mov qword [rbx + 0x58], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x58)) = 0xffffffffffffffff;
    0x0041c9c0 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041c9c3 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041c9c6 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041c9c9 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041c9cc mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041c9ce add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041c9d2 pop rbx                                                                                                                                                                                                                                                           |     
    0x0041c9d3 pop r12                                                                                                                                                                                                                                                           |     
    0x0041c9d5 pop r13                                                                                                                                                                                                                                                           |     
    0x0041c9d7 pop r14                                                                                                                                                                                                                                                           |     
    0x0041c9d9 pop r15                                                                                                                                                                                                                                                           |     
    0x0041c9db pop rbp                                                                                                                                                                                                                                                           |     
    0x0041c9dc ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
