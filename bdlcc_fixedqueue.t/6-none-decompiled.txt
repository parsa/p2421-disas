    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_fixedqueue.t/none @ 0x41c150 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____char__char__BloombergLP::bdlcc::FixedQueue_char___BloombergLP::bslmt::Barrier__bool___BloombergLP::bdlf::Bind_BoundTuple5_char__ ()           | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_char_char_BloombergLP::bdlcc::FixedQueue_char_BloombergLP::bslmt::Barrier_bool_BloombergLP::bdlf::Bind_BoundTuple5_char_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(char*, char*, BloombergLP::bdlcc::FixedQueue<char*>*, BloombergLP::bslmt::Barrier*, bool), BloombergLP::bdlf::Bind_BoundTuple5<char*, char*, BloombergLP::bdlcc::FixedQueue<char*>*, BloombergLP::bslmt::Barrier*, bool> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(char*, char*, BloombergLP::bdlcc::FixedQueue<char*>*, BloombergLP::bslmt::Barrier*, bool), BloombergLP::bdlf::Bind_BoundTuple5<char*, char*, BloombergLP::bdlcc::FixedQueue<char*>*, BloombergLP::bslmt::Barrier*, bool> > const&, BloombergLP::bslma::Allocator*) */
    0x0041c150 push rbp                                                                                                                                                                                                                                                          |     
    0x0041c151 push r15                                                                                                                                                                                                                                                          |     
    0x0041c153 push r14                                                                                                                                                                                                                                                          |     
    0x0041c155 push r13                                                                                                                                                                                                                                                          |     
    0x0041c157 push r12                                                                                                                                                                                                                                                          |     
    0x0041c159 push rbx                                                                                                                                                                                                                                                          |     
    0x0041c15a push rax                                                                                                                                                                                                                                                          |     
    0x0041c15b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041c15e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0041c161 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041c164 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0041c168 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041c16d je 0x41c175                                                                                                                                                                                                                                                       |         
    0x0041c16f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x0041c173 jmp 0x41c179                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041c175 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041c179 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041c17d test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0041c180 jne 0x41c196                                                                                                                                                                                                                                                      |         
    0x0041c182 mov r14, qword [rip + 0x249baf]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041c189 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041c18c jne 0x41c196                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041c18e call 0x41ecc0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041c193 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x0041c196 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041c199 mov esi, 0x68                                                                                                                                                                                                                                                     |     esi = 0x68;
    0x0041c19e mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041c1a1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041c1a4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041c1a7 mov qword [rax], 0x41c2e0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____char__char__BloombergLP::bdlcc::FixedQueue_char___BloombergLP::bslmt::Barrier__bool___BloombergLP::bdlf::Bind_BoundTuple5_char__char__Bloo;
    0x0041c1ae mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x0041c1b2 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041c1b6 mov rax, qword [r12 + 8]                                                                                                                                                                                                                                          |     rax = *((r12 + 8));
    0x0041c1bb mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x0041c1bf mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x0041c1c4 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x0041c1c8 mov rax, qword [r12 + 0x18]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x18));
    0x0041c1cd mov qword [rbx + 0x20], rax                                                                                                                                                                                                                                       |     *((rbx + 0x20)) = rax;
    0x0041c1d1 mov rax, qword [r12 + 0x20]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x20));
    0x0041c1d6 mov qword [rbx + 0x28], rax                                                                                                                                                                                                                                       |     *((rbx + 0x28)) = rax;
    0x0041c1da mov al, byte [r12 + 0x28]                                                                                                                                                                                                                                         |     al = *((r12 + 0x28));
    0x0041c1df mov byte [rbx + 0x30], al                                                                                                                                                                                                                                         |     *((rbx + 0x30)) = al;
    0x0041c1e2 lea rdi, [rbx + 0x38]                                                                                                                                                                                                                                             |     
    0x0041c1e6 mov qword [rbx + 0x38], 0                                                                                                                                                                                                                                         |     *((rbx + 0x38)) = 0;
    0x0041c1ee mov qword [rbx + 0x60], r14                                                                                                                                                                                                                                       |     *((rbx + 0x60)) = r14;
    0x0041c1f2 movaps xmm0, xmmword [rip + 0x2a527]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041c1f9 movups xmmword [rbx + 0x50], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x50], xmm0");
    0x0041c1fd mov ecx, 0x447b07                                                                                                                                                                                                                                                 |     
    0x0041c202 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0041c205 mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0041c208 call 0x423bc0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x38, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041c20d mov edx, 0x41ffa0                                                                                                                                                                                                                                                 |     
    0x0041c212 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0041c216 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041c219 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041c21c call 0x4209f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041c221 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041c223 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041c225 je 0x41c250                                                                                                                                                                                                                                                       |         
    0x0041c227 cmp qword [rbx + 0x58], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x58)) != 0x17) {
    0x0041c22c je 0x41c23c                                                                                                                                                                                                                                                       |             
    0x0041c22e mov rsi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x38));
    0x0041c232 mov rdi, qword [rbx + 0x60]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x60));
    0x0041c236 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041c239 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041c23c mov qword [rbx + 0x50], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x50)) = 0xffffffffffffffff;
    0x0041c244 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041c247 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041c24a mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041c24d call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041c250 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041c252 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041c256 pop rbx                                                                                                                                                                                                                                                           |     
    0x0041c257 pop r12                                                                                                                                                                                                                                                           |     
    0x0041c259 pop r13                                                                                                                                                                                                                                                           |     
    0x0041c25b pop r14                                                                                                                                                                                                                                                           |     
    0x0041c25d pop r15                                                                                                                                                                                                                                                           |     
    0x0041c25f pop rbp                                                                                                                                                                                                                                                           |     
    0x0041c260 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
