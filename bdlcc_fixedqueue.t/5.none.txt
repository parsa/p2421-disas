    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_fixedqueue.t/none @ 0x41c480 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____int__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_int__BloombergLP::bslmt::Barrier______unsigned_long__Bloombe ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_int_BloombergLP::bslmt::Barrier_BloombergLP::bdlf::Bind_BoundTuple2_int_BloombergLP::bslmt::Barrier_unsigned_long_Bloombe (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(int, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<int, BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(int, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<int, BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x0041c480 push rbp                                                                                                                                                                                                                                                          |     
    0x0041c481 push r15                                                                                                                                                                                                                                                          |     
    0x0041c483 push r14                                                                                                                                                                                                                                                          |     
    0x0041c485 push r13                                                                                                                                                                                                                                                          |     
    0x0041c487 push r12                                                                                                                                                                                                                                                          |     
    0x0041c489 push rbx                                                                                                                                                                                                                                                          |     
    0x0041c48a push rax                                                                                                                                                                                                                                                          |     
    0x0041c48b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041c48e mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x0041c491 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041c494 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x0041c498 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041c49d je 0x41c4a5                                                                                                                                                                                                                                                       |         
    0x0041c49f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x0041c4a3 jmp 0x41c4a9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041c4a5 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041c4a9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041c4ad test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0041c4b0 jne 0x41c4c6                                                                                                                                                                                                                                                      |         
    0x0041c4b2 mov r14, qword [rip + 0x24987f]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041c4b9 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041c4bc jne 0x41c4c6                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041c4be call 0x41ecc0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041c4c3 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x0041c4c6 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041c4c9 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x0041c4ce mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041c4d1 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041c4d4 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041c4d7 mov qword [rax], 0x41c5f0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____int__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_int__BloombergLP::bslmt::Barrier_____::invokerFunction_void_;
    0x0041c4de mov rax, qword [r12]                                                                                                                                                                                                                                              |     rax = *(r12);
    0x0041c4e2 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x0041c4e6 mov eax, dword [r12 + 8]                                                                                                                                                                                                                                          |     eax = *((r12 + 8));
    0x0041c4eb mov dword [rbx + 0x10], eax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = eax;
    0x0041c4ee mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x0041c4f3 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x0041c4f7 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x0041c4fb mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x0041c503 mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x0041c507 movaps xmm0, xmmword [rip + 0x2a212]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041c50e movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x0041c512 mov ecx, 0x447b07                                                                                                                                                                                                                                                 |     
    0x0041c517 mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0041c51a mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0041c51d call 0x423bc0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041c522 mov edx, 0x41ffa0                                                                                                                                                                                                                                                 |     
    0x0041c527 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0041c52b mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041c52e mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041c531 call 0x4209f0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041c536 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041c538 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041c53a je 0x41c565                                                                                                                                                                                                                                                       |         
    0x0041c53c cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x0041c541 je 0x41c551                                                                                                                                                                                                                                                       |             
    0x0041c543 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x0041c547 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x0041c54b mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041c54e call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041c551 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x0041c559 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041c55c mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041c55f mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041c562 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041c565 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041c567 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041c56b pop rbx                                                                                                                                                                                                                                                           |     
    0x0041c56c pop r12                                                                                                                                                                                                                                                           |     
    0x0041c56e pop r13                                                                                                                                                                                                                                                           |     
    0x0041c570 pop r14                                                                                                                                                                                                                                                           |     
    0x0041c572 pop r15                                                                                                                                                                                                                                                           |     
    0x0041c574 pop rbp                                                                                                                                                                                                                                                           |     
    0x0041c575 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
