    ; assembly                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                             | /* bslmt_mutex.t/none @ 0x405490 */
                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_MUTEX_CASE_MINUS_1.F__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_MUTEX_CASE_MINUS_1::F_const__BloombergLP::bslma::Allocator_ ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_MUTEX_CASE_MINUS_1_F_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_MUTEX_CASE_MINUS_1::F_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_MUTEX_CASE_MINUS_1::F>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_MUTEX_CASE_MINUS_1::F const&, BloombergLP::bslma::Allocator*) */
    0x00405490 push rbp                                                                                                                                                                                                                      |     
    0x00405491 push r15                                                                                                                                                                                                                      |     
    0x00405493 push r14                                                                                                                                                                                                                      |     
    0x00405495 push r13                                                                                                                                                                                                                      |     
    0x00405497 push r12                                                                                                                                                                                                                      |     
    0x00405499 push rbx                                                                                                                                                                                                                      |     
    0x0040549a push rax                                                                                                                                                                                                                      |     
    0x0040549b mov r14, rcx                                                                                                                                                                                                                  |     r14 = rcx;
    0x0040549e mov r12, rdx                                                                                                                                                                                                                  |     r12 = rdx;
    0x004054a1 mov r15, rsi                                                                                                                                                                                                                  |     r15 = rsi;
    0x004054a4 mov qword [rsp], rdi                                                                                                                                                                                                          |     *(rsp) = rdi;
    0x004054a8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x004054ad je 0x4054b5                                                                                                                                                                                                                   |         
    0x004054af mov r13, qword [r15 + 0x18]                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x004054b3 jmp 0x4054b9                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                             |     } else {
    0x004054b5 lea r13, [r15 + 0x18]                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                             |     }
    0x004054b9 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x004054bd test r14, r14                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x004054c0 jne 0x4054d6                                                                                                                                                                                                                  |         
    0x004054c2 mov r14, qword [rip + 0x21534f]                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004054c9 test r14, r14                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x004054cc jne 0x4054d6                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                             |         }
    0x004054ce call 0x412260                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004054d3 mov r14, rax                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                             | label_0:
    0x004054d6 mov rax, qword [r14]                                                                                                                                                                                                          |     rax = *(r14);
    0x004054d9 mov esi, 0x40                                                                                                                                                                                                                 |     esi = 0x40;
    0x004054de mov rdi, r14                                                                                                                                                                                                                  |     rdi = r14;
    0x004054e1 call qword [rax + 0x10]                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004054e4 mov rbx, rax                                                                                                                                                                                                                  |     rbx = rax;
    0x004054e7 mov qword [rax], 0x4055f0                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_MUTEX_CASE_MINUS_1::F_.invokerFunction_void_;
    0x004054ee mov al, byte [r12]                                                                                                                                                                                                            |     al = *(r12);
    0x004054f2 mov byte [rbx + 8], al                                                                                                                                                                                                        |     *((rbx + 8)) = al;
    0x004054f5 lea rdi, [rbx + 0x10]                                                                                                                                                                                                         |     
    0x004054f9 mov qword [rbx + 0x10], 0                                                                                                                                                                                                     |     *((rbx + 0x10)) = 0;
    0x00405501 mov qword [rbx + 0x38], r14                                                                                                                                                                                                   |     *((rbx + 0x38)) = r14;
    0x00405505 movaps xmm0, xmmword [rip + 0xd194]                                                                                                                                                                                           |     xmm0 = .comment;
    0x0040550c movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00405510 mov ecx, 0x4129d1                                                                                                                                                                                                             |     
    0x00405515 mov rsi, r13                                                                                                                                                                                                                  |     
    0x00405518 mov rdx, rbp                                                                                                                                                                                                                  |     
    0x0040551b call 0x408260                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00405520 mov edx, 0x405990                                                                                                                                                                                                             |     
    0x00405525 mov rdi, qword [rsp]                                                                                                                                                                                                          |     
    0x00405529 mov rsi, r15                                                                                                                                                                                                                  |     
    0x0040552c mov rcx, rbx                                                                                                                                                                                                                  |     
    0x0040552f call 0x406010                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00405534 mov ebp, eax                                                                                                                                                                                                                  |     
    0x00405536 test eax, eax                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x00405538 je 0x405563                                                                                                                                                                                                                   |         
    0x0040553a cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x0040553f je 0x40554f                                                                                                                                                                                                                   |             
    0x00405541 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00405545 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x00405549 mov rax, qword [rdi]                                                                                                                                                                                                          |             rax = *(rdi);
    0x0040554c call qword [rax + 0x18]                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                             |         }
    0x0040554f mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00405557 mov rax, qword [r14]                                                                                                                                                                                                          |         rax = *(r14);
    0x0040555a mov rdi, r14                                                                                                                                                                                                                  |         rdi = r14;
    0x0040555d mov rsi, rbx                                                                                                                                                                                                                  |         rsi = rbx;
    0x00405560 call qword [rax + 0x18]                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                             |     }
    0x00405563 mov eax, ebp                                                                                                                                                                                                                  |     eax = ebp;
    0x00405565 add rsp, 8                                                                                                                                                                                                                    |     
    0x00405569 pop rbx                                                                                                                                                                                                                       |     
    0x0040556a pop r12                                                                                                                                                                                                                       |     
    0x0040556c pop r13                                                                                                                                                                                                                       |     
    0x0040556e pop r14                                                                                                                                                                                                                       |     
    0x00405570 pop r15                                                                                                                                                                                                                       |     
    0x00405572 pop rbp                                                                                                                                                                                                                       |     
    0x00405573 ret                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                             | }
