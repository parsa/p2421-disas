    ; assembly                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                             | /* bslmt_mutex.t/assume @ 0x405490 */
                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_MUTEX_CASE_MINUS_1.F__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_MUTEX_CASE_MINUS_1::F_const__BloombergLP::bslma::Allocator_ ()       | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_MUTEX_CASE_MINUS_1_F_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_MUTEX_CASE_MINUS_1::F_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_MUTEX_CASE_MINUS_1::F>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_MUTEX_CASE_MINUS_1::F const&, BloombergLP::bslma::Allocator*) */
    0x00405490 push rbp                                                                                                                                                                                                                      |     
    0x00405491 push r15                                                                                                                                                                                                                      |     
    0x00405493 push r14                                                                                                                                                                                                                      |     
    0x00405495 push r13                                                                                                                                                                                                                      |     
    0x00405497 push r12                                                                                                                                                                                                                      |     
    0x00405499 push rbx                                                                                                                                                                                                                      |     
    0x0040549a push rax                                                                                                                                                                                                                      |     
    0x0040549b mov r14, rcx                                                                                                                                                                                                                  |     r14 = rcx;
    0x0040549e mov r12, rdx                                                                                                                                                                                                                  |     r12 = rdx;
    0x004054a1 mov r15, rsi                                                                                                                                                                                                                  |     r15 = rsi;
    0x004054a4 mov qword [rsp], rdi                                                                                                                                                                                                          |     *(rsp) = rdi;
    0x004054a8 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                   |     r13 = *((rsi + 0x30));
    0x004054ac cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x004054b1 je 0x4054b9                                                                                                                                                                                                                   |         
    0x004054b3 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                   |         rbp = *((r15 + 0x18));
    0x004054b7 jmp 0x4054bd                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                             |     } else {
    0x004054b9 lea rbp, [r15 + 0x18]                                                                                                                                                                                                         |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                             |     }
    0x004054bd mov rax, qword [r14]                                                                                                                                                                                                          |     rax = *(r14);
    0x004054c0 mov esi, 0x40                                                                                                                                                                                                                 |     esi = 0x40;
    0x004054c5 mov rdi, r14                                                                                                                                                                                                                  |     rdi = r14;
    0x004054c8 call qword [rax + 0x10]                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004054cb mov rbx, rax                                                                                                                                                                                                                  |     rbx = rax;
    0x004054ce mov qword [rax], 0x4055d0                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_MUTEX_CASE_MINUS_1::F_.invokerFunction_void_;
    0x004054d5 mov al, byte [r12]                                                                                                                                                                                                            |     al = *(r12);
    0x004054d9 mov byte [rbx + 8], al                                                                                                                                                                                                        |     *((rbx + 8)) = al;
    0x004054dc lea rdi, [rbx + 0x10]                                                                                                                                                                                                         |     
    0x004054e0 mov qword [rbx + 0x10], 0                                                                                                                                                                                                     |     *((rbx + 0x10)) = 0;
    0x004054e8 mov qword [rbx + 0x38], r14                                                                                                                                                                                                   |     *((rbx + 0x38)) = r14;
    0x004054ec movaps xmm0, xmmword [rip + 0xd18d]                                                                                                                                                                                           |     xmm0 = .comment;
    0x004054f3 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x004054f7 mov ecx, 0x4129b5                                                                                                                                                                                                             |     
    0x004054fc mov rsi, rbp                                                                                                                                                                                                                  |     
    0x004054ff mov rdx, r13                                                                                                                                                                                                                  |     
    0x00405502 call 0x408220                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00405507 mov edx, 0x405970                                                                                                                                                                                                             |     
    0x0040550c mov rdi, qword [rsp]                                                                                                                                                                                                          |     
    0x00405510 mov rsi, r15                                                                                                                                                                                                                  |     
    0x00405513 mov rcx, rbx                                                                                                                                                                                                                  |     
    0x00405516 call 0x405ff0                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0040551b mov ebp, eax                                                                                                                                                                                                                  |     
    0x0040551d test eax, eax                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x0040551f je 0x40554a                                                                                                                                                                                                                   |         
    0x00405521 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00405526 je 0x405536                                                                                                                                                                                                                   |             
    0x00405528 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x0040552c mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x00405530 mov rax, qword [rdi]                                                                                                                                                                                                          |             rax = *(rdi);
    0x00405533 call qword [rax + 0x18]                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                             |         }
    0x00405536 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0040553e mov rax, qword [r14]                                                                                                                                                                                                          |         rax = *(r14);
    0x00405541 mov rdi, r14                                                                                                                                                                                                                  |         rdi = r14;
    0x00405544 mov rsi, rbx                                                                                                                                                                                                                  |         rsi = rbx;
    0x00405547 call qword [rax + 0x18]                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                             |     }
    0x0040554a mov eax, ebp                                                                                                                                                                                                                  |     eax = ebp;
    0x0040554c add rsp, 8                                                                                                                                                                                                                    |     
    0x00405550 pop rbx                                                                                                                                                                                                                       |     
    0x00405551 pop r12                                                                                                                                                                                                                       |     
    0x00405553 pop r13                                                                                                                                                                                                                       |     
    0x00405555 pop r14                                                                                                                                                                                                                       |     
    0x00405557 pop r15                                                                                                                                                                                                                       |     
    0x00405559 pop rbp                                                                                                                                                                                                                       |     
    0x0040555a ret                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                             | }
