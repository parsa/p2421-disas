    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_eventscheduler.t/assume @ 0x4347a0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::bdlmt::EventScheduler::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlmt::EventScheduler______unsigned_long__Bl ()       | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlmt::EventScheduler::_BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlmt::EventScheduler_unsigned_long_Bl (int64_t arg4, int64_t arg3, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::bdlmt::EventScheduler::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlmt::EventScheduler*> > >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (BloombergLP::bdlmt::EventScheduler::*)(), BloombergLP::bdlf::Bind_BoundTuple1<BloombergLP::bdlmt::EventScheduler*> > const&, BloombergLP::bslma::Allocator*) */
    0x004347a0 push rbp                                                                                                                                                                                                                                                          |     
    0x004347a1 push r15                                                                                                                                                                                                                                                          |     
    0x004347a3 push r14                                                                                                                                                                                                                                                          |     
    0x004347a5 push r13                                                                                                                                                                                                                                                          |     
    0x004347a7 push r12                                                                                                                                                                                                                                                          |     
    0x004347a9 push rbx                                                                                                                                                                                                                                                          |     
    0x004347aa push rax                                                                                                                                                                                                                                                          |     
    0x004347ab mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004347ae mov r12, rdx                                                                                                                                                                                                                                                      |     r12 = rdx;
    0x004347b1 mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004347b4 mov qword [rsp], rdi                                                                                                                                                                                                                                              |     *(rsp) = rdi;
    0x004347b8 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x004347bc cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004347c1 je 0x4347c9                                                                                                                                                                                                                                                       |         
    0x004347c3 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x004347c7 jmp 0x4347cd                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004347c9 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004347cd mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004347d0 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x004347d5 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004347d8 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004347db mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004347de mov qword [rax], 0x435c40                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void__BloombergLP::bdlmt::EventScheduler::_____BloombergLP::bdlf::Bind_BoundTuple1_BloombergLP::bdlmt::EventScheduler_____::invokerFunction_void_;
    0x004347e5 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                        |     __asm ("movups xmm0, xmmword [r12]");
    0x004347ea movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                                    |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004347ee mov rax, qword [r12 + 0x10]                                                                                                                                                                                                                                       |     rax = *((r12 + 0x10));
    0x004347f3 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x004347f7 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x004347fb mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x00434803 mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x00434807 movaps xmm0, xmmword [rip + 0x2ca52]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0043480e movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x00434812 mov ecx, 0x46490c                                                                                                                                                                                                                                                 |     
    0x00434817 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0043481a mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0043481d call 0x43df40                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00434822 mov edx, 0x439350                                                                                                                                                                                                                                                 |     
    0x00434827 mov rdi, qword [rsp]                                                                                                                                                                                                                                              |     
    0x0043482b mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0043482e mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00434831 call 0x439cd0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00434836 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00434838 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0043483a je 0x434865                                                                                                                                                                                                                                                       |         
    0x0043483c cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x00434841 je 0x434851                                                                                                                                                                                                                                                       |             
    0x00434843 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x00434847 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x0043484b mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0043484e call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00434851 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00434859 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0043485c mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0043485f mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00434862 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00434865 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00434867 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0043486b pop rbx                                                                                                                                                                                                                                                           |     
    0x0043486c pop r12                                                                                                                                                                                                                                                           |     
    0x0043486e pop r13                                                                                                                                                                                                                                                           |     
    0x00434870 pop r14                                                                                                                                                                                                                                                           |     
    0x00434872 pop r15                                                                                                                                                                                                                                                           |     
    0x00434874 pop rbp                                                                                                                                                                                                                                                           |     
    0x00434875 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
