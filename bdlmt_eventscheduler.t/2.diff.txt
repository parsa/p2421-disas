0000000000428bb0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin   |	0000000000428bf0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 01	pushq	%rbx									0000000000000005: 01	pushq	%rbx
0000000000000006: 04	subq	$72, %rsp								0000000000000006: 04	subq	$72, %rsp
000000000000000a: 03	movq	%rdx, %r14								000000000000000a: 03	movq	%rdx, %r14
000000000000000d: 03	movq	%rsi, %rbp								000000000000000d: 03	movq	%rsi, %rbp
0000000000000010: 03	movq	%rdi, %r15								0000000000000010: 03	movq	%rdi, %r15
0000000000000013: 03	movq	(%rdx), %rax							   |	0000000000000013: 03	testq	%rdx, %rdx
0000000000000016: 05	movl	$88, %esi							   |	0000000000000016: 02	jne	0x428c1c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000001b: 03	movq	%rdx, %rdi							   |	0000000000000018: 07	movq	2591353(%rip), %r14  # 6a1688 <BloombergLP::bslma::Default::s_de
000000000000001e: 03	callq	*16(%rax)							   |	000000000000001f: 03	testq	%r14, %r14
0000000000000021: 03	movq	%rax, %rbx							   |	0000000000000022: 02	jne	0x428c1c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000024: 07	movq	$4361536, (%rax)						   |	0000000000000024: 05	callq	0x4381c0 <BloombergLP::bslma::Default::determineAndReturnDefault
000000000000002b: 04	movq	(%rbp), %rax							   |	0000000000000029: 03	movq	%rax, %r14
000000000000002f: 04	movq	%rax, 8(%rbx)							   |	000000000000002c: 03	movq	(%r14), %rax
0000000000000033: 04	movq	8(%rbp), %rax							   |	000000000000002f: 05	movl	$88, %esi
0000000000000037: 04	movq	%rax, 16(%rbx)							   |	0000000000000034: 03	movq	%r14, %rdi
000000000000003b: 04	movq	16(%rbp), %rax							   |	0000000000000037: 03	callq	*16(%rax)
000000000000003f: 04	movq	%rax, 24(%rbx)							   |	000000000000003a: 03	movq	%rax, %rbx
0000000000000043: 04	movq	24(%rbp), %rax							   |	000000000000003d: 07	movq	$4361616, (%rax)
0000000000000047: 04	movq	%rax, 32(%rbx)							   |	0000000000000044: 04	movq	(%rbp), %rax
000000000000004b: 04	leaq	40(%rbx), %rdi							   |	0000000000000048: 04	movq	%rax, 8(%rbx)
000000000000004f: 08	movq	$0, 40(%rbx)							   |	000000000000004c: 04	movq	8(%rbp), %rax
0000000000000057: 04	movq	%r14, 80(%rbx)							   |	0000000000000050: 04	movq	%rax, 16(%rbx)
000000000000005b: 07	movaps	230990(%rip), %xmm0  # 461260 <__dso_handle+0x1c8>		   |	0000000000000054: 04	movq	16(%rbp), %rax
0000000000000062: 04	movups	%xmm0, 64(%rbx)							   |	0000000000000058: 04	movq	%rax, 24(%rbx)
0000000000000066: 05	movl	$4606220, %ecx							   |	000000000000005c: 04	movq	24(%rbp), %rax
000000000000006b: 02	xorl	%esi, %esi							   |	0000000000000060: 04	movq	%rax, 32(%rbx)
000000000000006d: 02	xorl	%edx, %edx							   |	0000000000000064: 04	leaq	40(%rbx), %rdi
000000000000006f: 05	callq	0x43df40 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000068: 08	movq	$0, 40(%rbx)
0000000000000074: 03	movq	%rsp, %rdi							   |	0000000000000070: 04	movq	%r14, 80(%rbx)
0000000000000077: 05	callq	0x4397e0 <BloombergLP::bslmt::ThreadAttributes::ThreadAttributes   |	0000000000000074: 07	movaps	231109(%rip), %xmm0  # 461330 <__dso_handle+0x1c8>
000000000000007c: 03	movq	%rsp, %rsi							   |	000000000000007b: 04	movups	%xmm0, 64(%rbx)
000000000000007f: 05	movl	$4428624, %edx							   |	000000000000007f: 05	movl	$4606422, %ecx
0000000000000084: 03	movq	%r15, %rdi							   |	0000000000000084: 02	xorl	%esi, %esi
0000000000000087: 03	movq	%rbx, %rcx							   |	0000000000000086: 02	xorl	%edx, %edx
000000000000008a: 05	callq	0x439cd0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	0000000000000088: 05	callq	0x43dff0 <bsl::basic_string<char, std::__1::char_traits<char>, b
000000000000008f: 02	movl	%eax, %ebp							   |	000000000000008d: 03	movq	%rsp, %rdi
0000000000000091: 06	cmpq	$23, 56(%rsp)							   |	0000000000000090: 05	callq	0x439850 <BloombergLP::bslmt::ThreadAttributes::ThreadAttributes
0000000000000097: 02	je	0x428c59 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000095: 03	movq	%rsp, %rsi
0000000000000099: 05	movq	24(%rsp), %rsi							   |	0000000000000098: 05	movl	$4428736, %edx
000000000000009e: 05	movq	64(%rsp), %rdi							   |	000000000000009d: 03	movq	%r15, %rdi
00000000000000a3: 03	movq	(%rdi), %rax							   |	00000000000000a0: 03	movq	%rbx, %rcx
00000000000000a6: 03	callq	*24(%rax)							   |	00000000000000a3: 05	callq	0x439d40 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000a9: 02	testl	%ebp, %ebp							   |	00000000000000a8: 02	movl	%eax, %ebp
00000000000000ab: 02	je	0x428c86 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000aa: 06	cmpq	$23, 56(%rsp)
00000000000000ad: 05	cmpq	$23, 72(%rbx)							   |	00000000000000b0: 02	je	0x428cb2 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000b2: 02	je	0x428c72 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000b2: 05	movq	24(%rsp), %rsi
00000000000000b4: 04	movq	40(%rbx), %rsi							   |	00000000000000b7: 05	movq	64(%rsp), %rdi
00000000000000b8: 04	movq	80(%rbx), %rdi							   <
00000000000000bc: 03	movq	(%rdi), %rax								00000000000000bc: 03	movq	(%rdi), %rax
00000000000000bf: 03	callq	*24(%rax)								00000000000000bf: 03	callq	*24(%rax)
00000000000000c2: 08	movq	$-1, 64(%rbx)							   |	00000000000000c2: 02	testl	%ebp, %ebp
00000000000000ca: 03	movq	(%r14), %rax							   |	00000000000000c4: 02	je	0x428cdf <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000cd: 03	movq	%r14, %rdi							   |	00000000000000c6: 05	cmpq	$23, 72(%rbx)
00000000000000d0: 03	movq	%rbx, %rsi							   |	00000000000000cb: 02	je	0x428ccb <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000d3: 03	callq	*24(%rax)							   |	00000000000000cd: 04	movq	40(%rbx), %rsi
00000000000000d6: 02	movl	%ebp, %eax							   |	00000000000000d1: 04	movq	80(%rbx), %rdi
00000000000000d8: 04	addq	$72, %rsp							   |	00000000000000d5: 03	movq	(%rdi), %rax
00000000000000dc: 01	popq	%rbx								   |	00000000000000d8: 03	callq	*24(%rax)
00000000000000dd: 02	popq	%r14								   |	00000000000000db: 08	movq	$-1, 64(%rbx)
00000000000000df: 02	popq	%r15								   |	00000000000000e3: 03	movq	(%r14), %rax
00000000000000e1: 01	popq	%rbp								   |	00000000000000e6: 03	movq	%r14, %rdi
00000000000000e2: 01	retq									   |	00000000000000e9: 03	movq	%rbx, %rsi
00000000000000e3: 03	movq	%rax, %rdi							   |	00000000000000ec: 03	callq	*24(%rax)
00000000000000e6: 05	callq	0x424850 <__clang_call_terminate>				   |	00000000000000ef: 02	movl	%ebp, %eax
00000000000000eb: 03	movq	%rax, %rdi							   |	00000000000000f1: 04	addq	$72, %rsp
00000000000000ee: 05	callq	0x424850 <__clang_call_terminate>				   |	00000000000000f5: 01	popq	%rbx
00000000000000f3: 03	movq	%rax, %rdi							   |	00000000000000f6: 02	popq	%r14
00000000000000f6: 05	callq	0x424850 <__clang_call_terminate>				   |	00000000000000f8: 02	popq	%r15
00000000000000fb: 03	movq	%rax, %r15							   |	00000000000000fa: 01	popq	%rbp
00000000000000fe: 06	cmpq	$23, 56(%rsp)							   |	00000000000000fb: 01	retq	
0000000000000104: 02	je	0x428cd3 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000fc: 03	movq	%rax, %rdi
0000000000000106: 05	movq	24(%rsp), %rsi							   |	00000000000000ff: 05	callq	0x424880 <__clang_call_terminate>
000000000000010b: 05	movq	64(%rsp), %rdi							   |	0000000000000104: 03	movq	%rax, %rdi
0000000000000110: 03	movq	(%rdi), %rax							   |	0000000000000107: 05	callq	0x424880 <__clang_call_terminate>
0000000000000113: 03	callq	*24(%rax)							   |	000000000000010c: 03	movq	%rax, %rdi
0000000000000116: 02	jmp	0x428cd3 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000010f: 05	callq	0x424880 <__clang_call_terminate>
0000000000000118: 03	movq	%rax, %rdi							   |	0000000000000114: 03	movq	%rax, %r15
000000000000011b: 05	callq	0x424850 <__clang_call_terminate>				   |	0000000000000117: 06	cmpq	$23, 56(%rsp)
0000000000000120: 03	movq	%rax, %r15							   |	000000000000011d: 02	je	0x428d2c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000123: 05	cmpq	$23, 72(%rbx)							   |	000000000000011f: 05	movq	24(%rsp), %rsi
0000000000000128: 02	je	0x428ce8 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000124: 05	movq	64(%rsp), %rdi
000000000000012a: 04	movq	40(%rbx), %rsi							   |	0000000000000129: 03	movq	(%rdi), %rax
000000000000012e: 04	movq	80(%rbx), %rdi							   |	000000000000012c: 03	callq	*24(%rax)
0000000000000132: 03	movq	(%rdi), %rax							   |	000000000000012f: 02	jmp	0x428d2c <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000135: 03	callq	*24(%rax)							   |	0000000000000131: 03	movq	%rax, %rdi
0000000000000138: 08	movq	$-1, 64(%rbx)							   |	0000000000000134: 05	callq	0x424880 <__clang_call_terminate>
0000000000000140: 03	movq	(%r14), %rax							   |	0000000000000139: 03	movq	%rax, %r15
0000000000000143: 03	movq	%r14, %rdi							   |	000000000000013c: 05	cmpq	$23, 72(%rbx)
0000000000000146: 03	movq	%rbx, %rsi							   |	0000000000000141: 02	je	0x428d41 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000149: 03	callq	*24(%rax)							   |	0000000000000143: 04	movq	40(%rbx), %rsi
000000000000014c: 02	jmp	0x428d25 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000147: 04	movq	80(%rbx), %rdi
000000000000014e: 03	movq	%rax, %rdi							   |	000000000000014b: 03	movq	(%rdi), %rax
0000000000000151: 05	callq	0x424850 <__clang_call_terminate>				   |	000000000000014e: 03	callq	*24(%rax)
0000000000000156: 03	movq	%rax, %rdi							   |	0000000000000151: 08	movq	$-1, 64(%rbx)
0000000000000159: 05	callq	0x424850 <__clang_call_terminate>				   |	0000000000000159: 03	movq	(%r14), %rax
000000000000015e: 03	movq	%rax, %r15							   |	000000000000015c: 03	movq	%r14, %rdi
0000000000000161: 08	movq	$0, 64(%rbx)							   |	000000000000015f: 03	movq	%rbx, %rsi
0000000000000169: 03	movq	(%r14), %rax							   |	0000000000000162: 03	callq	*24(%rax)
000000000000016c: 03	movq	%r14, %rdi							   |	0000000000000165: 02	jmp	0x428d7e <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000016f: 03	movq	%rbx, %rsi							   |	0000000000000167: 03	movq	%rax, %rdi
0000000000000172: 03	callq	*24(%rax)							   |	000000000000016a: 05	callq	0x424880 <__clang_call_terminate>
0000000000000175: 03	movq	%r15, %rdi							   |	000000000000016f: 03	movq	%rax, %rdi
0000000000000178: 05	callq	0x404730 <_Unwind_Resume@plt>					   |	0000000000000172: 05	callq	0x424880 <__clang_call_terminate>
000000000000017d: 03	movq	%rax, %rdi							   |	0000000000000177: 03	movq	%rax, %r15
0000000000000180: 05	callq	0x424850 <__clang_call_terminate>				   |	000000000000017a: 08	movq	$0, 64(%rbx)
0000000000000185: 10	nopw	%cs:(%rax,%rax)							   |	0000000000000182: 03	movq	(%r14), %rax
000000000000018f: 01	nop									   |	0000000000000185: 03	movq	%r14, %rdi
												   >	0000000000000188: 03	movq	%rbx, %rsi
												   >	000000000000018b: 03	callq	*24(%rax)
												   >	000000000000018e: 03	movq	%r15, %rdi
												   >	0000000000000191: 05	callq	0x404730 <_Unwind_Resume@plt>
												   >	0000000000000196: 03	movq	%rax, %rdi
												   >	0000000000000199: 05	callq	0x424880 <__clang_call_terminate>
												   >	000000000000019e: 02	nop	
