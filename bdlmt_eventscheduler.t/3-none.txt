    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_eventscheduler.t/none @ 0x428e70 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::EventScheduler__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventSched ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlmt::EventScheduler_BloombergLP::bslmt::Barrier_BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventSched (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                                                                                                 |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x00428e70 push rbp                                                                                                                                                                                                                                                          |     
    0x00428e71 push r15                                                                                                                                                                                                                                                          |     
    0x00428e73 push r14                                                                                                                                                                                                                                                          |     
    0x00428e75 push rbx                                                                                                                                                                                                                                                          |     
    0x00428e76 sub rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00428e7a mov r14, rdx                                                                                                                                                                                                                                                      |     r14 = rdx;
    0x00428e7d mov rbp, rsi                                                                                                                                                                                                                                                      |     
    0x00428e80 mov r15, rdi                                                                                                                                                                                                                                                      |     r15 = rdi;
    0x00428e83 test rdx, rdx                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (rdx == 0) {
    0x00428e86 jne 0x428e9c                                                                                                                                                                                                                                                      |         
    0x00428e88 mov r14, qword [rip + 0x2787f9]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00428e8f test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x00428e92 jne 0x428e9c                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x00428e94 call 0x4381c0                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00428e99 mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00428e9c mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00428e9f mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x00428ea4 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x00428ea7 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00428eaa mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00428ead mov qword [rax], 0x429010                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::EventScheduler__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventScheduler__Bloo;
    0x00428eb4 mov rax, qword [rbp]                                                                                                                                                                                                                                              |     rax = *(rbp);
    0x00428eb8 mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00428ebc mov rax, qword [rbp + 8]                                                                                                                                                                                                                                          |     rax = *((rbp + 8));
    0x00428ec0 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00428ec4 mov rax, qword [rbp + 0x10]                                                                                                                                                                                                                                       |     rax = *((rbp + 0x10));
    0x00428ec8 mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00428ecc lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x00428ed0 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x00428ed8 mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x00428edc movaps xmm0, xmmword [rip + 0x3844d]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00428ee3 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x00428ee7 mov ecx, 0x4649d6                                                                                                                                                                                                                                                 |     
    0x00428eec xor esi, esi                                                                                                                                                                                                                                                      |     
    0x00428eee xor edx, edx                                                                                                                                                                                                                                                      |     
    0x00428ef0 call 0x43dff0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00428ef5 mov rdi, rsp                                                                                                                                                                                                                                                      |     
    0x00428ef8 call 0x439850                                                                                                                                                                                                                                                     |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00428efd mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x00428f00 mov edx, 0x4393c0                                                                                                                                                                                                                                                 |     
    0x00428f05 mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x00428f08 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00428f0b call 0x439d40                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00428f10 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00428f12 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsp + 0x38)) != 0x17) {
    0x00428f18 je 0x428f2a                                                                                                                                                                                                                                                       |         
    0x00428f1a mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                       |         rsi = *((rsp + 0x18));
    0x00428f1f mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x40));
    0x00428f24 mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x00428f27 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00428f2a test ebp, ebp                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (ebp != 0) {
    0x00428f2c je 0x428f57                                                                                                                                                                                                                                                       |         
    0x00428f2e cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x00428f33 je 0x428f43                                                                                                                                                                                                                                                       |             
    0x00428f35 mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x00428f39 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x00428f3d mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00428f40 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00428f43 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00428f4b mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00428f4e mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00428f51 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00428f54 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00428f57 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00428f59 add rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00428f5d pop rbx                                                                                                                                                                                                                                                           |     
    0x00428f5e pop r14                                                                                                                                                                                                                                                           |     
    0x00428f60 pop r15                                                                                                                                                                                                                                                           |     
    0x00428f62 pop rbp                                                                                                                                                                                                                                                           |     
    0x00428f63 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
