00000000004347a0 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin   |	0000000000434920 <int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bin
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 01	pushq	%rax									000000000000000a: 01	pushq	%rax
000000000000000b: 03	movq	%rcx, %r14								000000000000000b: 03	movq	%rcx, %r14
000000000000000e: 03	movq	%rdx, %r12								000000000000000e: 03	movq	%rdx, %r12
0000000000000011: 03	movq	%rsi, %r15								0000000000000011: 03	movq	%rsi, %r15
0000000000000014: 04	movq	%rdi, (%rsp)								0000000000000014: 04	movq	%rdi, (%rsp)
0000000000000018: 04	movq	48(%rsi), %r13							   |	0000000000000018: 05	cmpq	$23, 56(%rsi)
000000000000001c: 05	cmpq	$23, 56(%rsi)							   |	000000000000001d: 02	je	0x434945 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000021: 02	je	0x4347c9 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000001f: 04	movq	24(%r15), %r13
0000000000000023: 04	movq	24(%r15), %rbp							   |	0000000000000023: 02	jmp	0x434949 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000027: 02	jmp	0x4347cd <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000025: 04	leaq	24(%r15), %r13
0000000000000029: 04	leaq	24(%r15), %rbp							   |	0000000000000029: 04	movq	48(%r15), %rbp
000000000000002d: 03	movq	(%r14), %rax							   |	000000000000002d: 03	testq	%r14, %r14
0000000000000030: 05	movl	$80, %esi							   |	0000000000000030: 02	jne	0x434966 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000035: 03	movq	%r14, %rdi							   |	0000000000000032: 07	movq	2542895(%rip), %r14  # 6a1688 <BloombergLP::bslma::Default::s_de
0000000000000038: 03	callq	*16(%rax)							   |	0000000000000039: 03	testq	%r14, %r14
000000000000003b: 03	movq	%rax, %rbx							   |	000000000000003c: 02	jne	0x434966 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000003e: 07	movq	$4414528, (%rax)						   |	000000000000003e: 05	callq	0x4381c0 <BloombergLP::bslma::Default::determineAndReturnDefault
0000000000000045: 05	movups	(%r12), %xmm0							   |	0000000000000043: 03	movq	%rax, %r14
000000000000004a: 04	movups	%xmm0, 8(%rax)							   |	0000000000000046: 03	movq	(%r14), %rax
000000000000004e: 05	movq	16(%r12), %rax							   |	0000000000000049: 05	movl	$80, %esi
0000000000000053: 04	movq	%rax, 24(%rbx)							   |	000000000000004e: 03	movq	%r14, %rdi
0000000000000057: 04	leaq	32(%rbx), %rdi							   |	0000000000000051: 03	callq	*16(%rax)
000000000000005b: 08	movq	$0, 32(%rbx)							   |	0000000000000054: 03	movq	%rax, %rbx
0000000000000063: 04	movq	%r14, 72(%rbx)							   |	0000000000000057: 07	movq	$4414960, (%rax)
0000000000000067: 07	movaps	182866(%rip), %xmm0  # 461260 <__dso_handle+0x1c8>		   |	000000000000005e: 05	movups	(%r12), %xmm0
000000000000006e: 04	movups	%xmm0, 56(%rbx)							   |	0000000000000063: 04	movups	%xmm0, 8(%rax)
0000000000000072: 05	movl	$4606220, %ecx							   |	0000000000000067: 05	movq	16(%r12), %rax
0000000000000077: 03	movq	%rbp, %rsi							   |	000000000000006c: 04	movq	%rax, 24(%rbx)
000000000000007a: 03	movq	%r13, %rdx							   |	0000000000000070: 04	leaq	32(%rbx), %rdi
000000000000007d: 05	callq	0x43df40 <bsl::basic_string<char, std::__1::char_traits<char>, b   |	0000000000000074: 08	movq	$0, 32(%rbx)
0000000000000082: 05	movl	$4428624, %edx							   |	000000000000007c: 04	movq	%r14, 72(%rbx)
0000000000000087: 04	movq	(%rsp), %rdi							   |	0000000000000080: 07	movaps	182665(%rip), %xmm0  # 461330 <__dso_handle+0x1c8>
000000000000008b: 03	movq	%r15, %rsi							   |	0000000000000087: 04	movups	%xmm0, 56(%rbx)
000000000000008e: 03	movq	%rbx, %rcx							   |	000000000000008b: 05	movl	$4606422, %ecx
0000000000000091: 05	callq	0x439cd0 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:   |	0000000000000090: 03	movq	%r13, %rsi
0000000000000096: 02	movl	%eax, %ebp							   |	0000000000000093: 03	movq	%rbp, %rdx
0000000000000098: 02	testl	%eax, %eax							   |	0000000000000096: 05	callq	0x43dff0 <bsl::basic_string<char, std::__1::char_traits<char>, b
000000000000009a: 02	je	0x434865 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	000000000000009b: 05	movl	$4428736, %edx
000000000000009c: 05	cmpq	$23, 64(%rbx)							   |	00000000000000a0: 04	movq	(%rsp), %rdi
00000000000000a1: 02	je	0x434851 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000a4: 03	movq	%r15, %rsi
00000000000000a3: 04	movq	32(%rbx), %rsi							   |	00000000000000a7: 03	movq	%rbx, %rcx
00000000000000a7: 04	movq	72(%rbx), %rdi							   |	00000000000000aa: 05	callq	0x439d40 <BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt:
00000000000000ab: 03	movq	(%rdi), %rax							   |	00000000000000af: 02	movl	%eax, %ebp
00000000000000ae: 03	callq	*24(%rax)							   |	00000000000000b1: 02	testl	%eax, %eax
00000000000000b1: 08	movq	$-1, 56(%rbx)							   |	00000000000000b3: 02	je	0x4349fe <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000b9: 03	movq	(%r14), %rax							   |	00000000000000b5: 05	cmpq	$23, 64(%rbx)
00000000000000bc: 03	movq	%r14, %rdi							   |	00000000000000ba: 02	je	0x4349ea <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
00000000000000bf: 03	movq	%rbx, %rsi							   |	00000000000000bc: 04	movq	32(%rbx), %rsi
00000000000000c2: 03	callq	*24(%rax)							   |	00000000000000c0: 04	movq	72(%rbx), %rdi
00000000000000c5: 02	movl	%ebp, %eax							   |	00000000000000c4: 03	movq	(%rdi), %rax
00000000000000c7: 04	addq	$8, %rsp							   |	00000000000000c7: 03	callq	*24(%rax)
00000000000000cb: 01	popq	%rbx								   |	00000000000000ca: 08	movq	$-1, 56(%rbx)
00000000000000cc: 02	popq	%r12								   |	00000000000000d2: 03	movq	(%r14), %rax
00000000000000ce: 02	popq	%r13								   |	00000000000000d5: 03	movq	%r14, %rdi
00000000000000d0: 02	popq	%r14								   |	00000000000000d8: 03	movq	%rbx, %rsi
00000000000000d2: 02	popq	%r15								   |	00000000000000db: 03	callq	*24(%rax)
00000000000000d4: 01	popq	%rbp								   |	00000000000000de: 02	movl	%ebp, %eax
00000000000000d5: 01	retq									   |	00000000000000e0: 04	addq	$8, %rsp
00000000000000d6: 03	movq	%rax, %rdi							   |	00000000000000e4: 01	popq	%rbx
00000000000000d9: 05	callq	0x424850 <__clang_call_terminate>				   |	00000000000000e5: 02	popq	%r12
00000000000000de: 03	movq	%rax, %rdi							   |	00000000000000e7: 02	popq	%r13
00000000000000e1: 05	callq	0x424850 <__clang_call_terminate>				   |	00000000000000e9: 02	popq	%r14
00000000000000e6: 03	movq	%rax, %r15							   |	00000000000000eb: 02	popq	%r15
00000000000000e9: 05	cmpq	$23, 64(%rbx)							   |	00000000000000ed: 01	popq	%rbp
00000000000000ee: 02	je	0x43489e <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	00000000000000ee: 01	retq	
00000000000000f0: 04	movq	32(%rbx), %rsi							   |	00000000000000ef: 03	movq	%rax, %rdi
00000000000000f4: 04	movq	72(%rbx), %rdi							   |	00000000000000f2: 05	callq	0x424880 <__clang_call_terminate>
00000000000000f8: 03	movq	(%rdi), %rax							   |	00000000000000f7: 03	movq	%rax, %rdi
00000000000000fb: 03	callq	*24(%rax)							   |	00000000000000fa: 05	callq	0x424880 <__clang_call_terminate>
00000000000000fe: 08	movq	$-1, 56(%rbx)							   |	00000000000000ff: 03	movq	%rax, %rbp
0000000000000106: 03	movq	(%r14), %rax							   |	0000000000000102: 05	cmpq	$23, 64(%rbx)
0000000000000109: 03	movq	%r14, %rdi							   |	0000000000000107: 02	je	0x434a37 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
000000000000010c: 03	movq	%rbx, %rsi							   |	0000000000000109: 04	movq	32(%rbx), %rsi
000000000000010f: 03	callq	*24(%rax)							   |	000000000000010d: 04	movq	72(%rbx), %rdi
0000000000000112: 02	jmp	0x4348db <int BloombergLP::bslmt::ThreadUtil::createWithAllocato   |	0000000000000111: 03	movq	(%rdi), %rax
0000000000000114: 03	movq	%rax, %rdi							   |	0000000000000114: 03	callq	*24(%rax)
0000000000000117: 05	callq	0x424850 <__clang_call_terminate>				   |	0000000000000117: 08	movq	$-1, 56(%rbx)
000000000000011c: 03	movq	%rax, %rdi							   |	000000000000011f: 03	movq	(%r14), %rax
000000000000011f: 05	callq	0x424850 <__clang_call_terminate>				   |	0000000000000122: 03	movq	%r14, %rdi
0000000000000124: 03	movq	%rax, %r15							   |	0000000000000125: 03	movq	%rbx, %rsi
0000000000000127: 08	movq	$0, 56(%rbx)							   |	0000000000000128: 03	callq	*24(%rax)
000000000000012f: 03	movq	(%r14), %rax							   |	000000000000012b: 02	jmp	0x434a74 <int BloombergLP::bslmt::ThreadUtil::createWithAllocato
0000000000000132: 03	movq	%r14, %rdi							   |	000000000000012d: 03	movq	%rax, %rdi
0000000000000135: 03	movq	%rbx, %rsi							   |	0000000000000130: 05	callq	0x424880 <__clang_call_terminate>
0000000000000138: 03	callq	*24(%rax)							   |	0000000000000135: 03	movq	%rax, %rdi
000000000000013b: 03	movq	%r15, %rdi							   |	0000000000000138: 05	callq	0x424880 <__clang_call_terminate>
000000000000013e: 05	callq	0x404730 <_Unwind_Resume@plt>					   |	000000000000013d: 03	movq	%rax, %rbp
0000000000000143: 03	movq	%rax, %rdi							   |	0000000000000140: 08	movq	$0, 56(%rbx)
0000000000000146: 05	callq	0x424850 <__clang_call_terminate>				   |	0000000000000148: 03	movq	(%r14), %rax
000000000000014b: 05	nopl	(%rax,%rax)							   |	000000000000014b: 03	movq	%r14, %rdi
												   >	000000000000014e: 03	movq	%rbx, %rsi
												   >	0000000000000151: 03	callq	*24(%rax)
												   >	0000000000000154: 03	movq	%rbp, %rdi
												   >	0000000000000157: 05	callq	0x404730 <_Unwind_Resume@plt>
												   >	000000000000015c: 03	movq	%rax, %rdi
												   >	000000000000015f: 05	callq	0x424880 <__clang_call_terminate>
												   >	0000000000000164: 10	nopw	%cs:(%rax,%rax)
												   >	000000000000016e: 02	nop	
