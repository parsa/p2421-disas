    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlmt_eventscheduler.t/assume @ 0x428e20 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::EventScheduler__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventSched ()       | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BloombergLP::bdlf::Bind_BloombergLP::bslmf_Nil_void_BloombergLP::bdlmt::EventScheduler_BloombergLP::bslmt::Barrier_BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventSched (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     int64_t var_18h;
                                                                                                                                                                                                                                                                                 |     uint32_t var_38h;
                                                                                                                                                                                                                                                                                 |     int64_t var_40h;
                                                                                                                                                                                                                                                                                 |     rdx = arg3;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*> > >(unsigned long*, BloombergLP::bdlf::Bind<BloombergLP::bslmf::Nil, void (*)(BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*), BloombergLP::bdlf::Bind_BoundTuple2<BloombergLP::bdlmt::EventScheduler*, BloombergLP::bslmt::Barrier*> > const&, BloombergLP::bslma::Allocator*) */
    0x00428e20 push rbp                                                                                                                                                                                                                                                          |     
    0x00428e21 push r15                                                                                                                                                                                                                                                          |     
    0x00428e23 push r14                                                                                                                                                                                                                                                          |     
    0x00428e25 push rbx                                                                                                                                                                                                                                                          |     
    0x00428e26 sub rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00428e2a mov r14, rdx                                                                                                                                                                                                                                                      |     r14 = rdx;
    0x00428e2d mov rbp, rsi                                                                                                                                                                                                                                                      |     
    0x00428e30 mov r15, rdi                                                                                                                                                                                                                                                      |     r15 = rdi;
    0x00428e33 mov rax, qword [rdx]                                                                                                                                                                                                                                              |     rax = *(rdx);
    0x00428e36 mov esi, 0x50                                                                                                                                                                                                                                                     |     esi = 0x50;
    0x00428e3b mov rdi, rdx                                                                                                                                                                                                                                                      |     rdi = rdx;
    0x00428e3e call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00428e41 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00428e44 mov qword [rax], 0x428fa0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BloombergLP::bdlf::Bind_BloombergLP::bslmf.Nil__void____BloombergLP::bdlmt::EventScheduler__BloombergLP::bslmt::Barrier___BloombergLP::bdlf::Bind_BoundTuple2_BloombergLP::bdlmt::EventScheduler__Bloo;
    0x00428e4b mov rax, qword [rbp]                                                                                                                                                                                                                                              |     rax = *(rbp);
    0x00428e4f mov qword [rbx + 8], rax                                                                                                                                                                                                                                          |     *((rbx + 8)) = rax;
    0x00428e53 mov rax, qword [rbp + 8]                                                                                                                                                                                                                                          |     rax = *((rbp + 8));
    0x00428e57 mov qword [rbx + 0x10], rax                                                                                                                                                                                                                                       |     *((rbx + 0x10)) = rax;
    0x00428e5b mov rax, qword [rbp + 0x10]                                                                                                                                                                                                                                       |     rax = *((rbp + 0x10));
    0x00428e5f mov qword [rbx + 0x18], rax                                                                                                                                                                                                                                       |     *((rbx + 0x18)) = rax;
    0x00428e63 lea rdi, [rbx + 0x20]                                                                                                                                                                                                                                             |     
    0x00428e67 mov qword [rbx + 0x20], 0                                                                                                                                                                                                                                         |     *((rbx + 0x20)) = 0;
    0x00428e6f mov qword [rbx + 0x48], r14                                                                                                                                                                                                                                       |     *((rbx + 0x48)) = r14;
    0x00428e73 movaps xmm0, xmmword [rip + 0x383e6]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00428e7a movups xmmword [rbx + 0x38], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x00428e7e mov ecx, 0x46490c                                                                                                                                                                                                                                                 |     
    0x00428e83 xor esi, esi                                                                                                                                                                                                                                                      |     
    0x00428e85 xor edx, edx                                                                                                                                                                                                                                                      |     
    0x00428e87 call 0x43df40                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00428e8c mov rdi, rsp                                                                                                                                                                                                                                                      |     
    0x00428e8f call 0x4397e0                                                                                                                                                                                                                                                     |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00428e94 mov rsi, rsp                                                                                                                                                                                                                                                      |     
    0x00428e97 mov edx, 0x439350                                                                                                                                                                                                                                                 |     
    0x00428e9c mov rdi, r15                                                                                                                                                                                                                                                      |     
    0x00428e9f mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00428ea2 call 0x439cd0                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00428ea7 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00428ea9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsp + 0x38)) != 0x17) {
    0x00428eaf je 0x428ec1                                                                                                                                                                                                                                                       |         
    0x00428eb1 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                                                                       |         rsi = *((rsp + 0x18));
    0x00428eb6 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                                                                       |         rdi = *((rsp + 0x40));
    0x00428ebb mov rax, qword [rdi]                                                                                                                                                                                                                                              |         rax = *(rdi);
    0x00428ebe call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00428ec1 test ebp, ebp                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (ebp != 0) {
    0x00428ec3 je 0x428eee                                                                                                                                                                                                                                                       |         
    0x00428ec5 cmp qword [rbx + 0x40], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x40)) != 0x17) {
    0x00428eca je 0x428eda                                                                                                                                                                                                                                                       |             
    0x00428ecc mov rsi, qword [rbx + 0x20]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x20));
    0x00428ed0 mov rdi, qword [rbx + 0x48]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x48));
    0x00428ed4 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00428ed7 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00428eda mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00428ee2 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00428ee5 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00428ee8 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00428eeb call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00428eee mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00428ef0 add rsp, 0x48                                                                                                                                                                                                                                                     |     
    0x00428ef4 pop rbx                                                                                                                                                                                                                                                           |     
    0x00428ef5 pop r14                                                                                                                                                                                                                                                           |     
    0x00428ef7 pop r15                                                                                                                                                                                                                                                           |     
    0x00428ef9 pop rbp                                                                                                                                                                                                                                                           |     
    0x00428efa ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
