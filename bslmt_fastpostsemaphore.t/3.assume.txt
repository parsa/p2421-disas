    ; assembly                                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                     | /* bslmt_fastpostsemaphore.t/assume @ 0x4076d0 */
                                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::FastPostSemaphore__HalfClock__std::__1::chrono::duration_long_long__std::__1.ratio_1l__1000000000l______BloombergLP::bslmt::FastPostSemaphore__std::__1::chrono::time_point_HalfCloc ()         | uint64_t method_int_BloombergLP::bslmt::ChronoUtil::timedWait_BloombergLP::bslmt::FastPostSemaphore_HalfClock_std::_1::chrono::duration_long_long_std::_1_ratio_1l_1000000000l_BloombergLP::bslmt::FastPostSemaphore_std::_1::chrono::time_point_HalfCloc (int32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                     |     int64_t var_8h;
                                                                                                                                                                                                                                                                                     |     int64_t var_10h;
                                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ChronoUtil::timedWait<BloombergLP::bslmt::FastPostSemaphore, HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >(BloombergLP::bslmt::FastPostSemaphore*, std::__1::chrono::time_point<HalfClock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) */
    0x004076d0 push rbp                                                                                                                                                                                                                                                              |     
    0x004076d1 push r15                                                                                                                                                                                                                                                              |     
    0x004076d3 push r14                                                                                                                                                                                                                                                              |     
    0x004076d5 push r13                                                                                                                                                                                                                                                              |     
    0x004076d7 push r12                                                                                                                                                                                                                                                              |     
    0x004076d9 push rbx                                                                                                                                                                                                                                                              |     
    0x004076da sub rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x004076de mov rbp, rsi                                                                                                                                                                                                                                                          |     
    0x004076e1 mov rbx, rdi                                                                                                                                                                                                                                                          |     rbx = rdi;
    0x004076e4 call 0x4028a0                                                                                                                                                                                                                                                         |     rax = std::_1::chrono::steady_clock::now() ();
    0x004076e9 mov r14, rax                                                                                                                                                                                                                                                          |     r14 = rax;
    0x004076ec shr r14, 0x3f                                                                                                                                                                                                                                                         |     r14 >>= 0x3f;
    0x004076f0 add r14, rax                                                                                                                                                                                                                                                          |     r14 += rax;
    0x004076f3 sar r14, 1                                                                                                                                                                                                                                                            |     r14 >>= 1;
    0x004076f6 mov r15d, 0xfffffffe                                                                                                                                                                                                                                                  |     r15d = 0xfffffffe;
    0x004076fc cmp r14, qword [rbp]                                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                                     |     if (r14 >= *(rbp)) {
    0x00407700 jge 0x40783e                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     |     }
    0x00407706 movabs r13, 0x112e0be826d694b3                                                                                                                                                                                                                                        |     r13 = 0x112e0be826d694b3;
    0x00407710 mov r15, rsp                                                                                                                                                                                                                                                          |     r15 = rsp;
    0x00407713 lea r12, [rsp + 0x10]                                                                                                                                                                                                                                                 |     r12 = rsp + 0x10;
    0x00407718 nop dword [rax + rax]                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                                     |     do {
    0x00407720 cmp dword [rbx + 0x60], 1                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x60)) == 1) {
    0x00407724 jne 0x407730                                                                                                                                                                                                                                                          |             
    0x00407726 call 0x422180                                                                                                                                                                                                                                                         |             BloombergLP::bsls::SystemTime::nowMonotonicClock() ();
    0x0040772b jmp 0x407735                                                                                                                                                                                                                                                          |             
                                                                                                                                                                                                                                                                                     |         } else {
    0x00407730 call 0x422210                                                                                                                                                                                                                                                         |             rax = BloombergLP::bsls::SystemTime::nowRealtimeClock() ();
                                                                                                                                                                                                                                                                                     |         }
    0x00407735 mov qword [rsp], rax                                                                                                                                                                                                                                                  |         *(rsp) = rax;
    0x00407739 mov dword [rsp + 8], edx                                                                                                                                                                                                                                              |         *((rsp + 8)) = edx;
    0x0040773d mov rcx, qword [rbp]                                                                                                                                                                                                                                                  |         rcx = *(rbp);
    0x00407741 sub rcx, r14                                                                                                                                                                                                                                                          |         rcx -= r14;
    0x00407744 mov rax, rcx                                                                                                                                                                                                                                                          |         rax = rcx;
    0x00407747 imul r13                                                                                                                                                                                                                                                              |         rdx:rax = rax * r13;
    0x0040774a mov rax, rdx                                                                                                                                                                                                                                                          |         rax = rdx;
    0x0040774d shr rax, 0x3f                                                                                                                                                                                                                                                         |         rax >>= 0x3f;
    0x00407751 sar rdx, 0x1a                                                                                                                                                                                                                                                         |         rdx >>= 0x1a;
    0x00407755 add rdx, rax                                                                                                                                                                                                                                                          |         rdx += rax;
    0x00407758 imul eax, edx, 0xc4653600                                                                                                                                                                                                                                             |         eax = edx * 0xc4653600;
    0x0040775e add ecx, eax                                                                                                                                                                                                                                                          |         ecx += eax;
    0x00407760 mov rdi, r15                                                                                                                                                                                                                                                          |         
    0x00407763 mov rsi, rdx                                                                                                                                                                                                                                                          |         
    0x00407766 mov edx, ecx                                                                                                                                                                                                                                                          |         
    0x00407768 call 0x422330                                                                                                                                                                                                                                                         |         rax = BloombergLP::bsls::TimeInterval::addInterval(long long,int) (r15, rdx, ecx);
    0x0040776d movups xmm0, xmmword [rax]                                                                                                                                                                                                                                            |         __asm ("movups xmm0, xmmword [rax]");
    0x00407770 movaps xmmword [rsp + 0x10], xmm0                                                                                                                                                                                                                                     |         *((rsp + 0x10)) = xmm0;
    0x00407775 mov rax, 0xfffffffff0000000                                                                                                                                                                                                                                           |         rax = 0xfffffffff0000000;
    0x0040777c lock xadd qword [rbx], rax                                                                                                                                                                                                                                            |         __asm ("lock xadd qword [rbx], rax");
    0x00407781 test eax, 0x1000000                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if ((eax & 0x1000000) != 0) {
    0x00407786 jne 0x4077dc                                                                                                                                                                                                                                                          |             goto label_1;
                                                                                                                                                                                                                                                                                     |         }
    0x00407788 lea rdx, [rax - 0x10000000]                                                                                                                                                                                                                                           |         rdx = rax - 0x10000000;
    0x0040778f mov rcx, rdx                                                                                                                                                                                                                                                          |         rcx = rdx;
    0x00407792 sar rcx, 0x1c                                                                                                                                                                                                                                                         |         rcx >>= 0x1c;
    0x00407796 and eax, 0xffffff                                                                                                                                                                                                                                                     |         eax &= 0xffffff;
    0x0040779b cmp rcx, rax                                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                                     |         if (rcx >= rax) {
    0x0040779e jge 0x407836                                                                                                                                                                                                                                                          |             goto label_2;
                                                                                                                                                                                                                                                                                     |         }
    0x004077a4 mov rdi, rbx                                                                                                                                                                                                                                                          |         
    0x004077a7 mov rsi, r12                                                                                                                                                                                                                                                          |         
    0x004077aa call 0x406df0                                                                                                                                                                                                                                                         |         eax = BloombergLP::bslmt::FastPostSemaphoreImpl<BloombergLP::bsls::AtomicOperations,BloombergLP::bslmt::Mutex,BloombergLP::bslmt::Condition,BloombergLP::bslmt::ThreadUtil>::timedWaitSlowPath(BloombergLP::bsls::TimeIntervalconst&,long long) (rbx, r12, rdx);
    0x004077af cmp eax, 0xfffffffe                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (eax != 0xfffffffe) {
    0x004077b2 jne 0x40783b                                                                                                                                                                                                                                                          |             goto label_3;
                                                                                                                                                                                                                                                                                     |         }
    0x004077b8 call 0x4028a0                                                                                                                                                                                                                                                         |         rax = std::_1::chrono::steady_clock::now() ();
    0x004077bd mov r14, rax                                                                                                                                                                                                                                                          |         r14 = rax;
    0x004077c0 shr r14, 0x3f                                                                                                                                                                                                                                                         |         r14 >>= 0x3f;
    0x004077c4 add r14, rax                                                                                                                                                                                                                                                          |         r14 += rax;
    0x004077c7 sar r14, 1                                                                                                                                                                                                                                                            |         r14 >>= 1;
    0x004077ca cmp r14, qword [rbp]                                                                                                                                                                                                                                                  |         
    0x004077ce jl 0x407720                                                                                                                                                                                                                                                           |         
                                                                                                                                                                                                                                                                                     |     } while (r14 < *(rbp));
    0x004077d4 mov r15d, 0xfffffffe                                                                                                                                                                                                                                                  |     r15d = 0xfffffffe;
    0x004077da jmp 0x40783e                                                                                                                                                                                                                                                          |     goto label_0;
                                                                                                                                                                                                                                                                                     | label_1:
    0x004077dc mov eax, 0x10000000                                                                                                                                                                                                                                                   |     eax = 0x10000000;
    0x004077e1 lock xadd qword [rbx], rax                                                                                                                                                                                                                                            |     __asm ("lock xadd qword [rbx], rax");
    0x004077e6 mov r15d, 0xffffffff                                                                                                                                                                                                                                                  |     r15d = 0xffffffff;
    0x004077ec test eax, 0xffffff                                                                                                                                                                                                                                                    |     
                                                                                                                                                                                                                                                                                     |     if ((eax & 0xffffff) != 0) {
    0x004077f1 je 0x40783e                                                                                                                                                                                                                                                           |         
    0x004077f3 mov ecx, eax                                                                                                                                                                                                                                                          |         ecx = eax;
    0x004077f5 and ecx, 0x1000000                                                                                                                                                                                                                                                    |         ecx &= 0x1000000;
    0x004077fb test rcx, rcx                                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                                     |         if (rcx != 0) {
    0x004077fe jne 0x40783e                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00407800 add rax, 0x10000000                                                                                                                                                                                                                                                   |         rax += 0x10000000;
    0x00407806 and rax, 0xfffffffff0000000                                                                                                                                                                                                                                           |         rax &= 0xfffffffff0000000;
    0x0040780c cmp rax, 0x10000000                                                                                                                                                                                                                                                   |         
                                                                                                                                                                                                                                                                                     |         if (rax != 0x10000000) {
    0x00407812 jne 0x40783e                                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                                     |         }
    0x00407814 lea rbp, [rbx + 8]                                                                                                                                                                                                                                                    |         rbp = rbx + 8;
    0x00407818 mov rdi, rbp                                                                                                                                                                                                                                                          |         rdi = rbp;
    0x0040781b call 0x402970                                                                                                                                                                                                                                                         |         pthread_mutex_lock ();
    0x00407820 mov rdi, rbp                                                                                                                                                                                                                                                          |         rdi = rbp;
    0x00407823 call 0x4029e0                                                                                                                                                                                                                                                         |         pthread_mutex_unlock ();
    0x00407828 add rbx, 0x30                                                                                                                                                                                                                                                         |         rbx += 0x30;
    0x0040782c mov rdi, rbx                                                                                                                                                                                                                                                          |         rdi = rbx;
    0x0040782f call 0x4026b0                                                                                                                                                                                                                                                         |         eax = pthread_cond_signal ();
    0x00407834 jmp 0x40783e                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     | label_2:
    0x00407836 xor r15d, r15d                                                                                                                                                                                                                                                        |         r15d = 0;
    0x00407839 jmp 0x40783e                                                                                                                                                                                                                                                          |         goto label_0;
                                                                                                                                                                                                                                                                                     | label_3:
    0x0040783b mov r15d, eax                                                                                                                                                                                                                                                         |         r15d = eax;
                                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                                     | label_0:
    0x0040783e mov eax, r15d                                                                                                                                                                                                                                                         |     
    0x00407841 add rsp, 0x28                                                                                                                                                                                                                                                         |     
    0x00407845 pop rbx                                                                                                                                                                                                                                                               |     
    0x00407846 pop r12                                                                                                                                                                                                                                                               |     
    0x00407848 pop r13                                                                                                                                                                                                                                                               |     
    0x0040784a pop r14                                                                                                                                                                                                                                                               |     
    0x0040784c pop r15                                                                                                                                                                                                                                                               |     
    0x0040784e pop rbp                                                                                                                                                                                                                                                               |     
    0x0040784f ret                                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                                     | }
