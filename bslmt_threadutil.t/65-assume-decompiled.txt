    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x419620 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_8192____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_8192__const__BloombergLP::bslma::Allocator_ ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_8192_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_8192_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<8192> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<8192> const&, BloombergLP::bslma::Allocator*) */
    0x00419620 push rbp                                                                                                                                                                                                                                                  |     
    0x00419621 push r15                                                                                                                                                                                                                                                  |     
    0x00419623 push r14                                                                                                                                                                                                                                                  |     
    0x00419625 push r13                                                                                                                                                                                                                                                  |     
    0x00419627 push r12                                                                                                                                                                                                                                                  |     
    0x00419629 push rbx                                                                                                                                                                                                                                                  |     
    0x0041962a push rax                                                                                                                                                                                                                                                  |     
    0x0041962b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041962e mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00419631 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00419634 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x00419638 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x0041963d je 0x419645                                                                                                                                                                                                                                               |         
    0x0041963f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00419643 jmp 0x419649                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00419645 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00419649 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x0041964c mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x00419651 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00419654 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00419657 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x0041965a mov qword [rax], 0x419760                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_8192___.invokerFunction_void_;
    0x00419661 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x00419665 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x0041966d mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x00419671 movaps xmm0, xmmword [rip + 0x179f8]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00419678 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041967c mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x00419681 mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x00419684 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x00419687 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041968c mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x00419691 mov rdi, r12                                                                                                                                                                                                                                              |     
    0x00419694 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00419697 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x0041969a call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041969f mov ebp, eax                                                                                                                                                                                                                                              |     
    0x004196a1 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x004196a3 je 0x4196ce                                                                                                                                                                                                                                               |         
    0x004196a5 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x004196aa je 0x4196ba                                                                                                                                                                                                                                               |             
    0x004196ac mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x004196b0 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x004196b4 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x004196b7 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x004196ba mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004196c2 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x004196c5 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x004196c8 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x004196cb call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x004196ce mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x004196d0 add rsp, 8                                                                                                                                                                                                                                                |     
    0x004196d4 pop rbx                                                                                                                                                                                                                                                   |     
    0x004196d5 pop r12                                                                                                                                                                                                                                                   |     
    0x004196d7 pop r13                                                                                                                                                                                                                                                   |     
    0x004196d9 pop r14                                                                                                                                                                                                                                                   |     
    0x004196db pop r15                                                                                                                                                                                                                                                   |     
    0x004196dd pop rbp                                                                                                                                                                                                                                                   |     
    0x004196de ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
