    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/none @ 0x418850 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE.Func__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE_Func_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_CONFIGURATION_TEST_NAMESPACE::Func>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_CONFIGURATION_TEST_NAMESPACE::Func const&, BloombergLP::bslma::Allocator*) */
    0x00418850 push rbp                                                                                                                                                                                                                                                  |     
    0x00418851 push r15                                                                                                                                                                                                                                                  |     
    0x00418853 push r14                                                                                                                                                                                                                                                  |     
    0x00418855 push r13                                                                                                                                                                                                                                                  |     
    0x00418857 push r12                                                                                                                                                                                                                                                  |     
    0x00418859 push rbx                                                                                                                                                                                                                                                  |     
    0x0041885a push rax                                                                                                                                                                                                                                                  |     
    0x0041885b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041885e mov r12, rdx                                                                                                                                                                                                                                              |     r12 = rdx;
    0x00418861 mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418864 mov qword [rsp], rdi                                                                                                                                                                                                                                      |     *(rsp) = rdi;
    0x00418868 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x0041886d je 0x418875                                                                                                                                                                                                                                               |         
    0x0041886f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x00418873 jmp 0x418879                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418875 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00418879 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x0041887d test r14, r14                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (r14 == 0) {
    0x00418880 jne 0x418896                                                                                                                                                                                                                                              |         
    0x00418882 mov r14, qword [rip + 0x22c227]                                                                                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00418889 test r14, r14                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                         |         if (r14 != 0) {
    0x0041888c jne 0x418896                                                                                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                                                                                         |         }
    0x0041888e call 0x42e840                                                                                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00418893 mov r14, rax                                                                                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                                                                                         |     }
                                                                                                                                                                                                                                                                         | label_0:
    0x00418896 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00418899 mov esi, 0x48                                                                                                                                                                                                                                             |     esi = 0x48;
    0x0041889e mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x004188a1 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x004188a4 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x004188a7 mov qword [rax], 0x418780                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_.invokerFunction_void_;
    0x004188ae movups xmm0, xmmword [r12]                                                                                                                                                                                                                                |     __asm ("movups xmm0, xmmword [r12]");
    0x004188b3 movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                            |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004188b7 lea rdi, [rax + 0x18]                                                                                                                                                                                                                                     |     
    0x004188bb mov qword [rax + 0x18], 0                                                                                                                                                                                                                                 |     *((rax + 0x18)) = 0;
    0x004188c3 mov qword [rax + 0x40], r14                                                                                                                                                                                                                               |     *((rax + 0x40)) = r14;
    0x004188c7 movaps xmm0, xmmword [rip + 0x18cd2]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x004188ce movups xmmword [rax + 0x30], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x004188d2 mov ecx, 0x432d0b                                                                                                                                                                                                                                         |     
    0x004188d7 mov rsi, r13                                                                                                                                                                                                                                              |     
    0x004188da mov rdx, rbp                                                                                                                                                                                                                                              |     
    0x004188dd call 0x4254b0                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004188e2 mov edx, 0x422cd0                                                                                                                                                                                                                                         |     
    0x004188e7 mov rdi, qword [rsp]                                                                                                                                                                                                                                      |     
    0x004188eb mov rsi, r15                                                                                                                                                                                                                                              |     
    0x004188ee mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x004188f1 call 0x423340                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004188f6 mov ebp, eax                                                                                                                                                                                                                                              |     
    0x004188f8 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x004188fa je 0x418925                                                                                                                                                                                                                                               |         
    0x004188fc cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x38)) != 0x17) {
    0x00418901 je 0x418911                                                                                                                                                                                                                                               |             
    0x00418903 mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x18));
    0x00418907 mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x40));
    0x0041890b mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x0041890e call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x00418911 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x00418919 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x0041891c mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x0041891f mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00418922 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x00418925 mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00418927 add rsp, 8                                                                                                                                                                                                                                                |     
    0x0041892b pop rbx                                                                                                                                                                                                                                                   |     
    0x0041892c pop r12                                                                                                                                                                                                                                                   |     
    0x0041892e pop r13                                                                                                                                                                                                                                                   |     
    0x00418930 pop r14                                                                                                                                                                                                                                                   |     
    0x00418932 pop r15                                                                                                                                                                                                                                                   |     
    0x00418934 pop rbp                                                                                                                                                                                                                                                   |     
    0x00418935 ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
