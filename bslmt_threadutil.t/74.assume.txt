    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bslmt_threadutil.t/assume @ 0x4185c0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE.Func__unsigned_long__BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE_Func_unsigned_long_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const_BloombergLP::bslma::Allocator_ (int64_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_CONFIGURATION_TEST_NAMESPACE::Func>(unsigned long*, BSLMT_CONFIGURATION_TEST_NAMESPACE::Func const&, BloombergLP::bslma::Allocator*) */
    0x004185c0 push rbp                                                                                                                                                                                                      |     
    0x004185c1 push r15                                                                                                                                                                                                      |     
    0x004185c3 push r14                                                                                                                                                                                                      |     
    0x004185c5 push rbx                                                                                                                                                                                                      |     
    0x004185c6 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x004185ca mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x004185cd mov rbp, rsi                                                                                                                                                                                                  |     
    0x004185d0 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x004185d3 mov rax, qword [rdx]                                                                                                                                                                                          |     rax = *(rdx);
    0x004185d6 mov esi, 0x48                                                                                                                                                                                                 |     esi = 0x48;
    0x004185db mov rdi, rdx                                                                                                                                                                                                  |     rdi = rdx;
    0x004185de call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x004185e1 mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x004185e4 mov qword [rax], 0x418730                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_.invokerFunction_void_;
    0x004185eb movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x004185ef movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004185f3 lea rdi, [rax + 0x18]                                                                                                                                                                                         |     
    0x004185f7 mov qword [rax + 0x18], 0                                                                                                                                                                                     |     *((rax + 0x18)) = 0;
    0x004185ff mov qword [rax + 0x40], r14                                                                                                                                                                                   |     *((rax + 0x40)) = r14;
    0x00418603 movaps xmm0, xmmword [rip + 0x18a66]                                                                                                                                                                          |     xmm0 = .comment;
    0x0041860a movups xmmword [rax + 0x30], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x0041860e mov ecx, 0x4327df                                                                                                                                                                                             |     
    0x00418613 xor esi, esi                                                                                                                                                                                                  |     
    0x00418615 xor edx, edx                                                                                                                                                                                                  |     
    0x00418617 call 0x424f70                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0041861c mov rdi, rsp                                                                                                                                                                                                  |     
    0x0041861f call 0x4227c0                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00418624 mov rsi, rsp                                                                                                                                                                                                  |     
    0x00418627 mov edx, 0x4227b0                                                                                                                                                                                             |     
    0x0041862c mov rdi, r15                                                                                                                                                                                                  |     
    0x0041862f mov rcx, rbx                                                                                                                                                                                                  |     
    0x00418632 call 0x422e20                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418637 mov ebp, eax                                                                                                                                                                                                  |     
    0x00418639 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x0041863f je 0x418651                                                                                                                                                                                                   |         
    0x00418641 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x00418646 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x0041864b mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x0041864e call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x00418651 test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x00418653 je 0x41867e                                                                                                                                                                                                   |         
    0x00418655 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x38)) != 0x17) {
    0x0041865a je 0x41866a                                                                                                                                                                                                   |             
    0x0041865c mov rsi, qword [rbx + 0x18]                                                                                                                                                                                   |             rsi = *((rbx + 0x18));
    0x00418660 mov rdi, qword [rbx + 0x40]                                                                                                                                                                                   |             rdi = *((rbx + 0x40));
    0x00418664 mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x00418667 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x0041866a mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x00418672 mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x00418675 mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x00418678 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x0041867b call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x0041867e mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x00418680 add rsp, 0x48                                                                                                                                                                                                 |     
    0x00418684 pop rbx                                                                                                                                                                                                       |     
    0x00418685 pop r14                                                                                                                                                                                                       |     
    0x00418687 pop r15                                                                                                                                                                                                       |     
    0x00418689 pop rbp                                                                                                                                                                                                       |     
    0x0041868a ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
