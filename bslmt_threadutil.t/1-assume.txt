    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x418150 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_THREAD_POLICY_CREATION_TEST.Touch__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_THREAD_POLICY_CREATION_TEST::Touch_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_THREAD_POLICY_CREATION_TEST_Touch_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_THREAD_POLICY_CREATION_TEST::Touch_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_THREAD_POLICY_CREATION_TEST::Touch>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_THREAD_POLICY_CREATION_TEST::Touch const&, BloombergLP::bslma::Allocator*) */
    0x00418150 push rbp                                                                                                                                                                                                                                                  |     
    0x00418151 push r15                                                                                                                                                                                                                                                  |     
    0x00418153 push r14                                                                                                                                                                                                                                                  |     
    0x00418155 push r13                                                                                                                                                                                                                                                  |     
    0x00418157 push r12                                                                                                                                                                                                                                                  |     
    0x00418159 push rbx                                                                                                                                                                                                                                                  |     
    0x0041815a push rax                                                                                                                                                                                                                                                  |     
    0x0041815b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041815e mov r12, rdx                                                                                                                                                                                                                                              |     r12 = rdx;
    0x00418161 mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418164 mov qword [rsp], rdi                                                                                                                                                                                                                                      |     *(rsp) = rdi;
    0x00418168 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x0041816c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00418171 je 0x418179                                                                                                                                                                                                                                               |         
    0x00418173 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00418177 jmp 0x41817d                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418179 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x0041817d mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00418180 mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x00418185 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00418188 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0041818b mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x0041818e mov qword [rax], 0x4182a0                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_THREAD_POLICY_CREATION_TEST::Touch_.invokerFunction_void_;
    0x00418195 mov rax, qword [r12]                                                                                                                                                                                                                                      |     rax = *(r12);
    0x00418199 mov qword [rbx + 8], rax                                                                                                                                                                                                                                  |     *((rbx + 8)) = rax;
    0x0041819d lea rdi, [rbx + 0x10]                                                                                                                                                                                                                                     |     
    0x004181a1 mov qword [rbx + 0x10], 0                                                                                                                                                                                                                                 |     *((rbx + 0x10)) = 0;
    0x004181a9 mov qword [rbx + 0x38], r14                                                                                                                                                                                                                               |     *((rbx + 0x38)) = r14;
    0x004181ad movaps xmm0, xmmword [rip + 0x18ebc]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x004181b4 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x004181b8 mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x004181bd mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x004181c0 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x004181c3 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004181c8 mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x004181cd mov rdi, qword [rsp]                                                                                                                                                                                                                                      |     
    0x004181d1 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x004181d4 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x004181d7 call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004181dc mov ebp, eax                                                                                                                                                                                                                                              |     
    0x004181de test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x004181e0 je 0x41820b                                                                                                                                                                                                                                               |         
    0x004181e2 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x004181e7 je 0x4181f7                                                                                                                                                                                                                                               |             
    0x004181e9 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x004181ed mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x004181f1 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x004181f4 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x004181f7 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004181ff mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x00418202 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x00418205 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00418208 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x0041820b mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x0041820d add rsp, 8                                                                                                                                                                                                                                                |     
    0x00418211 pop rbx                                                                                                                                                                                                                                                   |     
    0x00418212 pop r12                                                                                                                                                                                                                                                   |     
    0x00418214 pop r13                                                                                                                                                                                                                                                   |     
    0x00418216 pop r14                                                                                                                                                                                                                                                   |     
    0x00418218 pop r15                                                                                                                                                                                                                                                   |     
    0x0041821a pop rbp                                                                                                                                                                                                                                                   |     
    0x0041821b ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
