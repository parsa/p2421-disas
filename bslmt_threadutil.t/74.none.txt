    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bslmt_threadutil.t/none @ 0x4185f0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE.Func__unsigned_long__BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE_Func_unsigned_long_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const_BloombergLP::bslma::Allocator_ (int64_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_CONFIGURATION_TEST_NAMESPACE::Func>(unsigned long*, BSLMT_CONFIGURATION_TEST_NAMESPACE::Func const&, BloombergLP::bslma::Allocator*) */
    0x004185f0 push rbp                                                                                                                                                                                                      |     
    0x004185f1 push r15                                                                                                                                                                                                      |     
    0x004185f3 push r14                                                                                                                                                                                                      |     
    0x004185f5 push rbx                                                                                                                                                                                                      |     
    0x004185f6 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x004185fa mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x004185fd mov rbp, rsi                                                                                                                                                                                                  |     
    0x00418600 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x00418603 test rdx, rdx                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (rdx == 0) {
    0x00418606 jne 0x41861c                                                                                                                                                                                                  |         
    0x00418608 mov r14, qword [rip + 0x22c4a1]                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041860f test r14, r14                                                                                                                                                                                                 |         
                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00418612 jne 0x41861c                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                             |         }
    0x00418614 call 0x42e840                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00418619 mov r14, rax                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                             | label_0:
    0x0041861c mov rax, qword [r14]                                                                                                                                                                                          |     rax = *(r14);
    0x0041861f mov esi, 0x48                                                                                                                                                                                                 |     esi = 0x48;
    0x00418624 mov rdi, r14                                                                                                                                                                                                  |     rdi = r14;
    0x00418627 call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0041862a mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x0041862d mov qword [rax], 0x418780                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_.invokerFunction_void_;
    0x00418634 movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x00418638 movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0041863c lea rdi, [rax + 0x18]                                                                                                                                                                                         |     
    0x00418640 mov qword [rax + 0x18], 0                                                                                                                                                                                     |     *((rax + 0x18)) = 0;
    0x00418648 mov qword [rax + 0x40], r14                                                                                                                                                                                   |     *((rax + 0x40)) = r14;
    0x0041864c movaps xmm0, xmmword [rip + 0x18f4d]                                                                                                                                                                          |     xmm0 = .comment;
    0x00418653 movups xmmword [rax + 0x30], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x00418657 mov ecx, 0x432d0b                                                                                                                                                                                             |     
    0x0041865c xor esi, esi                                                                                                                                                                                                  |     
    0x0041865e xor edx, edx                                                                                                                                                                                                  |     
    0x00418660 call 0x4254b0                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00418665 mov rdi, rsp                                                                                                                                                                                                  |     
    0x00418668 call 0x422ce0                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0041866d mov rsi, rsp                                                                                                                                                                                                  |     
    0x00418670 mov edx, 0x422cd0                                                                                                                                                                                             |     
    0x00418675 mov rdi, r15                                                                                                                                                                                                  |     
    0x00418678 mov rcx, rbx                                                                                                                                                                                                  |     
    0x0041867b call 0x423340                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418680 mov ebp, eax                                                                                                                                                                                                  |     
    0x00418682 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00418688 je 0x41869a                                                                                                                                                                                                   |         
    0x0041868a mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0041868f mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00418694 mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x00418697 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x0041869a test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x0041869c je 0x4186c7                                                                                                                                                                                                   |         
    0x0041869e cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x38)) != 0x17) {
    0x004186a3 je 0x4186b3                                                                                                                                                                                                   |             
    0x004186a5 mov rsi, qword [rbx + 0x18]                                                                                                                                                                                   |             rsi = *((rbx + 0x18));
    0x004186a9 mov rdi, qword [rbx + 0x40]                                                                                                                                                                                   |             rdi = *((rbx + 0x40));
    0x004186ad mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x004186b0 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x004186b3 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x004186bb mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x004186be mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x004186c1 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x004186c4 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x004186c7 mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x004186c9 add rsp, 0x48                                                                                                                                                                                                 |     
    0x004186cd pop rbx                                                                                                                                                                                                       |     
    0x004186ce pop r14                                                                                                                                                                                                       |     
    0x004186d0 pop r15                                                                                                                                                                                                       |     
    0x004186d2 pop rbp                                                                                                                                                                                                       |     
    0x004186d3 ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
