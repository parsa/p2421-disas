    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/none @ 0x420440 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_525312____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_525312__const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_525312_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_525312_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<525312> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<525312> const&, BloombergLP::bslma::Allocator*) */
    0x00420440 push rbp                                                                                                                                                                                                                                                      |     
    0x00420441 push r15                                                                                                                                                                                                                                                      |     
    0x00420443 push r14                                                                                                                                                                                                                                                      |     
    0x00420445 push r13                                                                                                                                                                                                                                                      |     
    0x00420447 push r12                                                                                                                                                                                                                                                      |     
    0x00420449 push rbx                                                                                                                                                                                                                                                      |     
    0x0042044a push rax                                                                                                                                                                                                                                                      |     
    0x0042044b mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x0042044e mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x00420451 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x00420454 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x00420459 je 0x420461                                                                                                                                                                                                                                                   |         
    0x0042045b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x0042045f jmp 0x420465                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x00420461 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x00420465 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x00420469 test r14, r14                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x0042046c jne 0x420482                                                                                                                                                                                                                                                  |         
    0x0042046e mov r14, qword [rip + 0x22463b]                                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00420475 test r14, r14                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00420478 jne 0x420482                                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                                             |         }
    0x0042047a call 0x42e840                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0042047f mov r14, rax                                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_0:
    0x00420482 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x00420485 mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x0042048a mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x0042048d call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x00420490 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x00420493 mov qword [rax], 0x420590                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_525312___.invokerFunction_void_;
    0x0042049a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x0042049e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x004204a6 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x004204aa movaps xmm0, xmmword [rip + 0x110ef]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x004204b1 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x004204b5 mov ecx, 0x432d0b                                                                                                                                                                                                                                             |     
    0x004204ba mov rsi, r13                                                                                                                                                                                                                                                  |     
    0x004204bd mov rdx, rbp                                                                                                                                                                                                                                                  |     
    0x004204c0 call 0x4254b0                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004204c5 mov edx, 0x422cd0                                                                                                                                                                                                                                             |     
    0x004204ca mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x004204cd mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x004204d0 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x004204d3 call 0x423340                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004204d8 mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x004204da test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x004204dc je 0x420507                                                                                                                                                                                                                                                   |         
    0x004204de cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x004204e3 je 0x4204f3                                                                                                                                                                                                                                                   |             
    0x004204e5 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x004204e9 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x004204ed mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x004204f0 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x004204f3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004204fb mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x004204fe mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x00420501 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x00420504 call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x00420507 mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x00420509 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x0042050d pop rbx                                                                                                                                                                                                                                                       |     
    0x0042050e pop r12                                                                                                                                                                                                                                                       |     
    0x00420510 pop r13                                                                                                                                                                                                                                                       |     
    0x00420512 pop r14                                                                                                                                                                                                                                                       |     
    0x00420514 pop r15                                                                                                                                                                                                                                                       |     
    0x00420516 pop rbp                                                                                                                                                                                                                                                       |     
    0x00420517 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
