    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/assume @ 0x421380 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_4195328____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_4195328__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_4195328_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_4195328_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<4195328> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<4195328> const&, BloombergLP::bslma::Allocator*) */
    0x00421380 push rbp                                                                                                                                                                                                                                                          |     
    0x00421381 push r15                                                                                                                                                                                                                                                          |     
    0x00421383 push r14                                                                                                                                                                                                                                                          |     
    0x00421385 push r13                                                                                                                                                                                                                                                          |     
    0x00421387 push r12                                                                                                                                                                                                                                                          |     
    0x00421389 push rbx                                                                                                                                                                                                                                                          |     
    0x0042138a push rax                                                                                                                                                                                                                                                          |     
    0x0042138b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0042138e mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x00421391 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x00421394 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x00421398 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0042139d je 0x4213a5                                                                                                                                                                                                                                                       |         
    0x0042139f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x004213a3 jmp 0x4213a9                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004213a5 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004213a9 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004213ac mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x004213b1 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004213b4 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004213b7 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004213ba mov qword [rax], 0x4214c0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_4195328___.invokerFunction_void_;
    0x004213c1 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x004213c5 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x004213cd mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x004213d1 movaps xmm0, xmmword [rip + 0xfc98]                                                                                                                                                                                                                               |     xmm0 = .comment;
    0x004213d8 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x004213dc mov ecx, 0x4327df                                                                                                                                                                                                                                                 |     
    0x004213e1 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x004213e4 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x004213e7 call 0x424f70                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004213ec mov edx, 0x4227b0                                                                                                                                                                                                                                                 |     
    0x004213f1 mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x004213f4 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x004213f7 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x004213fa call 0x422e20                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004213ff mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x00421401 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x00421403 je 0x42142e                                                                                                                                                                                                                                                       |         
    0x00421405 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x0042140a je 0x42141a                                                                                                                                                                                                                                                       |             
    0x0042140c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x00421410 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x00421414 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00421417 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0042141a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00421422 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x00421425 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00421428 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0042142b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0042142e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00421430 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x00421434 pop rbx                                                                                                                                                                                                                                                           |     
    0x00421435 pop r12                                                                                                                                                                                                                                                           |     
    0x00421437 pop r13                                                                                                                                                                                                                                                           |     
    0x00421439 pop r14                                                                                                                                                                                                                                                           |     
    0x0042143b pop r15                                                                                                                                                                                                                                                           |     
    0x0042143d pop rbp                                                                                                                                                                                                                                                           |     
    0x0042143e ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
