    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/none @ 0x419b40 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_10240____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_10240__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_10240_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_10240_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<10240> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<10240> const&, BloombergLP::bslma::Allocator*) */
    0x00419b40 push rbp                                                                                                                                                                                                                                                      |     
    0x00419b41 push r15                                                                                                                                                                                                                                                      |     
    0x00419b43 push r14                                                                                                                                                                                                                                                      |     
    0x00419b45 push r13                                                                                                                                                                                                                                                      |     
    0x00419b47 push r12                                                                                                                                                                                                                                                      |     
    0x00419b49 push rbx                                                                                                                                                                                                                                                      |     
    0x00419b4a push rax                                                                                                                                                                                                                                                      |     
    0x00419b4b mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x00419b4e mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x00419b51 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x00419b54 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x00419b59 je 0x419b61                                                                                                                                                                                                                                                   |         
    0x00419b5b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x00419b5f jmp 0x419b65                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x00419b61 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x00419b65 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x00419b69 test r14, r14                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x00419b6c jne 0x419b82                                                                                                                                                                                                                                                  |         
    0x00419b6e mov r14, qword [rip + 0x22af3b]                                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00419b75 test r14, r14                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00419b78 jne 0x419b82                                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                                             |         }
    0x00419b7a call 0x42e840                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00419b7f mov r14, rax                                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_0:
    0x00419b82 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x00419b85 mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x00419b8a mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x00419b8d call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x00419b90 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x00419b93 mov qword [rax], 0x419c90                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_10240___.invokerFunction_void_;
    0x00419b9a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x00419b9e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x00419ba6 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x00419baa movaps xmm0, xmmword [rip + 0x179ef]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x00419bb1 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00419bb5 mov ecx, 0x432d0b                                                                                                                                                                                                                                             |     
    0x00419bba mov rsi, r13                                                                                                                                                                                                                                                  |     
    0x00419bbd mov rdx, rbp                                                                                                                                                                                                                                                  |     
    0x00419bc0 call 0x4254b0                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00419bc5 mov edx, 0x422cd0                                                                                                                                                                                                                                             |     
    0x00419bca mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x00419bcd mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x00419bd0 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x00419bd3 call 0x423340                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00419bd8 mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x00419bda test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x00419bdc je 0x419c07                                                                                                                                                                                                                                                   |         
    0x00419bde cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00419be3 je 0x419bf3                                                                                                                                                                                                                                                   |             
    0x00419be5 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00419be9 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x00419bed mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x00419bf0 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x00419bf3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00419bfb mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x00419bfe mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x00419c01 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x00419c04 call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x00419c07 mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x00419c09 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x00419c0d pop rbx                                                                                                                                                                                                                                                       |     
    0x00419c0e pop r12                                                                                                                                                                                                                                                       |     
    0x00419c10 pop r13                                                                                                                                                                                                                                                       |     
    0x00419c12 pop r14                                                                                                                                                                                                                                                       |     
    0x00419c14 pop r15                                                                                                                                                                                                                                                       |     
    0x00419c16 pop rbp                                                                                                                                                                                                                                                       |     
    0x00419c17 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
