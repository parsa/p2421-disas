    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/assume @ 0x41b3e0 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_33792____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_33792__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_33792_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_33792_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<33792> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<33792> const&, BloombergLP::bslma::Allocator*) */
    0x0041b3e0 push rbp                                                                                                                                                                                                                                                      |     
    0x0041b3e1 push r15                                                                                                                                                                                                                                                      |     
    0x0041b3e3 push r14                                                                                                                                                                                                                                                      |     
    0x0041b3e5 push r13                                                                                                                                                                                                                                                      |     
    0x0041b3e7 push r12                                                                                                                                                                                                                                                      |     
    0x0041b3e9 push rbx                                                                                                                                                                                                                                                      |     
    0x0041b3ea push rax                                                                                                                                                                                                                                                      |     
    0x0041b3eb mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x0041b3ee mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x0041b3f1 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x0041b3f4 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                   |     r13 = *((rsi + 0x30));
    0x0041b3f8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x0041b3fd je 0x41b405                                                                                                                                                                                                                                                   |         
    0x0041b3ff mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         rbp = *((r15 + 0x18));
    0x0041b403 jmp 0x41b409                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x0041b405 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                         |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x0041b409 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x0041b40c mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x0041b411 mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x0041b414 call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0041b417 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x0041b41a mov qword [rax], 0x41b520                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_33792___.invokerFunction_void_;
    0x0041b421 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x0041b425 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x0041b42d mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x0041b431 movaps xmm0, xmmword [rip + 0x15c38]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x0041b438 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041b43c mov ecx, 0x4327df                                                                                                                                                                                                                                             |     
    0x0041b441 mov rsi, rbp                                                                                                                                                                                                                                                  |     
    0x0041b444 mov rdx, r13                                                                                                                                                                                                                                                  |     
    0x0041b447 call 0x424f70                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041b44c mov edx, 0x4227b0                                                                                                                                                                                                                                             |     
    0x0041b451 mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x0041b454 mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x0041b457 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x0041b45a call 0x422e20                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041b45f mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x0041b461 test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x0041b463 je 0x41b48e                                                                                                                                                                                                                                                   |         
    0x0041b465 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x0041b46a je 0x41b47a                                                                                                                                                                                                                                                   |             
    0x0041b46c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x0041b470 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0041b474 mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x0041b477 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x0041b47a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041b482 mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x0041b485 mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x0041b488 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x0041b48b call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x0041b48e mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x0041b490 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x0041b494 pop rbx                                                                                                                                                                                                                                                       |     
    0x0041b495 pop r12                                                                                                                                                                                                                                                       |     
    0x0041b497 pop r13                                                                                                                                                                                                                                                       |     
    0x0041b499 pop r14                                                                                                                                                                                                                                                       |     
    0x0041b49b pop r15                                                                                                                                                                                                                                                       |     
    0x0041b49d pop rbp                                                                                                                                                                                                                                                       |     
    0x0041b49e ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
