    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/assume @ 0x41ba40 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_45056____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_45056__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_45056_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_45056_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<45056> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<45056> const&, BloombergLP::bslma::Allocator*) */
    0x0041ba40 push rbp                                                                                                                                                                                                                                                      |     
    0x0041ba41 push r15                                                                                                                                                                                                                                                      |     
    0x0041ba43 push r14                                                                                                                                                                                                                                                      |     
    0x0041ba45 push r13                                                                                                                                                                                                                                                      |     
    0x0041ba47 push r12                                                                                                                                                                                                                                                      |     
    0x0041ba49 push rbx                                                                                                                                                                                                                                                      |     
    0x0041ba4a push rax                                                                                                                                                                                                                                                      |     
    0x0041ba4b mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x0041ba4e mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x0041ba51 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x0041ba54 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                   |     r13 = *((rsi + 0x30));
    0x0041ba58 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x0041ba5d je 0x41ba65                                                                                                                                                                                                                                                   |         
    0x0041ba5f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         rbp = *((r15 + 0x18));
    0x0041ba63 jmp 0x41ba69                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x0041ba65 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                         |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x0041ba69 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x0041ba6c mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x0041ba71 mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x0041ba74 call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0041ba77 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x0041ba7a mov qword [rax], 0x41bb80                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_45056___.invokerFunction_void_;
    0x0041ba81 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x0041ba85 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x0041ba8d mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x0041ba91 movaps xmm0, xmmword [rip + 0x155d8]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x0041ba98 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041ba9c mov ecx, 0x4327df                                                                                                                                                                                                                                             |     
    0x0041baa1 mov rsi, rbp                                                                                                                                                                                                                                                  |     
    0x0041baa4 mov rdx, r13                                                                                                                                                                                                                                                  |     
    0x0041baa7 call 0x424f70                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041baac mov edx, 0x4227b0                                                                                                                                                                                                                                             |     
    0x0041bab1 mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x0041bab4 mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x0041bab7 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x0041baba call 0x422e20                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041babf mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x0041bac1 test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x0041bac3 je 0x41baee                                                                                                                                                                                                                                                   |         
    0x0041bac5 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x0041baca je 0x41bada                                                                                                                                                                                                                                                   |             
    0x0041bacc mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x0041bad0 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0041bad4 mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x0041bad7 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x0041bada mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041bae2 mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x0041bae5 mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x0041bae8 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x0041baeb call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x0041baee mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x0041baf0 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x0041baf4 pop rbx                                                                                                                                                                                                                                                       |     
    0x0041baf5 pop r12                                                                                                                                                                                                                                                       |     
    0x0041baf7 pop r13                                                                                                                                                                                                                                                       |     
    0x0041baf9 pop r14                                                                                                                                                                                                                                                       |     
    0x0041bafb pop r15                                                                                                                                                                                                                                                       |     
    0x0041bafd pop rbp                                                                                                                                                                                                                                                       |     
    0x0041bafe ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
