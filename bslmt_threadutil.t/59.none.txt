    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/none @ 0x41cfc0 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_66560____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_66560__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_66560_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_66560_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<66560> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<66560> const&, BloombergLP::bslma::Allocator*) */
    0x0041cfc0 push rbp                                                                                                                                                                                                                                                      |     
    0x0041cfc1 push r15                                                                                                                                                                                                                                                      |     
    0x0041cfc3 push r14                                                                                                                                                                                                                                                      |     
    0x0041cfc5 push r13                                                                                                                                                                                                                                                      |     
    0x0041cfc7 push r12                                                                                                                                                                                                                                                      |     
    0x0041cfc9 push rbx                                                                                                                                                                                                                                                      |     
    0x0041cfca push rax                                                                                                                                                                                                                                                      |     
    0x0041cfcb mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x0041cfce mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x0041cfd1 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x0041cfd4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x0041cfd9 je 0x41cfe1                                                                                                                                                                                                                                                   |         
    0x0041cfdb mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x0041cfdf jmp 0x41cfe5                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x0041cfe1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x0041cfe5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x0041cfe9 test r14, r14                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x0041cfec jne 0x41d002                                                                                                                                                                                                                                                  |         
    0x0041cfee mov r14, qword [rip + 0x227abb]                                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041cff5 test r14, r14                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x0041cff8 jne 0x41d002                                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                                             |         }
    0x0041cffa call 0x42e840                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041cfff mov r14, rax                                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_0:
    0x0041d002 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x0041d005 mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x0041d00a mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x0041d00d call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x0041d010 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x0041d013 mov qword [rax], 0x41d110                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_66560___.invokerFunction_void_;
    0x0041d01a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x0041d01e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x0041d026 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x0041d02a movaps xmm0, xmmword [rip + 0x1456f]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x0041d031 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041d035 mov ecx, 0x432d0b                                                                                                                                                                                                                                             |     
    0x0041d03a mov rsi, r13                                                                                                                                                                                                                                                  |     
    0x0041d03d mov rdx, rbp                                                                                                                                                                                                                                                  |     
    0x0041d040 call 0x4254b0                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041d045 mov edx, 0x422cd0                                                                                                                                                                                                                                             |     
    0x0041d04a mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x0041d04d mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x0041d050 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x0041d053 call 0x423340                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041d058 mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x0041d05a test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x0041d05c je 0x41d087                                                                                                                                                                                                                                                   |         
    0x0041d05e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x0041d063 je 0x41d073                                                                                                                                                                                                                                                   |             
    0x0041d065 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x0041d069 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0041d06d mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x0041d070 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x0041d073 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041d07b mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x0041d07e mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x0041d081 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x0041d084 call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x0041d087 mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x0041d089 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x0041d08d pop rbx                                                                                                                                                                                                                                                       |     
    0x0041d08e pop r12                                                                                                                                                                                                                                                       |     
    0x0041d090 pop r13                                                                                                                                                                                                                                                       |     
    0x0041d092 pop r14                                                                                                                                                                                                                                                       |     
    0x0041d094 pop r15                                                                                                                                                                                                                                                       |     
    0x0041d096 pop rbp                                                                                                                                                                                                                                                       |     
    0x0041d097 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
