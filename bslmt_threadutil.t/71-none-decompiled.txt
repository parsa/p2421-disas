    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/none @ 0x419910 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_9216____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_9216__const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_9216_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_9216_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<9216> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<9216> const&, BloombergLP::bslma::Allocator*) */
    0x00419910 push rbp                                                                                                                                                                                                                                                  |     
    0x00419911 push r15                                                                                                                                                                                                                                                  |     
    0x00419913 push r14                                                                                                                                                                                                                                                  |     
    0x00419915 push r13                                                                                                                                                                                                                                                  |     
    0x00419917 push r12                                                                                                                                                                                                                                                  |     
    0x00419919 push rbx                                                                                                                                                                                                                                                  |     
    0x0041991a push rax                                                                                                                                                                                                                                                  |     
    0x0041991b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041991e mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00419921 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00419924 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00419929 je 0x419931                                                                                                                                                                                                                                               |         
    0x0041992b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x0041992f jmp 0x419935                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00419931 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00419935 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x00419939 test r14, r14                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (r14 == 0) {
    0x0041993c jne 0x419952                                                                                                                                                                                                                                              |         
    0x0041993e mov r14, qword [rip + 0x22b16b]                                                                                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00419945 test r14, r14                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                         |         if (r14 != 0) {
    0x00419948 jne 0x419952                                                                                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                                                                                         |         }
    0x0041994a call 0x42e840                                                                                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041994f mov r14, rax                                                                                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                                                                                         |     }
                                                                                                                                                                                                                                                                         | label_0:
    0x00419952 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00419955 mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x0041995a mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x0041995d call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00419960 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x00419963 mov qword [rax], 0x419a60                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_9216___.invokerFunction_void_;
    0x0041996a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x0041996e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x00419976 mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x0041997a movaps xmm0, xmmword [rip + 0x17c1f]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00419981 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00419985 mov ecx, 0x432d0b                                                                                                                                                                                                                                         |     
    0x0041998a mov rsi, r13                                                                                                                                                                                                                                              |     
    0x0041998d mov rdx, rbp                                                                                                                                                                                                                                              |     
    0x00419990 call 0x4254b0                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00419995 mov edx, 0x422cd0                                                                                                                                                                                                                                         |     
    0x0041999a mov rdi, r12                                                                                                                                                                                                                                              |     
    0x0041999d mov rsi, r15                                                                                                                                                                                                                                              |     
    0x004199a0 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x004199a3 call 0x423340                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004199a8 mov ebp, eax                                                                                                                                                                                                                                              |     
    0x004199aa test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x004199ac je 0x4199d7                                                                                                                                                                                                                                               |         
    0x004199ae cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x004199b3 je 0x4199c3                                                                                                                                                                                                                                               |             
    0x004199b5 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x004199b9 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x004199bd mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x004199c0 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x004199c3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004199cb mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x004199ce mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x004199d1 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x004199d4 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x004199d7 mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x004199d9 add rsp, 8                                                                                                                                                                                                                                                |     
    0x004199dd pop rbx                                                                                                                                                                                                                                                   |     
    0x004199de pop r12                                                                                                                                                                                                                                                   |     
    0x004199e0 pop r13                                                                                                                                                                                                                                                   |     
    0x004199e2 pop r14                                                                                                                                                                                                                                                   |     
    0x004199e4 pop r15                                                                                                                                                                                                                                                   |     
    0x004199e6 pop rbp                                                                                                                                                                                                                                                   |     
    0x004199e7 ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
