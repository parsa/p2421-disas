    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x419400 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_7168____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_7168__const__BloombergLP::bslma::Allocator_ ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_7168_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_7168_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<7168> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<7168> const&, BloombergLP::bslma::Allocator*) */
    0x00419400 push rbp                                                                                                                                                                                                                                                  |     
    0x00419401 push r15                                                                                                                                                                                                                                                  |     
    0x00419403 push r14                                                                                                                                                                                                                                                  |     
    0x00419405 push r13                                                                                                                                                                                                                                                  |     
    0x00419407 push r12                                                                                                                                                                                                                                                  |     
    0x00419409 push rbx                                                                                                                                                                                                                                                  |     
    0x0041940a push rax                                                                                                                                                                                                                                                  |     
    0x0041940b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041940e mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00419411 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00419414 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x00419418 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x0041941d je 0x419425                                                                                                                                                                                                                                               |         
    0x0041941f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00419423 jmp 0x419429                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00419425 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00419429 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x0041942c mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x00419431 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00419434 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00419437 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x0041943a mov qword [rax], 0x419540                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_7168___.invokerFunction_void_;
    0x00419441 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x00419445 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x0041944d mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x00419451 movaps xmm0, xmmword [rip + 0x17c18]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00419458 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041945c mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x00419461 mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x00419464 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x00419467 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041946c mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x00419471 mov rdi, r12                                                                                                                                                                                                                                              |     
    0x00419474 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00419477 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x0041947a call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041947f mov ebp, eax                                                                                                                                                                                                                                              |     
    0x00419481 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00419483 je 0x4194ae                                                                                                                                                                                                                                               |         
    0x00419485 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x0041948a je 0x41949a                                                                                                                                                                                                                                               |             
    0x0041948c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00419490 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x00419494 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x00419497 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x0041949a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004194a2 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x004194a5 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x004194a8 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x004194ab call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x004194ae mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x004194b0 add rsp, 8                                                                                                                                                                                                                                                |     
    0x004194b4 pop rbx                                                                                                                                                                                                                                                   |     
    0x004194b5 pop r12                                                                                                                                                                                                                                                   |     
    0x004194b7 pop r13                                                                                                                                                                                                                                                   |     
    0x004194b9 pop r14                                                                                                                                                                                                                                                   |     
    0x004194bb pop r15                                                                                                                                                                                                                                                   |     
    0x004194bd pop rbp                                                                                                                                                                                                                                                   |     
    0x004194be ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
