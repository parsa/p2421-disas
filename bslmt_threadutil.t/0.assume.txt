    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x418800 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE.Func__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_CONFIGURATION_TEST_NAMESPACE_Func_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_const_BloombergLP::bslma::Allocator_ (int64_t arg4, int64_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_CONFIGURATION_TEST_NAMESPACE::Func>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_CONFIGURATION_TEST_NAMESPACE::Func const&, BloombergLP::bslma::Allocator*) */
    0x00418800 push rbp                                                                                                                                                                                                                                                  |     
    0x00418801 push r15                                                                                                                                                                                                                                                  |     
    0x00418803 push r14                                                                                                                                                                                                                                                  |     
    0x00418805 push r13                                                                                                                                                                                                                                                  |     
    0x00418807 push r12                                                                                                                                                                                                                                                  |     
    0x00418809 push rbx                                                                                                                                                                                                                                                  |     
    0x0041880a push rax                                                                                                                                                                                                                                                  |     
    0x0041880b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041880e mov r12, rdx                                                                                                                                                                                                                                              |     r12 = rdx;
    0x00418811 mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418814 mov qword [rsp], rdi                                                                                                                                                                                                                                      |     *(rsp) = rdi;
    0x00418818 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x0041881c cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00418821 je 0x418829                                                                                                                                                                                                                                               |         
    0x00418823 mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00418827 jmp 0x41882d                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418829 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x0041882d mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00418830 mov esi, 0x48                                                                                                                                                                                                                                             |     esi = 0x48;
    0x00418835 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00418838 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0041883b mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x0041883e mov qword [rax], 0x418730                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_CONFIGURATION_TEST_NAMESPACE::Func_.invokerFunction_void_;
    0x00418845 movups xmm0, xmmword [r12]                                                                                                                                                                                                                                |     __asm ("movups xmm0, xmmword [r12]");
    0x0041884a movups xmmword [rax + 8], xmm0                                                                                                                                                                                                                            |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0041884e lea rdi, [rax + 0x18]                                                                                                                                                                                                                                     |     
    0x00418852 mov qword [rax + 0x18], 0                                                                                                                                                                                                                                 |     *((rax + 0x18)) = 0;
    0x0041885a mov qword [rax + 0x40], r14                                                                                                                                                                                                                               |     *((rax + 0x40)) = r14;
    0x0041885e movaps xmm0, xmmword [rip + 0x1880b]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00418865 movups xmmword [rax + 0x30], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x00418869 mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x0041886e mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x00418871 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x00418874 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00418879 mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x0041887e mov rdi, qword [rsp]                                                                                                                                                                                                                                      |     
    0x00418882 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00418885 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x00418888 call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041888d mov ebp, eax                                                                                                                                                                                                                                              |     
    0x0041888f test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00418891 je 0x4188bc                                                                                                                                                                                                                                               |         
    0x00418893 cmp qword [rbx + 0x38], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x38)) != 0x17) {
    0x00418898 je 0x4188a8                                                                                                                                                                                                                                               |             
    0x0041889a mov rsi, qword [rbx + 0x18]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x18));
    0x0041889e mov rdi, qword [rbx + 0x40]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x40));
    0x004188a2 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x004188a5 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x004188a8 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x004188b0 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x004188b3 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x004188b6 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x004188b9 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x004188bc mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x004188be add rsp, 8                                                                                                                                                                                                                                                |     
    0x004188c2 pop rbx                                                                                                                                                                                                                                                   |     
    0x004188c3 pop r12                                                                                                                                                                                                                                                   |     
    0x004188c5 pop r13                                                                                                                                                                                                                                                   |     
    0x004188c7 pop r14                                                                                                                                                                                                                                                   |     
    0x004188c9 pop r15                                                                                                                                                                                                                                                   |     
    0x004188cb pop rbp                                                                                                                                                                                                                                                   |     
    0x004188cc ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
