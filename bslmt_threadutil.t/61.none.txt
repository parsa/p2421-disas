    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/none @ 0x4194b0 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_7168____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_7168__const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_7168_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_7168_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<7168> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<7168> const&, BloombergLP::bslma::Allocator*) */
    0x004194b0 push rbp                                                                                                                                                                                                                                                  |     
    0x004194b1 push r15                                                                                                                                                                                                                                                  |     
    0x004194b3 push r14                                                                                                                                                                                                                                                  |     
    0x004194b5 push r13                                                                                                                                                                                                                                                  |     
    0x004194b7 push r12                                                                                                                                                                                                                                                  |     
    0x004194b9 push rbx                                                                                                                                                                                                                                                  |     
    0x004194ba push rax                                                                                                                                                                                                                                                  |     
    0x004194bb mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x004194be mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x004194c1 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x004194c4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x004194c9 je 0x4194d1                                                                                                                                                                                                                                               |         
    0x004194cb mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x004194cf jmp 0x4194d5                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x004194d1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x004194d5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x004194d9 test r14, r14                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (r14 == 0) {
    0x004194dc jne 0x4194f2                                                                                                                                                                                                                                              |         
    0x004194de mov r14, qword [rip + 0x22b5cb]                                                                                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004194e5 test r14, r14                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                         |         if (r14 != 0) {
    0x004194e8 jne 0x4194f2                                                                                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                                                                                         |         }
    0x004194ea call 0x42e840                                                                                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004194ef mov r14, rax                                                                                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                                                                                         |     }
                                                                                                                                                                                                                                                                         | label_0:
    0x004194f2 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x004194f5 mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x004194fa mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x004194fd call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00419500 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x00419503 mov qword [rax], 0x419600                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_7168___.invokerFunction_void_;
    0x0041950a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x0041950e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x00419516 mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x0041951a movaps xmm0, xmmword [rip + 0x1807f]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00419521 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00419525 mov ecx, 0x432d0b                                                                                                                                                                                                                                         |     
    0x0041952a mov rsi, r13                                                                                                                                                                                                                                              |     
    0x0041952d mov rdx, rbp                                                                                                                                                                                                                                              |     
    0x00419530 call 0x4254b0                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00419535 mov edx, 0x422cd0                                                                                                                                                                                                                                         |     
    0x0041953a mov rdi, r12                                                                                                                                                                                                                                              |     
    0x0041953d mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00419540 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x00419543 call 0x423340                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00419548 mov ebp, eax                                                                                                                                                                                                                                              |     
    0x0041954a test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x0041954c je 0x419577                                                                                                                                                                                                                                               |         
    0x0041954e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00419553 je 0x419563                                                                                                                                                                                                                                               |             
    0x00419555 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00419559 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x0041955d mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x00419560 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x00419563 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041956b mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x0041956e mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x00419571 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00419574 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x00419577 mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00419579 add rsp, 8                                                                                                                                                                                                                                                |     
    0x0041957d pop rbx                                                                                                                                                                                                                                                   |     
    0x0041957e pop r12                                                                                                                                                                                                                                                   |     
    0x00419580 pop r13                                                                                                                                                                                                                                                   |     
    0x00419582 pop r14                                                                                                                                                                                                                                                   |     
    0x00419584 pop r15                                                                                                                                                                                                                                                   |     
    0x00419586 pop rbp                                                                                                                                                                                                                                                   |     
    0x00419587 ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
