    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/assume @ 0x41fc20 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_523264____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_523264__const__BloombergLP::bslma::Allocator_ ()          | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_523264_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_523264_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<523264> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<523264> const&, BloombergLP::bslma::Allocator*) */
    0x0041fc20 push rbp                                                                                                                                                                                                                                                          |     
    0x0041fc21 push r15                                                                                                                                                                                                                                                          |     
    0x0041fc23 push r14                                                                                                                                                                                                                                                          |     
    0x0041fc25 push r13                                                                                                                                                                                                                                                          |     
    0x0041fc27 push r12                                                                                                                                                                                                                                                          |     
    0x0041fc29 push rbx                                                                                                                                                                                                                                                          |     
    0x0041fc2a push rax                                                                                                                                                                                                                                                          |     
    0x0041fc2b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041fc2e mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041fc31 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0041fc34 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041fc38 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041fc3d je 0x41fc45                                                                                                                                                                                                                                                       |         
    0x0041fc3f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x0041fc43 jmp 0x41fc49                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041fc45 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041fc49 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041fc4c mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0041fc51 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041fc54 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041fc57 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041fc5a mov qword [rax], 0x41fd60                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_523264___.invokerFunction_void_;
    0x0041fc61 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x0041fc65 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x0041fc6d mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0041fc71 movaps xmm0, xmmword [rip + 0x113f8]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041fc78 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041fc7c mov ecx, 0x4327df                                                                                                                                                                                                                                                 |     
    0x0041fc81 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0041fc84 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0041fc87 call 0x424f70                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041fc8c mov edx, 0x4227b0                                                                                                                                                                                                                                                 |     
    0x0041fc91 mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0041fc94 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041fc97 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041fc9a call 0x422e20                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041fc9f mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041fca1 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041fca3 je 0x41fcce                                                                                                                                                                                                                                                       |         
    0x0041fca5 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x0041fcaa je 0x41fcba                                                                                                                                                                                                                                                       |             
    0x0041fcac mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x0041fcb0 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0041fcb4 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041fcb7 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041fcba mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041fcc2 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041fcc5 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041fcc8 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041fccb call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041fcce mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041fcd0 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041fcd4 pop rbx                                                                                                                                                                                                                                                           |     
    0x0041fcd5 pop r12                                                                                                                                                                                                                                                           |     
    0x0041fcd7 pop r13                                                                                                                                                                                                                                                           |     
    0x0041fcd9 pop r14                                                                                                                                                                                                                                                           |     
    0x0041fcdb pop r15                                                                                                                                                                                                                                                           |     
    0x0041fcdd pop rbp                                                                                                                                                                                                                                                           |     
    0x0041fcde ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
