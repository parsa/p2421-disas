    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/assume @ 0x41f7e0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_262144____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_262144__const__BloombergLP::bslma::Allocator_ ()          | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_262144_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_262144_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<262144> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<262144> const&, BloombergLP::bslma::Allocator*) */
    0x0041f7e0 push rbp                                                                                                                                                                                                                                                          |     
    0x0041f7e1 push r15                                                                                                                                                                                                                                                          |     
    0x0041f7e3 push r14                                                                                                                                                                                                                                                          |     
    0x0041f7e5 push r13                                                                                                                                                                                                                                                          |     
    0x0041f7e7 push r12                                                                                                                                                                                                                                                          |     
    0x0041f7e9 push rbx                                                                                                                                                                                                                                                          |     
    0x0041f7ea push rax                                                                                                                                                                                                                                                          |     
    0x0041f7eb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041f7ee mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041f7f1 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0041f7f4 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                                       |     r13 = *((rsi + 0x30));
    0x0041f7f8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041f7fd je 0x41f805                                                                                                                                                                                                                                                       |         
    0x0041f7ff mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         rbp = *((r15 + 0x18));
    0x0041f803 jmp 0x41f809                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041f805 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                             |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041f809 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041f80c mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0041f811 mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041f814 call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041f817 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041f81a mov qword [rax], 0x41f920                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_262144___.invokerFunction_void_;
    0x0041f821 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x0041f825 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x0041f82d mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0041f831 movaps xmm0, xmmword [rip + 0x11838]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041f838 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041f83c mov ecx, 0x4327df                                                                                                                                                                                                                                                 |     
    0x0041f841 mov rsi, rbp                                                                                                                                                                                                                                                      |     
    0x0041f844 mov rdx, r13                                                                                                                                                                                                                                                      |     
    0x0041f847 call 0x424f70                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041f84c mov edx, 0x4227b0                                                                                                                                                                                                                                                 |     
    0x0041f851 mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0041f854 mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041f857 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041f85a call 0x422e20                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041f85f mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041f861 test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041f863 je 0x41f88e                                                                                                                                                                                                                                                       |         
    0x0041f865 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x0041f86a je 0x41f87a                                                                                                                                                                                                                                                       |             
    0x0041f86c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x0041f870 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0041f874 mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041f877 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041f87a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041f882 mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041f885 mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041f888 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041f88b call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041f88e mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041f890 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041f894 pop rbx                                                                                                                                                                                                                                                           |     
    0x0041f895 pop r12                                                                                                                                                                                                                                                           |     
    0x0041f897 pop r13                                                                                                                                                                                                                                                           |     
    0x0041f899 pop r14                                                                                                                                                                                                                                                           |     
    0x0041f89b pop r15                                                                                                                                                                                                                                                           |     
    0x0041f89d pop rbp                                                                                                                                                                                                                                                           |     
    0x0041f89e ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
