    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/none @ 0x41ec30 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_118784____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_118784__const__BloombergLP::bslma::Allocator_ ()          | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_118784_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_118784_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<118784> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<118784> const&, BloombergLP::bslma::Allocator*) */
    0x0041ec30 push rbp                                                                                                                                                                                                                                                          |     
    0x0041ec31 push r15                                                                                                                                                                                                                                                          |     
    0x0041ec33 push r14                                                                                                                                                                                                                                                          |     
    0x0041ec35 push r13                                                                                                                                                                                                                                                          |     
    0x0041ec37 push r12                                                                                                                                                                                                                                                          |     
    0x0041ec39 push rbx                                                                                                                                                                                                                                                          |     
    0x0041ec3a push rax                                                                                                                                                                                                                                                          |     
    0x0041ec3b mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x0041ec3e mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x0041ec41 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x0041ec44 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x0041ec49 je 0x41ec51                                                                                                                                                                                                                                                       |         
    0x0041ec4b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x0041ec4f jmp 0x41ec55                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x0041ec51 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x0041ec55 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x0041ec59 test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0041ec5c jne 0x41ec72                                                                                                                                                                                                                                                      |         
    0x0041ec5e mov r14, qword [rip + 0x225e4b]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0041ec65 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x0041ec68 jne 0x41ec72                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0041ec6a call 0x42e840                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0041ec6f mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x0041ec72 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x0041ec75 mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0041ec7a mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0041ec7d call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x0041ec80 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x0041ec83 mov qword [rax], 0x41ed80                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_118784___.invokerFunction_void_;
    0x0041ec8a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x0041ec8e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x0041ec96 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0041ec9a movaps xmm0, xmmword [rip + 0x128ff]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x0041eca1 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041eca5 mov ecx, 0x432d0b                                                                                                                                                                                                                                                 |     
    0x0041ecaa mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0041ecad mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x0041ecb0 call 0x4254b0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x0041ecb5 mov edx, 0x422cd0                                                                                                                                                                                                                                                 |     
    0x0041ecba mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0041ecbd mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x0041ecc0 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x0041ecc3 call 0x423340                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041ecc8 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0041ecca test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0041eccc je 0x41ecf7                                                                                                                                                                                                                                                       |         
    0x0041ecce cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x0041ecd3 je 0x41ece3                                                                                                                                                                                                                                                       |             
    0x0041ecd5 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x0041ecd9 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0041ecdd mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x0041ece0 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x0041ece3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041eceb mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0041ecee mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x0041ecf1 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x0041ecf4 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x0041ecf7 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x0041ecf9 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0041ecfd pop rbx                                                                                                                                                                                                                                                           |     
    0x0041ecfe pop r12                                                                                                                                                                                                                                                           |     
    0x0041ed00 pop r13                                                                                                                                                                                                                                                           |     
    0x0041ed02 pop r14                                                                                                                                                                                                                                                           |     
    0x0041ed04 pop r15                                                                                                                                                                                                                                                           |     
    0x0041ed06 pop rbp                                                                                                                                                                                                                                                           |     
    0x0041ed07 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
