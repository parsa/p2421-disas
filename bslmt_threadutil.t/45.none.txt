    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/none @ 0x4215c0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_4194304____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_4194304__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_4194304_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_4194304_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<4194304> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<4194304> const&, BloombergLP::bslma::Allocator*) */
    0x004215c0 push rbp                                                                                                                                                                                                                                                          |     
    0x004215c1 push r15                                                                                                                                                                                                                                                          |     
    0x004215c3 push r14                                                                                                                                                                                                                                                          |     
    0x004215c5 push r13                                                                                                                                                                                                                                                          |     
    0x004215c7 push r12                                                                                                                                                                                                                                                          |     
    0x004215c9 push rbx                                                                                                                                                                                                                                                          |     
    0x004215ca push rax                                                                                                                                                                                                                                                          |     
    0x004215cb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004215ce mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004215d1 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x004215d4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004215d9 je 0x4215e1                                                                                                                                                                                                                                                       |         
    0x004215db mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004215df jmp 0x4215e5                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004215e1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004215e5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004215e9 test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004215ec jne 0x421602                                                                                                                                                                                                                                                      |         
    0x004215ee mov r14, qword [rip + 0x2234bb]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004215f5 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004215f8 jne 0x421602                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004215fa call 0x42e840                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004215ff mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00421602 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00421605 mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0042160a mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0042160d call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00421610 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00421613 mov qword [rax], 0x421710                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_4194304___.invokerFunction_void_;
    0x0042161a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x0042161e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x00421626 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0042162a movaps xmm0, xmmword [rip + 0xff6f]                                                                                                                                                                                                                               |     xmm0 = .comment;
    0x00421631 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00421635 mov ecx, 0x432d0b                                                                                                                                                                                                                                                 |     
    0x0042163a mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0042163d mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00421640 call 0x4254b0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00421645 mov edx, 0x422cd0                                                                                                                                                                                                                                                 |     
    0x0042164a mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0042164d mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00421650 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00421653 call 0x423340                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00421658 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0042165a test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0042165c je 0x421687                                                                                                                                                                                                                                                       |         
    0x0042165e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x00421663 je 0x421673                                                                                                                                                                                                                                                       |             
    0x00421665 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x00421669 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0042166d mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00421670 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00421673 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0042167b mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0042167e mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00421681 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00421684 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00421687 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00421689 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0042168d pop rbx                                                                                                                                                                                                                                                           |     
    0x0042168e pop r12                                                                                                                                                                                                                                                           |     
    0x00421690 pop r13                                                                                                                                                                                                                                                           |     
    0x00421692 pop r14                                                                                                                                                                                                                                                           |     
    0x00421694 pop r15                                                                                                                                                                                                                                                           |     
    0x00421696 pop rbp                                                                                                                                                                                                                                                           |     
    0x00421697 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
