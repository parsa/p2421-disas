    ; assembly                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                     | /* bslmt_threadutil.t/assume @ 0x418960 */
                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_0____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_0__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_0_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_0_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<0> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<0> const&, BloombergLP::bslma::Allocator*) */
    0x00418960 push rbp                                                                                                                                                                                                                                              |     
    0x00418961 push r15                                                                                                                                                                                                                                              |     
    0x00418963 push r14                                                                                                                                                                                                                                              |     
    0x00418965 push r13                                                                                                                                                                                                                                              |     
    0x00418967 push r12                                                                                                                                                                                                                                              |     
    0x00418969 push rbx                                                                                                                                                                                                                                              |     
    0x0041896a push rax                                                                                                                                                                                                                                              |     
    0x0041896b mov r14, rcx                                                                                                                                                                                                                                          |     r14 = rcx;
    0x0041896e mov r15, rsi                                                                                                                                                                                                                                          |     r15 = rsi;
    0x00418971 mov r12, rdi                                                                                                                                                                                                                                          |     r12 = rdi;
    0x00418974 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                           |     r13 = *((rsi + 0x30));
    0x00418978 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x0041897d je 0x418985                                                                                                                                                                                                                                           |         
    0x0041897f mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                           |         rbp = *((r15 + 0x18));
    0x00418983 jmp 0x418989                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                     |     } else {
    0x00418985 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                 |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                     |     }
    0x00418989 mov rax, qword [r14]                                                                                                                                                                                                                                  |     rax = *(r14);
    0x0041898c mov esi, 0x40                                                                                                                                                                                                                                         |     esi = 0x40;
    0x00418991 mov rdi, r14                                                                                                                                                                                                                                          |     rdi = r14;
    0x00418994 call qword [rax + 0x10]                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00418997 mov rbx, rax                                                                                                                                                                                                                                          |     rbx = rax;
    0x0041899a mov qword [rax], 0x418aa0                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_0___.invokerFunction_void_;
    0x004189a1 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                 |     
    0x004189a5 mov qword [rax + 0x10], 0                                                                                                                                                                                                                             |     *((rax + 0x10)) = 0;
    0x004189ad mov qword [rax + 0x38], r14                                                                                                                                                                                                                           |     *((rax + 0x38)) = r14;
    0x004189b1 movaps xmm0, xmmword [rip + 0x186b8]                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x004189b8 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x004189bc mov ecx, 0x4327df                                                                                                                                                                                                                                     |     
    0x004189c1 mov rsi, rbp                                                                                                                                                                                                                                          |     
    0x004189c4 mov rdx, r13                                                                                                                                                                                                                                          |     
    0x004189c7 call 0x424f70                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x004189cc mov edx, 0x4227b0                                                                                                                                                                                                                                     |     
    0x004189d1 mov rdi, r12                                                                                                                                                                                                                                          |     
    0x004189d4 mov rsi, r15                                                                                                                                                                                                                                          |     
    0x004189d7 mov rcx, rbx                                                                                                                                                                                                                                          |     
    0x004189da call 0x422e20                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004189df mov ebp, eax                                                                                                                                                                                                                                          |     
    0x004189e1 test eax, eax                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x004189e3 je 0x418a0e                                                                                                                                                                                                                                           |         
    0x004189e5 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x30)) != 0x17) {
    0x004189ea je 0x4189fa                                                                                                                                                                                                                                           |             
    0x004189ec mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                           |             rsi = *((rbx + 0x10));
    0x004189f0 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                           |             rdi = *((rbx + 0x38));
    0x004189f4 mov rax, qword [rdi]                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x004189f7 call qword [rax + 0x18]                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                     |         }
    0x004189fa mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                            |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00418a02 mov rax, qword [r14]                                                                                                                                                                                                                                  |         rax = *(r14);
    0x00418a05 mov rdi, r14                                                                                                                                                                                                                                          |         rdi = r14;
    0x00418a08 mov rsi, rbx                                                                                                                                                                                                                                          |         rsi = rbx;
    0x00418a0b call qword [rax + 0x18]                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                     |     }
    0x00418a0e mov eax, ebp                                                                                                                                                                                                                                          |     eax = ebp;
    0x00418a10 add rsp, 8                                                                                                                                                                                                                                            |     
    0x00418a14 pop rbx                                                                                                                                                                                                                                               |     
    0x00418a15 pop r12                                                                                                                                                                                                                                               |     
    0x00418a17 pop r13                                                                                                                                                                                                                                               |     
    0x00418a19 pop r14                                                                                                                                                                                                                                               |     
    0x00418a1b pop r15                                                                                                                                                                                                                                               |     
    0x00418a1d pop rbp                                                                                                                                                                                                                                               |     
    0x00418a1e ret                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                     | }
