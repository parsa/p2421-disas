    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/none @ 0x418170 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_THREAD_POLICY_CREATION_TEST.Touch__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__BSLMT_THREAD_POLICY_CREATION_TEST::Touch_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_BSLMT_THREAD_POLICY_CREATION_TEST_Touch_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_BSLMT_THREAD_POLICY_CREATION_TEST::Touch_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg3, signed int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<BSLMT_THREAD_POLICY_CREATION_TEST::Touch>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, BSLMT_THREAD_POLICY_CREATION_TEST::Touch const&, BloombergLP::bslma::Allocator*) */
    0x00418170 push rbp                                                                                                                                                                                                                                                  |     
    0x00418171 push r15                                                                                                                                                                                                                                                  |     
    0x00418173 push r14                                                                                                                                                                                                                                                  |     
    0x00418175 push r13                                                                                                                                                                                                                                                  |     
    0x00418177 push r12                                                                                                                                                                                                                                                  |     
    0x00418179 push rbx                                                                                                                                                                                                                                                  |     
    0x0041817a push rax                                                                                                                                                                                                                                                  |     
    0x0041817b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041817e mov r12, rdx                                                                                                                                                                                                                                              |     r12 = rdx;
    0x00418181 mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418184 mov qword [rsp], rdi                                                                                                                                                                                                                                      |     *(rsp) = rdi;
    0x00418188 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x0041818d je 0x418195                                                                                                                                                                                                                                               |         
    0x0041818f mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x00418193 jmp 0x418199                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418195 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00418199 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x0041819d test r14, r14                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (r14 == 0) {
    0x004181a0 jne 0x4181b6                                                                                                                                                                                                                                              |         
    0x004181a2 mov r14, qword [rip + 0x22c907]                                                                                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004181a9 test r14, r14                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                         |         if (r14 != 0) {
    0x004181ac jne 0x4181b6                                                                                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                                                                                         |         }
    0x004181ae call 0x42e840                                                                                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004181b3 mov r14, rax                                                                                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                                                                                         |     }
                                                                                                                                                                                                                                                                         | label_0:
    0x004181b6 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x004181b9 mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x004181be mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x004181c1 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x004181c4 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x004181c7 mov qword [rax], 0x4182d0                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_BSLMT_THREAD_POLICY_CREATION_TEST::Touch_.invokerFunction_void_;
    0x004181ce mov rax, qword [r12]                                                                                                                                                                                                                                      |     rax = *(r12);
    0x004181d2 mov qword [rbx + 8], rax                                                                                                                                                                                                                                  |     *((rbx + 8)) = rax;
    0x004181d6 lea rdi, [rbx + 0x10]                                                                                                                                                                                                                                     |     
    0x004181da mov qword [rbx + 0x10], 0                                                                                                                                                                                                                                 |     *((rbx + 0x10)) = 0;
    0x004181e2 mov qword [rbx + 0x38], r14                                                                                                                                                                                                                               |     *((rbx + 0x38)) = r14;
    0x004181e6 movaps xmm0, xmmword [rip + 0x193b3]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x004181ed movups xmmword [rbx + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x004181f1 mov ecx, 0x432d0b                                                                                                                                                                                                                                         |     
    0x004181f6 mov rsi, r13                                                                                                                                                                                                                                              |     
    0x004181f9 mov rdx, rbp                                                                                                                                                                                                                                              |     
    0x004181fc call 0x4254b0                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00418201 mov edx, 0x422cd0                                                                                                                                                                                                                                         |     
    0x00418206 mov rdi, qword [rsp]                                                                                                                                                                                                                                      |     
    0x0041820a mov rsi, r15                                                                                                                                                                                                                                              |     
    0x0041820d mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x00418210 call 0x423340                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (*(rsp), r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418215 mov ebp, eax                                                                                                                                                                                                                                              |     
    0x00418217 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00418219 je 0x418244                                                                                                                                                                                                                                               |         
    0x0041821b cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00418220 je 0x418230                                                                                                                                                                                                                                               |             
    0x00418222 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00418226 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x0041822a mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x0041822d call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x00418230 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00418238 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x0041823b mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x0041823e mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00418241 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x00418244 mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00418246 add rsp, 8                                                                                                                                                                                                                                                |     
    0x0041824a pop rbx                                                                                                                                                                                                                                                   |     
    0x0041824b pop r12                                                                                                                                                                                                                                                   |     
    0x0041824d pop r13                                                                                                                                                                                                                                                   |     
    0x0041824f pop r14                                                                                                                                                                                                                                                   |     
    0x00418251 pop r15                                                                                                                                                                                                                                                   |     
    0x00418253 pop rbp                                                                                                                                                                                                                                                   |     
    0x00418254 ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
