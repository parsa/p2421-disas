    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bslmt_threadutil.t/none @ 0x4208a0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_1048576____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_1048576__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_1048576_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_1048576_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<1048576> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<1048576> const&, BloombergLP::bslma::Allocator*) */
    0x004208a0 push rbp                                                                                                                                                                                                                                                          |     
    0x004208a1 push r15                                                                                                                                                                                                                                                          |     
    0x004208a3 push r14                                                                                                                                                                                                                                                          |     
    0x004208a5 push r13                                                                                                                                                                                                                                                          |     
    0x004208a7 push r12                                                                                                                                                                                                                                                          |     
    0x004208a9 push rbx                                                                                                                                                                                                                                                          |     
    0x004208aa push rax                                                                                                                                                                                                                                                          |     
    0x004208ab mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004208ae mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004208b1 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x004208b4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004208b9 je 0x4208c1                                                                                                                                                                                                                                                       |         
    0x004208bb mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004208bf jmp 0x4208c5                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x004208c1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x004208c5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x004208c9 test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x004208cc jne 0x4208e2                                                                                                                                                                                                                                                      |         
    0x004208ce mov r14, qword [rip + 0x2241db]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004208d5 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x004208d8 jne 0x4208e2                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x004208da call 0x42e840                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004208df mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x004208e2 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x004208e5 mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x004208ea mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x004208ed call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x004208f0 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x004208f3 mov qword [rax], 0x4209f0                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_1048576___.invokerFunction_void_;
    0x004208fa lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x004208fe mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x00420906 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0042090a movaps xmm0, xmmword [rip + 0x10c8f]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00420911 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00420915 mov ecx, 0x432d0b                                                                                                                                                                                                                                                 |     
    0x0042091a mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0042091d mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00420920 call 0x4254b0                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00420925 mov edx, 0x422cd0                                                                                                                                                                                                                                                 |     
    0x0042092a mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0042092d mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00420930 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00420933 call 0x423340                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00420938 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0042093a test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0042093c je 0x420967                                                                                                                                                                                                                                                       |         
    0x0042093e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x00420943 je 0x420953                                                                                                                                                                                                                                                       |             
    0x00420945 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x00420949 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0042094d mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00420950 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00420953 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0042095b mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0042095e mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x00420961 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x00420964 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x00420967 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x00420969 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x0042096d pop rbx                                                                                                                                                                                                                                                           |     
    0x0042096e pop r12                                                                                                                                                                                                                                                           |     
    0x00420970 pop r13                                                                                                                                                                                                                                                           |     
    0x00420972 pop r14                                                                                                                                                                                                                                                           |     
    0x00420974 pop r15                                                                                                                                                                                                                                                           |     
    0x00420976 pop rbp                                                                                                                                                                                                                                                           |     
    0x00420977 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
