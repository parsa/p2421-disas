    ; assembly                                                                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                     | /* bslmt_threadutil.t/none @ 0x4189c0 */
                                                                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_0____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_0__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_0_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_0_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                     |     rcx = arg4;
                                                                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<0> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<0> const&, BloombergLP::bslma::Allocator*) */
    0x004189c0 push rbp                                                                                                                                                                                                                                              |     
    0x004189c1 push r15                                                                                                                                                                                                                                              |     
    0x004189c3 push r14                                                                                                                                                                                                                                              |     
    0x004189c5 push r13                                                                                                                                                                                                                                              |     
    0x004189c7 push r12                                                                                                                                                                                                                                              |     
    0x004189c9 push rbx                                                                                                                                                                                                                                              |     
    0x004189ca push rax                                                                                                                                                                                                                                              |     
    0x004189cb mov r14, rcx                                                                                                                                                                                                                                          |     r14 = rcx;
    0x004189ce mov r15, rsi                                                                                                                                                                                                                                          |     r15 = rsi;
    0x004189d1 mov r12, rdi                                                                                                                                                                                                                                          |     r12 = rdi;
    0x004189d4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                          |     
                                                                                                                                                                                                                                                                     |     if (*((rsi + 0x38)) != 0x17) {
    0x004189d9 je 0x4189e1                                                                                                                                                                                                                                           |         
    0x004189db mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                           |         r13 = *((r15 + 0x18));
    0x004189df jmp 0x4189e5                                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                     |     } else {
    0x004189e1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                 |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                     |     }
    0x004189e5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                           |     rbp = *((r15 + 0x30));
    0x004189e9 test r14, r14                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                     |     if (r14 == 0) {
    0x004189ec jne 0x418a02                                                                                                                                                                                                                                          |         
    0x004189ee mov r14, qword [rip + 0x22c0bb]                                                                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004189f5 test r14, r14                                                                                                                                                                                                                                         |         
                                                                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x004189f8 jne 0x418a02                                                                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                                                                     |         }
    0x004189fa call 0x42e840                                                                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004189ff mov r14, rax                                                                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                                                                     | label_0:
    0x00418a02 mov rax, qword [r14]                                                                                                                                                                                                                                  |     rax = *(r14);
    0x00418a05 mov esi, 0x40                                                                                                                                                                                                                                         |     esi = 0x40;
    0x00418a0a mov rdi, r14                                                                                                                                                                                                                                          |     rdi = r14;
    0x00418a0d call qword [rax + 0x10]                                                                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x00418a10 mov rbx, rax                                                                                                                                                                                                                                          |     rbx = rax;
    0x00418a13 mov qword [rax], 0x418b10                                                                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_0___.invokerFunction_void_;
    0x00418a1a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                 |     
    0x00418a1e mov qword [rax + 0x10], 0                                                                                                                                                                                                                             |     *((rax + 0x10)) = 0;
    0x00418a26 mov qword [rax + 0x38], r14                                                                                                                                                                                                                           |     *((rax + 0x38)) = r14;
    0x00418a2a movaps xmm0, xmmword [rip + 0x18b6f]                                                                                                                                                                                                                  |     xmm0 = .comment;
    0x00418a31 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00418a35 mov ecx, 0x432d0b                                                                                                                                                                                                                                     |     
    0x00418a3a mov rsi, r13                                                                                                                                                                                                                                          |     
    0x00418a3d mov rdx, rbp                                                                                                                                                                                                                                          |     
    0x00418a40 call 0x4254b0                                                                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00418a45 mov edx, 0x422cd0                                                                                                                                                                                                                                     |     
    0x00418a4a mov rdi, r12                                                                                                                                                                                                                                          |     
    0x00418a4d mov rsi, r15                                                                                                                                                                                                                                          |     
    0x00418a50 mov rcx, rbx                                                                                                                                                                                                                                          |     
    0x00418a53 call 0x423340                                                                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418a58 mov ebp, eax                                                                                                                                                                                                                                          |     
    0x00418a5a test eax, eax                                                                                                                                                                                                                                         |     
                                                                                                                                                                                                                                                                     |     if (eax != 0) {
    0x00418a5c je 0x418a87                                                                                                                                                                                                                                           |         
    0x00418a5e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                          |         
                                                                                                                                                                                                                                                                     |         if (*((rbx + 0x30)) != 0x17) {
    0x00418a63 je 0x418a73                                                                                                                                                                                                                                           |             
    0x00418a65 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                           |             rsi = *((rbx + 0x10));
    0x00418a69 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                           |             rdi = *((rbx + 0x38));
    0x00418a6d mov rax, qword [rdi]                                                                                                                                                                                                                                  |             rax = *(rdi);
    0x00418a70 call qword [rax + 0x18]                                                                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                     |         }
    0x00418a73 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                            |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00418a7b mov rax, qword [r14]                                                                                                                                                                                                                                  |         rax = *(r14);
    0x00418a7e mov rdi, r14                                                                                                                                                                                                                                          |         rdi = r14;
    0x00418a81 mov rsi, rbx                                                                                                                                                                                                                                          |         rsi = rbx;
    0x00418a84 call qword [rax + 0x18]                                                                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                     |     }
    0x00418a87 mov eax, ebp                                                                                                                                                                                                                                          |     eax = ebp;
    0x00418a89 add rsp, 8                                                                                                                                                                                                                                            |     
    0x00418a8d pop rbx                                                                                                                                                                                                                                               |     
    0x00418a8e pop r12                                                                                                                                                                                                                                               |     
    0x00418a90 pop r13                                                                                                                                                                                                                                               |     
    0x00418a92 pop r14                                                                                                                                                                                                                                               |     
    0x00418a94 pop r15                                                                                                                                                                                                                                               |     
    0x00418a96 pop rbp                                                                                                                                                                                                                                               |     
    0x00418a97 ret                                                                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                                                                     | }
