    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x418fc0 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_3072____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_3072__const__BloombergLP::bslma::Allocator_ ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_3072_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_3072_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<3072> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<3072> const&, BloombergLP::bslma::Allocator*) */
    0x00418fc0 push rbp                                                                                                                                                                                                                                                  |     
    0x00418fc1 push r15                                                                                                                                                                                                                                                  |     
    0x00418fc3 push r14                                                                                                                                                                                                                                                  |     
    0x00418fc5 push r13                                                                                                                                                                                                                                                  |     
    0x00418fc7 push r12                                                                                                                                                                                                                                                  |     
    0x00418fc9 push rbx                                                                                                                                                                                                                                                  |     
    0x00418fca push rax                                                                                                                                                                                                                                                  |     
    0x00418fcb mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x00418fce mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418fd1 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00418fd4 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x00418fd8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00418fdd je 0x418fe5                                                                                                                                                                                                                                               |         
    0x00418fdf mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00418fe3 jmp 0x418fe9                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418fe5 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00418fe9 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00418fec mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x00418ff1 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00418ff4 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00418ff7 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x00418ffa mov qword [rax], 0x419100                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_3072___.invokerFunction_void_;
    0x00419001 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x00419005 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x0041900d mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x00419011 movaps xmm0, xmmword [rip + 0x18058]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00419018 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x0041901c mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x00419021 mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x00419024 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x00419027 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x0041902c mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x00419031 mov rdi, r12                                                                                                                                                                                                                                              |     
    0x00419034 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00419037 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x0041903a call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x0041903f mov ebp, eax                                                                                                                                                                                                                                              |     
    0x00419041 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00419043 je 0x41906e                                                                                                                                                                                                                                               |         
    0x00419045 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x0041904a je 0x41905a                                                                                                                                                                                                                                               |             
    0x0041904c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00419050 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x00419054 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x00419057 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x0041905a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00419062 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x00419065 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x00419068 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x0041906b call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x0041906e mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00419070 add rsp, 8                                                                                                                                                                                                                                                |     
    0x00419074 pop rbx                                                                                                                                                                                                                                                   |     
    0x00419075 pop r12                                                                                                                                                                                                                                                   |     
    0x00419077 pop r13                                                                                                                                                                                                                                                   |     
    0x00419079 pop r14                                                                                                                                                                                                                                                   |     
    0x0041907b pop r15                                                                                                                                                                                                                                                   |     
    0x0041907d pop rbp                                                                                                                                                                                                                                                   |     
    0x0041907e ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
