    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/assume @ 0x418da0 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_2048____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_2048__const__BloombergLP::bslma::Allocator_ ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_2048_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_2048_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<2048> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<2048> const&, BloombergLP::bslma::Allocator*) */
    0x00418da0 push rbp                                                                                                                                                                                                                                                  |     
    0x00418da1 push r15                                                                                                                                                                                                                                                  |     
    0x00418da3 push r14                                                                                                                                                                                                                                                  |     
    0x00418da5 push r13                                                                                                                                                                                                                                                  |     
    0x00418da7 push r12                                                                                                                                                                                                                                                  |     
    0x00418da9 push rbx                                                                                                                                                                                                                                                  |     
    0x00418daa push rax                                                                                                                                                                                                                                                  |     
    0x00418dab mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x00418dae mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00418db1 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00418db4 mov r13, qword [rsi + 0x30]                                                                                                                                                                                                                               |     r13 = *((rsi + 0x30));
    0x00418db8 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00418dbd je 0x418dc5                                                                                                                                                                                                                                               |         
    0x00418dbf mov rbp, qword [r15 + 0x18]                                                                                                                                                                                                                               |         rbp = *((r15 + 0x18));
    0x00418dc3 jmp 0x418dc9                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x00418dc5 lea rbp, [r15 + 0x18]                                                                                                                                                                                                                                     |         rbp = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x00418dc9 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x00418dcc mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x00418dd1 mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x00418dd4 call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x00418dd7 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x00418dda mov qword [rax], 0x418ee0                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_2048___.invokerFunction_void_;
    0x00418de1 lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x00418de5 mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x00418ded mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x00418df1 movaps xmm0, xmmword [rip + 0x18278]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x00418df8 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00418dfc mov ecx, 0x4327df                                                                                                                                                                                                                                         |     
    0x00418e01 mov rsi, rbp                                                                                                                                                                                                                                              |     
    0x00418e04 mov rdx, r13                                                                                                                                                                                                                                              |     
    0x00418e07 call 0x424f70                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, rbp, r13, "string<...>::assign<Iter>(i,j): string too long");
    0x00418e0c mov edx, 0x4227b0                                                                                                                                                                                                                                         |     
    0x00418e11 mov rdi, r12                                                                                                                                                                                                                                              |     
    0x00418e14 mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00418e17 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x00418e1a call 0x422e20                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418e1f mov ebp, eax                                                                                                                                                                                                                                              |     
    0x00418e21 test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x00418e23 je 0x418e4e                                                                                                                                                                                                                                               |         
    0x00418e25 cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00418e2a je 0x418e3a                                                                                                                                                                                                                                               |             
    0x00418e2c mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00418e30 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x00418e34 mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x00418e37 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x00418e3a mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00418e42 mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x00418e45 mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x00418e48 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00418e4b call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x00418e4e mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00418e50 add rsp, 8                                                                                                                                                                                                                                                |     
    0x00418e54 pop rbx                                                                                                                                                                                                                                                   |     
    0x00418e55 pop r12                                                                                                                                                                                                                                                   |     
    0x00418e57 pop r13                                                                                                                                                                                                                                                   |     
    0x00418e59 pop r14                                                                                                                                                                                                                                                   |     
    0x00418e5b pop r15                                                                                                                                                                                                                                                   |     
    0x00418e5d pop rbp                                                                                                                                                                                                                                                   |     
    0x00418e5e ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
