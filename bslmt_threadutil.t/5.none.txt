    ; assembly                                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                             | /* bslmt_threadutil.t/none @ 0x418bf0 */
                                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_1024____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_1024__const__BloombergLP::bslma::Allocator_ ()          | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_1024_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_1024_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<1024> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<1024> const&, BloombergLP::bslma::Allocator*) */
    0x00418bf0 push rbp                                                                                                                                                                                                                                                      |     
    0x00418bf1 push r15                                                                                                                                                                                                                                                      |     
    0x00418bf3 push r14                                                                                                                                                                                                                                                      |     
    0x00418bf5 push r13                                                                                                                                                                                                                                                      |     
    0x00418bf7 push r12                                                                                                                                                                                                                                                      |     
    0x00418bf9 push rbx                                                                                                                                                                                                                                                      |     
    0x00418bfa push rax                                                                                                                                                                                                                                                      |     
    0x00418bfb mov r14, rcx                                                                                                                                                                                                                                                  |     r14 = rcx;
    0x00418bfe mov r15, rsi                                                                                                                                                                                                                                                  |     r15 = rsi;
    0x00418c01 mov r12, rdi                                                                                                                                                                                                                                                  |     r12 = rdi;
    0x00418c04 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x00418c09 je 0x418c11                                                                                                                                                                                                                                                   |         
    0x00418c0b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x00418c0f jmp 0x418c15                                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |     } else {
    0x00418c11 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                             |     }
    0x00418c15 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x00418c19 test r14, r14                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x00418c1c jne 0x418c32                                                                                                                                                                                                                                                  |         
    0x00418c1e mov r14, qword [rip + 0x22be8b]                                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00418c25 test r14, r14                                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00418c28 jne 0x418c32                                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                                             |         }
    0x00418c2a call 0x42e840                                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00418c2f mov r14, rax                                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                                             | label_0:
    0x00418c32 mov rax, qword [r14]                                                                                                                                                                                                                                          |     rax = *(r14);
    0x00418c35 mov esi, 0x40                                                                                                                                                                                                                                                 |     esi = 0x40;
    0x00418c3a mov rdi, r14                                                                                                                                                                                                                                                  |     rdi = r14;
    0x00418c3d call qword [rax + 0x10]                                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x00418c40 mov rbx, rax                                                                                                                                                                                                                                                  |     rbx = rax;
    0x00418c43 mov qword [rax], 0x418d40                                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_1024___.invokerFunction_void_;
    0x00418c4a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                         |     
    0x00418c4e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x00418c56 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x00418c5a movaps xmm0, xmmword [rip + 0x1893f]                                                                                                                                                                                                                          |     xmm0 = .comment;
    0x00418c61 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00418c65 mov ecx, 0x432d0b                                                                                                                                                                                                                                             |     
    0x00418c6a mov rsi, r13                                                                                                                                                                                                                                                  |     
    0x00418c6d mov rdx, rbp                                                                                                                                                                                                                                                  |     
    0x00418c70 call 0x4254b0                                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00418c75 mov edx, 0x422cd0                                                                                                                                                                                                                                             |     
    0x00418c7a mov rdi, r12                                                                                                                                                                                                                                                  |     
    0x00418c7d mov rsi, r15                                                                                                                                                                                                                                                  |     
    0x00418c80 mov rcx, rbx                                                                                                                                                                                                                                                  |     
    0x00418c83 call 0x423340                                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00418c88 mov ebp, eax                                                                                                                                                                                                                                                  |     
    0x00418c8a test eax, eax                                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x00418c8c je 0x418cb7                                                                                                                                                                                                                                                   |         
    0x00418c8e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00418c93 je 0x418ca3                                                                                                                                                                                                                                                   |             
    0x00418c95 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00418c99 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x00418c9d mov rax, qword [rdi]                                                                                                                                                                                                                                          |             rax = *(rdi);
    0x00418ca0 call qword [rax + 0x18]                                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |         }
    0x00418ca3 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x00418cab mov rax, qword [r14]                                                                                                                                                                                                                                          |         rax = *(r14);
    0x00418cae mov rdi, r14                                                                                                                                                                                                                                                  |         rdi = r14;
    0x00418cb1 mov rsi, rbx                                                                                                                                                                                                                                                  |         rsi = rbx;
    0x00418cb4 call qword [rax + 0x18]                                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                             |     }
    0x00418cb7 mov eax, ebp                                                                                                                                                                                                                                                  |     eax = ebp;
    0x00418cb9 add rsp, 8                                                                                                                                                                                                                                                    |     
    0x00418cbd pop rbx                                                                                                                                                                                                                                                       |     
    0x00418cbe pop r12                                                                                                                                                                                                                                                       |     
    0x00418cc0 pop r13                                                                                                                                                                                                                                                       |     
    0x00418cc2 pop r14                                                                                                                                                                                                                                                       |     
    0x00418cc4 pop r15                                                                                                                                                                                                                                                       |     
    0x00418cc6 pop rbp                                                                                                                                                                                                                                                       |     
    0x00418cc7 ret                                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                                             | }
