    ; assembly                                                                                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                         | /* bslmt_threadutil.t/none @ 0x419280 */
                                                                                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE.Func_4096____unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__STACKSIZE_TEST_CASE_NAMESPACE::Func_4096__const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_STACKSIZE_TEST_CASE_NAMESPACE_Func_4096_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_STACKSIZE_TEST_CASE_NAMESPACE::Func_4096_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                         |     rcx = arg4;
                                                                                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<STACKSIZE_TEST_CASE_NAMESPACE::Func<4096> >(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, STACKSIZE_TEST_CASE_NAMESPACE::Func<4096> const&, BloombergLP::bslma::Allocator*) */
    0x00419280 push rbp                                                                                                                                                                                                                                                  |     
    0x00419281 push r15                                                                                                                                                                                                                                                  |     
    0x00419283 push r14                                                                                                                                                                                                                                                  |     
    0x00419285 push r13                                                                                                                                                                                                                                                  |     
    0x00419287 push r12                                                                                                                                                                                                                                                  |     
    0x00419289 push rbx                                                                                                                                                                                                                                                  |     
    0x0041928a push rax                                                                                                                                                                                                                                                  |     
    0x0041928b mov r14, rcx                                                                                                                                                                                                                                              |     r14 = rcx;
    0x0041928e mov r15, rsi                                                                                                                                                                                                                                              |     r15 = rsi;
    0x00419291 mov r12, rdi                                                                                                                                                                                                                                              |     r12 = rdi;
    0x00419294 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                              |     
                                                                                                                                                                                                                                                                         |     if (*((rsi + 0x38)) != 0x17) {
    0x00419299 je 0x4192a1                                                                                                                                                                                                                                               |         
    0x0041929b mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                               |         r13 = *((r15 + 0x18));
    0x0041929f jmp 0x4192a5                                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |     } else {
    0x004192a1 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                     |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                         |     }
    0x004192a5 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                               |     rbp = *((r15 + 0x30));
    0x004192a9 test r14, r14                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (r14 == 0) {
    0x004192ac jne 0x4192c2                                                                                                                                                                                                                                              |         
    0x004192ae mov r14, qword [rip + 0x22b7fb]                                                                                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004192b5 test r14, r14                                                                                                                                                                                                                                             |         
                                                                                                                                                                                                                                                                         |         if (r14 != 0) {
    0x004192b8 jne 0x4192c2                                                                                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                                                                                         |         }
    0x004192ba call 0x42e840                                                                                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004192bf mov r14, rax                                                                                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                                                                                         |     }
                                                                                                                                                                                                                                                                         | label_0:
    0x004192c2 mov rax, qword [r14]                                                                                                                                                                                                                                      |     rax = *(r14);
    0x004192c5 mov esi, 0x40                                                                                                                                                                                                                                             |     esi = 0x40;
    0x004192ca mov rdi, r14                                                                                                                                                                                                                                              |     rdi = r14;
    0x004192cd call qword [rax + 0x10]                                                                                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x004192d0 mov rbx, rax                                                                                                                                                                                                                                              |     rbx = rax;
    0x004192d3 mov qword [rax], 0x4193d0                                                                                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_STACKSIZE_TEST_CASE_NAMESPACE::Func_4096___.invokerFunction_void_;
    0x004192da lea rdi, [rax + 0x10]                                                                                                                                                                                                                                     |     
    0x004192de mov qword [rax + 0x10], 0                                                                                                                                                                                                                                 |     *((rax + 0x10)) = 0;
    0x004192e6 mov qword [rax + 0x38], r14                                                                                                                                                                                                                               |     *((rax + 0x38)) = r14;
    0x004192ea movaps xmm0, xmmword [rip + 0x182af]                                                                                                                                                                                                                      |     xmm0 = .comment;
    0x004192f1 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                         |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x004192f5 mov ecx, 0x432d0b                                                                                                                                                                                                                                         |     
    0x004192fa mov rsi, r13                                                                                                                                                                                                                                              |     
    0x004192fd mov rdx, rbp                                                                                                                                                                                                                                              |     
    0x00419300 call 0x4254b0                                                                                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00419305 mov edx, 0x422cd0                                                                                                                                                                                                                                         |     
    0x0041930a mov rdi, r12                                                                                                                                                                                                                                              |     
    0x0041930d mov rsi, r15                                                                                                                                                                                                                                              |     
    0x00419310 mov rcx, rbx                                                                                                                                                                                                                                              |     
    0x00419313 call 0x423340                                                                                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00419318 mov ebp, eax                                                                                                                                                                                                                                              |     
    0x0041931a test eax, eax                                                                                                                                                                                                                                             |     
                                                                                                                                                                                                                                                                         |     if (eax != 0) {
    0x0041931c je 0x419347                                                                                                                                                                                                                                               |         
    0x0041931e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                              |         
                                                                                                                                                                                                                                                                         |         if (*((rbx + 0x30)) != 0x17) {
    0x00419323 je 0x419333                                                                                                                                                                                                                                               |             
    0x00419325 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                               |             rsi = *((rbx + 0x10));
    0x00419329 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                               |             rdi = *((rbx + 0x38));
    0x0041932d mov rax, qword [rdi]                                                                                                                                                                                                                                      |             rax = *(rdi);
    0x00419330 call qword [rax + 0x18]                                                                                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |         }
    0x00419333 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0041933b mov rax, qword [r14]                                                                                                                                                                                                                                      |         rax = *(r14);
    0x0041933e mov rdi, r14                                                                                                                                                                                                                                              |         rdi = r14;
    0x00419341 mov rsi, rbx                                                                                                                                                                                                                                              |         rsi = rbx;
    0x00419344 call qword [rax + 0x18]                                                                                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                         |     }
    0x00419347 mov eax, ebp                                                                                                                                                                                                                                              |     eax = ebp;
    0x00419349 add rsp, 8                                                                                                                                                                                                                                                |     
    0x0041934d pop rbx                                                                                                                                                                                                                                                   |     
    0x0041934e pop r12                                                                                                                                                                                                                                                   |     
    0x00419350 pop r13                                                                                                                                                                                                                                                   |     
    0x00419352 pop r14                                                                                                                                                                                                                                                   |     
    0x00419354 pop r15                                                                                                                                                                                                                                                   |     
    0x00419356 pop rbp                                                                                                                                                                                                                                                   |     
    0x00419357 ret                                                                                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                                                                                         | }
