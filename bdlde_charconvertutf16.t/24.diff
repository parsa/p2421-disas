000000000042b7c0 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std::__1::vector<unsigned sh   |	000000000042b760 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std::__1::vector<unsigned sh
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13									0000000000000005: 02	pushq	%r13
0000000000000007: 02	pushq	%r12									0000000000000007: 02	pushq	%r12
0000000000000009: 01	pushq	%rbx									0000000000000009: 01	pushq	%rbx
000000000000000a: 04	subq	$24, %rsp							   |	000000000000000a: 01	pushq	%rax
000000000000000e: 03	movl	%r8d, %ebp							   |	000000000000000b: 03	movl	%r8d, %r13d
0000000000000011: 03	movl	%ecx, %r13d							   |	000000000000000e: 03	movl	%ecx, %r12d
0000000000000014: 05	movq	%rdx, 8(%rsp)							   |	0000000000000011: 03	movq	%rdx, %r14
0000000000000019: 03	movq	%rsi, %r15							   |	0000000000000014: 03	movq	%rsi, %rbp
000000000000001c: 03	movq	%rdi, %r12							   |	0000000000000017: 03	movq	%rdi, %r15
000000000000001f: 03	movq	(%rsi), %rdi							   |	000000000000001a: 03	movq	(%rsi), %rdi
0000000000000022: 04	movq	8(%rsi), %rbx							   |	000000000000001d: 04	movq	8(%rsi), %rbx
0000000000000026: 03	addq	%rdi, %rbx							   |	0000000000000021: 03	addq	%rdi, %rbx
0000000000000029: 03	movq	%rbx, %rsi							   |	0000000000000024: 03	movq	%rbx, %rsi
000000000000002c: 05	callq	0x430bc0 <unsigned long (anonymous namespace)::utf16BufferLength   |	0000000000000027: 05	callq	0x4309a0 <unsigned long (anonymous namespace)::utf16BufferLength
0000000000000031: 03	movq	%rax, %r14							   |	000000000000002c: 03	movq	(%r15), %rdi
0000000000000034: 04	movq	(%r12), %rdi							   |	000000000000002f: 04	movq	8(%r15), %rcx
0000000000000038: 05	movq	8(%r12), %rax							   |	0000000000000033: 03	subq	%rdi, %rcx
000000000000003d: 03	subq	%rdi, %rax							   |	0000000000000036: 03	sarq	%rcx
0000000000000040: 03	sarq	%rax								   |	0000000000000039: 03	subq	%rcx, %rax
0000000000000043: 03	movq	%r14, %rsi							   |	000000000000003c: 02	jbe	0x42b7ac <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000046: 03	subq	%rax, %rsi							   |	000000000000003e: 03	movq	%r15, %rdi
0000000000000049: 02	jbe	0x42b817 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000041: 03	movq	%rax, %rsi
000000000000004b: 03	movq	%r12, %rdi							   |	0000000000000044: 05	callq	0x429470 <std::__1::vector<unsigned short, std::__1::allocator<u
000000000000004e: 05	callq	0x429470 <std::__1::vector<unsigned short, std::__1::allocator<u   |	0000000000000049: 03	movq	(%r15), %rdi
0000000000000053: 04	movq	(%r12), %rdi							   |	000000000000004c: 04	movq	(%rbp), %rsi
0000000000000057: 03	movq	(%r15), %rsi							   |	0000000000000050: 04	movzwl	%r12w, %r9d
000000000000005a: 04	movzwl	%r13w, %r9d							   |	0000000000000054: 03	movq	%rsp, %r8
000000000000005e: 05	leaq	16(%rsp), %r8							   |	0000000000000057: 03	movq	%rbx, %rdx
0000000000000063: 03	movq	%rbx, %rdx							   |	000000000000005a: 03	movq	%r14, %rcx
0000000000000066: 02	testl	%ebp, %ebp							   |	000000000000005d: 03	testl	%r13d, %r13d
0000000000000068: 02	je	0x42b836 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000060: 02	je	0x42b7c9 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
000000000000006a: 05	movq	8(%rsp), %rcx							   |	0000000000000062: 05	callq	0x432020 <int (anonymous namespace)::localUtf8ToUtf16<unsigned s
000000000000006f: 05	callq	0x432240 <int (anonymous namespace)::localUtf8ToUtf16<unsigned s   |	0000000000000067: 02	jmp	0x42b7ce <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000074: 02	jmp	0x42b840 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000069: 05	callq	0x431c50 <int (anonymous namespace)::localUtf8ToUtf16<unsigned s
0000000000000076: 05	movq	8(%rsp), %rcx							   |	000000000000006e: 02	movl	%eax, %ebx
000000000000007b: 05	callq	0x431e70 <int (anonymous namespace)::localUtf8ToUtf16<unsigned s   |	0000000000000070: 04	movq	(%rsp), %rax
0000000000000080: 02	movl	%eax, %ebx							   |	0000000000000074: 03	movq	(%r15), %rcx
0000000000000082: 05	movq	16(%rsp), %rax							   |	0000000000000077: 04	movq	8(%r15), %rdx
0000000000000087: 03	cmpq	%r14, %rax							   |	000000000000007b: 03	subq	%rcx, %rdx
000000000000008a: 04	movq	(%r12), %rcx							   |	000000000000007e: 03	sarq	%rdx
000000000000008e: 05	movq	8(%r12), %rdx							   |	0000000000000081: 03	movq	%rax, %rsi
0000000000000093: 03	subq	%rcx, %rdx							   |	0000000000000084: 03	subq	%rdx, %rsi
0000000000000096: 03	sarq	%rdx								   |	0000000000000087: 02	je	0x42b802 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000099: 03	movq	%rax, %rsi							   |	0000000000000089: 02	jbe	0x42b7f5 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
000000000000009c: 03	subq	%rdx, %rsi							   |	000000000000008b: 03	movq	%r15, %rdi
000000000000009f: 02	je	0x42b87b <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	000000000000008e: 05	callq	0x429470 <std::__1::vector<unsigned short, std::__1::allocator<u
00000000000000a1: 02	jbe	0x42b86d <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000093: 02	jmp	0x42b802 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
00000000000000a3: 03	movq	%r12, %rdi							   |	0000000000000095: 03	cmpq	%rdx, %rax
00000000000000a6: 05	callq	0x429470 <std::__1::vector<unsigned short, std::__1::allocator<u   |	0000000000000098: 02	jae	0x42b802 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
00000000000000ab: 02	jmp	0x42b87b <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	000000000000009a: 04	leaq	(%rcx,%rax,2), %rax
00000000000000ad: 03	cmpq	%rdx, %rax							   |	000000000000009e: 04	movq	%rax, 8(%r15)
00000000000000b0: 02	jae	0x42b87b <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	00000000000000a2: 02	movl	%ebx, %eax
00000000000000b2: 04	leaq	(%rcx,%rax,2), %rax						   |	00000000000000a4: 04	addq	$8, %rsp
00000000000000b6: 05	movq	%rax, 8(%r12)							   |	00000000000000a8: 01	popq	%rbx
00000000000000bb: 02	movl	%ebx, %eax							   |	00000000000000a9: 02	popq	%r12
00000000000000bd: 04	addq	$24, %rsp							   |	00000000000000ab: 02	popq	%r13
00000000000000c1: 01	popq	%rbx								   |	00000000000000ad: 02	popq	%r14
00000000000000c2: 02	popq	%r12								   |	00000000000000af: 02	popq	%r15
00000000000000c4: 02	popq	%r13								   |	00000000000000b1: 01	popq	%rbp
00000000000000c6: 02	popq	%r14								   |	00000000000000b2: 01	retq	
00000000000000c8: 02	popq	%r15								   |	00000000000000b3: 10	nopw	%cs:(%rax,%rax)
00000000000000ca: 01	popq	%rbp								   |	00000000000000bd: 03	nopl	(%rax)
00000000000000cb: 01	retq									   <
00000000000000cc: 04	nopl	(%rax)								   <
