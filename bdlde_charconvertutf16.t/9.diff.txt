000000000042b650 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std::__1::basic_string<wchar   |	000000000042b620 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std::__1::basic_string<wchar
0000000000000000: 01	pushq	%rbp									0000000000000000: 01	pushq	%rbp
0000000000000001: 02	pushq	%r15									0000000000000001: 02	pushq	%r15
0000000000000003: 02	pushq	%r14									0000000000000003: 02	pushq	%r14
0000000000000005: 02	pushq	%r13								   |	0000000000000005: 02	pushq	%r12
0000000000000007: 02	pushq	%r12								   |	0000000000000007: 01	pushq	%rbx
0000000000000009: 01	pushq	%rbx								   |	0000000000000008: 04	subq	$16, %rsp
000000000000000a: 01	pushq	%rax								   |	000000000000000c: 03	movl	%r8d, %r12d
000000000000000b: 03	movl	%r8d, %r13d							   |	000000000000000f: 03	movl	%ecx, %r14d
000000000000000e: 03	movl	%ecx, %r15d							   |	0000000000000012: 03	movq	%rdx, %r15
0000000000000011: 03	movq	%rdx, %r12							   |	0000000000000015: 03	movq	%rsi, %rbp
0000000000000014: 03	movq	%rsi, %rbp							   |	0000000000000018: 03	movq	%rdi, %rbx
0000000000000017: 03	movq	%rdi, %rbx							   |	000000000000001b: 03	movq	%rsi, %rdi
000000000000001a: 03	movq	%rsi, %rdi							   |	000000000000001e: 05	callq	0x431370 <unsigned long (anonymous namespace)::utf16BufferLength
000000000000001d: 05	callq	0x431590 <unsigned long (anonymous namespace)::utf16BufferLength   |	0000000000000023: 02	movb	(%rbx), %cl
0000000000000022: 03	movq	%rax, %r14							   |	0000000000000025: 03	testb	$1, %cl
0000000000000025: 02	movb	(%rbx), %al							   |	0000000000000028: 02	jne	0x42b657 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000027: 02	testb	$1, %al								   |	000000000000002a: 03	movzbl	%cl, %edx
0000000000000029: 02	jne	0x42b688 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	000000000000002d: 03	shrq	%rdx
000000000000002b: 03	movzbl	%al, %ecx							   |	0000000000000030: 03	cmpq	%rdx, %rax
000000000000002e: 03	shrq	%rcx								   |	0000000000000033: 02	ja	0x42b660 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000031: 03	cmpq	%rcx, %r14							   |	0000000000000035: 02	jmp	0x42b66f <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000034: 02	ja	0x42b691 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000037: 04	movq	8(%rbx), %rdx
0000000000000036: 02	jmp	0x42b6a0 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	000000000000003b: 03	cmpq	%rdx, %rax
0000000000000038: 04	movq	8(%rbx), %rcx							   |	000000000000003e: 02	jbe	0x42b66f <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
000000000000003c: 03	cmpq	%rcx, %r14							   |	0000000000000040: 03	movq	%rbx, %rdi
000000000000003f: 02	jbe	0x42b6a0 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000043: 03	movq	%rax, %rsi
0000000000000041: 03	movq	%rbx, %rdi							   |	0000000000000046: 02	xorl	%edx, %edx
0000000000000044: 03	movq	%r14, %rsi							   |	0000000000000048: 05	callq	0x4035c0 <_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9alloc
0000000000000047: 02	xorl	%edx, %edx							   |	000000000000004d: 02	movb	(%rbx), %cl
0000000000000049: 05	callq	0x4035c0 <_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9alloc   |	000000000000004f: 03	testb	$1, %cl
000000000000004e: 02	movb	(%rbx), %al							   |	0000000000000052: 02	jne	0x42b67a <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000050: 02	testb	$1, %al								   <
0000000000000052: 02	jne	0x42b6aa <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   <
0000000000000054: 04	leaq	4(%rbx), %rdi								0000000000000054: 04	leaq	4(%rbx), %rdi
0000000000000058: 02	jmp	0x42b6ae <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000058: 02	jmp	0x42b67e <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
000000000000005a: 04	movq	16(%rbx), %rdi								000000000000005a: 04	movq	16(%rbx), %rdi
000000000000005e: 03	movq	%rsp, %rcx							   |	000000000000005e: 05	leaq	8(%rsp), %rcx
0000000000000061: 03	movq	%rbp, %rsi							   |	0000000000000063: 03	movq	%rbp, %rsi
0000000000000064: 03	movq	%r12, %rdx							   |	0000000000000066: 03	movq	%r15, %rdx
0000000000000067: 03	movl	%r15d, %r8d							   |	0000000000000069: 03	movl	%r14d, %r8d
000000000000006a: 03	testl	%r13d, %r13d							   |	000000000000006c: 03	testl	%r12d, %r12d
000000000000006d: 02	je	0x42b6c6 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	000000000000006f: 02	je	0x42b698 <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
000000000000006f: 05	callq	0x431ad0 <int (anonymous namespace)::localUtf8ToUtf16<wchar_t, (   |	0000000000000071: 05	callq	0x4318b0 <int (anonymous namespace)::localUtf8ToUtf16<wchar_t, (
0000000000000074: 02	jmp	0x42b6cb <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:   |	0000000000000076: 02	jmp	0x42b69d <BloombergLP::bdlde::CharConvertUtf16::utf8ToUtf16(std:
0000000000000076: 05	callq	0x431710 <int (anonymous namespace)::localUtf8ToUtf16<wchar_t, (   |	0000000000000078: 05	callq	0x4314f0 <int (anonymous namespace)::localUtf8ToUtf16<wchar_t, (
000000000000007b: 02	movl	%eax, %ebp							   |	000000000000007d: 02	movl	%eax, %ebp
000000000000007d: 04	movq	(%rsp), %rsi							   |	000000000000007f: 05	movq	8(%rsp), %rsi
0000000000000081: 03	cmpq	%r14, %rsi							   <
0000000000000084: 03	decq	%rsi									0000000000000084: 03	decq	%rsi
0000000000000087: 03	movq	%rbx, %rdi								0000000000000087: 03	movq	%rbx, %rdi
000000000000008a: 02	xorl	%edx, %edx								000000000000008a: 02	xorl	%edx, %edx
000000000000008c: 05	callq	0x4035c0 <_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9alloc	000000000000008c: 05	callq	0x4035c0 <_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9alloc
0000000000000091: 02	movl	%ebp, %eax								0000000000000091: 02	movl	%ebp, %eax
0000000000000093: 04	addq	$8, %rsp							   |	0000000000000093: 04	addq	$16, %rsp
0000000000000097: 01	popq	%rbx									0000000000000097: 01	popq	%rbx
0000000000000098: 02	popq	%r12									0000000000000098: 02	popq	%r12
000000000000009a: 02	popq	%r13								   |	000000000000009a: 02	popq	%r14
000000000000009c: 02	popq	%r14								   |	000000000000009c: 02	popq	%r15
000000000000009e: 02	popq	%r15								   |	000000000000009e: 01	popq	%rbp
00000000000000a0: 01	popq	%rbp								   |	000000000000009f: 01	retq	
00000000000000a1: 01	retq									   <
00000000000000a2: 10	nopw	%cs:(%rax,%rax)							   <
00000000000000ac: 04	nopl	(%rax)								   <
