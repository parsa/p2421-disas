    ; assembly                                                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                             | /* bdlcc_deque.t/none @ 0x4ae6e0 */
                                                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_RANDOM_PUSH_POP_TEST.PopperThread__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__RANDOM_PUSH_POP_TEST::PopperThread_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_RANDOM_PUSH_POP_TEST_PopperThread_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_RANDOM_PUSH_POP_TEST::PopperThread_const_BloombergLP::bslma::Allocator_ (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                             |     rcx = arg4;
                                                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<RANDOM_PUSH_POP_TEST::PopperThread>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, RANDOM_PUSH_POP_TEST::PopperThread const&, BloombergLP::bslma::Allocator*) */
    0x004ae6e0 push rbp                                                                                                                                                                                                                                      |     
    0x004ae6e1 push r15                                                                                                                                                                                                                                      |     
    0x004ae6e3 push r14                                                                                                                                                                                                                                      |     
    0x004ae6e5 push r13                                                                                                                                                                                                                                      |     
    0x004ae6e7 push r12                                                                                                                                                                                                                                      |     
    0x004ae6e9 push rbx                                                                                                                                                                                                                                      |     
    0x004ae6ea push rax                                                                                                                                                                                                                                      |     
    0x004ae6eb mov r14, rcx                                                                                                                                                                                                                                  |     r14 = rcx;
    0x004ae6ee mov r15, rsi                                                                                                                                                                                                                                  |     r15 = rsi;
    0x004ae6f1 mov r12, rdi                                                                                                                                                                                                                                  |     r12 = rdi;
    0x004ae6f4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                  |     
                                                                                                                                                                                                                                                             |     if (*((rsi + 0x38)) != 0x17) {
    0x004ae6f9 je 0x4ae701                                                                                                                                                                                                                                   |         
    0x004ae6fb mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                   |         r13 = *((r15 + 0x18));
    0x004ae6ff jmp 0x4ae705                                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                             |     } else {
    0x004ae701 lea r13, [r15 + 0x18]                                                                                                                                                                                                                         |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                             |     }
    0x004ae705 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                   |     rbp = *((r15 + 0x30));
    0x004ae709 test r14, r14                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                             |     if (r14 == 0) {
    0x004ae70c jne 0x4ae722                                                                                                                                                                                                                                  |         
    0x004ae70e mov r14, qword [rip + 0x277e0b]                                                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004ae715 test r14, r14                                                                                                                                                                                                                                 |         
                                                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x004ae718 jne 0x4ae722                                                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                                                             |         }
    0x004ae71a call 0x4bd7f0                                                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004ae71f mov r14, rax                                                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                                                             | label_0:
    0x004ae722 mov rax, qword [r14]                                                                                                                                                                                                                          |     rax = *(r14);
    0x004ae725 mov esi, 0x40                                                                                                                                                                                                                                 |     esi = 0x40;
    0x004ae72a mov rdi, r14                                                                                                                                                                                                                                  |     rdi = r14;
    0x004ae72d call qword [rax + 0x10]                                                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004ae730 mov rbx, rax                                                                                                                                                                                                                                  |     rbx = rax;
    0x004ae733 mov qword [rax], 0x4ae830                                                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_RANDOM_PUSH_POP_TEST::PopperThread_.invokerFunction_void_;
    0x004ae73a lea rdi, [rax + 0x10]                                                                                                                                                                                                                         |     
    0x004ae73e mov qword [rax + 0x10], 0                                                                                                                                                                                                                     |     *((rax + 0x10)) = 0;
    0x004ae746 mov qword [rax + 0x38], r14                                                                                                                                                                                                                   |     *((rax + 0x38)) = r14;
    0x004ae74a movaps xmm0, xmmword [rip + 0x382af]                                                                                                                                                                                                          |     xmm0 = .comment;
    0x004ae751 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x004ae755 mov ecx, 0x4e981a                                                                                                                                                                                                                             |     
    0x004ae75a mov rsi, r13                                                                                                                                                                                                                                  |     
    0x004ae75d mov rdx, rbp                                                                                                                                                                                                                                  |     
    0x004ae760 call 0x4c35b0                                                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x004ae765 mov edx, 0x4bea10                                                                                                                                                                                                                             |     
    0x004ae76a mov rdi, r12                                                                                                                                                                                                                                  |     
    0x004ae76d mov rsi, r15                                                                                                                                                                                                                                  |     
    0x004ae770 mov rcx, rbx                                                                                                                                                                                                                                  |     
    0x004ae773 call 0x4bf3a0                                                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004ae778 mov ebp, eax                                                                                                                                                                                                                                  |     
    0x004ae77a test eax, eax                                                                                                                                                                                                                                 |     
                                                                                                                                                                                                                                                             |     if (eax != 0) {
    0x004ae77c je 0x4ae7a7                                                                                                                                                                                                                                   |         
    0x004ae77e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                  |         
                                                                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x004ae783 je 0x4ae793                                                                                                                                                                                                                                   |             
    0x004ae785 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x004ae789 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x004ae78d mov rax, qword [rdi]                                                                                                                                                                                                                          |             rax = *(rdi);
    0x004ae790 call qword [rax + 0x18]                                                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                             |         }
    0x004ae793 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x004ae79b mov rax, qword [r14]                                                                                                                                                                                                                          |         rax = *(r14);
    0x004ae79e mov rdi, r14                                                                                                                                                                                                                                  |         rdi = r14;
    0x004ae7a1 mov rsi, rbx                                                                                                                                                                                                                                  |         rsi = rbx;
    0x004ae7a4 call qword [rax + 0x18]                                                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                             |     }
    0x004ae7a7 mov eax, ebp                                                                                                                                                                                                                                  |     eax = ebp;
    0x004ae7a9 add rsp, 8                                                                                                                                                                                                                                    |     
    0x004ae7ad pop rbx                                                                                                                                                                                                                                       |     
    0x004ae7ae pop r12                                                                                                                                                                                                                                       |     
    0x004ae7b0 pop r13                                                                                                                                                                                                                                       |     
    0x004ae7b2 pop r14                                                                                                                                                                                                                                       |     
    0x004ae7b4 pop r15                                                                                                                                                                                                                                       |     
    0x004ae7b6 pop rbp                                                                                                                                                                                                                                       |     
    0x004ae7b7 ret                                                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                                                             | }
