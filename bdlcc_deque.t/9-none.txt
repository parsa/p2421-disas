    ; assembly                                                                                                                                                                                                       | /* r2dec pseudo code output */
                                                                                                                                                                                                                     | /* bdlcc_deque.t/none @ 0x4bc1a0 */
                                                                                                                                                                                                                     | #include <stdint.h>
                                                                                                                                                                                                                     |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_5.StraightHWMFunctorFront__unsigned_long__TEST_CASE_5::StraightHWMFunctorFront_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_5_StraightHWMFunctorFront_unsigned_long_TEST_CASE_5::StraightHWMFunctorFront_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, char * arg1) {
                                                                                                                                                                                                                     |     int64_t var_18h;
                                                                                                                                                                                                                     |     uint32_t var_38h;
                                                                                                                                                                                                                     |     int64_t var_40h;
                                                                                                                                                                                                                     |     rdx = arg3;
                                                                                                                                                                                                                     |     rsi = arg2;
                                                                                                                                                                                                                     |     rdi = arg1;
                                                                                                                                                                                                                     |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<TEST_CASE_5::StraightHWMFunctorFront>(unsigned long*, TEST_CASE_5::StraightHWMFunctorFront const&, BloombergLP::bslma::Allocator*) */
    0x004bc1a0 push rbp                                                                                                                                                                                              |     
    0x004bc1a1 push r15                                                                                                                                                                                              |     
    0x004bc1a3 push r14                                                                                                                                                                                              |     
    0x004bc1a5 push rbx                                                                                                                                                                                              |     
    0x004bc1a6 sub rsp, 0x48                                                                                                                                                                                         |     
    0x004bc1aa mov r14, rdx                                                                                                                                                                                          |     r14 = rdx;
    0x004bc1ad mov rbp, rsi                                                                                                                                                                                          |     
    0x004bc1b0 mov r15, rdi                                                                                                                                                                                          |     r15 = rdi;
    0x004bc1b3 test rdx, rdx                                                                                                                                                                                         |     
                                                                                                                                                                                                                     |     if (rdx == 0) {
    0x004bc1b6 jne 0x4bc1cc                                                                                                                                                                                          |         
    0x004bc1b8 mov r14, qword [rip + 0x26a361]                                                                                                                                                                       |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004bc1bf test r14, r14                                                                                                                                                                                         |         
                                                                                                                                                                                                                     |         if (r14 != 0) {
    0x004bc1c2 jne 0x4bc1cc                                                                                                                                                                                          |             goto label_0;
                                                                                                                                                                                                                     |         }
    0x004bc1c4 call 0x4bd7f0                                                                                                                                                                                         |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004bc1c9 mov r14, rax                                                                                                                                                                                          |         r14 = rax;
                                                                                                                                                                                                                     |     }
                                                                                                                                                                                                                     | label_0:
    0x004bc1cc mov rax, qword [r14]                                                                                                                                                                                  |     rax = *(r14);
    0x004bc1cf mov esi, 0x48                                                                                                                                                                                         |     esi = 0x48;
    0x004bc1d4 mov rdi, r14                                                                                                                                                                                          |     rdi = r14;
    0x004bc1d7 call qword [rax + 0x10]                                                                                                                                                                               |     rax = uint64_t (*rax + 0x10)() ();
    0x004bc1da mov rbx, rax                                                                                                                                                                                          |     rbx = rax;
    0x004bc1dd mov qword [rax], 0x4bc330                                                                                                                                                                             |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_TEST_CASE_5::StraightHWMFunctorFront_.invokerFunction_void_;
    0x004bc1e4 movups xmm0, xmmword [rbp]                                                                                                                                                                            |     __asm ("movups xmm0, xmmword [rbp]");
    0x004bc1e8 movups xmmword [rax + 8], xmm0                                                                                                                                                                        |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004bc1ec lea rdi, [rax + 0x18]                                                                                                                                                                                 |     
    0x004bc1f0 mov qword [rax + 0x18], 0                                                                                                                                                                             |     *((rax + 0x18)) = 0;
    0x004bc1f8 mov qword [rax + 0x40], r14                                                                                                                                                                           |     *((rax + 0x40)) = r14;
    0x004bc1fc movaps xmm0, xmmword [rip + 0x2a7fd]                                                                                                                                                                  |     xmm0 = .comment;
    0x004bc203 movups xmmword [rax + 0x30], xmm0                                                                                                                                                                     |     __asm ("movups xmmword [rax + 0x30], xmm0");
    0x004bc207 mov ecx, 0x4e981a                                                                                                                                                                                     |     
    0x004bc20c xor esi, esi                                                                                                                                                                                          |     
    0x004bc20e xor edx, edx                                                                                                                                                                                          |     
    0x004bc210 call 0x4c35b0                                                                                                                                                                                         |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x18, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004bc215 mov rdi, rsp                                                                                                                                                                                          |     
    0x004bc218 call 0x4beeb0                                                                                                                                                                                         |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004bc21d mov rsi, rsp                                                                                                                                                                                          |     
    0x004bc220 mov edx, 0x4bea10                                                                                                                                                                                     |     
    0x004bc225 mov rdi, r15                                                                                                                                                                                          |     
    0x004bc228 mov rcx, rbx                                                                                                                                                                                          |     
    0x004bc22b call 0x4bf3a0                                                                                                                                                                                         |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004bc230 mov ebp, eax                                                                                                                                                                                          |     
    0x004bc232 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                          |     
                                                                                                                                                                                                                     |     if (*((rsp + 0x38)) != 0x17) {
    0x004bc238 je 0x4bc24a                                                                                                                                                                                           |         
    0x004bc23a mov rsi, qword [rsp + 0x18]                                                                                                                                                                           |         rsi = *((rsp + 0x18));
    0x004bc23f mov rdi, qword [rsp + 0x40]                                                                                                                                                                           |         rdi = *((rsp + 0x40));
    0x004bc244 mov rax, qword [rdi]                                                                                                                                                                                  |         rax = *(rdi);
    0x004bc247 call qword [rax + 0x18]                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                     |     }
    0x004bc24a test ebp, ebp                                                                                                                                                                                         |     
                                                                                                                                                                                                                     |     if (ebp != 0) {
    0x004bc24c je 0x4bc277                                                                                                                                                                                           |         
    0x004bc24e cmp qword [rbx + 0x38], 0x17                                                                                                                                                                          |         
                                                                                                                                                                                                                     |         if (*((rbx + 0x38)) != 0x17) {
    0x004bc253 je 0x4bc263                                                                                                                                                                                           |             
    0x004bc255 mov rsi, qword [rbx + 0x18]                                                                                                                                                                           |             rsi = *((rbx + 0x18));
    0x004bc259 mov rdi, qword [rbx + 0x40]                                                                                                                                                                           |             rdi = *((rbx + 0x40));
    0x004bc25d mov rax, qword [rdi]                                                                                                                                                                                  |             rax = *(rdi);
    0x004bc260 call qword [rax + 0x18]                                                                                                                                                                               |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                     |         }
    0x004bc263 mov qword [rbx + 0x30], 0xffffffffffffffff                                                                                                                                                            |         *((rbx + 0x30)) = 0xffffffffffffffff;
    0x004bc26b mov rax, qword [r14]                                                                                                                                                                                  |         rax = *(r14);
    0x004bc26e mov rdi, r14                                                                                                                                                                                          |         rdi = r14;
    0x004bc271 mov rsi, rbx                                                                                                                                                                                          |         rsi = rbx;
    0x004bc274 call qword [rax + 0x18]                                                                                                                                                                               |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                     |     }
    0x004bc277 mov eax, ebp                                                                                                                                                                                          |     eax = ebp;
    0x004bc279 add rsp, 0x48                                                                                                                                                                                         |     
    0x004bc27d pop rbx                                                                                                                                                                                               |     
    0x004bc27e pop r14                                                                                                                                                                                               |     
    0x004bc280 pop r15                                                                                                                                                                                               |     
    0x004bc282 pop rbp                                                                                                                                                                                               |     
    0x004bc283 ret                                                                                                                                                                                                   |     return rax;
                                                                                                                                                                                                                     | }
