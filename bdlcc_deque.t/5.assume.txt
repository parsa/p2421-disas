    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* bdlcc_deque.t/assume @ 0x493870 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_2.WorkerFunctor__unsigned_long__USAGE_EXAMPLE_2::WorkerFunctor_const__BloombergLP::bslma::Allocator_ ()         | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_2_WorkerFunctor_unsigned_long_USAGE_EXAMPLE_2::WorkerFunctor_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                         |     int64_t var_18h;
                                                                                                                                                                                                         |     uint32_t var_38h;
                                                                                                                                                                                                         |     int64_t var_40h;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<USAGE_EXAMPLE_2::WorkerFunctor>(unsigned long*, USAGE_EXAMPLE_2::WorkerFunctor const&, BloombergLP::bslma::Allocator*) */
    0x00493870 push rbp                                                                                                                                                                                  |     
    0x00493871 push r15                                                                                                                                                                                  |     
    0x00493873 push r14                                                                                                                                                                                  |     
    0x00493875 push rbx                                                                                                                                                                                  |     
    0x00493876 sub rsp, 0x48                                                                                                                                                                             |     
    0x0049387a mov r14, rdx                                                                                                                                                                              |     r14 = rdx;
    0x0049387d mov rbp, rsi                                                                                                                                                                              |     
    0x00493880 mov r15, rdi                                                                                                                                                                              |     r15 = rdi;
    0x00493883 mov rax, qword [rdx]                                                                                                                                                                      |     rax = *(rdx);
    0x00493886 mov esi, 0x50                                                                                                                                                                             |     esi = 0x50;
    0x0049388b mov rdi, rdx                                                                                                                                                                              |     rdi = rdx;
    0x0049388e call qword [rax + 0x10]                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00493891 mov rbx, rax                                                                                                                                                                              |     rbx = rax;
    0x00493894 mov qword [rax], 0x4939f0                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_USAGE_EXAMPLE_2::WorkerFunctor_.invokerFunction_void_;
    0x0049389b movups xmm0, xmmword [rbp]                                                                                                                                                                |     __asm ("movups xmm0, xmmword [rbp]");
    0x0049389f movups xmmword [rax + 8], xmm0                                                                                                                                                            |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004938a3 mov rax, qword [rbp + 0x10]                                                                                                                                                               |     rax = *((rbp + 0x10));
    0x004938a7 mov qword [rbx + 0x18], rax                                                                                                                                                               |     *((rbx + 0x18)) = rax;
    0x004938ab lea rdi, [rbx + 0x20]                                                                                                                                                                     |     
    0x004938af mov qword [rbx + 0x20], 0                                                                                                                                                                 |     *((rbx + 0x20)) = 0;
    0x004938b7 mov qword [rbx + 0x48], r14                                                                                                                                                               |     *((rbx + 0x48)) = r14;
    0x004938bb movaps xmm0, xmmword [rip + 0x529ce]                                                                                                                                                      |     xmm0 = .comment;
    0x004938c2 movups xmmword [rbx + 0x38], xmm0                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x004938c6 mov ecx, 0x4e90b0                                                                                                                                                                         |     
    0x004938cb xor esi, esi                                                                                                                                                                              |     
    0x004938cd xor edx, edx                                                                                                                                                                              |     
    0x004938cf call 0x4c2e20                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004938d4 mov rdi, rsp                                                                                                                                                                              |     
    0x004938d7 call 0x4be750                                                                                                                                                                             |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004938dc mov rsi, rsp                                                                                                                                                                              |     
    0x004938df mov edx, 0x4be2b0                                                                                                                                                                         |     
    0x004938e4 mov rdi, r15                                                                                                                                                                              |     
    0x004938e7 mov rcx, rbx                                                                                                                                                                              |     
    0x004938ea call 0x4bec40                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004938ef mov ebp, eax                                                                                                                                                                              |     
    0x004938f1 cmp qword [rsp + 0x38], 0x17                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (*((rsp + 0x38)) != 0x17) {
    0x004938f7 je 0x493909                                                                                                                                                                               |         
    0x004938f9 mov rsi, qword [rsp + 0x18]                                                                                                                                                               |         rsi = *((rsp + 0x18));
    0x004938fe mov rdi, qword [rsp + 0x40]                                                                                                                                                               |         rdi = *((rsp + 0x40));
    0x00493903 mov rax, qword [rdi]                                                                                                                                                                      |         rax = *(rdi);
    0x00493906 call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x00493909 test ebp, ebp                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (ebp != 0) {
    0x0049390b je 0x493936                                                                                                                                                                               |         
    0x0049390d cmp qword [rbx + 0x40], 0x17                                                                                                                                                              |         
                                                                                                                                                                                                         |         if (*((rbx + 0x40)) != 0x17) {
    0x00493912 je 0x493922                                                                                                                                                                               |             
    0x00493914 mov rsi, qword [rbx + 0x20]                                                                                                                                                               |             rsi = *((rbx + 0x20));
    0x00493918 mov rdi, qword [rbx + 0x48]                                                                                                                                                               |             rdi = *((rbx + 0x48));
    0x0049391c mov rax, qword [rdi]                                                                                                                                                                      |             rax = *(rdi);
    0x0049391f call qword [rax + 0x18]                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |         }
    0x00493922 mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x0049392a mov rax, qword [r14]                                                                                                                                                                      |         rax = *(r14);
    0x0049392d mov rdi, r14                                                                                                                                                                              |         rdi = r14;
    0x00493930 mov rsi, rbx                                                                                                                                                                              |         rsi = rbx;
    0x00493933 call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x00493936 mov eax, ebp                                                                                                                                                                              |     eax = ebp;
    0x00493938 add rsp, 0x48                                                                                                                                                                             |     
    0x0049393c pop rbx                                                                                                                                                                                   |     
    0x0049393d pop r14                                                                                                                                                                                   |     
    0x0049393f pop r15                                                                                                                                                                                   |     
    0x00493941 pop rbp                                                                                                                                                                                   |     
    0x00493942 ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
