    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bdlcc_deque.t/assume @ 0x496330 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26.TimedPopRecordFront_double____unsigned_long__TEST_CASE_26::TimedPopRecordFront_double__const__BloombergLP::bslma::Allocator_ ()      | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26_TimedPopRecordFront_double_unsigned_long_TEST_CASE_26::TimedPopRecordFront_double_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<TEST_CASE_26::TimedPopRecordFront<double> >(unsigned long*, TEST_CASE_26::TimedPopRecordFront<double> const&, BloombergLP::bslma::Allocator*) */
    0x00496330 push rbp                                                                                                                                                                                                      |     
    0x00496331 push r15                                                                                                                                                                                                      |     
    0x00496333 push r14                                                                                                                                                                                                      |     
    0x00496335 push rbx                                                                                                                                                                                                      |     
    0x00496336 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x0049633a mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x0049633d mov rbp, rsi                                                                                                                                                                                                  |     
    0x00496340 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x00496343 mov rax, qword [rdx]                                                                                                                                                                                          |     rax = *(rdx);
    0x00496346 mov esi, 0x60                                                                                                                                                                                                 |     esi = 0x60;
    0x0049634b mov rdi, rdx                                                                                                                                                                                                  |     rdi = rdx;
    0x0049634e call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x00496351 mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x00496354 mov qword [rax], 0x4964b0                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_TEST_CASE_26::TimedPopRecordFront_double___.invokerFunction_void_;
    0x0049635b movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x0049635f movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                             |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x00496363 movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00496367 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x0049636b mov rax, qword [rbp + 0x20]                                                                                                                                                                                   |     rax = *((rbp + 0x20));
    0x0049636f mov qword [rbx + 0x28], rax                                                                                                                                                                                   |     *((rbx + 0x28)) = rax;
    0x00496373 lea rdi, [rbx + 0x30]                                                                                                                                                                                         |     
    0x00496377 mov qword [rbx + 0x30], 0                                                                                                                                                                                     |     *((rbx + 0x30)) = 0;
    0x0049637f mov qword [rbx + 0x58], r14                                                                                                                                                                                   |     *((rbx + 0x58)) = r14;
    0x00496383 movaps xmm0, xmmword [rip + 0x4ff06]                                                                                                                                                                          |     xmm0 = .comment;
    0x0049638a movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x0049638e mov ecx, 0x4e90b0                                                                                                                                                                                             |     
    0x00496393 xor esi, esi                                                                                                                                                                                                  |     
    0x00496395 xor edx, edx                                                                                                                                                                                                  |     
    0x00496397 call 0x4c2e20                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0049639c mov rdi, rsp                                                                                                                                                                                                  |     
    0x0049639f call 0x4be750                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004963a4 mov rsi, rsp                                                                                                                                                                                                  |     
    0x004963a7 mov edx, 0x4be2b0                                                                                                                                                                                             |     
    0x004963ac mov rdi, r15                                                                                                                                                                                                  |     
    0x004963af mov rcx, rbx                                                                                                                                                                                                  |     
    0x004963b2 call 0x4bec40                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004963b7 mov ebp, eax                                                                                                                                                                                                  |     
    0x004963b9 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x004963bf je 0x4963d1                                                                                                                                                                                                   |         
    0x004963c1 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x004963c6 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x004963cb mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x004963ce call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x004963d1 test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x004963d3 je 0x4963fe                                                                                                                                                                                                   |         
    0x004963d5 cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x50)) != 0x17) {
    0x004963da je 0x4963ea                                                                                                                                                                                                   |             
    0x004963dc mov rsi, qword [rbx + 0x30]                                                                                                                                                                                   |             rsi = *((rbx + 0x30));
    0x004963e0 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                   |             rdi = *((rbx + 0x58));
    0x004963e4 mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x004963e7 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x004963ea mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x004963f2 mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x004963f5 mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x004963f8 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x004963fb call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x004963fe mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x00496400 add rsp, 0x48                                                                                                                                                                                                 |     
    0x00496404 pop rbx                                                                                                                                                                                                       |     
    0x00496405 pop r14                                                                                                                                                                                                       |     
    0x00496407 pop r15                                                                                                                                                                                                       |     
    0x00496409 pop rbp                                                                                                                                                                                                       |     
    0x0049640a ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
