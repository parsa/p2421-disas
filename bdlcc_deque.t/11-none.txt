    ; assembly                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                             | /* bdlcc_deque.t/none @ 0x494670 */
                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_1.ProducerFunctor__unsigned_long__USAGE_EXAMPLE_1::ProducerFunctor_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_1_ProducerFunctor_unsigned_long_USAGE_EXAMPLE_1::ProducerFunctor_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<USAGE_EXAMPLE_1::ProducerFunctor>(unsigned long*, USAGE_EXAMPLE_1::ProducerFunctor const&, BloombergLP::bslma::Allocator*) */
    0x00494670 push rbp                                                                                                                                                                                      |     
    0x00494671 push r15                                                                                                                                                                                      |     
    0x00494673 push r14                                                                                                                                                                                      |     
    0x00494675 push rbx                                                                                                                                                                                      |     
    0x00494676 sub rsp, 0x48                                                                                                                                                                                 |     
    0x0049467a mov r14, rdx                                                                                                                                                                                  |     r14 = rdx;
    0x0049467d mov rbp, rsi                                                                                                                                                                                  |     
    0x00494680 mov r15, rdi                                                                                                                                                                                  |     r15 = rdi;
    0x00494683 test rdx, rdx                                                                                                                                                                                 |     
                                                                                                                                                                                                             |     if (rdx == 0) {
    0x00494686 jne 0x49469c                                                                                                                                                                                  |         
    0x00494688 mov r14, qword [rip + 0x291e91]                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0049468f test r14, r14                                                                                                                                                                                 |         
                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00494692 jne 0x49469c                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                             |         }
    0x00494694 call 0x4bd7f0                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00494699 mov r14, rax                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                             |     }
                                                                                                                                                                                                             | label_0:
    0x0049469c mov rax, qword [r14]                                                                                                                                                                          |     rax = *(r14);
    0x0049469f mov esi, 0x40                                                                                                                                                                                 |     esi = 0x40;
    0x004946a4 mov rdi, r14                                                                                                                                                                                  |     rdi = r14;
    0x004946a7 call qword [rax + 0x10]                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004946aa mov rbx, rax                                                                                                                                                                                  |     rbx = rax;
    0x004946ad mov qword [rax], 0x494800                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_USAGE_EXAMPLE_1::ProducerFunctor_.invokerFunction_void_;
    0x004946b4 mov rax, qword [rbp]                                                                                                                                                                          |     rax = *(rbp);
    0x004946b8 mov qword [rbx + 8], rax                                                                                                                                                                      |     *((rbx + 8)) = rax;
    0x004946bc lea rdi, [rbx + 0x10]                                                                                                                                                                         |     
    0x004946c0 mov qword [rbx + 0x10], 0                                                                                                                                                                     |     *((rbx + 0x10)) = 0;
    0x004946c8 mov qword [rbx + 0x38], r14                                                                                                                                                                   |     *((rbx + 0x38)) = r14;
    0x004946cc movaps xmm0, xmmword [rip + 0x5232d]                                                                                                                                                          |     xmm0 = .comment;
    0x004946d3 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x004946d7 mov ecx, 0x4e981a                                                                                                                                                                             |     
    0x004946dc xor esi, esi                                                                                                                                                                                  |     
    0x004946de xor edx, edx                                                                                                                                                                                  |     
    0x004946e0 call 0x4c35b0                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004946e5 mov rdi, rsp                                                                                                                                                                                  |     
    0x004946e8 call 0x4beeb0                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004946ed mov rsi, rsp                                                                                                                                                                                  |     
    0x004946f0 mov edx, 0x4bea10                                                                                                                                                                             |     
    0x004946f5 mov rdi, r15                                                                                                                                                                                  |     
    0x004946f8 mov rcx, rbx                                                                                                                                                                                  |     
    0x004946fb call 0x4bf3a0                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00494700 mov ebp, eax                                                                                                                                                                                  |     
    0x00494702 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                  |     
                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00494708 je 0x49471a                                                                                                                                                                                   |         
    0x0049470a mov rsi, qword [rsp + 0x18]                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0049470f mov rdi, qword [rsp + 0x40]                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00494714 mov rax, qword [rdi]                                                                                                                                                                          |         rax = *(rdi);
    0x00494717 call qword [rax + 0x18]                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |     }
    0x0049471a test ebp, ebp                                                                                                                                                                                 |     
                                                                                                                                                                                                             |     if (ebp != 0) {
    0x0049471c je 0x494747                                                                                                                                                                                   |         
    0x0049471e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                  |         
                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00494723 je 0x494733                                                                                                                                                                                   |             
    0x00494725 mov rsi, qword [rbx + 0x10]                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00494729 mov rdi, qword [rbx + 0x38]                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0049472d mov rax, qword [rdi]                                                                                                                                                                          |             rax = *(rdi);
    0x00494730 call qword [rax + 0x18]                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |         }
    0x00494733 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0049473b mov rax, qword [r14]                                                                                                                                                                          |         rax = *(r14);
    0x0049473e mov rdi, r14                                                                                                                                                                                  |         rdi = r14;
    0x00494741 mov rsi, rbx                                                                                                                                                                                  |         rsi = rbx;
    0x00494744 call qword [rax + 0x18]                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |     }
    0x00494747 mov eax, ebp                                                                                                                                                                                  |     eax = ebp;
    0x00494749 add rsp, 0x48                                                                                                                                                                                 |     
    0x0049474d pop rbx                                                                                                                                                                                       |     
    0x0049474e pop r14                                                                                                                                                                                       |     
    0x00494750 pop r15                                                                                                                                                                                       |     
    0x00494752 pop rbp                                                                                                                                                                                       |     
    0x00494753 ret                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                             | }
