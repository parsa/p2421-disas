    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bdlcc_deque.t/assume @ 0x4955a0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26.TimedPopRecordBack_double____unsigned_long__TEST_CASE_26::TimedPopRecordBack_double__const__BloombergLP::bslma::Allocator_ ()        | int64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26_TimedPopRecordBack_double_unsigned_long_TEST_CASE_26::TimedPopRecordBack_double_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<TEST_CASE_26::TimedPopRecordBack<double> >(unsigned long*, TEST_CASE_26::TimedPopRecordBack<double> const&, BloombergLP::bslma::Allocator*) */
    0x004955a0 push rbp                                                                                                                                                                                                      |     
    0x004955a1 push r15                                                                                                                                                                                                      |     
    0x004955a3 push r14                                                                                                                                                                                                      |     
    0x004955a5 push rbx                                                                                                                                                                                                      |     
    0x004955a6 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x004955aa mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x004955ad mov rbp, rsi                                                                                                                                                                                                  |     
    0x004955b0 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x004955b3 mov rax, qword [rdx]                                                                                                                                                                                          |     rax = *(rdx);
    0x004955b6 mov esi, 0x60                                                                                                                                                                                                 |     esi = 0x60;
    0x004955bb mov rdi, rdx                                                                                                                                                                                                  |     rdi = rdx;
    0x004955be call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)(void, void, void) (rbx, r14, r15);
    0x004955c1 mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x004955c4 mov qword [rax], 0x495720                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_TEST_CASE_26::TimedPopRecordBack_double___.invokerFunction_void_;
    0x004955cb movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x004955cf movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                             |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x004955d3 movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004955d7 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x004955db mov rax, qword [rbp + 0x20]                                                                                                                                                                                   |     rax = *((rbp + 0x20));
    0x004955df mov qword [rbx + 0x28], rax                                                                                                                                                                                   |     *((rbx + 0x28)) = rax;
    0x004955e3 lea rdi, [rbx + 0x30]                                                                                                                                                                                         |     
    0x004955e7 mov qword [rbx + 0x30], 0                                                                                                                                                                                     |     *((rbx + 0x30)) = 0;
    0x004955ef mov qword [rbx + 0x58], r14                                                                                                                                                                                   |     *((rbx + 0x58)) = r14;
    0x004955f3 movaps xmm0, xmmword [rip + 0x50c96]                                                                                                                                                                          |     xmm0 = .comment;
    0x004955fa movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x004955fe mov ecx, 0x4e90b0                                                                                                                                                                                             |     
    0x00495603 xor esi, esi                                                                                                                                                                                                  |     
    0x00495605 xor edx, edx                                                                                                                                                                                                  |     
    0x00495607 call 0x4c2e20                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x0049560c mov rdi, rsp                                                                                                                                                                                                  |     
    0x0049560f call 0x4be750                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x00495614 mov rsi, rsp                                                                                                                                                                                                  |     
    0x00495617 mov edx, 0x4be2b0                                                                                                                                                                                             |     
    0x0049561c mov rdi, r15                                                                                                                                                                                                  |     
    0x0049561f mov rcx, rbx                                                                                                                                                                                                  |     
    0x00495622 call 0x4bec40                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00495627 mov ebp, eax                                                                                                                                                                                                  |     
    0x00495629 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x0049562f je 0x495641                                                                                                                                                                                                   |         
    0x00495631 mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x00495636 mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x0049563b mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x0049563e call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x00495641 test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x00495643 je 0x49566e                                                                                                                                                                                                   |         
    0x00495645 cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x50)) != 0x17) {
    0x0049564a je 0x49565a                                                                                                                                                                                                   |             
    0x0049564c mov rsi, qword [rbx + 0x30]                                                                                                                                                                                   |             rsi = *((rbx + 0x30));
    0x00495650 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                   |             rdi = *((rbx + 0x58));
    0x00495654 mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x00495657 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x0049565a mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x00495662 mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x00495665 mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x00495668 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x0049566b call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x0049566e mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x00495670 add rsp, 0x48                                                                                                                                                                                                 |     
    0x00495674 pop rbx                                                                                                                                                                                                       |     
    0x00495675 pop r14                                                                                                                                                                                                       |     
    0x00495677 pop r15                                                                                                                                                                                                       |     
    0x00495679 pop rbp                                                                                                                                                                                                       |     
    0x0049567a ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
