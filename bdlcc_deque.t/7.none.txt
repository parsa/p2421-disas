    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bdlcc_deque.t/none @ 0x496270 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26.TimedPopRecordFront_double____unsigned_long__TEST_CASE_26::TimedPopRecordFront_double__const__BloombergLP::bslma::Allocator_ ()      | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26_TimedPopRecordFront_double_unsigned_long_TEST_CASE_26::TimedPopRecordFront_double_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<TEST_CASE_26::TimedPopRecordFront<double> >(unsigned long*, TEST_CASE_26::TimedPopRecordFront<double> const&, BloombergLP::bslma::Allocator*) */
    0x00496270 push rbp                                                                                                                                                                                                      |     
    0x00496271 push r15                                                                                                                                                                                                      |     
    0x00496273 push r14                                                                                                                                                                                                      |     
    0x00496275 push rbx                                                                                                                                                                                                      |     
    0x00496276 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x0049627a mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x0049627d mov rbp, rsi                                                                                                                                                                                                  |     
    0x00496280 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x00496283 test rdx, rdx                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (rdx == 0) {
    0x00496286 jne 0x49629c                                                                                                                                                                                                  |         
    0x00496288 mov r14, qword [rip + 0x290291]                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0049628f test r14, r14                                                                                                                                                                                                 |         
                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x00496292 jne 0x49629c                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                             |         }
    0x00496294 call 0x4bd7f0                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00496299 mov r14, rax                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                             | label_0:
    0x0049629c mov rax, qword [r14]                                                                                                                                                                                          |     rax = *(r14);
    0x0049629f mov esi, 0x60                                                                                                                                                                                                 |     esi = 0x60;
    0x004962a4 mov rdi, r14                                                                                                                                                                                                  |     rdi = r14;
    0x004962a7 call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004962aa mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x004962ad mov qword [rax], 0x496410                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_TEST_CASE_26::TimedPopRecordFront_double___.invokerFunction_void_;
    0x004962b4 movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x004962b8 movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                             |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x004962bc movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x004962c0 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x004962c4 mov rax, qword [rbp + 0x20]                                                                                                                                                                                   |     rax = *((rbp + 0x20));
    0x004962c8 mov qword [rbx + 0x28], rax                                                                                                                                                                                   |     *((rbx + 0x28)) = rax;
    0x004962cc lea rdi, [rbx + 0x30]                                                                                                                                                                                         |     
    0x004962d0 mov qword [rbx + 0x30], 0                                                                                                                                                                                     |     *((rbx + 0x30)) = 0;
    0x004962d8 mov qword [rbx + 0x58], r14                                                                                                                                                                                   |     *((rbx + 0x58)) = r14;
    0x004962dc movaps xmm0, xmmword [rip + 0x5071d]                                                                                                                                                                          |     xmm0 = .comment;
    0x004962e3 movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x004962e7 mov ecx, 0x4e981a                                                                                                                                                                                             |     
    0x004962ec xor esi, esi                                                                                                                                                                                                  |     
    0x004962ee xor edx, edx                                                                                                                                                                                                  |     
    0x004962f0 call 0x4c35b0                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004962f5 mov rdi, rsp                                                                                                                                                                                                  |     
    0x004962f8 call 0x4beeb0                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004962fd mov rsi, rsp                                                                                                                                                                                                  |     
    0x00496300 mov edx, 0x4bea10                                                                                                                                                                                             |     
    0x00496305 mov rdi, r15                                                                                                                                                                                                  |     
    0x00496308 mov rcx, rbx                                                                                                                                                                                                  |     
    0x0049630b call 0x4bf3a0                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00496310 mov ebp, eax                                                                                                                                                                                                  |     
    0x00496312 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00496318 je 0x49632a                                                                                                                                                                                                   |         
    0x0049631a mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0049631f mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00496324 mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x00496327 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x0049632a test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x0049632c je 0x496357                                                                                                                                                                                                   |         
    0x0049632e cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x50)) != 0x17) {
    0x00496333 je 0x496343                                                                                                                                                                                                   |             
    0x00496335 mov rsi, qword [rbx + 0x30]                                                                                                                                                                                   |             rsi = *((rbx + 0x30));
    0x00496339 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                   |             rdi = *((rbx + 0x58));
    0x0049633d mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x00496340 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x00496343 mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x0049634b mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x0049634e mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x00496351 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x00496354 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x00496357 mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x00496359 add rsp, 0x48                                                                                                                                                                                                 |     
    0x0049635d pop rbx                                                                                                                                                                                                       |     
    0x0049635e pop r14                                                                                                                                                                                                       |     
    0x00496360 pop r15                                                                                                                                                                                                       |     
    0x00496362 pop rbp                                                                                                                                                                                                       |     
    0x00496363 ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
