    ; assembly                                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                                             | /* bdlcc_deque.t/none @ 0x4954c0 */
                                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26.TimedPopRecordBack_double____unsigned_long__TEST_CASE_26::TimedPopRecordBack_double__const__BloombergLP::bslma::Allocator_ ()        | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_TEST_CASE_26_TimedPopRecordBack_double_unsigned_long_TEST_CASE_26::TimedPopRecordBack_double_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<TEST_CASE_26::TimedPopRecordBack<double> >(unsigned long*, TEST_CASE_26::TimedPopRecordBack<double> const&, BloombergLP::bslma::Allocator*) */
    0x004954c0 push rbp                                                                                                                                                                                                      |     
    0x004954c1 push r15                                                                                                                                                                                                      |     
    0x004954c3 push r14                                                                                                                                                                                                      |     
    0x004954c5 push rbx                                                                                                                                                                                                      |     
    0x004954c6 sub rsp, 0x48                                                                                                                                                                                                 |     
    0x004954ca mov r14, rdx                                                                                                                                                                                                  |     r14 = rdx;
    0x004954cd mov rbp, rsi                                                                                                                                                                                                  |     
    0x004954d0 mov r15, rdi                                                                                                                                                                                                  |     r15 = rdi;
    0x004954d3 test rdx, rdx                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (rdx == 0) {
    0x004954d6 jne 0x4954ec                                                                                                                                                                                                  |         
    0x004954d8 mov r14, qword [rip + 0x291041]                                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004954df test r14, r14                                                                                                                                                                                                 |         
                                                                                                                                                                                                                             |         if (r14 != 0) {
    0x004954e2 jne 0x4954ec                                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                                             |         }
    0x004954e4 call 0x4bd7f0                                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004954e9 mov r14, rax                                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                                             |     }
                                                                                                                                                                                                                             | label_0:
    0x004954ec mov rax, qword [r14]                                                                                                                                                                                          |     rax = *(r14);
    0x004954ef mov esi, 0x60                                                                                                                                                                                                 |     esi = 0x60;
    0x004954f4 mov rdi, r14                                                                                                                                                                                                  |     rdi = r14;
    0x004954f7 call qword [rax + 0x10]                                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004954fa mov rbx, rax                                                                                                                                                                                                  |     rbx = rax;
    0x004954fd mov qword [rax], 0x495660                                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_TEST_CASE_26::TimedPopRecordBack_double___.invokerFunction_void_;
    0x00495504 movups xmm0, xmmword [rbp]                                                                                                                                                                                    |     __asm ("movups xmm0, xmmword [rbp]");
    0x00495508 movups xmm1, xmmword [rbp + 0x10]                                                                                                                                                                             |     __asm ("movups xmm1, xmmword [rbp + 0x10]");
    0x0049550c movups xmmword [rax + 8], xmm0                                                                                                                                                                                |     __asm ("movups xmmword [rax + 8], xmm0");
    0x00495510 movups xmmword [rax + 0x18], xmm1                                                                                                                                                                             |     __asm ("movups xmmword [rax + 0x18], xmm1");
    0x00495514 mov rax, qword [rbp + 0x20]                                                                                                                                                                                   |     rax = *((rbp + 0x20));
    0x00495518 mov qword [rbx + 0x28], rax                                                                                                                                                                                   |     *((rbx + 0x28)) = rax;
    0x0049551c lea rdi, [rbx + 0x30]                                                                                                                                                                                         |     
    0x00495520 mov qword [rbx + 0x30], 0                                                                                                                                                                                     |     *((rbx + 0x30)) = 0;
    0x00495528 mov qword [rbx + 0x58], r14                                                                                                                                                                                   |     *((rbx + 0x58)) = r14;
    0x0049552c movaps xmm0, xmmword [rip + 0x514cd]                                                                                                                                                                          |     xmm0 = .comment;
    0x00495533 movups xmmword [rbx + 0x48], xmm0                                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x48], xmm0");
    0x00495537 mov ecx, 0x4e981a                                                                                                                                                                                             |     
    0x0049553c xor esi, esi                                                                                                                                                                                                  |     
    0x0049553e xor edx, edx                                                                                                                                                                                                  |     
    0x00495540 call 0x4c35b0                                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x30, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00495545 mov rdi, rsp                                                                                                                                                                                                  |     
    0x00495548 call 0x4beeb0                                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0049554d mov rsi, rsp                                                                                                                                                                                                  |     
    0x00495550 mov edx, 0x4bea10                                                                                                                                                                                             |     
    0x00495555 mov rdi, r15                                                                                                                                                                                                  |     
    0x00495558 mov rcx, rbx                                                                                                                                                                                                  |     
    0x0049555b call 0x4bf3a0                                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00495560 mov ebp, eax                                                                                                                                                                                                  |     
    0x00495562 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                                  |     
                                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00495568 je 0x49557a                                                                                                                                                                                                   |         
    0x0049556a mov rsi, qword [rsp + 0x18]                                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0049556f mov rdi, qword [rsp + 0x40]                                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00495574 mov rax, qword [rdi]                                                                                                                                                                                          |         rax = *(rdi);
    0x00495577 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x0049557a test ebp, ebp                                                                                                                                                                                                 |     
                                                                                                                                                                                                                             |     if (ebp != 0) {
    0x0049557c je 0x4955a7                                                                                                                                                                                                   |         
    0x0049557e cmp qword [rbx + 0x50], 0x17                                                                                                                                                                                  |         
                                                                                                                                                                                                                             |         if (*((rbx + 0x50)) != 0x17) {
    0x00495583 je 0x495593                                                                                                                                                                                                   |             
    0x00495585 mov rsi, qword [rbx + 0x30]                                                                                                                                                                                   |             rsi = *((rbx + 0x30));
    0x00495589 mov rdi, qword [rbx + 0x58]                                                                                                                                                                                   |             rdi = *((rbx + 0x58));
    0x0049558d mov rax, qword [rdi]                                                                                                                                                                                          |             rax = *(rdi);
    0x00495590 call qword [rax + 0x18]                                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |         }
    0x00495593 mov qword [rbx + 0x48], 0xffffffffffffffff                                                                                                                                                                    |         *((rbx + 0x48)) = 0xffffffffffffffff;
    0x0049559b mov rax, qword [r14]                                                                                                                                                                                          |         rax = *(r14);
    0x0049559e mov rdi, r14                                                                                                                                                                                                  |         rdi = r14;
    0x004955a1 mov rsi, rbx                                                                                                                                                                                                  |         rsi = rbx;
    0x004955a4 call qword [rax + 0x18]                                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                             |     }
    0x004955a7 mov eax, ebp                                                                                                                                                                                                  |     eax = ebp;
    0x004955a9 add rsp, 0x48                                                                                                                                                                                                 |     
    0x004955ad pop rbx                                                                                                                                                                                                       |     
    0x004955ae pop r14                                                                                                                                                                                                       |     
    0x004955b0 pop r15                                                                                                                                                                                                       |     
    0x004955b2 pop rbp                                                                                                                                                                                                       |     
    0x004955b3 ret                                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                                             | }
