    ; assembly                                                                                                                                                                                           | /* r2dec pseudo code output */
                                                                                                                                                                                                         | /* bdlcc_deque.t/none @ 0x493740 */
                                                                                                                                                                                                         | #include <stdint.h>
                                                                                                                                                                                                         |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_2.WorkerFunctor__unsigned_long__USAGE_EXAMPLE_2::WorkerFunctor_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_2_WorkerFunctor_unsigned_long_USAGE_EXAMPLE_2::WorkerFunctor_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                         |     int64_t var_18h;
                                                                                                                                                                                                         |     uint32_t var_38h;
                                                                                                                                                                                                         |     int64_t var_40h;
                                                                                                                                                                                                         |     rdx = arg3;
                                                                                                                                                                                                         |     rsi = arg2;
                                                                                                                                                                                                         |     rdi = arg1;
                                                                                                                                                                                                         |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<USAGE_EXAMPLE_2::WorkerFunctor>(unsigned long*, USAGE_EXAMPLE_2::WorkerFunctor const&, BloombergLP::bslma::Allocator*) */
    0x00493740 push rbp                                                                                                                                                                                  |     
    0x00493741 push r15                                                                                                                                                                                  |     
    0x00493743 push r14                                                                                                                                                                                  |     
    0x00493745 push rbx                                                                                                                                                                                  |     
    0x00493746 sub rsp, 0x48                                                                                                                                                                             |     
    0x0049374a mov r14, rdx                                                                                                                                                                              |     r14 = rdx;
    0x0049374d mov rbp, rsi                                                                                                                                                                              |     
    0x00493750 mov r15, rdi                                                                                                                                                                              |     r15 = rdi;
    0x00493753 test rdx, rdx                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (rdx == 0) {
    0x00493756 jne 0x49376c                                                                                                                                                                              |         
    0x00493758 mov r14, qword [rip + 0x292dc1]                                                                                                                                                           |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x0049375f test r14, r14                                                                                                                                                                             |         
                                                                                                                                                                                                         |         if (r14 != 0) {
    0x00493762 jne 0x49376c                                                                                                                                                                              |             goto label_0;
                                                                                                                                                                                                         |         }
    0x00493764 call 0x4bd7f0                                                                                                                                                                             |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x00493769 mov r14, rax                                                                                                                                                                              |         r14 = rax;
                                                                                                                                                                                                         |     }
                                                                                                                                                                                                         | label_0:
    0x0049376c mov rax, qword [r14]                                                                                                                                                                      |     rax = *(r14);
    0x0049376f mov esi, 0x50                                                                                                                                                                             |     esi = 0x50;
    0x00493774 mov rdi, r14                                                                                                                                                                              |     rdi = r14;
    0x00493777 call qword [rax + 0x10]                                                                                                                                                                   |     rax = uint64_t (*rax + 0x10)() ();
    0x0049377a mov rbx, rax                                                                                                                                                                              |     rbx = rax;
    0x0049377d mov qword [rax], 0x4938d0                                                                                                                                                                 |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_USAGE_EXAMPLE_2::WorkerFunctor_.invokerFunction_void_;
    0x00493784 movups xmm0, xmmword [rbp]                                                                                                                                                                |     __asm ("movups xmm0, xmmword [rbp]");
    0x00493788 movups xmmword [rax + 8], xmm0                                                                                                                                                            |     __asm ("movups xmmword [rax + 8], xmm0");
    0x0049378c mov rax, qword [rbp + 0x10]                                                                                                                                                               |     rax = *((rbp + 0x10));
    0x00493790 mov qword [rbx + 0x18], rax                                                                                                                                                               |     *((rbx + 0x18)) = rax;
    0x00493794 lea rdi, [rbx + 0x20]                                                                                                                                                                     |     
    0x00493798 mov qword [rbx + 0x20], 0                                                                                                                                                                 |     *((rbx + 0x20)) = 0;
    0x004937a0 mov qword [rbx + 0x48], r14                                                                                                                                                               |     *((rbx + 0x48)) = r14;
    0x004937a4 movaps xmm0, xmmword [rip + 0x53255]                                                                                                                                                      |     xmm0 = .comment;
    0x004937ab movups xmmword [rbx + 0x38], xmm0                                                                                                                                                         |     __asm ("movups xmmword [rbx + 0x38], xmm0");
    0x004937af mov ecx, 0x4e981a                                                                                                                                                                         |     
    0x004937b4 xor esi, esi                                                                                                                                                                              |     
    0x004937b6 xor edx, edx                                                                                                                                                                              |     
    0x004937b8 call 0x4c35b0                                                                                                                                                                             |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x20, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x004937bd mov rdi, rsp                                                                                                                                                                              |     
    0x004937c0 call 0x4beeb0                                                                                                                                                                             |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x004937c5 mov rsi, rsp                                                                                                                                                                              |     
    0x004937c8 mov edx, 0x4bea10                                                                                                                                                                         |     
    0x004937cd mov rdi, r15                                                                                                                                                                              |     
    0x004937d0 mov rcx, rbx                                                                                                                                                                              |     
    0x004937d3 call 0x4bf3a0                                                                                                                                                                             |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x004937d8 mov ebp, eax                                                                                                                                                                              |     
    0x004937da cmp qword [rsp + 0x38], 0x17                                                                                                                                                              |     
                                                                                                                                                                                                         |     if (*((rsp + 0x38)) != 0x17) {
    0x004937e0 je 0x4937f2                                                                                                                                                                               |         
    0x004937e2 mov rsi, qword [rsp + 0x18]                                                                                                                                                               |         rsi = *((rsp + 0x18));
    0x004937e7 mov rdi, qword [rsp + 0x40]                                                                                                                                                               |         rdi = *((rsp + 0x40));
    0x004937ec mov rax, qword [rdi]                                                                                                                                                                      |         rax = *(rdi);
    0x004937ef call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x004937f2 test ebp, ebp                                                                                                                                                                             |     
                                                                                                                                                                                                         |     if (ebp != 0) {
    0x004937f4 je 0x49381f                                                                                                                                                                               |         
    0x004937f6 cmp qword [rbx + 0x40], 0x17                                                                                                                                                              |         
                                                                                                                                                                                                         |         if (*((rbx + 0x40)) != 0x17) {
    0x004937fb je 0x49380b                                                                                                                                                                               |             
    0x004937fd mov rsi, qword [rbx + 0x20]                                                                                                                                                               |             rsi = *((rbx + 0x20));
    0x00493801 mov rdi, qword [rbx + 0x48]                                                                                                                                                               |             rdi = *((rbx + 0x48));
    0x00493805 mov rax, qword [rdi]                                                                                                                                                                      |             rax = *(rdi);
    0x00493808 call qword [rax + 0x18]                                                                                                                                                                   |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |         }
    0x0049380b mov qword [rbx + 0x38], 0xffffffffffffffff                                                                                                                                                |         *((rbx + 0x38)) = 0xffffffffffffffff;
    0x00493813 mov rax, qword [r14]                                                                                                                                                                      |         rax = *(r14);
    0x00493816 mov rdi, r14                                                                                                                                                                              |         rdi = r14;
    0x00493819 mov rsi, rbx                                                                                                                                                                              |         rsi = rbx;
    0x0049381c call qword [rax + 0x18]                                                                                                                                                                   |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                         |     }
    0x0049381f mov eax, ebp                                                                                                                                                                              |     eax = ebp;
    0x00493821 add rsp, 0x48                                                                                                                                                                             |     
    0x00493825 pop rbx                                                                                                                                                                                   |     
    0x00493826 pop r14                                                                                                                                                                                   |     
    0x00493828 pop r15                                                                                                                                                                                   |     
    0x0049382a pop rbp                                                                                                                                                                                   |     
    0x0049382b ret                                                                                                                                                                                       |     return rax;
                                                                                                                                                                                                         | }
