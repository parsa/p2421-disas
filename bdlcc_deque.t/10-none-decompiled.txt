    ; assembly                                                                                                                                                                                               | /* r2dec pseudo code output */
                                                                                                                                                                                                             | /* bdlcc_deque.t/none @ 0x4942c0 */
                                                                                                                                                                                                             | #include <stdint.h>
                                                                                                                                                                                                             |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_1.ConsumerFunctor__unsigned_long__USAGE_EXAMPLE_1::ConsumerFunctor_const__BloombergLP::bslma::Allocator_ ()         | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_USAGE_EXAMPLE_1_ConsumerFunctor_unsigned_long_USAGE_EXAMPLE_1::ConsumerFunctor_const_BloombergLP::bslma::Allocator_ (int64_t arg3, int64_t arg2, int64_t arg1) {
                                                                                                                                                                                                             |     int64_t var_18h;
                                                                                                                                                                                                             |     uint32_t var_38h;
                                                                                                                                                                                                             |     int64_t var_40h;
                                                                                                                                                                                                             |     rdx = arg3;
                                                                                                                                                                                                             |     rsi = arg2;
                                                                                                                                                                                                             |     rdi = arg1;
                                                                                                                                                                                                             |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<USAGE_EXAMPLE_1::ConsumerFunctor>(unsigned long*, USAGE_EXAMPLE_1::ConsumerFunctor const&, BloombergLP::bslma::Allocator*) */
    0x004942c0 push rbp                                                                                                                                                                                      |     
    0x004942c1 push r15                                                                                                                                                                                      |     
    0x004942c3 push r14                                                                                                                                                                                      |     
    0x004942c5 push rbx                                                                                                                                                                                      |     
    0x004942c6 sub rsp, 0x48                                                                                                                                                                                 |     
    0x004942ca mov r14, rdx                                                                                                                                                                                  |     r14 = rdx;
    0x004942cd mov rbp, rsi                                                                                                                                                                                  |     
    0x004942d0 mov r15, rdi                                                                                                                                                                                  |     r15 = rdi;
    0x004942d3 test rdx, rdx                                                                                                                                                                                 |     
                                                                                                                                                                                                             |     if (rdx == 0) {
    0x004942d6 jne 0x4942ec                                                                                                                                                                                  |         
    0x004942d8 mov r14, qword [rip + 0x292241]                                                                                                                                                               |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x004942df test r14, r14                                                                                                                                                                                 |         
                                                                                                                                                                                                             |         if (r14 != 0) {
    0x004942e2 jne 0x4942ec                                                                                                                                                                                  |             goto label_0;
                                                                                                                                                                                                             |         }
    0x004942e4 call 0x4bd7f0                                                                                                                                                                                 |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x004942e9 mov r14, rax                                                                                                                                                                                  |         r14 = rax;
                                                                                                                                                                                                             |     }
                                                                                                                                                                                                             | label_0:
    0x004942ec mov rax, qword [r14]                                                                                                                                                                          |     rax = *(r14);
    0x004942ef mov esi, 0x40                                                                                                                                                                                 |     esi = 0x40;
    0x004942f4 mov rdi, r14                                                                                                                                                                                  |     rdi = r14;
    0x004942f7 call qword [rax + 0x10]                                                                                                                                                                       |     rax = uint64_t (*rax + 0x10)() ();
    0x004942fa mov rbx, rax                                                                                                                                                                                  |     rbx = rax;
    0x004942fd mov qword [rax], 0x494450                                                                                                                                                                     |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_USAGE_EXAMPLE_1::ConsumerFunctor_.invokerFunction_void_;
    0x00494304 mov rax, qword [rbp]                                                                                                                                                                          |     rax = *(rbp);
    0x00494308 mov qword [rbx + 8], rax                                                                                                                                                                      |     *((rbx + 8)) = rax;
    0x0049430c lea rdi, [rbx + 0x10]                                                                                                                                                                         |     
    0x00494310 mov qword [rbx + 0x10], 0                                                                                                                                                                     |     *((rbx + 0x10)) = 0;
    0x00494318 mov qword [rbx + 0x38], r14                                                                                                                                                                   |     *((rbx + 0x38)) = r14;
    0x0049431c movaps xmm0, xmmword [rip + 0x526dd]                                                                                                                                                          |     xmm0 = .comment;
    0x00494323 movups xmmword [rbx + 0x28], xmm0                                                                                                                                                             |     __asm ("movups xmmword [rbx + 0x28], xmm0");
    0x00494327 mov ecx, 0x4e981a                                                                                                                                                                             |     
    0x0049432c xor esi, esi                                                                                                                                                                                  |     
    0x0049432e xor edx, edx                                                                                                                                                                                  |     
    0x00494330 call 0x4c35b0                                                                                                                                                                                 |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rbx + 0x10, 0, 0, "string<...>::assign<Iter>(i,j): string too long");
    0x00494335 mov rdi, rsp                                                                                                                                                                                  |     
    0x00494338 call 0x4beeb0                                                                                                                                                                                 |     BloombergLP::bslmt::ThreadAttributes::ThreadAttributes() (rsp);
    0x0049433d mov rsi, rsp                                                                                                                                                                                  |     
    0x00494340 mov edx, 0x4bea10                                                                                                                                                                             |     
    0x00494345 mov rdi, r15                                                                                                                                                                                  |     
    0x00494348 mov rcx, rbx                                                                                                                                                                                  |     
    0x0049434b call 0x4bf3a0                                                                                                                                                                                 |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r15, rsp, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00494350 mov ebp, eax                                                                                                                                                                                  |     
    0x00494352 cmp qword [rsp + 0x38], 0x17                                                                                                                                                                  |     
                                                                                                                                                                                                             |     if (*((rsp + 0x38)) != 0x17) {
    0x00494358 je 0x49436a                                                                                                                                                                                   |         
    0x0049435a mov rsi, qword [rsp + 0x18]                                                                                                                                                                   |         rsi = *((rsp + 0x18));
    0x0049435f mov rdi, qword [rsp + 0x40]                                                                                                                                                                   |         rdi = *((rsp + 0x40));
    0x00494364 mov rax, qword [rdi]                                                                                                                                                                          |         rax = *(rdi);
    0x00494367 call qword [rax + 0x18]                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |     }
    0x0049436a test ebp, ebp                                                                                                                                                                                 |     
                                                                                                                                                                                                             |     if (ebp != 0) {
    0x0049436c je 0x494397                                                                                                                                                                                   |         
    0x0049436e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                  |         
                                                                                                                                                                                                             |         if (*((rbx + 0x30)) != 0x17) {
    0x00494373 je 0x494383                                                                                                                                                                                   |             
    0x00494375 mov rsi, qword [rbx + 0x10]                                                                                                                                                                   |             rsi = *((rbx + 0x10));
    0x00494379 mov rdi, qword [rbx + 0x38]                                                                                                                                                                   |             rdi = *((rbx + 0x38));
    0x0049437d mov rax, qword [rdi]                                                                                                                                                                          |             rax = *(rdi);
    0x00494380 call qword [rax + 0x18]                                                                                                                                                                       |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |         }
    0x00494383 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                    |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0049438b mov rax, qword [r14]                                                                                                                                                                          |         rax = *(r14);
    0x0049438e mov rdi, r14                                                                                                                                                                                  |         rdi = r14;
    0x00494391 mov rsi, rbx                                                                                                                                                                                  |         rsi = rbx;
    0x00494394 call qword [rax + 0x18]                                                                                                                                                                       |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                             |     }
    0x00494397 mov eax, ebp                                                                                                                                                                                  |     eax = ebp;
    0x00494399 add rsp, 0x48                                                                                                                                                                                 |     
    0x0049439d pop rbx                                                                                                                                                                                       |     
    0x0049439e pop r14                                                                                                                                                                                       |     
    0x004943a0 pop r15                                                                                                                                                                                       |     
    0x004943a2 pop rbp                                                                                                                                                                                       |     
    0x004943a3 ret                                                                                                                                                                                           |     return rax;
                                                                                                                                                                                                             | }
