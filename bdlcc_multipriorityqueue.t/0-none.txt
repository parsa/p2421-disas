    ; assembly                                                                                                                                                                                                                                                                   | /* r2dec pseudo code output */
                                                                                                                                                                                                                                                                                 | /* bdlcc_multipriorityqueue.t/none @ 0x4310e0 */
                                                                                                                                                                                                                                                                                 | #include <stdint.h>
                                                                                                                                                                                                                                                                                 |  
    ; (fcn) method.int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_MULTIPRIORITYQUEUE_TEST_CASE_8.ConsumerThread__unsigned_long__BloombergLP::bslmt::ThreadAttributes_const__MULTIPRIORITYQUEUE_TEST_CASE_8::ConsumerThread_const__BloombergLP::bslma::Allocato ()       | uint64_t method_int_BloombergLP::bslmt::ThreadUtil::createWithAllocator_MULTIPRIORITYQUEUE_TEST_CASE_8_ConsumerThread_unsigned_long_BloombergLP::bslmt::ThreadAttributes_const_MULTIPRIORITYQUEUE_TEST_CASE_8::ConsumerThread_const_BloombergLP::bslma::Allocato (int64_t arg4, uint32_t arg2, int64_t arg1) {
                                                                                                                                                                                                                                                                                 |     rcx = arg4;
                                                                                                                                                                                                                                                                                 |     rsi = arg2;
                                                                                                                                                                                                                                                                                 |     rdi = arg1;
                                                                                                                                                                                                                                                                                 |     /* int BloombergLP::bslmt::ThreadUtil::createWithAllocator<MULTIPRIORITYQUEUE_TEST_CASE_8::ConsumerThread>(unsigned long*, BloombergLP::bslmt::ThreadAttributes const&, MULTIPRIORITYQUEUE_TEST_CASE_8::ConsumerThread const&, BloombergLP::bslma::Allocator*) */
    0x004310e0 push rbp                                                                                                                                                                                                                                                          |     
    0x004310e1 push r15                                                                                                                                                                                                                                                          |     
    0x004310e3 push r14                                                                                                                                                                                                                                                          |     
    0x004310e5 push r13                                                                                                                                                                                                                                                          |     
    0x004310e7 push r12                                                                                                                                                                                                                                                          |     
    0x004310e9 push rbx                                                                                                                                                                                                                                                          |     
    0x004310ea push rax                                                                                                                                                                                                                                                          |     
    0x004310eb mov r14, rcx                                                                                                                                                                                                                                                      |     r14 = rcx;
    0x004310ee mov r15, rsi                                                                                                                                                                                                                                                      |     r15 = rsi;
    0x004310f1 mov r12, rdi                                                                                                                                                                                                                                                      |     r12 = rdi;
    0x004310f4 cmp qword [rsi + 0x38], 0x17                                                                                                                                                                                                                                      |     
                                                                                                                                                                                                                                                                                 |     if (*((rsi + 0x38)) != 0x17) {
    0x004310f9 je 0x431101                                                                                                                                                                                                                                                       |         
    0x004310fb mov r13, qword [r15 + 0x18]                                                                                                                                                                                                                                       |         r13 = *((r15 + 0x18));
    0x004310ff jmp 0x431105                                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |     } else {
    0x00431101 lea r13, [r15 + 0x18]                                                                                                                                                                                                                                             |         r13 = r15 + 0x18;
                                                                                                                                                                                                                                                                                 |     }
    0x00431105 mov rbp, qword [r15 + 0x30]                                                                                                                                                                                                                                       |     rbp = *((r15 + 0x30));
    0x00431109 test r14, r14                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (r14 == 0) {
    0x0043110c jne 0x431122                                                                                                                                                                                                                                                      |         
    0x0043110e mov r14, qword [rip + 0x25a40b]                                                                                                                                                                                                                                   |         r14 = BloombergLP::bslma::Default::s_defaultAllocator;
    0x00431115 test r14, r14                                                                                                                                                                                                                                                     |         
                                                                                                                                                                                                                                                                                 |         if (r14 != 0) {
    0x00431118 jne 0x431122                                                                                                                                                                                                                                                      |             goto label_0;
                                                                                                                                                                                                                                                                                 |         }
    0x0043111a call 0x43ad30                                                                                                                                                                                                                                                     |         rax = BloombergLP::bslma::Default::determineAndReturnDefaultAllocator() ();
    0x0043111f mov r14, rax                                                                                                                                                                                                                                                      |         r14 = rax;
                                                                                                                                                                                                                                                                                 |     }
                                                                                                                                                                                                                                                                                 | label_0:
    0x00431122 mov rax, qword [r14]                                                                                                                                                                                                                                              |     rax = *(r14);
    0x00431125 mov esi, 0x40                                                                                                                                                                                                                                                     |     esi = 0x40;
    0x0043112a mov rdi, r14                                                                                                                                                                                                                                                      |     rdi = r14;
    0x0043112d call qword [rax + 0x10]                                                                                                                                                                                                                                           |     rax = uint64_t (*rax + 0x10)() ();
    0x00431130 mov rbx, rax                                                                                                                                                                                                                                                      |     rbx = rax;
    0x00431133 mov qword [rax], 0x431230                                                                                                                                                                                                                                         |     *(rax) = method.BloombergLP::bslmt::EntryPointFunctorAdapter_MULTIPRIORITYQUEUE_TEST_CASE_8::ConsumerThread_.invokerFunction_void_;
    0x0043113a lea rdi, [rax + 0x10]                                                                                                                                                                                                                                             |     
    0x0043113e mov qword [rax + 0x10], 0                                                                                                                                                                                                                                         |     *((rax + 0x10)) = 0;
    0x00431146 mov qword [rax + 0x38], r14                                                                                                                                                                                                                                       |     *((rax + 0x38)) = r14;
    0x0043114a movaps xmm0, xmmword [rip + 0x3269f]                                                                                                                                                                                                                              |     xmm0 = .comment;
    0x00431151 movups xmmword [rax + 0x28], xmm0                                                                                                                                                                                                                                 |     __asm ("movups xmmword [rax + 0x28], xmm0");
    0x00431155 mov ecx, 0x4655c7                                                                                                                                                                                                                                                 |     
    0x0043115a mov rsi, r13                                                                                                                                                                                                                                                      |     
    0x0043115d mov rdx, rbp                                                                                                                                                                                                                                                      |     
    0x00431160 call 0x43ed70                                                                                                                                                                                                                                                     |     bsl::basic_string<char,std::_1::char_traits<char>,bsl::allocator<char>>::privateAppend(char const*,unsigned long,char const*) (rax + 0x10, r13, rbp, "string<...>::assign<Iter>(i,j): string too long");
    0x00431165 mov edx, 0x43be70                                                                                                                                                                                                                                                 |     
    0x0043116a mov rdi, r12                                                                                                                                                                                                                                                      |     
    0x0043116d mov rsi, r15                                                                                                                                                                                                                                                      |     
    0x00431170 mov rcx, rbx                                                                                                                                                                                                                                                      |     
    0x00431173 call 0x43c800                                                                                                                                                                                                                                                     |     eax = BloombergLP::bslmt::ThreadUtilImpl<BloombergLP::bslmt::Platform::PosixThreads>::create(unsigned long*,BloombergLP::bslmt::ThreadAttributesconst&,void*(*)(void*),void*) (r12, r15, sym.bslmt_EntryPointFunctorAdapter_invoker, rbx);
    0x00431178 mov ebp, eax                                                                                                                                                                                                                                                      |     
    0x0043117a test eax, eax                                                                                                                                                                                                                                                     |     
                                                                                                                                                                                                                                                                                 |     if (eax != 0) {
    0x0043117c je 0x4311a7                                                                                                                                                                                                                                                       |         
    0x0043117e cmp qword [rbx + 0x30], 0x17                                                                                                                                                                                                                                      |         
                                                                                                                                                                                                                                                                                 |         if (*((rbx + 0x30)) != 0x17) {
    0x00431183 je 0x431193                                                                                                                                                                                                                                                       |             
    0x00431185 mov rsi, qword [rbx + 0x10]                                                                                                                                                                                                                                       |             rsi = *((rbx + 0x10));
    0x00431189 mov rdi, qword [rbx + 0x38]                                                                                                                                                                                                                                       |             rdi = *((rbx + 0x38));
    0x0043118d mov rax, qword [rdi]                                                                                                                                                                                                                                              |             rax = *(rdi);
    0x00431190 call qword [rax + 0x18]                                                                                                                                                                                                                                           |             uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |         }
    0x00431193 mov qword [rbx + 0x28], 0xffffffffffffffff                                                                                                                                                                                                                        |         *((rbx + 0x28)) = 0xffffffffffffffff;
    0x0043119b mov rax, qword [r14]                                                                                                                                                                                                                                              |         rax = *(r14);
    0x0043119e mov rdi, r14                                                                                                                                                                                                                                                      |         rdi = r14;
    0x004311a1 mov rsi, rbx                                                                                                                                                                                                                                                      |         rsi = rbx;
    0x004311a4 call qword [rax + 0x18]                                                                                                                                                                                                                                           |         uint64_t (*rax + 0x18)() ();
                                                                                                                                                                                                                                                                                 |     }
    0x004311a7 mov eax, ebp                                                                                                                                                                                                                                                      |     eax = ebp;
    0x004311a9 add rsp, 8                                                                                                                                                                                                                                                        |     
    0x004311ad pop rbx                                                                                                                                                                                                                                                           |     
    0x004311ae pop r12                                                                                                                                                                                                                                                           |     
    0x004311b0 pop r13                                                                                                                                                                                                                                                           |     
    0x004311b2 pop r14                                                                                                                                                                                                                                                           |     
    0x004311b4 pop r15                                                                                                                                                                                                                                                           |     
    0x004311b6 pop rbp                                                                                                                                                                                                                                                           |     
    0x004311b7 ret                                                                                                                                                                                                                                                               |     return rax;
                                                                                                                                                                                                                                                                                 | }
